
> @photon/core@0.18.1 test
> npm run build && mocha --timeout 15000


> @photon/core@0.18.1 prebuild
> npm run gen-cascades


> @photon/core@0.18.1 gen-cascades
> npm run project && node ./target/cascadable.js > ./src/core/cascades.ts


> @photon/core@0.18.1 project
> typedoc ./src --json ./dist/project.json

[93m[warning][0m The signature core/chain.toPoints has an @param with name "distance", which was not used
[93m[warning][0m The signature core/collect.PointGraph.insertValueIdAtPoint has an @param with name "value", which was not used
[93m[warning][0m The signature core/layout.childrenOnChain has an @param with name "rotate", which was not used
[93m[warning][0m The signature core/layout.cloneToRadial has an @param with name "itemToClone:", which was not used
[93m[warning][0m The signature core/layout.cloneToColumn has an @param with name "itemToClone:", which was not used
[93m[warning][0m The signature core/layout.cloneToRow has an @param with name "itemToClone:", which was not used
[93m[warning][0m The signature core/layout.cloneToGrid has an @param with name "itemToClone:", which was not used
[93m[warning][0m The signature core/layout.cloneToBrick has an @param with name "itemToClone:", which was not used
[93m[warning][0m The signature core/layout.cloneToHoneycomb has an @param with name "itemToClone:", which was not used
[93m[warning][0m The signature core/openjscad-esm.toJscadCAG has an @param with name "options", which was not used
[93m[warning][0m The signature core/openjscad-esm.toJscadCAG has an @param with name "options.byLayers", which was not used
[93m[warning][0m The signature core/openjscad-esm.toJscadCAG has an @param with name "options.pointMatchingDistance", which was not used
[93m[warning][0m The signature core/openjscad-esm.toJscadCAG has an @param with name "options.maxArcFacet", which was not used
[93m[warning][0m The signature core/openjscad-esm.toJscadCAG has an @param with name "options.statusCallback", which was not used
[93m[warning][0m The signature core/openjscad-esm.toJscadSTL has an @param with name "jscadCAG", which was not used
[93m[warning][0m The signature models/Ellipse.Ellipse.constructor has an @param with name "rX", which was not used
[93m[warning][0m The signature models/Ellipse.Ellipse.constructor has an @param with name "rY", which was not used
[93m[warning][0m The signature models/Ellipse.EllipticArc.constructor has an @param with name "arc", which was not used
[96m[info][0m html generated at ./dist/docs
[96m[info][0m json generated at ./dist/project.json
[93m[warning][0m Found 0 errors and 18 warnings

> @photon/core@0.18.1 build
> npm run build:types && npm run build:lib


> @photon/core@0.18.1 build:types
> tsc -p target/tsconfig.esm.json


> @photon/core@0.18.1 build:lib
> vite build

[33mYou are using Node.js 20.13.1. Vite requires Node.js version 20.19+ or 22.12+. Please upgrade your Node.js version.[39m
[36mvite v7.1.9 [32mbuilding for production...[36m[39m
[2K[1Gtransforming (1) [2msrc/index.ts[22m[2K[1G[2K[1G[2K[1G[2K[1G[2K[1G[2K[1G[2K[1G[2K[1G[2K[1G[2K[1G[2K[1G[2K[1G[2K[1G[2K[1G[2K[1G[2K[1G[2K[1G[2K[1G[2K[1G[2K[1G[2K[1G[32mâœ“[39m 54 modules transformed.
[2K[1G[33msrc/core/maker.ts (21:22): Use of eval in "src/core/maker.ts" is strongly discouraged as it poses security risks and may cause issues with minification.[39m
[2K[1Grendering chunks (1)...[2K[1G[2K[1Gcomputing gzip size (0)...[2K[1Gcomputing gzip size (1)...[2K[1G[2mdist/[22m[36mphoton.es.js  [39m[1m[2m220.86 kB[22m[1m[22m[2m â”‚ gzip: 49.46 kB[22m[2m â”‚ map: 570.67 kB[22m
[2K[1Grendering chunks (1)...[2K[1G[2K[1Gcomputing gzip size (1)...[2K[1G[2mdist/[22m[36mphoton.umd.js  [39m[1m[2m235.95 kB[22m[1m[22m[2m â”‚ gzip: 50.40 kB[22m[2m â”‚ map: 573.20 kB[22m
[2K[1Grendering chunks (1)...[2K[1G[2K[1Gcomputing gzip size (1)...[2K[1G[2mdist/[22m[36mphoton.iife.js  [39m[1m[2m235.55 kB[22m[1m[22m[2m â”‚ gzip: 50.28 kB[22m[2m â”‚ map: 573.19 kB[22m
[32mâœ“ built in 422ms[39m

[0m[0m
[0m  Build Output Validation[0m
[0m    File Existence[0m
    [31m  1) should generate ES module output[0m
    [31m  2) should generate UMD bundle[0m
    [31m  3) should generate IIFE bundle[0m
    [32m  [32mâœ”[39m[0m[90m should generate type definitions[0m
[0m    File Sizes[0m
    [32m  [32mâœ”[39m[0m[90m should have reasonable ES module size[0m
    [32m  [32mâœ”[39m[0m[90m should have reasonable UMD bundle size[0m
[0m    ES Module Format[0m
    [32m  [32mâœ”[39m[0m[90m should contain ES6 export statements[0m
    [32m  [32mâœ”[39m[0m[90m should not contain require() calls[0m
    [32m  [32mâœ”[39m[0m[90m should use modern JavaScript syntax[0m
[0m    UMD Bundle Format[0m
    [32m  [32mâœ”[39m[0m[90m should be loadable as CommonJS[0m
    [32m  [32mâœ”[39m[0m[90m should contain UMD wrapper[0m
    [32m  [32mâœ”[39m[0m[90m should work with require() in tests[0m
[0m    Type Definitions[0m
    [32m  [32mâœ”[39m[0m[90m should have index.d.ts[0m
    [32m  [32mâœ”[39m[0m[90m should export type declarations[0m
    [32m  [32mâœ”[39m[0m[90m should have schema type definitions[0m
[0m    Tree-Shaking Support[0m
    [32m  [32mâœ”[39m[0m[90m should use named exports for tree-shaking[0m
    [32m  [32mâœ”[39m[0m[90m should not have side effects in module code[0m
[0m    Browser Compatibility[0m
    [32m  [32mâœ”[39m[0m[90m should not use Node.js-specific APIs in browser bundle[0m
    [32m  [32mâœ”[39m[0m[90m should handle global namespace for IIFE[0m
[0m    Source Maps[0m
    [32m  [32mâœ”[39m[0m[90m should generate source maps for ES module[0m
[0m    Package.json Exports[0m
    [32m  [32mâœ”[39m[0m[90m should have correct main field[0m
    [32m  [32mâœ”[39m[0m[90m should have correct module field[0m
    [32m  [32mâœ”[39m[0m[90m should have correct types field[0m
    [32m  [32mâœ”[39m[0m[90m should have exports field for modern Node.js[0m
[0m    Functional Tests[0m
    [32m  [32mâœ”[39m[0m[90m should create basic shapes from UMD bundle[0m
    [32m  [32mâœ”[39m[0m[90m should create model classes from UMD bundle[0m
    [32m  [32mâœ”[39m[0m[90m should perform model operations from UMD bundle[0m
    [32m  [32mâœ”[39m[0m[90m should export to SVG from UMD bundle[0m
[0m    Performance[0m
    [32m  [32mâœ”[39m[0m[90m should load UMD bundle quickly[0m
    [32m  [32mâœ”[39m[0m[90m should create shapes efficiently[0m

[0m  ES6 Module Imports[0m
[0m    Core Modules[0m
    [32m  [32mâœ”[39m[0m[90m should import angle module[0m[33m (41ms)[0m
    [32m  [32mâœ”[39m[0m[90m should import base module[0m
    [32m  [32mâœ”[39m[0m[90m should import chain module[0m
    [32m  [32mâœ”[39m[0m[90m should import combine module[0m
    [32m  [32mâœ”[39m[0m[90m should import expand module[0m
    [32m  [32mâœ”[39m[0m[90m should import exporter module[0m
    [32m  [32mâœ”[39m[0m[90m should import fillet modules[0m
    [32m  [32mâœ”[39m[0m[90m should import importer module[0m
    [32m  [32mâœ”[39m[0m[90m should import intersect module[0m
    [32m  [32mâœ”[39m[0m[90m should import layout module[0m
    [32m  [32mâœ”[39m[0m[90m should import measure module[0m
    [32m  [32mâœ”[39m[0m[90m should import model module[0m
    [32m  [32mâœ”[39m[0m[90m should import path module[0m
    [32m  [32mâœ”[39m[0m[90m should import paths module[0m
    [32m  [32mâœ”[39m[0m[90m should import point module[0m
    [32m  [32mâœ”[39m[0m[90m should import simplify module[0m
    [32m  [32mâœ”[39m[0m[90m should import solvers module[0m
    [32m  [32mâœ”[39m[0m[90m should import units module[0m
    [32m  [32mâœ”[39m[0m[90m should import svg-esm module[0m
    [32m  [32mâœ”[39m[0m[90m should import dxf module[0m
[0m    Model Classes[0m
    [32m  [32mâœ”[39m[0m[90m should import Belt model[0m
    [32m  [32mâœ”[39m[0m[90m should import BoltCircle model[0m
    [32m  [32mâœ”[39m[0m[90m should import BoltRectangle model[0m
    [32m  [32mâœ”[39m[0m[90m should import ConnectTheDots model[0m
    [32m  [32mâœ”[39m[0m[90m should import Dogbone model[0m
    [32m  [32mâœ”[39m[0m[90m should import Dome model[0m
    [32m  [32mâœ”[39m[0m[90m should import Holes model[0m
    [32m  [32mâœ”[39m[0m[90m should import Oval model[0m
    [32m  [32mâœ”[39m[0m[90m should import OvalArc model[0m
    [32m  [32mâœ”[39m[0m[90m should import Polygon model[0m
    [32m  [32mâœ”[39m[0m[90m should import Rectangle model[0m
    [32m  [32mâœ”[39m[0m[90m should import Ring model[0m
    [32m  [32mâœ”[39m[0m[90m should import RoundRectangle model[0m
    [32m  [32mâœ”[39m[0m[90m should import SCurve model[0m
    [32m  [32mâœ”[39m[0m[90m should import Slot model[0m
    [32m  [32mâœ”[39m[0m[90m should import Square model[0m
    [32m  [32mâœ”[39m[0m[90m should import Star model[0m
    [32m  [32mâœ”[39m[0m[90m should import BezierCurve model[0m
    [32m  [32mâœ”[39m[0m[90m should import Ellipse model[0m
    [32m  [32mâœ”[39m[0m[90m should import Text model[0m
[0m    Main Index Export[0m
    [32m  [32mâœ”[39m[0m[90m should import main index module[0m
    [32m  [32mâœ”[39m[0m[90m should have all model classes in models namespace[0m
[0m    Modern JavaScript Syntax Support[0m
    [32m  [32mâœ”[39m[0m[90m should support const and let declarations[0m
    [32m  [32mâœ”[39m[0m[90m should support arrow functions[0m
    [32m  [32mâœ”[39m[0m[90m should support destructuring[0m
    [32m  [32mâœ”[39m[0m[90m should support template literals[0m
    [32m  [32mâœ”[39m[0m[90m should support spread operator[0m
    [32m  [32mâœ”[39m[0m[90m should support async/await[0m

[0m  TypeScript Type Safety[0m
[0m    Type Imports[0m
    [32m  [32mâœ”[39m[0m[90m should import IPoint type[0m
    [32m  [32mâœ”[39m[0m[90m should import IPath type[0m
    [32m  [32mâœ”[39m[0m[90m should import IPathLine type[0m
    [32m  [32mâœ”[39m[0m[90m should import IPathCircle type[0m
    [32m  [32mâœ”[39m[0m[90m should import IPathArc type[0m
    [32m  [32mâœ”[39m[0m[90m should import IModel type[0m
[0m    Type Inference[0m
    [32m  [32mâœ”[39m[0m[90m should infer path types correctly[0m
    [32m  [32mâœ”[39m[0m[90m should infer point operations return types[0m
    [32m  [32mâœ”[39m[0m[90m should infer model operations return types[0m
[0m    Generic Type Parameters[0m
    [32m  [32mâœ”[39m[0m[90m should handle IPathMap generic correctly[0m
    [32m  [32mâœ”[39m[0m[90m should handle IModelMap generic correctly[0m
[0m    Type Guards[0m
    [32m  [32mâœ”[39m[0m[90m should use isNumber type guard[0m
    [32m  [32mâœ”[39m[0m[90m should use isPoint type guard[0m
    [32m  [32mâœ”[39m[0m[90m should use isPoint type guard[0m
    [32m  [32mâœ”[39m[0m[90m should use isNumber type guard[0m
[0m    Interface Exports[0m
    [32m  [32mâœ”[39m[0m[90m should export all schema interfaces[0m
[0m    Const and Enum Types[0m
    [32m  [32mâœ”[39m[0m[90m should use pathType constants with correct types[0m
    [32m  [32mâœ”[39m[0m[90m should use unitType constants with correct types[0m
[0m    Optional Properties[0m
    [32m  [32mâœ”[39m[0m[90m should handle optional model properties[0m
[0m    Function Overloads[0m
    [32m  [32mâœ”[39m[0m[90m should handle function overloads correctly[0m
[0m    Type Compatibility[0m
    [32m  [32mâœ”[39m[0m[90m should allow IPath to be assigned to specific path types[0m
    [32m  [32mâœ”[39m[0m[90m should allow IModel to contain nested models[0m
[0m    Return Type Validation[0m
    [32m  [32mâœ”[39m[0m[90m should validate measure functions return correct types[0m
    [32m  [32mâœ”[39m[0m[90m should validate chain functions return correct types[0m


[92m [0m[32m 99 passing[0m[90m (108ms)[0m
[31m  3 failing[0m

[0m  1) Build Output Validation
       File Existence
         should generate ES module output:

      [31mAssertionError [ERR_ASSERTION]: maker.es.js should exist[0m
      [32m+ expected[0m [31m- actual[0m

      [31m-false[0m
      [32m+true[0m
      [0m[90m
      at Context.<anonymous> (test/build-output.spec.ts:26:14)
      at process.processImmediate (node:internal/timers:478:21)
[0m
[0m  2) Build Output Validation
       File Existence
         should generate UMD bundle:

      [31mAssertionError [ERR_ASSERTION]: maker.umd.js should exist[0m
      [32m+ expected[0m [31m- actual[0m

      [31m-false[0m
      [32m+true[0m
      [0m[90m
      at Context.<anonymous> (test/build-output.spec.ts:31:14)
      at process.processImmediate (node:internal/timers:478:21)
[0m
[0m  3) Build Output Validation
       File Existence
         should generate IIFE bundle:

      [31mAssertionError [ERR_ASSERTION]: maker.iife.js should exist[0m
      [32m+ expected[0m [31m- actual[0m

      [31m-false[0m
      [32m+true[0m
      [0m[90m
      at Context.<anonymous> (test/build-output.spec.ts:36:14)
      at process.processImmediate (node:internal/timers:478:21)
[0m


[37;40mnpm[0m [0m[31;40mERR![0m [0m[35mLifecycle script `test` failed with error:[0m 
[0m[37;40mnpm[0m [0m[31;40mERR![0m [0m[35mError: command failed[0m 
[0m[37;40mnpm[0m [0m[31;40mERR![0m [0m[35m  in workspace: @photon/core@0.18.1[0m 
[0m[37;40mnpm[0m [0m[31;40mERR![0m [0m[35m  at location: /Users/mykawhite/Documents/GitHub/photon/packages/photon[0m 
[0m