name: CI

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main

jobs:
  test:
    name: Test & Build
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        node-version: [18.x, 20.x, 22.x]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Lint code
        run: npm run lint --if-present
      
      - name: Build all packages
        run: npm run build
      
      - name: Run tests
        run: npm test --if-present
      
      - name: Check bundle size
        run: |
          du -h packages/photon/dist/photon.es.js
          du -h packages/photon/dist/photon.umd.js
      
      - name: Upload build artifacts
        if: matrix.os == 'ubuntu-latest' && matrix.node-version == '20.x'
        uses: actions/upload-artifact@v4
        with:
          name: dist-files
          path: |
            packages/*/dist/
          retention-days: 7

  playground-test:
    name: Test Playground
    runs-on: ubuntu-latest
    needs: test
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build packages
        run: npm run build
      
      - name: Start playground server
        run: |
          npm start &
          sleep 10
      
      - name: Check playground is running
        run: |
          curl -f http://localhost:8020 || exit 1
          echo "✅ Playground is accessible"
      
      - name: Check for console errors (basic)
        run: |
          response=$(curl -s http://localhost:8020)
          if echo "$response" | grep -i "error" | grep -v "errorHandler"; then
            echo "⚠️ Found potential errors in HTML"
          else
            echo "✅ No obvious errors in HTML"
          fi

  security:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Run npm audit
        run: npm audit --audit-level=moderate
        continue-on-error: true
      
      - name: Check for vulnerable dependencies
        uses: snyk/actions/node@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high
