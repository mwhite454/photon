{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\u200b\\-_,:!=\\[\\]()\"`/]+|\\.(?!\\d)|&[lg]t;|(?!\\b)(?=[A-Z][a-z])"},"docs":[{"location":"","text":"Photon (formerly Maker.js) is a JavaScript library for programmatically creating 2D vector drawings and laser-cuttable models. Covers basic to advanced drawing concepts Includes examples and model trees Provides exporting guides Documents the API in depth Get started by exploring the sections in the navigation.","title":"Photon Documentation"},{"location":"advanced-drawing/","text":"Complex shapes, boolean operations, and advanced techniques.","title":"Advanced Drawing"},{"location":"api/","text":"Browse the Photon API by modules and functions.","title":"API Reference"},{"location":"basic-drawing/","text":"Core primitives, paths, and common drawing operations.","title":"Basic Drawing"},{"location":"converted/","text":"Getting started Basic drawing Intermediate drawing Advanced drawing Model trees Working with chains Exporting Importing Api documentation Changelog September 2018 Added Captions to Intermediate drawing . August 2018 Added Distorting to Intermediate drawing . Added Dogbone Fillets to Intermediate drawing . Added Chain dogbone to Working with chains page. August 2017 Added Working with chains page.","title":"Index"},{"location":"converted/#changelog","text":"","title":"Changelog"},{"location":"converted/#september-2018","text":"Added Captions to Intermediate drawing .","title":"September 2018"},{"location":"converted/#august-2018","text":"Added Distorting to Intermediate drawing . Added Dogbone Fillets to Intermediate drawing . Added Chain dogbone to Working with chains page.","title":"August 2018"},{"location":"converted/#august-2017","text":"Added Working with chains page.","title":"August 2017"},{"location":"converted/advanced-drawing/","text":"","title":"Index"},{"location":"converted/api/","text":"Photon Photon Preparing search index... Photon Modules core/angle core/base core/boolean-utils core/break core/cascades core/chain core/collect core/combine core/deadend core/dxf core/equal core/expand core/exporter core/exporter-index core/fillet-chain core/fillet-core core/fillet-path core/importer core/intersect core/kit core/layout core/maker core/measure core/measure-minimal core/model core/openjscad-esm core/path core/paths core/pdf-esm core/point core/schema core/simplify core/solvers core/svg-esm core/svg-helpers core/units core/xml index models models/Belt models/BezierCurve-esm models/BoltCircle models/BoltRectangle models/ConnectTheDots models/Dogbone models/Dome models/Ellipse models/Holes models/Oval models/OvalArc models/Polygon models/Rectangle models/Ring models/RoundRectangle models/SCurve models/Slot models/Square models/Star models/Text types/jscad Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Modules core/angle core/base core/boolean-utils core/break core/cascades core/chain core/collect core/combine core/deadend core/dxf core/equal core/expand core/exporter core/exporter-index core/fillet-chain core/fillet-core core/fillet-path core/importer core/intersect core/kit core/layout core/maker core/measure core/measure-minimal core/model core/openjscad-esm core/path core/paths core/pdf-esm core/point core/schema core/simplify core/solvers core/svg-esm core/svg-helpers core/units core/xml index models models/Belt models/BezierCurve-esm models/BoltCircle models/BoltRectangle models/ConnectTheDots models/Dogbone models/Dome models/Ellipse models/Holes models/Oval models/OvalArc models/Polygon models/Rectangle models/Ring models/RoundRectangle models/SCurve models/Slot models/Square models/Star models/Text types/jscad Photon Loading... Generated using TypeDoc","title":"Photon"},{"location":"converted/api/#photon","text":"","title":"Photon"},{"location":"converted/api/#modules","text":"core/angle core/base core/boolean-utils core/break core/cascades core/chain core/collect core/combine core/deadend core/dxf core/equal core/expand core/exporter core/exporter-index core/fillet-chain core/fillet-core core/fillet-path core/importer core/intersect core/kit core/layout core/maker core/measure core/measure-minimal core/model core/openjscad-esm core/path core/paths core/pdf-esm core/point core/schema core/simplify core/solvers core/svg-esm core/svg-helpers core/units core/xml index models models/Belt models/BezierCurve-esm models/BoltCircle models/BoltRectangle models/ConnectTheDots models/Dogbone models/Dome models/Ellipse models/Holes models/Oval models/OvalArc models/Polygon models/Rectangle models/Ring models/RoundRectangle models/SCurve models/Slot models/Square models/Star models/Text types/jscad","title":"Modules"},{"location":"converted/api/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/#on-this-page","text":"Modules core/angle core/base core/boolean-utils core/break core/cascades core/chain core/collect core/combine core/deadend core/dxf core/equal core/expand core/exporter core/exporter-index core/fillet-chain core/fillet-core core/fillet-path core/importer core/intersect core/kit core/layout core/maker core/measure core/measure-minimal core/model core/openjscad-esm core/path core/paths core/pdf-esm core/point core/schema core/simplify core/solvers core/svg-esm core/svg-helpers core/units core/xml index models models/Belt models/BezierCurve-esm models/BoltCircle models/BoltRectangle models/ConnectTheDots models/Dogbone models/Dome models/Ellipse models/Holes models/Oval models/OvalArc models/Polygon models/Rectangle models/Ring models/RoundRectangle models/SCurve models/Slot models/Square models/Star models/Text types/jscad Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/hierarchy/","text":"Photon Photon Preparing search index... Photon Hierarchy Summary ICascade ICascadeModel ICascadePath ICascadePoint IJscadExtrudeOptions IJscadCsgOptions IJscadScriptOptions IMeasure IMeasureWithCenter IModel Belt BezierCurve BoltCircle BoltRectangle ConnectTheDots Dogbone Dome Ellipse EllipticArc Holes Oval OvalArc Polygon Rectangle Ring RoundRectangle SCurve Slot Square Star Text IBoundingHex IPath DeletedPathInfo IPathRemoved IPathDirectional IPathLine Chord Line Parallel IPathBezierSeed BezierSeed IPathCircle Circle IPathArc Arc IPathArcInBezierCurve IPathIntersectionBaseOptions IPathIntersectionOptions IPointMatchOptions IDXFRenderOptions ICombineOptions IFindLoopsOptions IOpenJsCadOptions ISimplifyOptions IFindChainsOptions IJscadCagOptions IJscadCsgOptions IRefModelInModel IWalkModel IRefPathIdInModel IWalkPath IRouteOffset IWalkPath IWalkModel ISVGElementRenderOptions ISVGRenderOptions Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Photon"},{"location":"converted/api/hierarchy/#photon","text":"","title":"Photon"},{"location":"converted/api/hierarchy/#hierarchy-summary","text":"ICascade ICascadeModel ICascadePath ICascadePoint IJscadExtrudeOptions IJscadCsgOptions IJscadScriptOptions IMeasure IMeasureWithCenter IModel Belt BezierCurve BoltCircle BoltRectangle ConnectTheDots Dogbone Dome Ellipse EllipticArc Holes Oval OvalArc Polygon Rectangle Ring RoundRectangle SCurve Slot Square Star Text IBoundingHex IPath DeletedPathInfo IPathRemoved IPathDirectional IPathLine Chord Line Parallel IPathBezierSeed BezierSeed IPathCircle Circle IPathArc Arc IPathArcInBezierCurve IPathIntersectionBaseOptions IPathIntersectionOptions IPointMatchOptions IDXFRenderOptions ICombineOptions IFindLoopsOptions IOpenJsCadOptions ISimplifyOptions IFindChainsOptions IJscadCagOptions IJscadCsgOptions IRefModelInModel IWalkModel IRefPathIdInModel IWalkPath IRouteOffset IWalkPath IWalkModel ISVGElementRenderOptions ISVGRenderOptions","title":"Hierarchy Summary"},{"location":"converted/api/hierarchy/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/classes/core_collect.Collector/","text":"Collector | Photon Photon Preparing search index... core/collect Collector Class Collector Collects items that share a common key. Type Parameters K T Defined in core/collect.ts:22 Index Constructors constructor Properties collections Methods addItemToCollection findCollection getCollectionsOfMultiple removeCollection removeItemFromCollection Constructors constructor new Collector< K , T >(comparer?: ICollectionKeyComparer < K >): Collector< K , T > #### Type Parameters K T #### Parameters Optional comparer: ICollectionKeyComparer < K > #### Returns Collector< K , T > Defined in core/collect.ts:25 Properties collections collections: ICollection < K , T >[] = [] Defined in core/collect.ts:23 Methods addItemToCollection addItemToCollection(key: K , item: T ): void #### Parameters key: K item: T #### Returns void Defined in core/collect.ts:28 findCollection findCollection(key: K , action?: (index: number) => void): T [] #### Parameters key: K Optional action: (index: number) => void #### Returns T [] Defined in core/collect.ts:38 getCollectionsOfMultiple getCollectionsOfMultiple(cb: (key: K , items: T []) => void): void #### Parameters cb: (key: K , items: T []) => void #### Returns void Defined in core/collect.ts:77 removeCollection removeCollection(key: K ): boolean #### Parameters key: K #### Returns boolean Defined in core/collect.ts:53 removeItemFromCollection removeItemFromCollection(key: K , item: T ): boolean #### Parameters key: K item: T #### Returns boolean Defined in core/collect.ts:62 Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Constructors constructor Properties collections Methods addItemToCollection findCollection getCollectionsOfMultiple removeCollection removeItemFromCollection Photon Loading... Generated using TypeDoc","title":"Collector | Photon"},{"location":"converted/api/classes/core_collect.Collector/#class-collector","text":"Collects items that share a common key.","title":"Class Collector"},{"location":"converted/api/classes/core_collect.Collector/#type-parameters","text":"K T Defined in core/collect.ts:22","title":"Type Parameters"},{"location":"converted/api/classes/core_collect.Collector/#index","text":"","title":"Index"},{"location":"converted/api/classes/core_collect.Collector/#constructors","text":"constructor","title":"Constructors"},{"location":"converted/api/classes/core_collect.Collector/#properties","text":"collections","title":"Properties"},{"location":"converted/api/classes/core_collect.Collector/#methods","text":"addItemToCollection findCollection getCollectionsOfMultiple removeCollection removeItemFromCollection","title":"Methods"},{"location":"converted/api/classes/core_collect.Collector/#constructors_1","text":"","title":"Constructors"},{"location":"converted/api/classes/core_collect.Collector/#constructor","text":"new Collector< K , T >(comparer?: ICollectionKeyComparer < K >): Collector< K , T > #### Type Parameters K T #### Parameters Optional comparer: ICollectionKeyComparer < K > #### Returns Collector< K , T > Defined in core/collect.ts:25","title":"constructor"},{"location":"converted/api/classes/core_collect.Collector/#properties_1","text":"","title":"Properties"},{"location":"converted/api/classes/core_collect.Collector/#collections","text":"collections: ICollection < K , T >[] = [] Defined in core/collect.ts:23","title":"collections"},{"location":"converted/api/classes/core_collect.Collector/#methods_1","text":"","title":"Methods"},{"location":"converted/api/classes/core_collect.Collector/#additemtocollection","text":"addItemToCollection(key: K , item: T ): void #### Parameters key: K item: T #### Returns void Defined in core/collect.ts:28","title":"addItemToCollection"},{"location":"converted/api/classes/core_collect.Collector/#findcollection","text":"findCollection(key: K , action?: (index: number) => void): T [] #### Parameters key: K Optional action: (index: number) => void #### Returns T [] Defined in core/collect.ts:38","title":"findCollection"},{"location":"converted/api/classes/core_collect.Collector/#getcollectionsofmultiple","text":"getCollectionsOfMultiple(cb: (key: K , items: T []) => void): void #### Parameters cb: (key: K , items: T []) => void #### Returns void Defined in core/collect.ts:77","title":"getCollectionsOfMultiple"},{"location":"converted/api/classes/core_collect.Collector/#removecollection","text":"removeCollection(key: K ): boolean #### Parameters key: K #### Returns boolean Defined in core/collect.ts:53","title":"removeCollection"},{"location":"converted/api/classes/core_collect.Collector/#removeitemfromcollection","text":"removeItemFromCollection(key: K , item: T ): boolean #### Parameters key: K item: T #### Returns boolean Defined in core/collect.ts:62","title":"removeItemFromCollection"},{"location":"converted/api/classes/core_collect.Collector/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/classes/core_collect.Collector/#on-this-page","text":"Constructors constructor Properties collections Methods addItemToCollection findCollection getCollectionsOfMultiple removeCollection removeItemFromCollection Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/classes/core_collect.PointGraph/","text":"PointGraph | Photon Photon Preparing search index... core/collect PointGraph Class PointGraph A graph of items which may be located on the same points. Type Parameters T Defined in core/collect.ts:126 Index Constructors constructor Properties graph index insertedCount merged values Methods forEachPoint getElementAtPoint getIdOfPoint insertValue insertValueIdAtPoint mergeNearestSinglePoints mergePoints reset Constructors constructor new PointGraph< T >(): PointGraph< T > #### Type Parameters T #### Returns PointGraph< T > Defined in core/collect.ts:158 Properties graph graph: { [x: number]: { [y: number]: number } } Map of unique points by x, then y, to a point id. This will remain intact even after merging. Defined in core/collect.ts:136 index index: { [pointId: number]: IPointGraphIndexElement } Index of points by id. Defined in core/collect.ts:141 insertedCount insertedCount: number Number of points inserted Defined in core/collect.ts:131 merged merged: { [pointId: number]: number } Map of point ids which once existed but have been merged into another id due to close proximity. Defined in core/collect.ts:146 values values: T [] List of values inserted at points. Defined in core/collect.ts:151 Methods forEachPoint forEachPoint( cb: ( p: IPoint , values: T [], pointId?: number, el?: IPointGraphIndexElement , ) => void, ): void Iterate over points in the index. #### Parameters cb: (p: IPoint , values: T [], pointId?: number, el?: IPointGraphIndexElement ) => void Callback for each point in the index. #### Returns void Defined in core/collect.ts:302 getElementAtPoint getElementAtPoint(p: IPoint ): IPointGraphIndexElement Get the index element of a point, after merging. #### Parameters p: IPoint Point to look up index element. #### Returns IPointGraphIndexElement Defined in core/collect.ts:335 getIdOfPoint getIdOfPoint(p: IPoint ): number Gets the id of a point, after merging. #### Parameters p: IPoint Point to look up id. #### Returns number Defined in core/collect.ts:317 insertValue insertValue(value: T ): number Insert a value. #### Parameters value: T Value associated with this point. #### Returns number valueId of the inserted value. Defined in core/collect.ts:178 insertValueIdAtPoint insertValueIdAtPoint( valueId: number, p: IPoint , ): { existed: boolean; pointId: number } Insert a value at a point. #### Parameters valueId: number p: IPoint Point. #### Returns { existed: boolean; pointId: number } Defined in core/collect.ts:188 mergeNearestSinglePoints mergeNearestSinglePoints(withinDistance: number): void Finds all points which have only one value associated. Then, merge to the nearest other point within this set. Call this after inserting values. #### Parameters withinDistance: number Distance to consider points equal. #### Returns void Defined in core/collect.ts:252 mergePoints mergePoints(withinDistance: number): void Merge points within a given distance from each other. Call this after inserting values. #### Parameters withinDistance: number Distance to consider points equal. #### Returns void Defined in core/collect.ts:220 reset reset(): void Reset the stored points, graphs, lists, to initial state. #### Returns void Defined in core/collect.ts:165 Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Constructors constructor Properties graph index insertedCount merged values Methods forEachPoint getElementAtPoint getIdOfPoint insertValue insertValueIdAtPoint mergeNearestSinglePoints mergePoints reset Photon Loading... Generated using TypeDoc","title":"PointGraph | Photon"},{"location":"converted/api/classes/core_collect.PointGraph/#class-pointgraph","text":"A graph of items which may be located on the same points.","title":"Class PointGraph"},{"location":"converted/api/classes/core_collect.PointGraph/#type-parameters","text":"T Defined in core/collect.ts:126","title":"Type Parameters"},{"location":"converted/api/classes/core_collect.PointGraph/#index","text":"","title":"Index"},{"location":"converted/api/classes/core_collect.PointGraph/#constructors","text":"constructor","title":"Constructors"},{"location":"converted/api/classes/core_collect.PointGraph/#properties","text":"graph index insertedCount merged values","title":"Properties"},{"location":"converted/api/classes/core_collect.PointGraph/#methods","text":"forEachPoint getElementAtPoint getIdOfPoint insertValue insertValueIdAtPoint mergeNearestSinglePoints mergePoints reset","title":"Methods"},{"location":"converted/api/classes/core_collect.PointGraph/#constructors_1","text":"","title":"Constructors"},{"location":"converted/api/classes/core_collect.PointGraph/#constructor","text":"new PointGraph< T >(): PointGraph< T > #### Type Parameters T #### Returns PointGraph< T > Defined in core/collect.ts:158","title":"constructor"},{"location":"converted/api/classes/core_collect.PointGraph/#properties_1","text":"","title":"Properties"},{"location":"converted/api/classes/core_collect.PointGraph/#graph","text":"graph: { [x: number]: { [y: number]: number } } Map of unique points by x, then y, to a point id. This will remain intact even after merging. Defined in core/collect.ts:136","title":"graph"},{"location":"converted/api/classes/core_collect.PointGraph/#index_1","text":"index: { [pointId: number]: IPointGraphIndexElement } Index of points by id. Defined in core/collect.ts:141","title":"index"},{"location":"converted/api/classes/core_collect.PointGraph/#insertedcount","text":"insertedCount: number Number of points inserted Defined in core/collect.ts:131","title":"insertedCount"},{"location":"converted/api/classes/core_collect.PointGraph/#merged","text":"merged: { [pointId: number]: number } Map of point ids which once existed but have been merged into another id due to close proximity. Defined in core/collect.ts:146","title":"merged"},{"location":"converted/api/classes/core_collect.PointGraph/#values","text":"values: T [] List of values inserted at points. Defined in core/collect.ts:151","title":"values"},{"location":"converted/api/classes/core_collect.PointGraph/#methods_1","text":"","title":"Methods"},{"location":"converted/api/classes/core_collect.PointGraph/#foreachpoint","text":"forEachPoint( cb: ( p: IPoint , values: T [], pointId?: number, el?: IPointGraphIndexElement , ) => void, ): void Iterate over points in the index. #### Parameters cb: (p: IPoint , values: T [], pointId?: number, el?: IPointGraphIndexElement ) => void Callback for each point in the index. #### Returns void Defined in core/collect.ts:302","title":"forEachPoint"},{"location":"converted/api/classes/core_collect.PointGraph/#getelementatpoint","text":"getElementAtPoint(p: IPoint ): IPointGraphIndexElement Get the index element of a point, after merging. #### Parameters p: IPoint Point to look up index element. #### Returns IPointGraphIndexElement Defined in core/collect.ts:335","title":"getElementAtPoint"},{"location":"converted/api/classes/core_collect.PointGraph/#getidofpoint","text":"getIdOfPoint(p: IPoint ): number Gets the id of a point, after merging. #### Parameters p: IPoint Point to look up id. #### Returns number Defined in core/collect.ts:317","title":"getIdOfPoint"},{"location":"converted/api/classes/core_collect.PointGraph/#insertvalue","text":"insertValue(value: T ): number Insert a value. #### Parameters value: T Value associated with this point. #### Returns number valueId of the inserted value. Defined in core/collect.ts:178","title":"insertValue"},{"location":"converted/api/classes/core_collect.PointGraph/#insertvalueidatpoint","text":"insertValueIdAtPoint( valueId: number, p: IPoint , ): { existed: boolean; pointId: number } Insert a value at a point. #### Parameters valueId: number p: IPoint Point. #### Returns { existed: boolean; pointId: number } Defined in core/collect.ts:188","title":"insertValueIdAtPoint"},{"location":"converted/api/classes/core_collect.PointGraph/#mergenearestsinglepoints","text":"mergeNearestSinglePoints(withinDistance: number): void Finds all points which have only one value associated. Then, merge to the nearest other point within this set. Call this after inserting values. #### Parameters withinDistance: number Distance to consider points equal. #### Returns void Defined in core/collect.ts:252","title":"mergeNearestSinglePoints"},{"location":"converted/api/classes/core_collect.PointGraph/#mergepoints","text":"mergePoints(withinDistance: number): void Merge points within a given distance from each other. Call this after inserting values. #### Parameters withinDistance: number Distance to consider points equal. #### Returns void Defined in core/collect.ts:220","title":"mergePoints"},{"location":"converted/api/classes/core_collect.PointGraph/#reset","text":"reset(): void Reset the stored points, graphs, lists, to initial state. #### Returns void Defined in core/collect.ts:165","title":"reset"},{"location":"converted/api/classes/core_collect.PointGraph/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/classes/core_collect.PointGraph/#on-this-page","text":"Constructors constructor Properties graph index insertedCount merged values Methods forEachPoint getElementAtPoint getIdOfPoint insertValue insertValueIdAtPoint mergeNearestSinglePoints mergePoints reset Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/classes/core_measure.Atlas/","text":"Atlas | Photon Photon Preparing search index... core/measure Atlas Class Atlas A list of maps of measurements. Param: modelToMeasure The model to measure. Param: atlas Optional atlas to save measurements. Returns object with low and high points. Defined in core/measure.ts:595 Index Constructors constructor Properties modelContext modelMap modelsMeasured pathMap Methods measureModels Constructors constructor new Atlas(modelContext: IModel ): Atlas Constructor. #### Parameters modelContext: IModel The model to measure. #### Returns Atlas Defined in core/measure.ts:616 Properties modelContext modelContext: IModel The model to measure. Defined in core/measure.ts:616 modelMap modelMap: IMeasureMap = {} Map of model measurements, mapped by routeKey. Defined in core/measure.ts:605 modelsMeasured modelsMeasured: boolean = false Flag that models have been measured. Defined in core/measure.ts:600 pathMap pathMap: IMeasureMap = {} Map of path measurements, mapped by routeKey. Defined in core/measure.ts:610 Methods measureModels measureModels(): void #### Returns void Defined in core/measure.ts:619 Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Constructors constructor Properties modelContext modelMap modelsMeasured pathMap Methods measureModels Photon Loading... Generated using TypeDoc","title":"Atlas | Photon"},{"location":"converted/api/classes/core_measure.Atlas/#class-atlas","text":"A list of maps of measurements.","title":"Class Atlas"},{"location":"converted/api/classes/core_measure.Atlas/#param-modeltomeasure","text":"The model to measure.","title":"Param: modelToMeasure"},{"location":"converted/api/classes/core_measure.Atlas/#param-atlas","text":"Optional atlas to save measurements.","title":"Param: atlas"},{"location":"converted/api/classes/core_measure.Atlas/#returns","text":"object with low and high points. Defined in core/measure.ts:595","title":"Returns"},{"location":"converted/api/classes/core_measure.Atlas/#index","text":"","title":"Index"},{"location":"converted/api/classes/core_measure.Atlas/#constructors","text":"constructor","title":"Constructors"},{"location":"converted/api/classes/core_measure.Atlas/#properties","text":"modelContext modelMap modelsMeasured pathMap","title":"Properties"},{"location":"converted/api/classes/core_measure.Atlas/#methods","text":"measureModels","title":"Methods"},{"location":"converted/api/classes/core_measure.Atlas/#constructors_1","text":"","title":"Constructors"},{"location":"converted/api/classes/core_measure.Atlas/#constructor","text":"new Atlas(modelContext: IModel ): Atlas Constructor. #### Parameters modelContext: IModel The model to measure. #### Returns Atlas Defined in core/measure.ts:616","title":"constructor"},{"location":"converted/api/classes/core_measure.Atlas/#properties_1","text":"","title":"Properties"},{"location":"converted/api/classes/core_measure.Atlas/#modelcontext","text":"modelContext: IModel The model to measure. Defined in core/measure.ts:616","title":"modelContext"},{"location":"converted/api/classes/core_measure.Atlas/#modelmap","text":"modelMap: IMeasureMap = {} Map of model measurements, mapped by routeKey. Defined in core/measure.ts:605","title":"modelMap"},{"location":"converted/api/classes/core_measure.Atlas/#modelsmeasured","text":"modelsMeasured: boolean = false Flag that models have been measured. Defined in core/measure.ts:600","title":"modelsMeasured"},{"location":"converted/api/classes/core_measure.Atlas/#pathmap","text":"pathMap: IMeasureMap = {} Map of path measurements, mapped by routeKey. Defined in core/measure.ts:610","title":"pathMap"},{"location":"converted/api/classes/core_measure.Atlas/#methods_1","text":"","title":"Methods"},{"location":"converted/api/classes/core_measure.Atlas/#measuremodels","text":"measureModels(): void #### Returns void Defined in core/measure.ts:619","title":"measureModels"},{"location":"converted/api/classes/core_measure.Atlas/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/classes/core_measure.Atlas/#on-this-page","text":"Constructors constructor Properties modelContext modelMap modelsMeasured pathMap Methods measureModels Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/classes/core_paths.Arc/","text":"Arc | Photon Photon Preparing search index... core/paths Arc Class Arc Class for arc path. Implements IPathArc Defined in core/paths.ts:23 Index Constructors constructor Properties endAngle origin radius startAngle type Constructors constructor new Arc( origin: IPoint , radius: number, startAngle: number, endAngle: number, ): Arc Class for arc path, created from origin point, radius, start angle, and end angle. #### Parameters origin: IPoint The center point of the arc. + radius: number The radius of the arc. + startAngle: number The start angle of the arc. + endAngle: number The end angle of the arc. #### Returns Arc Defined in core/paths.ts:38 new Arc( pointA: IPoint , pointB: IPoint , radius: number, largeArc: boolean, clockwise: boolean, ): Arc Class for arc path, created from 2 points, radius, large Arc flag, and clockwise flag. #### Parameters pointA: IPoint First end point of the arc. + pointB: IPoint Second end point of the arc. + radius: number The radius of the arc. + largeArc: boolean Boolean flag to indicate clockwise direction. + clockwise: boolean Boolean flag to indicate clockwise direction. #### Returns Arc Defined in core/paths.ts:49 new Arc(pointA: IPoint , pointB: IPoint , clockwise?: boolean): Arc Class for arc path, created from 2 points and optional boolean flag indicating clockwise. #### Parameters pointA: IPoint First end point of the arc. + pointB: IPoint Second end point of the arc. + Optional clockwise: boolean Boolean flag to indicate clockwise direction. #### Returns Arc Defined in core/paths.ts:58 new Arc(pointA: IPoint , pointB: IPoint , pointC: IPoint ): Arc Class for arc path, created from 3 points. #### Parameters pointA: IPoint First end point of the arc. + pointB: IPoint Middle point on the arc. + pointC: IPoint Second end point of the arc. #### Returns Arc Defined in core/paths.ts:67 Properties endAngle endAngle: number The angle (in degrees) to end drawing the arc, in polar (counter-clockwise) direction. Implementation of IPathArc . endAngle Defined in core/paths.ts:27 origin origin: IPoint The main point of reference for this path. Implementation of IPathArc . origin Defined in core/paths.ts:24 radius radius: number The radius of the circle. Implementation of IPathArc . radius Defined in core/paths.ts:25 startAngle startAngle: number The angle (in degrees) to begin drawing the arc, in polar (counter-clockwise) direction. Implementation of IPathArc . startAngle Defined in core/paths.ts:26 type type: string The type of the path, e.g. \"line\", \"circle\", or \"arc\". These strings are enumerated in pathType. Implementation of IPathArc . type Defined in core/paths.ts:28 Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Constructors constructor Properties endAngle origin radius startAngle type Photon Loading... Generated using TypeDoc","title":"Arc | Photon"},{"location":"converted/api/classes/core_paths.Arc/#class-arc","text":"Class for arc path.","title":"Class Arc"},{"location":"converted/api/classes/core_paths.Arc/#implements","text":"IPathArc Defined in core/paths.ts:23","title":"Implements"},{"location":"converted/api/classes/core_paths.Arc/#index","text":"","title":"Index"},{"location":"converted/api/classes/core_paths.Arc/#constructors","text":"constructor","title":"Constructors"},{"location":"converted/api/classes/core_paths.Arc/#properties","text":"endAngle origin radius startAngle type","title":"Properties"},{"location":"converted/api/classes/core_paths.Arc/#constructors_1","text":"","title":"Constructors"},{"location":"converted/api/classes/core_paths.Arc/#constructor","text":"new Arc( origin: IPoint , radius: number, startAngle: number, endAngle: number, ): Arc Class for arc path, created from origin point, radius, start angle, and end angle. #### Parameters origin: IPoint The center point of the arc. + radius: number The radius of the arc. + startAngle: number The start angle of the arc. + endAngle: number The end angle of the arc. #### Returns Arc Defined in core/paths.ts:38 new Arc( pointA: IPoint , pointB: IPoint , radius: number, largeArc: boolean, clockwise: boolean, ): Arc Class for arc path, created from 2 points, radius, large Arc flag, and clockwise flag. #### Parameters pointA: IPoint First end point of the arc. + pointB: IPoint Second end point of the arc. + radius: number The radius of the arc. + largeArc: boolean Boolean flag to indicate clockwise direction. + clockwise: boolean Boolean flag to indicate clockwise direction. #### Returns Arc Defined in core/paths.ts:49 new Arc(pointA: IPoint , pointB: IPoint , clockwise?: boolean): Arc Class for arc path, created from 2 points and optional boolean flag indicating clockwise. #### Parameters pointA: IPoint First end point of the arc. + pointB: IPoint Second end point of the arc. + Optional clockwise: boolean Boolean flag to indicate clockwise direction. #### Returns Arc Defined in core/paths.ts:58 new Arc(pointA: IPoint , pointB: IPoint , pointC: IPoint ): Arc Class for arc path, created from 3 points. #### Parameters pointA: IPoint First end point of the arc. + pointB: IPoint Middle point on the arc. + pointC: IPoint Second end point of the arc. #### Returns Arc Defined in core/paths.ts:67","title":"constructor"},{"location":"converted/api/classes/core_paths.Arc/#properties_1","text":"","title":"Properties"},{"location":"converted/api/classes/core_paths.Arc/#endangle","text":"endAngle: number The angle (in degrees) to end drawing the arc, in polar (counter-clockwise) direction. Implementation of IPathArc . endAngle Defined in core/paths.ts:27","title":"endAngle"},{"location":"converted/api/classes/core_paths.Arc/#origin","text":"origin: IPoint The main point of reference for this path. Implementation of IPathArc . origin Defined in core/paths.ts:24","title":"origin"},{"location":"converted/api/classes/core_paths.Arc/#radius","text":"radius: number The radius of the circle. Implementation of IPathArc . radius Defined in core/paths.ts:25","title":"radius"},{"location":"converted/api/classes/core_paths.Arc/#startangle","text":"startAngle: number The angle (in degrees) to begin drawing the arc, in polar (counter-clockwise) direction. Implementation of IPathArc . startAngle Defined in core/paths.ts:26","title":"startAngle"},{"location":"converted/api/classes/core_paths.Arc/#type","text":"type: string The type of the path, e.g. \"line\", \"circle\", or \"arc\". These strings are enumerated in pathType. Implementation of IPathArc . type Defined in core/paths.ts:28","title":"type"},{"location":"converted/api/classes/core_paths.Arc/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/classes/core_paths.Arc/#on-this-page","text":"Constructors constructor Properties endAngle origin radius startAngle type Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/classes/core_paths.Chord/","text":"Chord | Photon Photon Preparing search index... core/paths Chord Class Chord Class for chord, which is simply a line path that connects the endpoints of an arc. Param: arc Arc to use as the basic for the chord. Implements IPathLine Defined in core/paths.ts:351 Index Constructors constructor Properties end origin type Constructors constructor new Chord(arc: IPathArc ): Chord #### Parameters arc: IPathArc #### Returns Chord Defined in core/paths.ts:356 Properties end end: IPoint The end point defining the line. The start point is the origin. Implementation of IPathLine . end Defined in core/paths.ts:354 origin origin: IPoint The main point of reference for this path. Implementation of IPathLine . origin Defined in core/paths.ts:353 type type: string The type of the path, e.g. \"line\", \"circle\", or \"arc\". These strings are enumerated in pathType. Implementation of IPathLine . type Defined in core/paths.ts:352 Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Constructors constructor Properties end origin type Photon Loading... Generated using TypeDoc","title":"Chord | Photon"},{"location":"converted/api/classes/core_paths.Chord/#class-chord","text":"Class for chord, which is simply a line path that connects the endpoints of an arc.","title":"Class Chord"},{"location":"converted/api/classes/core_paths.Chord/#param-arc","text":"Arc to use as the basic for the chord.","title":"Param: arc"},{"location":"converted/api/classes/core_paths.Chord/#implements","text":"IPathLine Defined in core/paths.ts:351","title":"Implements"},{"location":"converted/api/classes/core_paths.Chord/#index","text":"","title":"Index"},{"location":"converted/api/classes/core_paths.Chord/#constructors","text":"constructor","title":"Constructors"},{"location":"converted/api/classes/core_paths.Chord/#properties","text":"end origin type","title":"Properties"},{"location":"converted/api/classes/core_paths.Chord/#constructors_1","text":"","title":"Constructors"},{"location":"converted/api/classes/core_paths.Chord/#constructor","text":"new Chord(arc: IPathArc ): Chord #### Parameters arc: IPathArc #### Returns Chord Defined in core/paths.ts:356","title":"constructor"},{"location":"converted/api/classes/core_paths.Chord/#properties_1","text":"","title":"Properties"},{"location":"converted/api/classes/core_paths.Chord/#end","text":"end: IPoint The end point defining the line. The start point is the origin. Implementation of IPathLine . end Defined in core/paths.ts:354","title":"end"},{"location":"converted/api/classes/core_paths.Chord/#origin","text":"origin: IPoint The main point of reference for this path. Implementation of IPathLine . origin Defined in core/paths.ts:353","title":"origin"},{"location":"converted/api/classes/core_paths.Chord/#type","text":"type: string The type of the path, e.g. \"line\", \"circle\", or \"arc\". These strings are enumerated in pathType. Implementation of IPathLine . type Defined in core/paths.ts:352","title":"type"},{"location":"converted/api/classes/core_paths.Chord/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/classes/core_paths.Chord/#on-this-page","text":"Constructors constructor Properties end origin type Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/classes/core_paths.Circle/","text":"Circle | Photon Photon Preparing search index... core/paths Circle Class Circle Class for circle path. Implements IPathCircle Defined in core/paths.ts:191 Index Constructors constructor Properties origin radius type Constructors constructor new Circle(radius: number): Circle Class for circle path, created from radius. Origin will be [0, 0]. Example: const c = new makerjs.paths.Circle(7); Copy #### Parameters radius: number The radius of the circle. #### Returns Circle Defined in core/paths.ts:206 new Circle(origin: IPoint , radius: number): Circle Class for circle path, created from origin point and radius. Example: const c = new makerjs.paths.Circle([10, 10], 7); Copy #### Parameters origin: IPoint The center point of the circle. + radius: number The radius of the circle. #### Returns Circle Defined in core/paths.ts:219 new Circle(pointA: IPoint , pointB: IPoint ): Circle Class for circle path, created from 2 points. Example: const c = new makerjs.paths.Circle([5, 15], [25, 15]); Copy #### Parameters pointA: IPoint First point on the circle. + pointB: IPoint Second point on the circle. #### Returns Circle Defined in core/paths.ts:232 new Circle(pointA: IPoint , pointB: IPoint , pointC: IPoint ): Circle Class for circle path, created from 3 points. Example: const c = new makerjs.paths.Circle([0, 0], [0, 10], [20, 0]); Copy #### Parameters pointA: IPoint First point on the circle. + pointB: IPoint Second point on the circle. + pointC: IPoint Third point on the circle. #### Returns Circle Defined in core/paths.ts:246 Properties origin origin: IPoint The main point of reference for this path. Implementation of IPathCircle . origin Defined in core/paths.ts:193 radius radius: number The radius of the circle. Implementation of IPathCircle . radius Defined in core/paths.ts:194 type type: string The type of the path, e.g. \"line\", \"circle\", or \"arc\". These strings are enumerated in pathType. Implementation of IPathCircle . type Defined in core/paths.ts:192 Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Constructors constructor Properties origin radius type Photon Loading... Generated using TypeDoc","title":"Circle | Photon"},{"location":"converted/api/classes/core_paths.Circle/#class-circle","text":"Class for circle path.","title":"Class Circle"},{"location":"converted/api/classes/core_paths.Circle/#implements","text":"IPathCircle Defined in core/paths.ts:191","title":"Implements"},{"location":"converted/api/classes/core_paths.Circle/#index","text":"","title":"Index"},{"location":"converted/api/classes/core_paths.Circle/#constructors","text":"constructor","title":"Constructors"},{"location":"converted/api/classes/core_paths.Circle/#properties","text":"origin radius type","title":"Properties"},{"location":"converted/api/classes/core_paths.Circle/#constructors_1","text":"","title":"Constructors"},{"location":"converted/api/classes/core_paths.Circle/#constructor","text":"new Circle(radius: number): Circle Class for circle path, created from radius. Origin will be [0, 0]. Example: const c = new makerjs.paths.Circle(7); Copy #### Parameters radius: number The radius of the circle. #### Returns Circle Defined in core/paths.ts:206 new Circle(origin: IPoint , radius: number): Circle Class for circle path, created from origin point and radius. Example: const c = new makerjs.paths.Circle([10, 10], 7); Copy #### Parameters origin: IPoint The center point of the circle. + radius: number The radius of the circle. #### Returns Circle Defined in core/paths.ts:219 new Circle(pointA: IPoint , pointB: IPoint ): Circle Class for circle path, created from 2 points. Example: const c = new makerjs.paths.Circle([5, 15], [25, 15]); Copy #### Parameters pointA: IPoint First point on the circle. + pointB: IPoint Second point on the circle. #### Returns Circle Defined in core/paths.ts:232 new Circle(pointA: IPoint , pointB: IPoint , pointC: IPoint ): Circle Class for circle path, created from 3 points. Example: const c = new makerjs.paths.Circle([0, 0], [0, 10], [20, 0]); Copy #### Parameters pointA: IPoint First point on the circle. + pointB: IPoint Second point on the circle. + pointC: IPoint Third point on the circle. #### Returns Circle Defined in core/paths.ts:246","title":"constructor"},{"location":"converted/api/classes/core_paths.Circle/#properties_1","text":"","title":"Properties"},{"location":"converted/api/classes/core_paths.Circle/#origin","text":"origin: IPoint The main point of reference for this path. Implementation of IPathCircle . origin Defined in core/paths.ts:193","title":"origin"},{"location":"converted/api/classes/core_paths.Circle/#radius","text":"radius: number The radius of the circle. Implementation of IPathCircle . radius Defined in core/paths.ts:194","title":"radius"},{"location":"converted/api/classes/core_paths.Circle/#type","text":"type: string The type of the path, e.g. \"line\", \"circle\", or \"arc\". These strings are enumerated in pathType. Implementation of IPathCircle . type Defined in core/paths.ts:192","title":"type"},{"location":"converted/api/classes/core_paths.Circle/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/classes/core_paths.Circle/#on-this-page","text":"Constructors constructor Properties origin radius type Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/classes/core_paths.Line/","text":"Line | Photon Photon Preparing search index... core/paths Line Class Line Class for line path. Implements IPathLine Defined in core/paths.ts:307 Index Constructors constructor Properties end origin type Constructors constructor new Line(points: IPoint []): Line Class for line path, constructed from array of 2 points. #### Parameters points: IPoint [] Array of 2 points. #### Returns Line Defined in core/paths.ts:317 new Line(origin: IPoint , end: IPoint ): Line Class for line path, constructed from 2 points. #### Parameters origin: IPoint The origin point of the line. + end: IPoint The end point of the line. #### Returns Line Defined in core/paths.ts:325 Properties end end: IPoint The end point defining the line. The start point is the origin. Implementation of IPathLine . end Defined in core/paths.ts:310 origin origin: IPoint The main point of reference for this path. Implementation of IPathLine . origin Defined in core/paths.ts:309 type type: string The type of the path, e.g. \"line\", \"circle\", or \"arc\". These strings are enumerated in pathType. Implementation of IPathLine . type Defined in core/paths.ts:308 Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Constructors constructor Properties end origin type Photon Loading... Generated using TypeDoc","title":"Line | Photon"},{"location":"converted/api/classes/core_paths.Line/#class-line","text":"Class for line path.","title":"Class Line"},{"location":"converted/api/classes/core_paths.Line/#implements","text":"IPathLine Defined in core/paths.ts:307","title":"Implements"},{"location":"converted/api/classes/core_paths.Line/#index","text":"","title":"Index"},{"location":"converted/api/classes/core_paths.Line/#constructors","text":"constructor","title":"Constructors"},{"location":"converted/api/classes/core_paths.Line/#properties","text":"end origin type","title":"Properties"},{"location":"converted/api/classes/core_paths.Line/#constructors_1","text":"","title":"Constructors"},{"location":"converted/api/classes/core_paths.Line/#constructor","text":"new Line(points: IPoint []): Line Class for line path, constructed from array of 2 points. #### Parameters points: IPoint [] Array of 2 points. #### Returns Line Defined in core/paths.ts:317 new Line(origin: IPoint , end: IPoint ): Line Class for line path, constructed from 2 points. #### Parameters origin: IPoint The origin point of the line. + end: IPoint The end point of the line. #### Returns Line Defined in core/paths.ts:325","title":"constructor"},{"location":"converted/api/classes/core_paths.Line/#properties_1","text":"","title":"Properties"},{"location":"converted/api/classes/core_paths.Line/#end","text":"end: IPoint The end point defining the line. The start point is the origin. Implementation of IPathLine . end Defined in core/paths.ts:310","title":"end"},{"location":"converted/api/classes/core_paths.Line/#origin","text":"origin: IPoint The main point of reference for this path. Implementation of IPathLine . origin Defined in core/paths.ts:309","title":"origin"},{"location":"converted/api/classes/core_paths.Line/#type","text":"type: string The type of the path, e.g. \"line\", \"circle\", or \"arc\". These strings are enumerated in pathType. Implementation of IPathLine . type Defined in core/paths.ts:308","title":"type"},{"location":"converted/api/classes/core_paths.Line/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/classes/core_paths.Line/#on-this-page","text":"Constructors constructor Properties end origin type Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/classes/core_paths.Parallel/","text":"Parallel | Photon Photon Preparing search index... core/paths Parallel Class Parallel Class for a parallel line path. Param: toLine A line to be parallel to. Param: distance Distance between parallel and original line. Param: nearPoint Any point to determine which side of the line to place the parallel. Implements IPathLine Defined in core/paths.ts:372 Index Constructors constructor Properties end origin type Constructors constructor new Parallel(toLine: IPathLine , distance: number, nearPoint: IPoint ): Parallel #### Parameters toLine: IPathLine distance: number nearPoint: IPoint #### Returns Parallel Defined in core/paths.ts:377 Properties end end: IPoint The end point defining the line. The start point is the origin. Implementation of IPathLine . end Defined in core/paths.ts:375 origin origin: IPoint The main point of reference for this path. Implementation of IPathLine . origin Defined in core/paths.ts:374 type type: string The type of the path, e.g. \"line\", \"circle\", or \"arc\". These strings are enumerated in pathType. Implementation of IPathLine . type Defined in core/paths.ts:373 Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Constructors constructor Properties end origin type Photon Loading... Generated using TypeDoc","title":"Parallel | Photon"},{"location":"converted/api/classes/core_paths.Parallel/#class-parallel","text":"Class for a parallel line path.","title":"Class Parallel"},{"location":"converted/api/classes/core_paths.Parallel/#param-toline","text":"A line to be parallel to.","title":"Param: toLine"},{"location":"converted/api/classes/core_paths.Parallel/#param-distance","text":"Distance between parallel and original line.","title":"Param: distance"},{"location":"converted/api/classes/core_paths.Parallel/#param-nearpoint","text":"Any point to determine which side of the line to place the parallel.","title":"Param: nearPoint"},{"location":"converted/api/classes/core_paths.Parallel/#implements","text":"IPathLine Defined in core/paths.ts:372","title":"Implements"},{"location":"converted/api/classes/core_paths.Parallel/#index","text":"","title":"Index"},{"location":"converted/api/classes/core_paths.Parallel/#constructors","text":"constructor","title":"Constructors"},{"location":"converted/api/classes/core_paths.Parallel/#properties","text":"end origin type","title":"Properties"},{"location":"converted/api/classes/core_paths.Parallel/#constructors_1","text":"","title":"Constructors"},{"location":"converted/api/classes/core_paths.Parallel/#constructor","text":"new Parallel(toLine: IPathLine , distance: number, nearPoint: IPoint ): Parallel #### Parameters toLine: IPathLine distance: number nearPoint: IPoint #### Returns Parallel Defined in core/paths.ts:377","title":"constructor"},{"location":"converted/api/classes/core_paths.Parallel/#properties_1","text":"","title":"Properties"},{"location":"converted/api/classes/core_paths.Parallel/#end","text":"end: IPoint The end point defining the line. The start point is the origin. Implementation of IPathLine . end Defined in core/paths.ts:375","title":"end"},{"location":"converted/api/classes/core_paths.Parallel/#origin","text":"origin: IPoint The main point of reference for this path. Implementation of IPathLine . origin Defined in core/paths.ts:374","title":"origin"},{"location":"converted/api/classes/core_paths.Parallel/#type","text":"type: string The type of the path, e.g. \"line\", \"circle\", or \"arc\". These strings are enumerated in pathType. Implementation of IPathLine . type Defined in core/paths.ts:373","title":"type"},{"location":"converted/api/classes/core_paths.Parallel/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/classes/core_paths.Parallel/#on-this-page","text":"Constructors constructor Properties end origin type Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/classes/core_xml.XmlTag/","text":"XmlTag | Photon Photon Preparing search index... core/xml XmlTag Class XmlTag Class for an XML tag. Defined in core/xml.ts:7 Index Constructors constructor Properties attrs? closingTags? innerText innerTextEscaped name Methods getClosingTag getInnerText getOpeningTag toString escapeString Constructors constructor new XmlTag(name: string, attrs?: IXmlTagAttrs ): XmlTag #### Parameters name: string Optional attrs: IXmlTagAttrs #### Returns XmlTag Defined in core/xml.ts:34 Properties Optional attrs attrs?: IXmlTagAttrs Defined in core/xml.ts:34 Optional closingTags closingTags?: boolean Flag to explicitly close XML tags. Defined in core/xml.ts:15 innerText innerText: string = '' Text between the opening and closing tags. Defined in core/xml.ts:9 innerTextEscaped innerTextEscaped: boolean Boolean to indicate that the innerText has been escaped. Defined in core/xml.ts:12 name name: string Defined in core/xml.ts:34 Methods getClosingTag getClosingTag(): string Get the closing tag. #### Returns string Defined in core/xml.ts:72 getInnerText getInnerText(): string Get the inner text. #### Returns string Defined in core/xml.ts:63 getOpeningTag getOpeningTag(selfClose: boolean): string Get the opening tag. #### Parameters selfClose: boolean #### Returns string Defined in core/xml.ts:38 toString toString(): string Output the entire tag as a string. #### Returns string Defined in core/xml.ts:77 Static escapeString escapeString(value: string): string Escapes certain characters within a string so that it can appear in a tag or its attribute. #### Parameters value: string #### Returns string Defined in core/xml.ts:18 Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Constructors constructor Properties attrs closingTags innerText innerTextEscaped name Methods getClosingTag getInnerText getOpeningTag toString escapeString Photon Loading... Generated using TypeDoc","title":"XmlTag | Photon"},{"location":"converted/api/classes/core_xml.XmlTag/#class-xmltag","text":"Class for an XML tag. Defined in core/xml.ts:7","title":"Class XmlTag"},{"location":"converted/api/classes/core_xml.XmlTag/#index","text":"","title":"Index"},{"location":"converted/api/classes/core_xml.XmlTag/#constructors","text":"constructor","title":"Constructors"},{"location":"converted/api/classes/core_xml.XmlTag/#properties","text":"attrs? closingTags? innerText innerTextEscaped name","title":"Properties"},{"location":"converted/api/classes/core_xml.XmlTag/#methods","text":"getClosingTag getInnerText getOpeningTag toString escapeString","title":"Methods"},{"location":"converted/api/classes/core_xml.XmlTag/#constructors_1","text":"","title":"Constructors"},{"location":"converted/api/classes/core_xml.XmlTag/#constructor","text":"new XmlTag(name: string, attrs?: IXmlTagAttrs ): XmlTag #### Parameters name: string Optional attrs: IXmlTagAttrs #### Returns XmlTag Defined in core/xml.ts:34","title":"constructor"},{"location":"converted/api/classes/core_xml.XmlTag/#properties_1","text":"","title":"Properties"},{"location":"converted/api/classes/core_xml.XmlTag/#optionalattrs","text":"attrs?: IXmlTagAttrs Defined in core/xml.ts:34","title":"Optionalattrs"},{"location":"converted/api/classes/core_xml.XmlTag/#optionalclosingtags","text":"closingTags?: boolean Flag to explicitly close XML tags. Defined in core/xml.ts:15","title":"OptionalclosingTags"},{"location":"converted/api/classes/core_xml.XmlTag/#innertext","text":"innerText: string = '' Text between the opening and closing tags. Defined in core/xml.ts:9","title":"innerText"},{"location":"converted/api/classes/core_xml.XmlTag/#innertextescaped","text":"innerTextEscaped: boolean Boolean to indicate that the innerText has been escaped. Defined in core/xml.ts:12","title":"innerTextEscaped"},{"location":"converted/api/classes/core_xml.XmlTag/#name","text":"name: string Defined in core/xml.ts:34","title":"name"},{"location":"converted/api/classes/core_xml.XmlTag/#methods_1","text":"","title":"Methods"},{"location":"converted/api/classes/core_xml.XmlTag/#getclosingtag","text":"getClosingTag(): string Get the closing tag. #### Returns string Defined in core/xml.ts:72","title":"getClosingTag"},{"location":"converted/api/classes/core_xml.XmlTag/#getinnertext","text":"getInnerText(): string Get the inner text. #### Returns string Defined in core/xml.ts:63","title":"getInnerText"},{"location":"converted/api/classes/core_xml.XmlTag/#getopeningtag","text":"getOpeningTag(selfClose: boolean): string Get the opening tag. #### Parameters selfClose: boolean #### Returns string Defined in core/xml.ts:38","title":"getOpeningTag"},{"location":"converted/api/classes/core_xml.XmlTag/#tostring","text":"toString(): string Output the entire tag as a string. #### Returns string Defined in core/xml.ts:77","title":"toString"},{"location":"converted/api/classes/core_xml.XmlTag/#staticescapestring","text":"escapeString(value: string): string Escapes certain characters within a string so that it can appear in a tag or its attribute. #### Parameters value: string #### Returns string Defined in core/xml.ts:18","title":"StaticescapeString"},{"location":"converted/api/classes/core_xml.XmlTag/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/classes/core_xml.XmlTag/#on-this-page","text":"Constructors constructor Properties attrs closingTags innerText innerTextEscaped name Methods getClosingTag getInnerText getOpeningTag toString escapeString Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/classes/models_Belt.Belt/","text":"Belt | Photon Photon Preparing search index... models/Belt Belt Class Belt A model is a composite object which may contain a map of paths, or a map of models recursively. Implements IModel Defined in models/Belt.ts:7 Index Constructors constructor Properties paths Constructors constructor new Belt(leftRadius: number, distance: number, rightRadius: number): Belt #### Parameters leftRadius: number distance: number rightRadius: number #### Returns Belt Defined in models/Belt.ts:10 Properties paths paths: IPathMap = {} Optional map of path objects in this model. Implementation of IModel . paths Defined in models/Belt.ts:8 Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Constructors constructor Properties paths Photon Loading... Generated using TypeDoc","title":"Belt | Photon"},{"location":"converted/api/classes/models_Belt.Belt/#class-belt","text":"A model is a composite object which may contain a map of paths, or a map of models recursively.","title":"Class Belt"},{"location":"converted/api/classes/models_Belt.Belt/#implements","text":"IModel Defined in models/Belt.ts:7","title":"Implements"},{"location":"converted/api/classes/models_Belt.Belt/#index","text":"","title":"Index"},{"location":"converted/api/classes/models_Belt.Belt/#constructors","text":"constructor","title":"Constructors"},{"location":"converted/api/classes/models_Belt.Belt/#properties","text":"paths","title":"Properties"},{"location":"converted/api/classes/models_Belt.Belt/#constructors_1","text":"","title":"Constructors"},{"location":"converted/api/classes/models_Belt.Belt/#constructor","text":"new Belt(leftRadius: number, distance: number, rightRadius: number): Belt #### Parameters leftRadius: number distance: number rightRadius: number #### Returns Belt Defined in models/Belt.ts:10","title":"constructor"},{"location":"converted/api/classes/models_Belt.Belt/#properties_1","text":"","title":"Properties"},{"location":"converted/api/classes/models_Belt.Belt/#paths","text":"paths: IPathMap = {} Optional map of path objects in this model. Implementation of IModel . paths Defined in models/Belt.ts:8","title":"paths"},{"location":"converted/api/classes/models_Belt.Belt/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/classes/models_Belt.Belt/#on-this-page","text":"Constructors constructor Properties paths Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/classes/models_BezierCurve-esm.BezierCurve/","text":"BezierCurve | Photon Photon Preparing search index... models/BezierCurve-esm BezierCurve Class BezierCurve A model is a composite object which may contain a map of paths, or a map of models recursively. Implements IModel Defined in models/BezierCurve-esm.ts:376 Index Constructors constructor Properties accuracy models origin paths seed type typeName Methods computeLength computePoint getBezierSeeds Constructors constructor new BezierCurve(points: IPoint [], accuracy?: number): BezierCurve #### Parameters points: IPoint [] Optional accuracy: number #### Returns BezierCurve Defined in models/BezierCurve-esm.ts:384 new BezierCurve(seed: IPathBezierSeed , accuracy?: number): BezierCurve #### Parameters seed: IPathBezierSeed Optional accuracy: number #### Returns BezierCurve Defined in models/BezierCurve-esm.ts:385 new BezierCurve( origin: IPoint , control: IPoint , end: IPoint , accuracy?: number, ): BezierCurve #### Parameters origin: IPoint control: IPoint end: IPoint Optional accuracy: number #### Returns BezierCurve Defined in models/BezierCurve-esm.ts:386 new BezierCurve( origin: IPoint , controls: IPoint [], end: IPoint , accuracy?: number, ): BezierCurve #### Parameters origin: IPoint controls: IPoint [] end: IPoint Optional accuracy: number #### Returns BezierCurve Defined in models/BezierCurve-esm.ts:387 new BezierCurve( origin: IPoint , control1: IPoint , control2: IPoint , end: IPoint , accuracy?: number, ): BezierCurve #### Parameters origin: IPoint control1: IPoint control2: IPoint end: IPoint Optional accuracy: number #### Returns BezierCurve Defined in models/BezierCurve-esm.ts:388 Properties accuracy accuracy: number Defined in models/BezierCurve-esm.ts:382 models models: IModelMap Optional map of models within this model. Implementation of IModel . models Defined in models/BezierCurve-esm.ts:377 origin origin: IPoint Optional origin location of this model. Implementation of IModel . origin Defined in models/BezierCurve-esm.ts:379 paths paths: IPathMap Optional map of path objects in this model. Implementation of IModel . paths Defined in models/BezierCurve-esm.ts:378 seed seed: IPathBezierSeed Defined in models/BezierCurve-esm.ts:381 type type: string = BezierCurve.typeName A model may want to specify its type, but this value is not employed yet. Implementation of IModel . type Defined in models/BezierCurve-esm.ts:380 Static typeName typeName: string = 'BezierCurve' Defined in models/BezierCurve-esm.ts:477 Methods Static computeLength computeLength(seed: IPathBezierSeed ): number #### Parameters seed: IPathBezierSeed #### Returns number Defined in models/BezierCurve-esm.ts:537 Static computePoint computePoint(seed: IPathBezierSeed , t: number): IPoint #### Parameters seed: IPathBezierSeed t: number #### Returns IPoint Defined in models/BezierCurve-esm.ts:542 Static getBezierSeeds getBezierSeeds( curve: BezierCurve, options?: IFindChainsOptions , ): IPath [] | { [layer: string]: IPath [] } #### Parameters curve: BezierCurve options: IFindChainsOptions = {} #### Returns IPath [] | { [layer: string]: IPath [] } Defined in models/BezierCurve-esm.ts:479 Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Constructors constructor Properties accuracy models origin paths seed type typeName Methods computeLength computePoint getBezierSeeds Photon Loading... Generated using TypeDoc","title":"BezierCurve | Photon"},{"location":"converted/api/classes/models_BezierCurve-esm.BezierCurve/#class-beziercurve","text":"A model is a composite object which may contain a map of paths, or a map of models recursively.","title":"Class BezierCurve"},{"location":"converted/api/classes/models_BezierCurve-esm.BezierCurve/#implements","text":"IModel Defined in models/BezierCurve-esm.ts:376","title":"Implements"},{"location":"converted/api/classes/models_BezierCurve-esm.BezierCurve/#index","text":"","title":"Index"},{"location":"converted/api/classes/models_BezierCurve-esm.BezierCurve/#constructors","text":"constructor","title":"Constructors"},{"location":"converted/api/classes/models_BezierCurve-esm.BezierCurve/#properties","text":"accuracy models origin paths seed type typeName","title":"Properties"},{"location":"converted/api/classes/models_BezierCurve-esm.BezierCurve/#methods","text":"computeLength computePoint getBezierSeeds","title":"Methods"},{"location":"converted/api/classes/models_BezierCurve-esm.BezierCurve/#constructors_1","text":"","title":"Constructors"},{"location":"converted/api/classes/models_BezierCurve-esm.BezierCurve/#constructor","text":"new BezierCurve(points: IPoint [], accuracy?: number): BezierCurve #### Parameters points: IPoint [] Optional accuracy: number #### Returns BezierCurve Defined in models/BezierCurve-esm.ts:384 new BezierCurve(seed: IPathBezierSeed , accuracy?: number): BezierCurve #### Parameters seed: IPathBezierSeed Optional accuracy: number #### Returns BezierCurve Defined in models/BezierCurve-esm.ts:385 new BezierCurve( origin: IPoint , control: IPoint , end: IPoint , accuracy?: number, ): BezierCurve #### Parameters origin: IPoint control: IPoint end: IPoint Optional accuracy: number #### Returns BezierCurve Defined in models/BezierCurve-esm.ts:386 new BezierCurve( origin: IPoint , controls: IPoint [], end: IPoint , accuracy?: number, ): BezierCurve #### Parameters origin: IPoint controls: IPoint [] end: IPoint Optional accuracy: number #### Returns BezierCurve Defined in models/BezierCurve-esm.ts:387 new BezierCurve( origin: IPoint , control1: IPoint , control2: IPoint , end: IPoint , accuracy?: number, ): BezierCurve #### Parameters origin: IPoint control1: IPoint control2: IPoint end: IPoint Optional accuracy: number #### Returns BezierCurve Defined in models/BezierCurve-esm.ts:388","title":"constructor"},{"location":"converted/api/classes/models_BezierCurve-esm.BezierCurve/#properties_1","text":"","title":"Properties"},{"location":"converted/api/classes/models_BezierCurve-esm.BezierCurve/#accuracy","text":"accuracy: number Defined in models/BezierCurve-esm.ts:382","title":"accuracy"},{"location":"converted/api/classes/models_BezierCurve-esm.BezierCurve/#models","text":"models: IModelMap Optional map of models within this model. Implementation of IModel . models Defined in models/BezierCurve-esm.ts:377","title":"models"},{"location":"converted/api/classes/models_BezierCurve-esm.BezierCurve/#origin","text":"origin: IPoint Optional origin location of this model. Implementation of IModel . origin Defined in models/BezierCurve-esm.ts:379","title":"origin"},{"location":"converted/api/classes/models_BezierCurve-esm.BezierCurve/#paths","text":"paths: IPathMap Optional map of path objects in this model. Implementation of IModel . paths Defined in models/BezierCurve-esm.ts:378","title":"paths"},{"location":"converted/api/classes/models_BezierCurve-esm.BezierCurve/#seed","text":"seed: IPathBezierSeed Defined in models/BezierCurve-esm.ts:381","title":"seed"},{"location":"converted/api/classes/models_BezierCurve-esm.BezierCurve/#type","text":"type: string = BezierCurve.typeName A model may want to specify its type, but this value is not employed yet. Implementation of IModel . type Defined in models/BezierCurve-esm.ts:380","title":"type"},{"location":"converted/api/classes/models_BezierCurve-esm.BezierCurve/#statictypename","text":"typeName: string = 'BezierCurve' Defined in models/BezierCurve-esm.ts:477","title":"StatictypeName"},{"location":"converted/api/classes/models_BezierCurve-esm.BezierCurve/#methods_1","text":"","title":"Methods"},{"location":"converted/api/classes/models_BezierCurve-esm.BezierCurve/#staticcomputelength","text":"computeLength(seed: IPathBezierSeed ): number #### Parameters seed: IPathBezierSeed #### Returns number Defined in models/BezierCurve-esm.ts:537","title":"StaticcomputeLength"},{"location":"converted/api/classes/models_BezierCurve-esm.BezierCurve/#staticcomputepoint","text":"computePoint(seed: IPathBezierSeed , t: number): IPoint #### Parameters seed: IPathBezierSeed t: number #### Returns IPoint Defined in models/BezierCurve-esm.ts:542","title":"StaticcomputePoint"},{"location":"converted/api/classes/models_BezierCurve-esm.BezierCurve/#staticgetbezierseeds","text":"getBezierSeeds( curve: BezierCurve, options?: IFindChainsOptions , ): IPath [] | { [layer: string]: IPath [] } #### Parameters curve: BezierCurve options: IFindChainsOptions = {} #### Returns IPath [] | { [layer: string]: IPath [] } Defined in models/BezierCurve-esm.ts:479","title":"StaticgetBezierSeeds"},{"location":"converted/api/classes/models_BezierCurve-esm.BezierCurve/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/classes/models_BezierCurve-esm.BezierCurve/#on-this-page","text":"Constructors constructor Properties accuracy models origin paths seed type typeName Methods computeLength computePoint getBezierSeeds Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/classes/models_BezierCurve-esm.BezierSeed/","text":"BezierSeed | Photon Photon Preparing search index... models/BezierCurve-esm BezierSeed Class BezierSeed Class for bezier seed. Implements IPathBezierSeed Defined in models/BezierCurve-esm.ts:296 Index Constructors constructor Properties controls end origin type Constructors constructor new BezierSeed(points: IPoint []): BezierSeed Class for bezier seed, created from point array. #### Parameters points: IPoint [] Array of points, with the first being the origin, and the last being the end, and points between used as control points. #### Returns BezierSeed Defined in models/BezierCurve-esm.ts:307 new BezierSeed(origin: IPoint , control: IPoint , end: IPoint ): BezierSeed Class for quadratic bezier seed. #### Parameters origin: IPoint The origin point of the curve. + control: IPoint The control point of the curve. + end: IPoint The end point of the curve. #### Returns BezierSeed Defined in models/BezierCurve-esm.ts:316 new BezierSeed(origin: IPoint , controls: IPoint [], end: IPoint ): BezierSeed Class for cubic bezier seed. #### Parameters origin: IPoint The origin point of the curve. + controls: IPoint [] The control points of the curve. + end: IPoint The end point of the curve. #### Returns BezierSeed Defined in models/BezierCurve-esm.ts:325 new BezierSeed( origin: IPoint , control1: IPoint , control2: IPoint , end: IPoint , ): BezierSeed Class for cubic bezier seed. #### Parameters origin: IPoint The origin point of the curve. + control1: IPoint The control point of the curve origin. + control2: IPoint The control point of the curve end. + end: IPoint The end point of the curve. #### Returns BezierSeed Defined in models/BezierCurve-esm.ts:335 Properties controls controls: IPoint [] The bezier control points. One point for quadratic, 2 points for cubic. Implementation of IPathBezierSeed . controls Defined in models/BezierCurve-esm.ts:300 end end: IPoint The end point defining the line. The start point is the origin. Implementation of IPathBezierSeed . end Defined in models/BezierCurve-esm.ts:299 origin origin: IPoint The main point of reference for this path. Implementation of IPathBezierSeed . origin Defined in models/BezierCurve-esm.ts:298 type type: string The type of the path, e.g. \"line\", \"circle\", or \"arc\". These strings are enumerated in pathType. Implementation of IPathBezierSeed . type Defined in models/BezierCurve-esm.ts:297 Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Constructors constructor Properties controls end origin type Photon Loading... Generated using TypeDoc","title":"BezierSeed | Photon"},{"location":"converted/api/classes/models_BezierCurve-esm.BezierSeed/#class-bezierseed","text":"Class for bezier seed.","title":"Class BezierSeed"},{"location":"converted/api/classes/models_BezierCurve-esm.BezierSeed/#implements","text":"IPathBezierSeed Defined in models/BezierCurve-esm.ts:296","title":"Implements"},{"location":"converted/api/classes/models_BezierCurve-esm.BezierSeed/#index","text":"","title":"Index"},{"location":"converted/api/classes/models_BezierCurve-esm.BezierSeed/#constructors","text":"constructor","title":"Constructors"},{"location":"converted/api/classes/models_BezierCurve-esm.BezierSeed/#properties","text":"controls end origin type","title":"Properties"},{"location":"converted/api/classes/models_BezierCurve-esm.BezierSeed/#constructors_1","text":"","title":"Constructors"},{"location":"converted/api/classes/models_BezierCurve-esm.BezierSeed/#constructor","text":"new BezierSeed(points: IPoint []): BezierSeed Class for bezier seed, created from point array. #### Parameters points: IPoint [] Array of points, with the first being the origin, and the last being the end, and points between used as control points. #### Returns BezierSeed Defined in models/BezierCurve-esm.ts:307 new BezierSeed(origin: IPoint , control: IPoint , end: IPoint ): BezierSeed Class for quadratic bezier seed. #### Parameters origin: IPoint The origin point of the curve. + control: IPoint The control point of the curve. + end: IPoint The end point of the curve. #### Returns BezierSeed Defined in models/BezierCurve-esm.ts:316 new BezierSeed(origin: IPoint , controls: IPoint [], end: IPoint ): BezierSeed Class for cubic bezier seed. #### Parameters origin: IPoint The origin point of the curve. + controls: IPoint [] The control points of the curve. + end: IPoint The end point of the curve. #### Returns BezierSeed Defined in models/BezierCurve-esm.ts:325 new BezierSeed( origin: IPoint , control1: IPoint , control2: IPoint , end: IPoint , ): BezierSeed Class for cubic bezier seed. #### Parameters origin: IPoint The origin point of the curve. + control1: IPoint The control point of the curve origin. + control2: IPoint The control point of the curve end. + end: IPoint The end point of the curve. #### Returns BezierSeed Defined in models/BezierCurve-esm.ts:335","title":"constructor"},{"location":"converted/api/classes/models_BezierCurve-esm.BezierSeed/#properties_1","text":"","title":"Properties"},{"location":"converted/api/classes/models_BezierCurve-esm.BezierSeed/#controls","text":"controls: IPoint [] The bezier control points. One point for quadratic, 2 points for cubic. Implementation of IPathBezierSeed . controls Defined in models/BezierCurve-esm.ts:300","title":"controls"},{"location":"converted/api/classes/models_BezierCurve-esm.BezierSeed/#end","text":"end: IPoint The end point defining the line. The start point is the origin. Implementation of IPathBezierSeed . end Defined in models/BezierCurve-esm.ts:299","title":"end"},{"location":"converted/api/classes/models_BezierCurve-esm.BezierSeed/#origin","text":"origin: IPoint The main point of reference for this path. Implementation of IPathBezierSeed . origin Defined in models/BezierCurve-esm.ts:298","title":"origin"},{"location":"converted/api/classes/models_BezierCurve-esm.BezierSeed/#type","text":"type: string The type of the path, e.g. \"line\", \"circle\", or \"arc\". These strings are enumerated in pathType. Implementation of IPathBezierSeed . type Defined in models/BezierCurve-esm.ts:297","title":"type"},{"location":"converted/api/classes/models_BezierCurve-esm.BezierSeed/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/classes/models_BezierCurve-esm.BezierSeed/#on-this-page","text":"Constructors constructor Properties controls end origin type Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/classes/models_BoltCircle.BoltCircle/","text":"BoltCircle | Photon Photon Preparing search index... models/BoltCircle BoltCircle Class BoltCircle A model is a composite object which may contain a map of paths, or a map of models recursively. Implements IModel Defined in models/BoltCircle.ts:6 Index Constructors constructor Properties paths Constructors constructor new BoltCircle( boltRadius: number, holeRadius: number, boltCount: number, firstBoltAngleInDegrees?: number, ): BoltCircle #### Parameters boltRadius: number holeRadius: number boltCount: number firstBoltAngleInDegrees: number = 0 #### Returns BoltCircle Defined in models/BoltCircle.ts:9 Properties paths paths: IPathMap = {} Optional map of path objects in this model. Implementation of IModel . paths Defined in models/BoltCircle.ts:7 Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Constructors constructor Properties paths Photon Loading... Generated using TypeDoc","title":"BoltCircle | Photon"},{"location":"converted/api/classes/models_BoltCircle.BoltCircle/#class-boltcircle","text":"A model is a composite object which may contain a map of paths, or a map of models recursively.","title":"Class BoltCircle"},{"location":"converted/api/classes/models_BoltCircle.BoltCircle/#implements","text":"IModel Defined in models/BoltCircle.ts:6","title":"Implements"},{"location":"converted/api/classes/models_BoltCircle.BoltCircle/#index","text":"","title":"Index"},{"location":"converted/api/classes/models_BoltCircle.BoltCircle/#constructors","text":"constructor","title":"Constructors"},{"location":"converted/api/classes/models_BoltCircle.BoltCircle/#properties","text":"paths","title":"Properties"},{"location":"converted/api/classes/models_BoltCircle.BoltCircle/#constructors_1","text":"","title":"Constructors"},{"location":"converted/api/classes/models_BoltCircle.BoltCircle/#constructor","text":"new BoltCircle( boltRadius: number, holeRadius: number, boltCount: number, firstBoltAngleInDegrees?: number, ): BoltCircle #### Parameters boltRadius: number holeRadius: number boltCount: number firstBoltAngleInDegrees: number = 0 #### Returns BoltCircle Defined in models/BoltCircle.ts:9","title":"constructor"},{"location":"converted/api/classes/models_BoltCircle.BoltCircle/#properties_1","text":"","title":"Properties"},{"location":"converted/api/classes/models_BoltCircle.BoltCircle/#paths","text":"paths: IPathMap = {} Optional map of path objects in this model. Implementation of IModel . paths Defined in models/BoltCircle.ts:7","title":"paths"},{"location":"converted/api/classes/models_BoltCircle.BoltCircle/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/classes/models_BoltCircle.BoltCircle/#on-this-page","text":"Constructors constructor Properties paths Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/classes/models_BoltRectangle.BoltRectangle/","text":"BoltRectangle | Photon Photon Preparing search index... models/BoltRectangle BoltRectangle Class BoltRectangle A model is a composite object which may contain a map of paths, or a map of models recursively. Implements IModel Defined in models/BoltRectangle.ts:5 Index Constructors constructor Properties paths Constructors constructor new BoltRectangle( width: number, height: number, holeRadius: number, ): BoltRectangle #### Parameters width: number height: number holeRadius: number #### Returns BoltRectangle Defined in models/BoltRectangle.ts:8 Properties paths paths: IPathMap = {} Optional map of path objects in this model. Implementation of IModel . paths Defined in models/BoltRectangle.ts:6 Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Constructors constructor Properties paths Photon Loading... Generated using TypeDoc","title":"BoltRectangle | Photon"},{"location":"converted/api/classes/models_BoltRectangle.BoltRectangle/#class-boltrectangle","text":"A model is a composite object which may contain a map of paths, or a map of models recursively.","title":"Class BoltRectangle"},{"location":"converted/api/classes/models_BoltRectangle.BoltRectangle/#implements","text":"IModel Defined in models/BoltRectangle.ts:5","title":"Implements"},{"location":"converted/api/classes/models_BoltRectangle.BoltRectangle/#index","text":"","title":"Index"},{"location":"converted/api/classes/models_BoltRectangle.BoltRectangle/#constructors","text":"constructor","title":"Constructors"},{"location":"converted/api/classes/models_BoltRectangle.BoltRectangle/#properties","text":"paths","title":"Properties"},{"location":"converted/api/classes/models_BoltRectangle.BoltRectangle/#constructors_1","text":"","title":"Constructors"},{"location":"converted/api/classes/models_BoltRectangle.BoltRectangle/#constructor","text":"new BoltRectangle( width: number, height: number, holeRadius: number, ): BoltRectangle #### Parameters width: number height: number holeRadius: number #### Returns BoltRectangle Defined in models/BoltRectangle.ts:8","title":"constructor"},{"location":"converted/api/classes/models_BoltRectangle.BoltRectangle/#properties_1","text":"","title":"Properties"},{"location":"converted/api/classes/models_BoltRectangle.BoltRectangle/#paths","text":"paths: IPathMap = {} Optional map of path objects in this model. Implementation of IModel . paths Defined in models/BoltRectangle.ts:6","title":"paths"},{"location":"converted/api/classes/models_BoltRectangle.BoltRectangle/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/classes/models_BoltRectangle.BoltRectangle/#on-this-page","text":"Constructors constructor Properties paths Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/classes/models_ConnectTheDots.ConnectTheDots/","text":"ConnectTheDots | Photon Photon Preparing search index... models/ConnectTheDots ConnectTheDots Class ConnectTheDots A model is a composite object which may contain a map of paths, or a map of models recursively. Implements IModel Defined in models/ConnectTheDots.ts:30 Index Constructors constructor Properties paths Constructors constructor new ConnectTheDots(numericList: string): ConnectTheDots Create a model by connecting points designated in a string. The model will be 'closed' - i.e. the last point will connect to the first point. Example: const c = new makerjs.models.ConnectTheDots('-10 0 10 0 0 20'); // 3 coordinates to form a triangle Copy #### Parameters numericList: string String containing a list of numbers which can be delimited by spaces, commas, or anything non-numeric (Note: exponential notation is allowed). #### Returns ConnectTheDots Defined in models/ConnectTheDots.ts:43 new ConnectTheDots(isClosed: boolean, numericList: string): ConnectTheDots Create a model by connecting points designated in a string. The model may be closed, or left open. Example: const c = new makerjs.models.ConnectTheDots(false, '-10 0 10 0 0 20'); // 3 coordinates to form a polyline Copy #### Parameters isClosed: boolean Flag to specify if last point should connect to the first point. + numericList: string String containing a list of numbers which can be delimited by spaces, commas, or anything non-numeric (Note: exponential notation is allowed). #### Returns ConnectTheDots Defined in models/ConnectTheDots.ts:56 new ConnectTheDots(coords: number[]): ConnectTheDots Create a model by connecting points designated in a numeric array. The model will be 'closed' - i.e. the last point will connect to the first point. Example: const c = new makerjs.models.ConnectTheDots([-10, 0, 10, 0, 0, 20]); // 3 coordinates to form a triangle Copy #### Parameters coords: number[] Array of coordinates. #### Returns ConnectTheDots Defined in models/ConnectTheDots.ts:68 new ConnectTheDots(isClosed: boolean, coords: number[]): ConnectTheDots Create a model by connecting points designated in a numeric array. The model may be closed, or left open. Example: const c = new makerjs.models.ConnectTheDots(false, [-10, 0, 10, 0, 0, 20]); // 3 coordinates to form a polyline Copy #### Parameters isClosed: boolean Flag to specify if last point should connect to the first point. + coords: number[] Array of coordinates. #### Returns ConnectTheDots Defined in models/ConnectTheDots.ts:81 new ConnectTheDots(isClosed: boolean, points: IPoint []): ConnectTheDots Create a model by connecting points designated in an array of points. The model may be closed, or left open. Example: const c = new makerjs.models.ConnectTheDots(false, [[-10, 0], [10, 0], [0, 20]]); // 3 coordinates left open Copy #### Parameters isClosed: boolean Flag to specify if last point should connect to the first point. + points: IPoint [] Array of IPoints. #### Returns ConnectTheDots Defined in models/ConnectTheDots.ts:94 Properties paths paths: IPathMap = {} Optional map of path objects in this model. Implementation of IModel . paths Defined in models/ConnectTheDots.ts:31 Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Constructors constructor Properties paths Photon Loading... Generated using TypeDoc","title":"ConnectTheDots | Photon"},{"location":"converted/api/classes/models_ConnectTheDots.ConnectTheDots/#class-connectthedots","text":"A model is a composite object which may contain a map of paths, or a map of models recursively.","title":"Class ConnectTheDots"},{"location":"converted/api/classes/models_ConnectTheDots.ConnectTheDots/#implements","text":"IModel Defined in models/ConnectTheDots.ts:30","title":"Implements"},{"location":"converted/api/classes/models_ConnectTheDots.ConnectTheDots/#index","text":"","title":"Index"},{"location":"converted/api/classes/models_ConnectTheDots.ConnectTheDots/#constructors","text":"constructor","title":"Constructors"},{"location":"converted/api/classes/models_ConnectTheDots.ConnectTheDots/#properties","text":"paths","title":"Properties"},{"location":"converted/api/classes/models_ConnectTheDots.ConnectTheDots/#constructors_1","text":"","title":"Constructors"},{"location":"converted/api/classes/models_ConnectTheDots.ConnectTheDots/#constructor","text":"new ConnectTheDots(numericList: string): ConnectTheDots Create a model by connecting points designated in a string. The model will be 'closed' - i.e. the last point will connect to the first point. Example: const c = new makerjs.models.ConnectTheDots('-10 0 10 0 0 20'); // 3 coordinates to form a triangle Copy #### Parameters numericList: string String containing a list of numbers which can be delimited by spaces, commas, or anything non-numeric (Note: exponential notation is allowed). #### Returns ConnectTheDots Defined in models/ConnectTheDots.ts:43 new ConnectTheDots(isClosed: boolean, numericList: string): ConnectTheDots Create a model by connecting points designated in a string. The model may be closed, or left open. Example: const c = new makerjs.models.ConnectTheDots(false, '-10 0 10 0 0 20'); // 3 coordinates to form a polyline Copy #### Parameters isClosed: boolean Flag to specify if last point should connect to the first point. + numericList: string String containing a list of numbers which can be delimited by spaces, commas, or anything non-numeric (Note: exponential notation is allowed). #### Returns ConnectTheDots Defined in models/ConnectTheDots.ts:56 new ConnectTheDots(coords: number[]): ConnectTheDots Create a model by connecting points designated in a numeric array. The model will be 'closed' - i.e. the last point will connect to the first point. Example: const c = new makerjs.models.ConnectTheDots([-10, 0, 10, 0, 0, 20]); // 3 coordinates to form a triangle Copy #### Parameters coords: number[] Array of coordinates. #### Returns ConnectTheDots Defined in models/ConnectTheDots.ts:68 new ConnectTheDots(isClosed: boolean, coords: number[]): ConnectTheDots Create a model by connecting points designated in a numeric array. The model may be closed, or left open. Example: const c = new makerjs.models.ConnectTheDots(false, [-10, 0, 10, 0, 0, 20]); // 3 coordinates to form a polyline Copy #### Parameters isClosed: boolean Flag to specify if last point should connect to the first point. + coords: number[] Array of coordinates. #### Returns ConnectTheDots Defined in models/ConnectTheDots.ts:81 new ConnectTheDots(isClosed: boolean, points: IPoint []): ConnectTheDots Create a model by connecting points designated in an array of points. The model may be closed, or left open. Example: const c = new makerjs.models.ConnectTheDots(false, [[-10, 0], [10, 0], [0, 20]]); // 3 coordinates left open Copy #### Parameters isClosed: boolean Flag to specify if last point should connect to the first point. + points: IPoint [] Array of IPoints. #### Returns ConnectTheDots Defined in models/ConnectTheDots.ts:94","title":"constructor"},{"location":"converted/api/classes/models_ConnectTheDots.ConnectTheDots/#properties_1","text":"","title":"Properties"},{"location":"converted/api/classes/models_ConnectTheDots.ConnectTheDots/#paths","text":"paths: IPathMap = {} Optional map of path objects in this model. Implementation of IModel . paths Defined in models/ConnectTheDots.ts:31","title":"paths"},{"location":"converted/api/classes/models_ConnectTheDots.ConnectTheDots/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/classes/models_ConnectTheDots.ConnectTheDots/#on-this-page","text":"Constructors constructor Properties paths Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/classes/models_Dogbone.Dogbone/","text":"Dogbone | Photon Photon Preparing search index... models/Dogbone Dogbone Class Dogbone A model is a composite object which may contain a map of paths, or a map of models recursively. Implements IModel Defined in models/Dogbone.ts:5 Index Constructors constructor Properties paths Constructors constructor new Dogbone( width: number, height: number, radius: number, style?: number, bottomless?: boolean, ): Dogbone Create a dogbone from width, height, corner radius, style, and bottomless flag. #### Parameters width: number height: number radius: number style: number = 0 bottomless: boolean = false #### Returns Dogbone Defined in models/Dogbone.ts:9 Properties paths paths: IPathMap = {} Optional map of path objects in this model. Implementation of IModel . paths Defined in models/Dogbone.ts:6 Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Constructors constructor Properties paths Photon Loading... Generated using TypeDoc","title":"Dogbone | Photon"},{"location":"converted/api/classes/models_Dogbone.Dogbone/#class-dogbone","text":"A model is a composite object which may contain a map of paths, or a map of models recursively.","title":"Class Dogbone"},{"location":"converted/api/classes/models_Dogbone.Dogbone/#implements","text":"IModel Defined in models/Dogbone.ts:5","title":"Implements"},{"location":"converted/api/classes/models_Dogbone.Dogbone/#index","text":"","title":"Index"},{"location":"converted/api/classes/models_Dogbone.Dogbone/#constructors","text":"constructor","title":"Constructors"},{"location":"converted/api/classes/models_Dogbone.Dogbone/#properties","text":"paths","title":"Properties"},{"location":"converted/api/classes/models_Dogbone.Dogbone/#constructors_1","text":"","title":"Constructors"},{"location":"converted/api/classes/models_Dogbone.Dogbone/#constructor","text":"new Dogbone( width: number, height: number, radius: number, style?: number, bottomless?: boolean, ): Dogbone Create a dogbone from width, height, corner radius, style, and bottomless flag. #### Parameters width: number height: number radius: number style: number = 0 bottomless: boolean = false #### Returns Dogbone Defined in models/Dogbone.ts:9","title":"constructor"},{"location":"converted/api/classes/models_Dogbone.Dogbone/#properties_1","text":"","title":"Properties"},{"location":"converted/api/classes/models_Dogbone.Dogbone/#paths","text":"paths: IPathMap = {} Optional map of path objects in this model. Implementation of IModel . paths Defined in models/Dogbone.ts:6","title":"paths"},{"location":"converted/api/classes/models_Dogbone.Dogbone/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/classes/models_Dogbone.Dogbone/#on-this-page","text":"Constructors constructor Properties paths Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/classes/models_Dome.Dome/","text":"Dome | Photon Photon Preparing search index... models/Dome Dome Class Dome A model is a composite object which may contain a map of paths, or a map of models recursively. Implements IModel Defined in models/Dome.ts:5 Index Constructors constructor Properties paths Constructors constructor new Dome( width: number, height: number, radius?: number, bottomless?: boolean, ): Dome #### Parameters width: number height: number Optional radius: number Optional bottomless: boolean #### Returns Dome Defined in models/Dome.ts:8 Properties paths paths: IPathMap = {} Optional map of path objects in this model. Implementation of IModel . paths Defined in models/Dome.ts:6 Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Constructors constructor Properties paths Photon Loading... Generated using TypeDoc","title":"Dome | Photon"},{"location":"converted/api/classes/models_Dome.Dome/#class-dome","text":"A model is a composite object which may contain a map of paths, or a map of models recursively.","title":"Class Dome"},{"location":"converted/api/classes/models_Dome.Dome/#implements","text":"IModel Defined in models/Dome.ts:5","title":"Implements"},{"location":"converted/api/classes/models_Dome.Dome/#index","text":"","title":"Index"},{"location":"converted/api/classes/models_Dome.Dome/#constructors","text":"constructor","title":"Constructors"},{"location":"converted/api/classes/models_Dome.Dome/#properties","text":"paths","title":"Properties"},{"location":"converted/api/classes/models_Dome.Dome/#constructors_1","text":"","title":"Constructors"},{"location":"converted/api/classes/models_Dome.Dome/#constructor","text":"new Dome( width: number, height: number, radius?: number, bottomless?: boolean, ): Dome #### Parameters width: number height: number Optional radius: number Optional bottomless: boolean #### Returns Dome Defined in models/Dome.ts:8","title":"constructor"},{"location":"converted/api/classes/models_Dome.Dome/#properties_1","text":"","title":"Properties"},{"location":"converted/api/classes/models_Dome.Dome/#paths","text":"paths: IPathMap = {} Optional map of path objects in this model. Implementation of IModel . paths Defined in models/Dome.ts:6","title":"paths"},{"location":"converted/api/classes/models_Dome.Dome/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/classes/models_Dome.Dome/#on-this-page","text":"Constructors constructor Properties paths Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/classes/models_Ellipse.Ellipse/","text":"Ellipse | Photon Photon Preparing search index... models/Ellipse Ellipse Class Ellipse A model is a composite object which may contain a map of paths, or a map of models recursively. Implements IModel Defined in models/Ellipse.ts:65 Index Constructors constructor Properties models origin Constructors constructor new Ellipse(radiusX: number, radiusY: number, accuracy?: number): Ellipse Class for Ellipse created with 2 radii. #### Parameters radiusX: number The x radius of the ellipse. + radiusY: number The y radius of the ellipse. + Optional accuracy: number Optional accuracy of the underlying BezierCurve. #### Returns Ellipse Defined in models/Ellipse.ts:77 new Ellipse( origin: IPoint , radiusX: number, radiusY: number, accuracy?: number, ): Ellipse Class for Ellipse created at a specific origin and 2 radii. #### Parameters origin: IPoint The center of the ellipse. + radiusX: number The x radius of the ellipse. + radiusY: number The y radius of the ellipse. + Optional accuracy: number Optional accuracy of the underlying BezierCurve. #### Returns Ellipse Defined in models/Ellipse.ts:87 new Ellipse( cx: number, cy: number, rx: number, ry: number, accuracy?: number, ): Ellipse Class for Ellipse created at a specific x, y and 2 radii. #### Parameters cx: number The x coordinate of the center of the ellipse. + cy: number The y coordinate of the center of the ellipse. + rx: number + ry: number + Optional accuracy: number Optional accuracy of the underlying BezierCurve. #### Returns Ellipse Defined in models/Ellipse.ts:98 Properties models models: IModelMap = {} Optional map of models within this model. Implementation of IModel . models Defined in models/Ellipse.ts:67 origin origin: IPoint Optional origin location of this model. Implementation of IModel . origin Defined in models/Ellipse.ts:68 Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Constructors constructor Properties models origin Photon Loading... Generated using TypeDoc","title":"Ellipse | Photon"},{"location":"converted/api/classes/models_Ellipse.Ellipse/#class-ellipse","text":"A model is a composite object which may contain a map of paths, or a map of models recursively.","title":"Class Ellipse"},{"location":"converted/api/classes/models_Ellipse.Ellipse/#implements","text":"IModel Defined in models/Ellipse.ts:65","title":"Implements"},{"location":"converted/api/classes/models_Ellipse.Ellipse/#index","text":"","title":"Index"},{"location":"converted/api/classes/models_Ellipse.Ellipse/#constructors","text":"constructor","title":"Constructors"},{"location":"converted/api/classes/models_Ellipse.Ellipse/#properties","text":"models origin","title":"Properties"},{"location":"converted/api/classes/models_Ellipse.Ellipse/#constructors_1","text":"","title":"Constructors"},{"location":"converted/api/classes/models_Ellipse.Ellipse/#constructor","text":"new Ellipse(radiusX: number, radiusY: number, accuracy?: number): Ellipse Class for Ellipse created with 2 radii. #### Parameters radiusX: number The x radius of the ellipse. + radiusY: number The y radius of the ellipse. + Optional accuracy: number Optional accuracy of the underlying BezierCurve. #### Returns Ellipse Defined in models/Ellipse.ts:77 new Ellipse( origin: IPoint , radiusX: number, radiusY: number, accuracy?: number, ): Ellipse Class for Ellipse created at a specific origin and 2 radii. #### Parameters origin: IPoint The center of the ellipse. + radiusX: number The x radius of the ellipse. + radiusY: number The y radius of the ellipse. + Optional accuracy: number Optional accuracy of the underlying BezierCurve. #### Returns Ellipse Defined in models/Ellipse.ts:87 new Ellipse( cx: number, cy: number, rx: number, ry: number, accuracy?: number, ): Ellipse Class for Ellipse created at a specific x, y and 2 radii. #### Parameters cx: number The x coordinate of the center of the ellipse. + cy: number The y coordinate of the center of the ellipse. + rx: number + ry: number + Optional accuracy: number Optional accuracy of the underlying BezierCurve. #### Returns Ellipse Defined in models/Ellipse.ts:98","title":"constructor"},{"location":"converted/api/classes/models_Ellipse.Ellipse/#properties_1","text":"","title":"Properties"},{"location":"converted/api/classes/models_Ellipse.Ellipse/#models","text":"models: IModelMap = {} Optional map of models within this model. Implementation of IModel . models Defined in models/Ellipse.ts:67","title":"models"},{"location":"converted/api/classes/models_Ellipse.Ellipse/#origin","text":"origin: IPoint Optional origin location of this model. Implementation of IModel . origin Defined in models/Ellipse.ts:68","title":"origin"},{"location":"converted/api/classes/models_Ellipse.Ellipse/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/classes/models_Ellipse.Ellipse/#on-this-page","text":"Constructors constructor Properties models origin Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/classes/models_Ellipse.EllipticArc/","text":"EllipticArc | Photon Photon Preparing search index... models/Ellipse EllipticArc Class EllipticArc A model is a composite object which may contain a map of paths, or a map of models recursively. Implements IModel Defined in models/Ellipse.ts:208 Index Constructors constructor Properties models Constructors constructor new EllipticArc( startAngle: number, endAngle: number, radiusX: number, radiusY: number, accuracy?: number, ): EllipticArc Class for Elliptic Arc created by distorting a circular arc. #### Parameters startAngle: number endAngle: number radiusX: number The x radius of the ellipse. + radiusY: number The y radius of the ellipse. + Optional accuracy: number Optional accuracy of the underlying BezierCurve. #### Returns EllipticArc Defined in models/Ellipse.ts:219 new EllipticArc( arc: IPathArc , distortX: number, distortY: number, accuracy?: number, ): EllipticArc Class for Elliptic Arc created by distorting a circular arc. #### Parameters arc: IPathArc The circular arc to use as the basis of the elliptic arc. + distortX: number The x scale of the ellipse. + distortY: number The y scale of the ellipse. + Optional accuracy: number Optional accuracy of the underlying BezierCurve. #### Returns EllipticArc Defined in models/Ellipse.ts:229 Properties models models: IModelMap = {} Optional map of models within this model. Implementation of IModel . models Defined in models/Ellipse.ts:209 Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Constructors constructor Properties models Photon Loading... Generated using TypeDoc","title":"EllipticArc | Photon"},{"location":"converted/api/classes/models_Ellipse.EllipticArc/#class-ellipticarc","text":"A model is a composite object which may contain a map of paths, or a map of models recursively.","title":"Class EllipticArc"},{"location":"converted/api/classes/models_Ellipse.EllipticArc/#implements","text":"IModel Defined in models/Ellipse.ts:208","title":"Implements"},{"location":"converted/api/classes/models_Ellipse.EllipticArc/#index","text":"","title":"Index"},{"location":"converted/api/classes/models_Ellipse.EllipticArc/#constructors","text":"constructor","title":"Constructors"},{"location":"converted/api/classes/models_Ellipse.EllipticArc/#properties","text":"models","title":"Properties"},{"location":"converted/api/classes/models_Ellipse.EllipticArc/#constructors_1","text":"","title":"Constructors"},{"location":"converted/api/classes/models_Ellipse.EllipticArc/#constructor","text":"new EllipticArc( startAngle: number, endAngle: number, radiusX: number, radiusY: number, accuracy?: number, ): EllipticArc Class for Elliptic Arc created by distorting a circular arc. #### Parameters startAngle: number endAngle: number radiusX: number The x radius of the ellipse. + radiusY: number The y radius of the ellipse. + Optional accuracy: number Optional accuracy of the underlying BezierCurve. #### Returns EllipticArc Defined in models/Ellipse.ts:219 new EllipticArc( arc: IPathArc , distortX: number, distortY: number, accuracy?: number, ): EllipticArc Class for Elliptic Arc created by distorting a circular arc. #### Parameters arc: IPathArc The circular arc to use as the basis of the elliptic arc. + distortX: number The x scale of the ellipse. + distortY: number The y scale of the ellipse. + Optional accuracy: number Optional accuracy of the underlying BezierCurve. #### Returns EllipticArc Defined in models/Ellipse.ts:229","title":"constructor"},{"location":"converted/api/classes/models_Ellipse.EllipticArc/#properties_1","text":"","title":"Properties"},{"location":"converted/api/classes/models_Ellipse.EllipticArc/#models","text":"models: IModelMap = {} Optional map of models within this model. Implementation of IModel . models Defined in models/Ellipse.ts:209","title":"models"},{"location":"converted/api/classes/models_Ellipse.EllipticArc/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/classes/models_Ellipse.EllipticArc/#on-this-page","text":"Constructors constructor Properties models Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/classes/models_Holes.Holes/","text":"Holes | Photon Photon Preparing search index... models/Holes Holes Class Holes A model is a composite object which may contain a map of paths, or a map of models recursively. Implements IModel Defined in models/Holes.ts:5 Index Constructors constructor Properties paths Constructors constructor new Holes(holeRadius: number, points: IPoint [], ids?: string[]): Holes Create an array of circles of the same radius from an array of center points. #### Parameters holeRadius: number points: IPoint [] Optional ids: string[] #### Returns Holes Defined in models/Holes.ts:9 Properties paths paths: IPathMap = {} Optional map of path objects in this model. Implementation of IModel . paths Defined in models/Holes.ts:6 Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Constructors constructor Properties paths Photon Loading... Generated using TypeDoc","title":"Holes | Photon"},{"location":"converted/api/classes/models_Holes.Holes/#class-holes","text":"A model is a composite object which may contain a map of paths, or a map of models recursively.","title":"Class Holes"},{"location":"converted/api/classes/models_Holes.Holes/#implements","text":"IModel Defined in models/Holes.ts:5","title":"Implements"},{"location":"converted/api/classes/models_Holes.Holes/#index","text":"","title":"Index"},{"location":"converted/api/classes/models_Holes.Holes/#constructors","text":"constructor","title":"Constructors"},{"location":"converted/api/classes/models_Holes.Holes/#properties","text":"paths","title":"Properties"},{"location":"converted/api/classes/models_Holes.Holes/#constructors_1","text":"","title":"Constructors"},{"location":"converted/api/classes/models_Holes.Holes/#constructor","text":"new Holes(holeRadius: number, points: IPoint [], ids?: string[]): Holes Create an array of circles of the same radius from an array of center points. #### Parameters holeRadius: number points: IPoint [] Optional ids: string[] #### Returns Holes Defined in models/Holes.ts:9","title":"constructor"},{"location":"converted/api/classes/models_Holes.Holes/#properties_1","text":"","title":"Properties"},{"location":"converted/api/classes/models_Holes.Holes/#paths","text":"paths: IPathMap = {} Optional map of path objects in this model. Implementation of IModel . paths Defined in models/Holes.ts:6","title":"paths"},{"location":"converted/api/classes/models_Holes.Holes/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/classes/models_Holes.Holes/#on-this-page","text":"Constructors constructor Properties paths Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/classes/models_Oval.Oval/","text":"Oval | Photon Photon Preparing search index... models/Oval Oval Class Oval A model is a composite object which may contain a map of paths, or a map of models recursively. Implements IModel Defined in models/Oval.ts:5 Index Constructors constructor Properties paths Constructors constructor new Oval(width: number, height: number): Oval #### Parameters width: number height: number #### Returns Oval Defined in models/Oval.ts:8 Properties paths paths: IPathMap = {} Optional map of path objects in this model. Implementation of IModel . paths Defined in models/Oval.ts:6 Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Constructors constructor Properties paths Photon Loading... Generated using TypeDoc","title":"Oval | Photon"},{"location":"converted/api/classes/models_Oval.Oval/#class-oval","text":"A model is a composite object which may contain a map of paths, or a map of models recursively.","title":"Class Oval"},{"location":"converted/api/classes/models_Oval.Oval/#implements","text":"IModel Defined in models/Oval.ts:5","title":"Implements"},{"location":"converted/api/classes/models_Oval.Oval/#index","text":"","title":"Index"},{"location":"converted/api/classes/models_Oval.Oval/#constructors","text":"constructor","title":"Constructors"},{"location":"converted/api/classes/models_Oval.Oval/#properties","text":"paths","title":"Properties"},{"location":"converted/api/classes/models_Oval.Oval/#constructors_1","text":"","title":"Constructors"},{"location":"converted/api/classes/models_Oval.Oval/#constructor","text":"new Oval(width: number, height: number): Oval #### Parameters width: number height: number #### Returns Oval Defined in models/Oval.ts:8","title":"constructor"},{"location":"converted/api/classes/models_Oval.Oval/#properties_1","text":"","title":"Properties"},{"location":"converted/api/classes/models_Oval.Oval/#paths","text":"paths: IPathMap = {} Optional map of path objects in this model. Implementation of IModel . paths Defined in models/Oval.ts:6","title":"paths"},{"location":"converted/api/classes/models_Oval.Oval/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/classes/models_Oval.Oval/#on-this-page","text":"Constructors constructor Properties paths Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/classes/models_OvalArc.OvalArc/","text":"OvalArc | Photon Photon Preparing search index... models/OvalArc OvalArc Class OvalArc A model is a composite object which may contain a map of paths, or a map of models recursively. Implements IModel Defined in models/OvalArc.ts:10 Index Constructors constructor Properties models paths Constructors constructor new OvalArc( startAngle: number, endAngle: number, sweepRadius: number, slotRadius: number, selfIntersect?: boolean, isolateCaps?: boolean, ): OvalArc #### Parameters startAngle: number endAngle: number sweepRadius: number slotRadius: number selfIntersect: boolean = false isolateCaps: boolean = false #### Returns OvalArc Defined in models/OvalArc.ts:14 Properties models models: IModelMap Optional map of models within this model. Implementation of IModel . models Defined in models/OvalArc.ts:12 paths paths: IPathMap = {} Optional map of path objects in this model. Implementation of IModel . paths Defined in models/OvalArc.ts:11 Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Constructors constructor Properties models paths Photon Loading... Generated using TypeDoc","title":"OvalArc | Photon"},{"location":"converted/api/classes/models_OvalArc.OvalArc/#class-ovalarc","text":"A model is a composite object which may contain a map of paths, or a map of models recursively.","title":"Class OvalArc"},{"location":"converted/api/classes/models_OvalArc.OvalArc/#implements","text":"IModel Defined in models/OvalArc.ts:10","title":"Implements"},{"location":"converted/api/classes/models_OvalArc.OvalArc/#index","text":"","title":"Index"},{"location":"converted/api/classes/models_OvalArc.OvalArc/#constructors","text":"constructor","title":"Constructors"},{"location":"converted/api/classes/models_OvalArc.OvalArc/#properties","text":"models paths","title":"Properties"},{"location":"converted/api/classes/models_OvalArc.OvalArc/#constructors_1","text":"","title":"Constructors"},{"location":"converted/api/classes/models_OvalArc.OvalArc/#constructor","text":"new OvalArc( startAngle: number, endAngle: number, sweepRadius: number, slotRadius: number, selfIntersect?: boolean, isolateCaps?: boolean, ): OvalArc #### Parameters startAngle: number endAngle: number sweepRadius: number slotRadius: number selfIntersect: boolean = false isolateCaps: boolean = false #### Returns OvalArc Defined in models/OvalArc.ts:14","title":"constructor"},{"location":"converted/api/classes/models_OvalArc.OvalArc/#properties_1","text":"","title":"Properties"},{"location":"converted/api/classes/models_OvalArc.OvalArc/#models","text":"models: IModelMap Optional map of models within this model. Implementation of IModel . models Defined in models/OvalArc.ts:12","title":"models"},{"location":"converted/api/classes/models_OvalArc.OvalArc/#paths","text":"paths: IPathMap = {} Optional map of path objects in this model. Implementation of IModel . paths Defined in models/OvalArc.ts:11","title":"paths"},{"location":"converted/api/classes/models_OvalArc.OvalArc/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/classes/models_OvalArc.OvalArc/#on-this-page","text":"Constructors constructor Properties models paths Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/classes/models_Polygon.Polygon/","text":"Polygon | Photon Photon Preparing search index... models/Polygon Polygon Class Polygon A model is a composite object which may contain a map of paths, or a map of models recursively. Implements IModel Defined in models/Polygon.ts:7 Index Constructors constructor Properties paths Methods circumscribedRadius getPoints Constructors constructor new Polygon( numberOfSides: number, radius: number, firstCornerAngleInDegrees?: number, circumscribed?: boolean, ): Polygon #### Parameters numberOfSides: number radius: number Optional firstCornerAngleInDegrees: number Optional circumscribed: boolean #### Returns Polygon Defined in models/Polygon.ts:10 Properties paths paths: IPathMap = {} Optional map of path objects in this model. Implementation of IModel . paths Defined in models/Polygon.ts:8 Methods Static circumscribedRadius circumscribedRadius(radius: number, angleInRadians: number): number #### Parameters radius: number angleInRadians: number #### Returns number Defined in models/Polygon.ts:14 Static getPoints getPoints( numberOfSides: number, radius: number, firstCornerAngleInDegrees?: number, circumscribed?: boolean, ): IPoint [] #### Parameters numberOfSides: number radius: number firstCornerAngleInDegrees: number = 0 circumscribed: boolean = false #### Returns IPoint [] Defined in models/Polygon.ts:18 Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Constructors constructor Properties paths Methods circumscribedRadius getPoints Photon Loading... Generated using TypeDoc","title":"Polygon | Photon"},{"location":"converted/api/classes/models_Polygon.Polygon/#class-polygon","text":"A model is a composite object which may contain a map of paths, or a map of models recursively.","title":"Class Polygon"},{"location":"converted/api/classes/models_Polygon.Polygon/#implements","text":"IModel Defined in models/Polygon.ts:7","title":"Implements"},{"location":"converted/api/classes/models_Polygon.Polygon/#index","text":"","title":"Index"},{"location":"converted/api/classes/models_Polygon.Polygon/#constructors","text":"constructor","title":"Constructors"},{"location":"converted/api/classes/models_Polygon.Polygon/#properties","text":"paths","title":"Properties"},{"location":"converted/api/classes/models_Polygon.Polygon/#methods","text":"circumscribedRadius getPoints","title":"Methods"},{"location":"converted/api/classes/models_Polygon.Polygon/#constructors_1","text":"","title":"Constructors"},{"location":"converted/api/classes/models_Polygon.Polygon/#constructor","text":"new Polygon( numberOfSides: number, radius: number, firstCornerAngleInDegrees?: number, circumscribed?: boolean, ): Polygon #### Parameters numberOfSides: number radius: number Optional firstCornerAngleInDegrees: number Optional circumscribed: boolean #### Returns Polygon Defined in models/Polygon.ts:10","title":"constructor"},{"location":"converted/api/classes/models_Polygon.Polygon/#properties_1","text":"","title":"Properties"},{"location":"converted/api/classes/models_Polygon.Polygon/#paths","text":"paths: IPathMap = {} Optional map of path objects in this model. Implementation of IModel . paths Defined in models/Polygon.ts:8","title":"paths"},{"location":"converted/api/classes/models_Polygon.Polygon/#methods_1","text":"","title":"Methods"},{"location":"converted/api/classes/models_Polygon.Polygon/#staticcircumscribedradius","text":"circumscribedRadius(radius: number, angleInRadians: number): number #### Parameters radius: number angleInRadians: number #### Returns number Defined in models/Polygon.ts:14","title":"StaticcircumscribedRadius"},{"location":"converted/api/classes/models_Polygon.Polygon/#staticgetpoints","text":"getPoints( numberOfSides: number, radius: number, firstCornerAngleInDegrees?: number, circumscribed?: boolean, ): IPoint [] #### Parameters numberOfSides: number radius: number firstCornerAngleInDegrees: number = 0 circumscribed: boolean = false #### Returns IPoint [] Defined in models/Polygon.ts:18","title":"StaticgetPoints"},{"location":"converted/api/classes/models_Polygon.Polygon/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/classes/models_Polygon.Polygon/#on-this-page","text":"Constructors constructor Properties paths Methods circumscribedRadius getPoints Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/classes/models_Rectangle.Rectangle/","text":"Rectangle | Photon Photon Preparing search index... models/Rectangle Rectangle Class Rectangle A model is a composite object which may contain a map of paths, or a map of models recursively. Implements IModel Defined in models/Rectangle.ts:8 Index Constructors constructor Properties origin paths Constructors constructor new Rectangle(width: number, height: number): Rectangle Create a rectangle from width and height. Example: //Create a rectangle from width and height import { exporter, measure, models } from 'photon/core'; const model = new models.Rectangle(50, 100); const svg = exporter.toSVG(model); document.write(svg); Copy #### Parameters width: number Width of the rectangle. + height: number Height of the rectangle. #### Returns Rectangle Defined in models/Rectangle.ts:27 new Rectangle(modelToSurround: IModel , margin?: number): Rectangle Create a rectangle which will surround a model. Example: //Create a rectangle which will surround a model import { exporter, measure, models } from 'photon/core'; const e = new models.Ellipse(17, 10); // draw an ellipse so we have something to surround. const r = new models.Rectangle(e, 3); // draws a rectangle surrounding the ellipse by 3 units. const svg = exporter.toSVG({ models: { e, r } }); document.write(svg); Copy #### Parameters modelToSurround: IModel IModel object. + Optional margin: number Optional distance from the model. #### Returns Rectangle Defined in models/Rectangle.ts:45 new Rectangle(measurement: IMeasure ): Rectangle Create a rectangle from a measurement. Example: //Create a rectangle from a measurement. import { exporter, measure, models } from 'photon/core'; const e = new models.Ellipse(17, 10); // draw an ellipse so we have something to measure. const m = measure.modelExtents(e); // measure the ellipse. const r = new models.Rectangle(m); // draws a rectangle surrounding the ellipse. const svg = exporter.toSVG({ models: { e, r } }); document.write(svg); Copy #### Parameters measurement: IMeasure IMeasure object. See http:// photon/core.org/docs/api/modules/measure.html#pathextents and http:// photon/core.org/docs/api/modules/measure.html#modelextents to get measurements of paths and models. #### Returns Rectangle Defined in models/Rectangle.ts:63 Properties origin origin: IPoint Optional origin location of this model. Implementation of IModel . origin Defined in models/Rectangle.ts:10 paths paths: IPathMap = {} Optional map of path objects in this model. Implementation of IModel . paths Defined in models/Rectangle.ts:9 Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Constructors constructor Properties origin paths Photon Loading... Generated using TypeDoc","title":"Rectangle | Photon"},{"location":"converted/api/classes/models_Rectangle.Rectangle/#class-rectangle","text":"A model is a composite object which may contain a map of paths, or a map of models recursively.","title":"Class Rectangle"},{"location":"converted/api/classes/models_Rectangle.Rectangle/#implements","text":"IModel Defined in models/Rectangle.ts:8","title":"Implements"},{"location":"converted/api/classes/models_Rectangle.Rectangle/#index","text":"","title":"Index"},{"location":"converted/api/classes/models_Rectangle.Rectangle/#constructors","text":"constructor","title":"Constructors"},{"location":"converted/api/classes/models_Rectangle.Rectangle/#properties","text":"origin paths","title":"Properties"},{"location":"converted/api/classes/models_Rectangle.Rectangle/#constructors_1","text":"","title":"Constructors"},{"location":"converted/api/classes/models_Rectangle.Rectangle/#constructor","text":"new Rectangle(width: number, height: number): Rectangle Create a rectangle from width and height. Example: //Create a rectangle from width and height import { exporter, measure, models } from 'photon/core'; const model = new models.Rectangle(50, 100); const svg = exporter.toSVG(model); document.write(svg); Copy #### Parameters width: number Width of the rectangle. + height: number Height of the rectangle. #### Returns Rectangle Defined in models/Rectangle.ts:27 new Rectangle(modelToSurround: IModel , margin?: number): Rectangle Create a rectangle which will surround a model. Example: //Create a rectangle which will surround a model import { exporter, measure, models } from 'photon/core'; const e = new models.Ellipse(17, 10); // draw an ellipse so we have something to surround. const r = new models.Rectangle(e, 3); // draws a rectangle surrounding the ellipse by 3 units. const svg = exporter.toSVG({ models: { e, r } }); document.write(svg); Copy #### Parameters modelToSurround: IModel IModel object. + Optional margin: number Optional distance from the model. #### Returns Rectangle Defined in models/Rectangle.ts:45 new Rectangle(measurement: IMeasure ): Rectangle Create a rectangle from a measurement. Example: //Create a rectangle from a measurement. import { exporter, measure, models } from 'photon/core'; const e = new models.Ellipse(17, 10); // draw an ellipse so we have something to measure. const m = measure.modelExtents(e); // measure the ellipse. const r = new models.Rectangle(m); // draws a rectangle surrounding the ellipse. const svg = exporter.toSVG({ models: { e, r } }); document.write(svg); Copy #### Parameters measurement: IMeasure IMeasure object. See http:// photon/core.org/docs/api/modules/measure.html#pathextents and http:// photon/core.org/docs/api/modules/measure.html#modelextents to get measurements of paths and models. #### Returns Rectangle Defined in models/Rectangle.ts:63","title":"constructor"},{"location":"converted/api/classes/models_Rectangle.Rectangle/#properties_1","text":"","title":"Properties"},{"location":"converted/api/classes/models_Rectangle.Rectangle/#origin","text":"origin: IPoint Optional origin location of this model. Implementation of IModel . origin Defined in models/Rectangle.ts:10","title":"origin"},{"location":"converted/api/classes/models_Rectangle.Rectangle/#paths","text":"paths: IPathMap = {} Optional map of path objects in this model. Implementation of IModel . paths Defined in models/Rectangle.ts:9","title":"paths"},{"location":"converted/api/classes/models_Rectangle.Rectangle/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/classes/models_Rectangle.Rectangle/#on-this-page","text":"Constructors constructor Properties origin paths Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/classes/models_Ring.Ring/","text":"Ring | Photon Photon Preparing search index... models/Ring Ring Class Ring A model is a composite object which may contain a map of paths, or a map of models recursively. Implements IModel Defined in models/Ring.ts:6 Index Constructors constructor Properties paths Constructors constructor new Ring(outerRadius: number, innerRadius?: number): Ring #### Parameters outerRadius: number Optional innerRadius: number #### Returns Ring Defined in models/Ring.ts:9 Properties paths paths: IPathMap = {} Optional map of path objects in this model. Implementation of IModel . paths Defined in models/Ring.ts:7 Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Constructors constructor Properties paths Photon Loading... Generated using TypeDoc","title":"Ring | Photon"},{"location":"converted/api/classes/models_Ring.Ring/#class-ring","text":"A model is a composite object which may contain a map of paths, or a map of models recursively.","title":"Class Ring"},{"location":"converted/api/classes/models_Ring.Ring/#implements","text":"IModel Defined in models/Ring.ts:6","title":"Implements"},{"location":"converted/api/classes/models_Ring.Ring/#index","text":"","title":"Index"},{"location":"converted/api/classes/models_Ring.Ring/#constructors","text":"constructor","title":"Constructors"},{"location":"converted/api/classes/models_Ring.Ring/#properties","text":"paths","title":"Properties"},{"location":"converted/api/classes/models_Ring.Ring/#constructors_1","text":"","title":"Constructors"},{"location":"converted/api/classes/models_Ring.Ring/#constructor","text":"new Ring(outerRadius: number, innerRadius?: number): Ring #### Parameters outerRadius: number Optional innerRadius: number #### Returns Ring Defined in models/Ring.ts:9","title":"constructor"},{"location":"converted/api/classes/models_Ring.Ring/#properties_1","text":"","title":"Properties"},{"location":"converted/api/classes/models_Ring.Ring/#paths","text":"paths: IPathMap = {} Optional map of path objects in this model. Implementation of IModel . paths Defined in models/Ring.ts:7","title":"paths"},{"location":"converted/api/classes/models_Ring.Ring/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/classes/models_Ring.Ring/#on-this-page","text":"Constructors constructor Properties paths Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/classes/models_RoundRectangle.RoundRectangle/","text":"RoundRectangle | Photon Photon Preparing search index... models/RoundRectangle RoundRectangle Class RoundRectangle A model is a composite object which may contain a map of paths, or a map of models recursively. Implements IModel Defined in models/RoundRectangle.ts:7 Index Constructors constructor Properties origin paths Constructors constructor new RoundRectangle( width: number, height: number, radius: number, ): RoundRectangle Create a round rectangle from width, height, and corner radius. Example: const r = new makerjs.models.RoundRectangle(100, 50, 5); Copy #### Parameters width: number Width of the rectangle. + height: number Height of the rectangle. + radius: number Corner radius. #### Returns RoundRectangle Defined in models/RoundRectangle.ts:23 new RoundRectangle(modelToSurround: IModel , margin: number): RoundRectangle Create a round rectangle which will surround a model. Example: const b = new makerjs.models.BoltRectangle(30, 20, 1); //draw a bolt rectangle so we have something to surround const r = new makerjs.models.RoundRectangle(b, 2.5); //surround it Copy #### Parameters modelToSurround: IModel IModel object. + margin: number Distance from the model. This will also become the corner radius. #### Returns RoundRectangle Defined in models/RoundRectangle.ts:37 Properties origin origin: IPoint Optional origin location of this model. Implementation of IModel . origin Defined in models/RoundRectangle.ts:8 paths paths: IPathMap = {} Optional map of path objects in this model. Implementation of IModel . paths Defined in models/RoundRectangle.ts:9 Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Constructors constructor Properties origin paths Photon Loading... Generated using TypeDoc","title":"RoundRectangle | Photon"},{"location":"converted/api/classes/models_RoundRectangle.RoundRectangle/#class-roundrectangle","text":"A model is a composite object which may contain a map of paths, or a map of models recursively.","title":"Class RoundRectangle"},{"location":"converted/api/classes/models_RoundRectangle.RoundRectangle/#implements","text":"IModel Defined in models/RoundRectangle.ts:7","title":"Implements"},{"location":"converted/api/classes/models_RoundRectangle.RoundRectangle/#index","text":"","title":"Index"},{"location":"converted/api/classes/models_RoundRectangle.RoundRectangle/#constructors","text":"constructor","title":"Constructors"},{"location":"converted/api/classes/models_RoundRectangle.RoundRectangle/#properties","text":"origin paths","title":"Properties"},{"location":"converted/api/classes/models_RoundRectangle.RoundRectangle/#constructors_1","text":"","title":"Constructors"},{"location":"converted/api/classes/models_RoundRectangle.RoundRectangle/#constructor","text":"new RoundRectangle( width: number, height: number, radius: number, ): RoundRectangle Create a round rectangle from width, height, and corner radius. Example: const r = new makerjs.models.RoundRectangle(100, 50, 5); Copy #### Parameters width: number Width of the rectangle. + height: number Height of the rectangle. + radius: number Corner radius. #### Returns RoundRectangle Defined in models/RoundRectangle.ts:23 new RoundRectangle(modelToSurround: IModel , margin: number): RoundRectangle Create a round rectangle which will surround a model. Example: const b = new makerjs.models.BoltRectangle(30, 20, 1); //draw a bolt rectangle so we have something to surround const r = new makerjs.models.RoundRectangle(b, 2.5); //surround it Copy #### Parameters modelToSurround: IModel IModel object. + margin: number Distance from the model. This will also become the corner radius. #### Returns RoundRectangle Defined in models/RoundRectangle.ts:37","title":"constructor"},{"location":"converted/api/classes/models_RoundRectangle.RoundRectangle/#properties_1","text":"","title":"Properties"},{"location":"converted/api/classes/models_RoundRectangle.RoundRectangle/#origin","text":"origin: IPoint Optional origin location of this model. Implementation of IModel . origin Defined in models/RoundRectangle.ts:8","title":"origin"},{"location":"converted/api/classes/models_RoundRectangle.RoundRectangle/#paths","text":"paths: IPathMap = {} Optional map of path objects in this model. Implementation of IModel . paths Defined in models/RoundRectangle.ts:9","title":"paths"},{"location":"converted/api/classes/models_RoundRectangle.RoundRectangle/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/classes/models_RoundRectangle.RoundRectangle/#on-this-page","text":"Constructors constructor Properties origin paths Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/classes/models_SCurve.SCurve/","text":"SCurve | Photon Photon Preparing search index... models/SCurve SCurve Class SCurve A model is a composite object which may contain a map of paths, or a map of models recursively. Implements IModel Defined in models/SCurve.ts:7 Index Constructors constructor Properties paths Constructors constructor new SCurve(width: number, height: number): SCurve #### Parameters width: number height: number #### Returns SCurve Defined in models/SCurve.ts:10 Properties paths paths: IPathMap = {} Optional map of path objects in this model. Implementation of IModel . paths Defined in models/SCurve.ts:8 Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Constructors constructor Properties paths Photon Loading... Generated using TypeDoc","title":"SCurve | Photon"},{"location":"converted/api/classes/models_SCurve.SCurve/#class-scurve","text":"A model is a composite object which may contain a map of paths, or a map of models recursively.","title":"Class SCurve"},{"location":"converted/api/classes/models_SCurve.SCurve/#implements","text":"IModel Defined in models/SCurve.ts:7","title":"Implements"},{"location":"converted/api/classes/models_SCurve.SCurve/#index","text":"","title":"Index"},{"location":"converted/api/classes/models_SCurve.SCurve/#constructors","text":"constructor","title":"Constructors"},{"location":"converted/api/classes/models_SCurve.SCurve/#properties","text":"paths","title":"Properties"},{"location":"converted/api/classes/models_SCurve.SCurve/#constructors_1","text":"","title":"Constructors"},{"location":"converted/api/classes/models_SCurve.SCurve/#constructor","text":"new SCurve(width: number, height: number): SCurve #### Parameters width: number height: number #### Returns SCurve Defined in models/SCurve.ts:10","title":"constructor"},{"location":"converted/api/classes/models_SCurve.SCurve/#properties_1","text":"","title":"Properties"},{"location":"converted/api/classes/models_SCurve.SCurve/#paths","text":"paths: IPathMap = {} Optional map of path objects in this model. Implementation of IModel . paths Defined in models/SCurve.ts:8","title":"paths"},{"location":"converted/api/classes/models_SCurve.SCurve/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/classes/models_SCurve.SCurve/#on-this-page","text":"Constructors constructor Properties paths Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/classes/models_Slot.Slot/","text":"Slot | Photon Photon Preparing search index... models/Slot Slot Class Slot A model is a composite object which may contain a map of paths, or a map of models recursively. Implements IModel Defined in models/Slot.ts:10 Index Constructors constructor Properties models origin paths Constructors constructor new Slot( origin: IPoint , endPoint: IPoint , radius: number, isolateCaps?: boolean, ): Slot #### Parameters origin: IPoint endPoint: IPoint radius: number isolateCaps: boolean = false #### Returns Slot Defined in models/Slot.ts:15 Properties models models: IModelMap Optional map of models within this model. Implementation of IModel . models Defined in models/Slot.ts:13 origin origin: IPoint Optional origin location of this model. Implementation of IModel . origin Defined in models/Slot.ts:12 paths paths: IPathMap = {} Optional map of path objects in this model. Implementation of IModel . paths Defined in models/Slot.ts:11 Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Constructors constructor Properties models origin paths Photon Loading... Generated using TypeDoc","title":"Slot | Photon"},{"location":"converted/api/classes/models_Slot.Slot/#class-slot","text":"A model is a composite object which may contain a map of paths, or a map of models recursively.","title":"Class Slot"},{"location":"converted/api/classes/models_Slot.Slot/#implements","text":"IModel Defined in models/Slot.ts:10","title":"Implements"},{"location":"converted/api/classes/models_Slot.Slot/#index","text":"","title":"Index"},{"location":"converted/api/classes/models_Slot.Slot/#constructors","text":"constructor","title":"Constructors"},{"location":"converted/api/classes/models_Slot.Slot/#properties","text":"models origin paths","title":"Properties"},{"location":"converted/api/classes/models_Slot.Slot/#constructors_1","text":"","title":"Constructors"},{"location":"converted/api/classes/models_Slot.Slot/#constructor","text":"new Slot( origin: IPoint , endPoint: IPoint , radius: number, isolateCaps?: boolean, ): Slot #### Parameters origin: IPoint endPoint: IPoint radius: number isolateCaps: boolean = false #### Returns Slot Defined in models/Slot.ts:15","title":"constructor"},{"location":"converted/api/classes/models_Slot.Slot/#properties_1","text":"","title":"Properties"},{"location":"converted/api/classes/models_Slot.Slot/#models","text":"models: IModelMap Optional map of models within this model. Implementation of IModel . models Defined in models/Slot.ts:13","title":"models"},{"location":"converted/api/classes/models_Slot.Slot/#origin","text":"origin: IPoint Optional origin location of this model. Implementation of IModel . origin Defined in models/Slot.ts:12","title":"origin"},{"location":"converted/api/classes/models_Slot.Slot/#paths","text":"paths: IPathMap = {} Optional map of path objects in this model. Implementation of IModel . paths Defined in models/Slot.ts:11","title":"paths"},{"location":"converted/api/classes/models_Slot.Slot/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/classes/models_Slot.Slot/#on-this-page","text":"Constructors constructor Properties models origin paths Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/classes/models_Square.Square/","text":"Square | Photon Photon Preparing search index... models/Square Square Class Square A model is a composite object which may contain a map of paths, or a map of models recursively. Implements IModel Defined in models/Square.ts:5 Index Constructors constructor Properties paths Constructors constructor new Square(side: number): Square #### Parameters side: number #### Returns Square Defined in models/Square.ts:8 Properties paths paths: IPathMap = {} Optional map of path objects in this model. Implementation of IModel . paths Defined in models/Square.ts:6 Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Constructors constructor Properties paths Photon Loading... Generated using TypeDoc","title":"Square | Photon"},{"location":"converted/api/classes/models_Square.Square/#class-square","text":"A model is a composite object which may contain a map of paths, or a map of models recursively.","title":"Class Square"},{"location":"converted/api/classes/models_Square.Square/#implements","text":"IModel Defined in models/Square.ts:5","title":"Implements"},{"location":"converted/api/classes/models_Square.Square/#index","text":"","title":"Index"},{"location":"converted/api/classes/models_Square.Square/#constructors","text":"constructor","title":"Constructors"},{"location":"converted/api/classes/models_Square.Square/#properties","text":"paths","title":"Properties"},{"location":"converted/api/classes/models_Square.Square/#constructors_1","text":"","title":"Constructors"},{"location":"converted/api/classes/models_Square.Square/#constructor","text":"new Square(side: number): Square #### Parameters side: number #### Returns Square Defined in models/Square.ts:8","title":"constructor"},{"location":"converted/api/classes/models_Square.Square/#properties_1","text":"","title":"Properties"},{"location":"converted/api/classes/models_Square.Square/#paths","text":"paths: IPathMap = {} Optional map of path objects in this model. Implementation of IModel . paths Defined in models/Square.ts:6","title":"paths"},{"location":"converted/api/classes/models_Square.Square/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/classes/models_Square.Square/#on-this-page","text":"Constructors constructor Properties paths Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/classes/models_Star.Star/","text":"Star | Photon Photon Preparing search index... models/Star Star Class Star A model is a composite object which may contain a map of paths, or a map of models recursively. Implements IModel Defined in models/Star.ts:6 Index Constructors constructor Properties paths Methods InnerRadiusRatio Constructors constructor new Star( numberOfPoints: number, outerRadius: number, innerRadius?: number, skipPoints?: number, ): Star #### Parameters numberOfPoints: number outerRadius: number Optional innerRadius: number skipPoints: number = 2 #### Returns Star Defined in models/Star.ts:9 Properties paths paths: IPathMap = {} Optional map of path objects in this model. Implementation of IModel . paths Defined in models/Star.ts:7 Methods Static InnerRadiusRatio InnerRadiusRatio(numberOfPoints: number, skipPoints: number): number #### Parameters numberOfPoints: number skipPoints: number #### Returns number Defined in models/Star.ts:29 Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Constructors constructor Properties paths Methods InnerRadiusRatio Photon Loading... Generated using TypeDoc","title":"Star | Photon"},{"location":"converted/api/classes/models_Star.Star/#class-star","text":"A model is a composite object which may contain a map of paths, or a map of models recursively.","title":"Class Star"},{"location":"converted/api/classes/models_Star.Star/#implements","text":"IModel Defined in models/Star.ts:6","title":"Implements"},{"location":"converted/api/classes/models_Star.Star/#index","text":"","title":"Index"},{"location":"converted/api/classes/models_Star.Star/#constructors","text":"constructor","title":"Constructors"},{"location":"converted/api/classes/models_Star.Star/#properties","text":"paths","title":"Properties"},{"location":"converted/api/classes/models_Star.Star/#methods","text":"InnerRadiusRatio","title":"Methods"},{"location":"converted/api/classes/models_Star.Star/#constructors_1","text":"","title":"Constructors"},{"location":"converted/api/classes/models_Star.Star/#constructor","text":"new Star( numberOfPoints: number, outerRadius: number, innerRadius?: number, skipPoints?: number, ): Star #### Parameters numberOfPoints: number outerRadius: number Optional innerRadius: number skipPoints: number = 2 #### Returns Star Defined in models/Star.ts:9","title":"constructor"},{"location":"converted/api/classes/models_Star.Star/#properties_1","text":"","title":"Properties"},{"location":"converted/api/classes/models_Star.Star/#paths","text":"paths: IPathMap = {} Optional map of path objects in this model. Implementation of IModel . paths Defined in models/Star.ts:7","title":"paths"},{"location":"converted/api/classes/models_Star.Star/#methods_1","text":"","title":"Methods"},{"location":"converted/api/classes/models_Star.Star/#staticinnerradiusratio","text":"InnerRadiusRatio(numberOfPoints: number, skipPoints: number): number #### Parameters numberOfPoints: number skipPoints: number #### Returns number Defined in models/Star.ts:29","title":"StaticInnerRadiusRatio"},{"location":"converted/api/classes/models_Star.Star/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/classes/models_Star.Star/#on-this-page","text":"Constructors constructor Properties paths Methods InnerRadiusRatio Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/classes/models_Text.Text/","text":"Text | Photon Photon Preparing search index... models/Text Text Class Text A model is a composite object which may contain a map of paths, or a map of models recursively. Implements IModel Defined in models/Text.ts:12 Index Constructors constructor Properties models Methods glyphToModel Constructors constructor new Text( font: Font, text: string, fontSize: number, combine?: boolean, centerCharacterOrigin?: boolean, bezierAccuracy?: number, opentypeOptions?: RenderOptions, ): Text Renders text in a given font to a model. #### Parameters font: Font OpenType.Font object. + text: string String of text to render. + fontSize: number Font size. + combine: boolean = false Flag (default false) to perform a combineUnion upon each character with characters to the left and right. + centerCharacterOrigin: boolean = false Flag (default false) to move the x origin of each character to the center. Useful for rotating text characters. + Optional bezierAccuracy: number Optional accuracy of Bezier curves. + Optional opentypeOptions: RenderOptions Optional opentype.RenderOptions object. #### Returns Text Model of the text. Defined in models/Text.ts:26 Properties models models: IModelMap = {} Optional map of models within this model. Implementation of IModel . models Defined in models/Text.ts:13 Methods Static glyphToModel glyphToModel(glyph: Glyph, fontSize: number, bezierAccuracy?: number): IModel Convert an opentype glyph to a model. #### Parameters glyph: Glyph Opentype.Glyph object. + fontSize: number Font size. + Optional bezierAccuracy: number Optional accuracy of Bezier curves. #### Returns IModel Model of the glyph. Defined in models/Text.ts:81 Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Constructors constructor Properties models Methods glyphToModel Photon Loading... Generated using TypeDoc","title":"Text | Photon"},{"location":"converted/api/classes/models_Text.Text/#class-text","text":"A model is a composite object which may contain a map of paths, or a map of models recursively.","title":"Class Text"},{"location":"converted/api/classes/models_Text.Text/#implements","text":"IModel Defined in models/Text.ts:12","title":"Implements"},{"location":"converted/api/classes/models_Text.Text/#index","text":"","title":"Index"},{"location":"converted/api/classes/models_Text.Text/#constructors","text":"constructor","title":"Constructors"},{"location":"converted/api/classes/models_Text.Text/#properties","text":"models","title":"Properties"},{"location":"converted/api/classes/models_Text.Text/#methods","text":"glyphToModel","title":"Methods"},{"location":"converted/api/classes/models_Text.Text/#constructors_1","text":"","title":"Constructors"},{"location":"converted/api/classes/models_Text.Text/#constructor","text":"new Text( font: Font, text: string, fontSize: number, combine?: boolean, centerCharacterOrigin?: boolean, bezierAccuracy?: number, opentypeOptions?: RenderOptions, ): Text Renders text in a given font to a model. #### Parameters font: Font OpenType.Font object. + text: string String of text to render. + fontSize: number Font size. + combine: boolean = false Flag (default false) to perform a combineUnion upon each character with characters to the left and right. + centerCharacterOrigin: boolean = false Flag (default false) to move the x origin of each character to the center. Useful for rotating text characters. + Optional bezierAccuracy: number Optional accuracy of Bezier curves. + Optional opentypeOptions: RenderOptions Optional opentype.RenderOptions object. #### Returns Text Model of the text. Defined in models/Text.ts:26","title":"constructor"},{"location":"converted/api/classes/models_Text.Text/#properties_1","text":"","title":"Properties"},{"location":"converted/api/classes/models_Text.Text/#models","text":"models: IModelMap = {} Optional map of models within this model. Implementation of IModel . models Defined in models/Text.ts:13","title":"models"},{"location":"converted/api/classes/models_Text.Text/#methods_1","text":"","title":"Methods"},{"location":"converted/api/classes/models_Text.Text/#staticglyphtomodel","text":"glyphToModel(glyph: Glyph, fontSize: number, bezierAccuracy?: number): IModel Convert an opentype glyph to a model. #### Parameters glyph: Glyph Opentype.Glyph object. + fontSize: number Font size. + Optional bezierAccuracy: number Optional accuracy of Bezier curves. #### Returns IModel Model of the glyph. Defined in models/Text.ts:81","title":"StaticglyphToModel"},{"location":"converted/api/classes/models_Text.Text/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/classes/models_Text.Text/#on-this-page","text":"Constructors constructor Properties models Methods glyphToModel Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/classes/types_jscad.export_.CAG/","text":"CAG | Photon Photon Preparing search index... types/jscad export= CAG Class CAG CAG (2D Constructive Area Geometry) class Defined in types/jscad.d.ts:11 Index Constructors constructor Methods extrude subtract union fromPoints Constructors constructor new CAG(): CAG #### Returns CAG Methods extrude extrude(options: { offset: number[] }): export= . CSG Extrude this 2D CAG into a 3D CSG #### Parameters options: { offset: number[] } #### Returns export= . CSG Defined in types/jscad.d.ts:30 subtract subtract(other: CAG): CAG Subtract another CAG from this one #### Parameters other: CAG #### Returns CAG Defined in types/jscad.d.ts:25 union union(other: CAG): CAG Union this CAG with another #### Parameters other: CAG #### Returns CAG Defined in types/jscad.d.ts:20 Static fromPoints fromPoints(points: number[][]): CAG Create a CAG from an array of points #### Parameters points: number[][] #### Returns CAG Defined in types/jscad.d.ts:15 Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Constructors constructor Methods extrude subtract union fromPoints Photon Loading... Generated using TypeDoc","title":"CAG | Photon"},{"location":"converted/api/classes/types_jscad.export_.CAG/#class-cag","text":"CAG (2D Constructive Area Geometry) class Defined in types/jscad.d.ts:11","title":"Class CAG"},{"location":"converted/api/classes/types_jscad.export_.CAG/#index","text":"","title":"Index"},{"location":"converted/api/classes/types_jscad.export_.CAG/#constructors","text":"constructor","title":"Constructors"},{"location":"converted/api/classes/types_jscad.export_.CAG/#methods","text":"extrude subtract union fromPoints","title":"Methods"},{"location":"converted/api/classes/types_jscad.export_.CAG/#constructors_1","text":"","title":"Constructors"},{"location":"converted/api/classes/types_jscad.export_.CAG/#constructor","text":"new CAG(): CAG #### Returns CAG","title":"constructor"},{"location":"converted/api/classes/types_jscad.export_.CAG/#methods_1","text":"","title":"Methods"},{"location":"converted/api/classes/types_jscad.export_.CAG/#extrude","text":"extrude(options: { offset: number[] }): export= . CSG Extrude this 2D CAG into a 3D CSG #### Parameters options: { offset: number[] } #### Returns export= . CSG Defined in types/jscad.d.ts:30","title":"extrude"},{"location":"converted/api/classes/types_jscad.export_.CAG/#subtract","text":"subtract(other: CAG): CAG Subtract another CAG from this one #### Parameters other: CAG #### Returns CAG Defined in types/jscad.d.ts:25","title":"subtract"},{"location":"converted/api/classes/types_jscad.export_.CAG/#union","text":"union(other: CAG): CAG Union this CAG with another #### Parameters other: CAG #### Returns CAG Defined in types/jscad.d.ts:20","title":"union"},{"location":"converted/api/classes/types_jscad.export_.CAG/#staticfrompoints","text":"fromPoints(points: number[][]): CAG Create a CAG from an array of points #### Parameters points: number[][] #### Returns CAG Defined in types/jscad.d.ts:15","title":"StaticfromPoints"},{"location":"converted/api/classes/types_jscad.export_.CAG/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/classes/types_jscad.export_.CAG/#on-this-page","text":"Constructors constructor Methods extrude subtract union fromPoints Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/classes/types_jscad.export_.CSG/","text":"CSG | Photon Photon Preparing search index... types/jscad export= CSG Class CSG CSG (3D Constructive Solid Geometry) class Defined in types/jscad.d.ts:36 Defined in types/jscad.d.ts:51 Index Constructors constructor Methods translate union Constructors constructor new CSG(): export= .CSG #### Returns export= .CSG Methods translate translate(offset: number[]): export= .CSG Translate this CSG by an offset #### Parameters offset: number[] #### Returns export= .CSG Defined in types/jscad.d.ts:45 union union(other: export= .CSG): export= .CSG Union this CSG with another #### Parameters other: export= .CSG #### Returns export= .CSG Defined in types/jscad.d.ts:40 Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Constructors constructor Methods translate union Photon Loading... Generated using TypeDoc","title":"CSG | Photon"},{"location":"converted/api/classes/types_jscad.export_.CSG/#class-csg","text":"CSG (3D Constructive Solid Geometry) class Defined in types/jscad.d.ts:36 Defined in types/jscad.d.ts:51","title":"Class CSG"},{"location":"converted/api/classes/types_jscad.export_.CSG/#index","text":"","title":"Index"},{"location":"converted/api/classes/types_jscad.export_.CSG/#constructors","text":"constructor","title":"Constructors"},{"location":"converted/api/classes/types_jscad.export_.CSG/#methods","text":"translate union","title":"Methods"},{"location":"converted/api/classes/types_jscad.export_.CSG/#constructors_1","text":"","title":"Constructors"},{"location":"converted/api/classes/types_jscad.export_.CSG/#constructor","text":"new CSG(): export= .CSG #### Returns export= .CSG","title":"constructor"},{"location":"converted/api/classes/types_jscad.export_.CSG/#methods_1","text":"","title":"Methods"},{"location":"converted/api/classes/types_jscad.export_.CSG/#translate","text":"translate(offset: number[]): export= .CSG Translate this CSG by an offset #### Parameters offset: number[] #### Returns export= .CSG Defined in types/jscad.d.ts:45","title":"translate"},{"location":"converted/api/classes/types_jscad.export_.CSG/#union","text":"union(other: export= .CSG): export= .CSG Union this CSG with another #### Parameters other: export= .CSG #### Returns export= .CSG Defined in types/jscad.d.ts:40","title":"union"},{"location":"converted/api/classes/types_jscad.export_.CSG/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/classes/types_jscad.export_.CSG/#on-this-page","text":"Constructors constructor Methods translate union Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/functions/core_angle.mirror/","text":"mirror | Photon Photon Preparing search index... core/angle mirror Function mirror mirror(angleInDegrees: number, mirrorX: boolean, mirrorY: boolean): number Mirror an angle on either or both x and y axes. #### Parameters angleInDegrees: number mirrorX: boolean mirrorY: boolean #### Returns number Defined in core/angle.ts:98 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"mirror | Photon"},{"location":"converted/api/functions/core_angle.mirror/#function-mirror","text":"mirror(angleInDegrees: number, mirrorX: boolean, mirrorY: boolean): number Mirror an angle on either or both x and y axes. #### Parameters angleInDegrees: number mirrorX: boolean mirrorY: boolean #### Returns number Defined in core/angle.ts:98","title":"Function mirror"},{"location":"converted/api/functions/core_angle.mirror/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_angle.noRevolutions/","text":"noRevolutions | Photon Photon Preparing search index... core/angle noRevolutions Function noRevolutions noRevolutions(angleInDegrees: number): number Ensures an angle is not greater than 360 #### Parameters angleInDegrees: number #### Returns number Defined in core/angle.ts:34 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"noRevolutions | Photon"},{"location":"converted/api/functions/core_angle.noRevolutions/#function-norevolutions","text":"noRevolutions(angleInDegrees: number): number Ensures an angle is not greater than 360 #### Parameters angleInDegrees: number #### Returns number Defined in core/angle.ts:34","title":"Function noRevolutions"},{"location":"converted/api/functions/core_angle.noRevolutions/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_angle.ofArcEnd/","text":"ofArcEnd | Photon Photon Preparing search index... core/angle ofArcEnd Function ofArcEnd ofArcEnd(arc: IPathArc ): number Get an arc's end angle, ensured to be greater than its start angle. #### Parameters arc: IPathArc #### Returns number Defined in core/angle.ts:52 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"ofArcEnd | Photon"},{"location":"converted/api/functions/core_angle.ofArcEnd/#function-ofarcend","text":"ofArcEnd(arc: IPathArc ): number Get an arc's end angle, ensured to be greater than its start angle. #### Parameters arc: IPathArc #### Returns number Defined in core/angle.ts:52","title":"Function ofArcEnd"},{"location":"converted/api/functions/core_angle.ofArcEnd/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_angle.ofArcMiddle/","text":"ofArcMiddle | Photon Photon Preparing search index... core/angle ofArcMiddle Function ofArcMiddle ofArcMiddle(arc: IPathArc , ratio?: number): number Get the angle in the middle of an arc's start and end angles. #### Parameters arc: IPathArc ratio: number = .5 #### Returns number Defined in core/angle.ts:64 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"ofArcMiddle | Photon"},{"location":"converted/api/functions/core_angle.ofArcMiddle/#function-ofarcmiddle","text":"ofArcMiddle(arc: IPathArc , ratio?: number): number Get the angle in the middle of an arc's start and end angles. #### Parameters arc: IPathArc ratio: number = .5 #### Returns number Defined in core/angle.ts:64","title":"Function ofArcMiddle"},{"location":"converted/api/functions/core_angle.ofArcMiddle/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_angle.ofArcSpan/","text":"ofArcSpan | Photon Photon Preparing search index... core/angle ofArcSpan Function ofArcSpan ofArcSpan(arc: IPathArc ): number Total angle of an arc between its start and end angles. #### Parameters arc: IPathArc #### Returns number Defined in core/angle.ts:69 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"ofArcSpan | Photon"},{"location":"converted/api/functions/core_angle.ofArcSpan/#function-ofarcspan","text":"ofArcSpan(arc: IPathArc ): number Total angle of an arc between its start and end angles. #### Parameters arc: IPathArc #### Returns number Defined in core/angle.ts:69","title":"Function ofArcSpan"},{"location":"converted/api/functions/core_angle.ofArcSpan/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_angle.ofChainLinkJoint/","text":"ofChainLinkJoint | Photon Photon Preparing search index... core/angle ofChainLinkJoint Function ofChainLinkJoint ofChainLinkJoint(linkA: IChainLink , linkB: IChainLink ): number Get the angle of a joint between 2 chain links. #### Parameters linkA: IChainLink linkB: IChainLink #### Returns number Defined in core/angle.ts:136 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"ofChainLinkJoint | Photon"},{"location":"converted/api/functions/core_angle.ofChainLinkJoint/#function-ofchainlinkjoint","text":"ofChainLinkJoint(linkA: IChainLink , linkB: IChainLink ): number Get the angle of a joint between 2 chain links. #### Parameters linkA: IChainLink linkB: IChainLink #### Returns number Defined in core/angle.ts:136","title":"Function ofChainLinkJoint"},{"location":"converted/api/functions/core_angle.ofChainLinkJoint/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_angle.ofLineInDegrees/","text":"ofLineInDegrees | Photon Photon Preparing search index... core/angle ofLineInDegrees Function ofLineInDegrees ofLineInDegrees(line: IPathLine ): number Angle of a line path. #### Parameters line: IPathLine #### Returns number Defined in core/angle.ts:80 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"ofLineInDegrees | Photon"},{"location":"converted/api/functions/core_angle.ofLineInDegrees/#function-oflineindegrees","text":"ofLineInDegrees(line: IPathLine ): number Angle of a line path. #### Parameters line: IPathLine #### Returns number Defined in core/angle.ts:80","title":"Function ofLineInDegrees"},{"location":"converted/api/functions/core_angle.ofLineInDegrees/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_angle.ofPointInDegrees/","text":"ofPointInDegrees | Photon Photon Preparing search index... core/angle ofPointInDegrees Function ofPointInDegrees ofPointInDegrees(origin: IPoint , pointToFindAngle: IPoint ): number Angle of a line through a point, in degrees. #### Parameters origin: IPoint pointToFindAngle: IPoint #### Returns number Defined in core/angle.ts:85 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"ofPointInDegrees | Photon"},{"location":"converted/api/functions/core_angle.ofPointInDegrees/#function-ofpointindegrees","text":"ofPointInDegrees(origin: IPoint , pointToFindAngle: IPoint ): number Angle of a line through a point, in degrees. #### Parameters origin: IPoint pointToFindAngle: IPoint #### Returns number Defined in core/angle.ts:85","title":"Function ofPointInDegrees"},{"location":"converted/api/functions/core_angle.ofPointInDegrees/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_angle.ofPointInRadians/","text":"ofPointInRadians | Photon Photon Preparing search index... core/angle ofPointInRadians Function ofPointInRadians ofPointInRadians(origin: IPoint , pointToFindAngle: IPoint ): number Angle of a line through a point, in radians. #### Parameters origin: IPoint pointToFindAngle: IPoint #### Returns number Defined in core/angle.ts:90 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"ofPointInRadians | Photon"},{"location":"converted/api/functions/core_angle.ofPointInRadians/#function-ofpointinradians","text":"ofPointInRadians(origin: IPoint , pointToFindAngle: IPoint ): number Angle of a line through a point, in radians. #### Parameters origin: IPoint pointToFindAngle: IPoint #### Returns number Defined in core/angle.ts:90","title":"Function ofPointInRadians"},{"location":"converted/api/functions/core_angle.ofPointInRadians/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_angle.toDegrees/","text":"toDegrees | Photon Photon Preparing search index... core/angle toDegrees Function toDegrees toDegrees(angleInRadians: number): number Convert an angle from radians to degrees. #### Parameters angleInRadians: number #### Returns number Defined in core/angle.ts:47 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"toDegrees | Photon"},{"location":"converted/api/functions/core_angle.toDegrees/#function-todegrees","text":"toDegrees(angleInRadians: number): number Convert an angle from radians to degrees. #### Parameters angleInRadians: number #### Returns number Defined in core/angle.ts:47","title":"Function toDegrees"},{"location":"converted/api/functions/core_angle.toDegrees/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_angle.toRadians/","text":"toRadians | Photon Photon Preparing search index... core/angle toRadians Function toRadians toRadians(angleInDegrees: number): number Convert an angle from degrees to radians. #### Parameters angleInDegrees: number #### Returns number Defined in core/angle.ts:42 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"toRadians | Photon"},{"location":"converted/api/functions/core_angle.toRadians/#function-toradians","text":"toRadians(angleInDegrees: number): number Convert an angle from degrees to radians. #### Parameters angleInDegrees: number #### Returns number Defined in core/angle.ts:42","title":"Function toRadians"},{"location":"converted/api/functions/core_angle.toRadians/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_base.cloneObject/","text":"cloneObject | Photon Photon Preparing search index... core/base cloneObject Function cloneObject cloneObject< T >(objectToClone: T ): T #### Type Parameters T #### Parameters objectToClone: T #### Returns T Defined in core/base.ts:82 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"cloneObject | Photon"},{"location":"converted/api/functions/core_base.cloneObject/#function-cloneobject","text":"cloneObject< T >(objectToClone: T ): T #### Type Parameters T #### Parameters objectToClone: T #### Returns T Defined in core/base.ts:82","title":"Function cloneObject"},{"location":"converted/api/functions/core_base.cloneObject/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_base.createRouteKey/","text":"createRouteKey | Photon Photon Preparing search index... core/base createRouteKey Function createRouteKey createRouteKey(route: string[]): string #### Parameters route: string[] #### Returns string Defined in core/base.ts:72 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"createRouteKey | Photon"},{"location":"converted/api/functions/core_base.createRouteKey/#function-createroutekey","text":"createRouteKey(route: string[]): string #### Parameters route: string[] #### Returns string Defined in core/base.ts:72","title":"Function createRouteKey"},{"location":"converted/api/functions/core_base.createRouteKey/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_base.extendObject/","text":"extendObject | Photon Photon Preparing search index... core/base extendObject Function extendObject extendObject( target: Record , other: Record , ): Record #### Parameters target: Record other: Record #### Returns Record Defined in core/base.ts:91 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"extendObject | Photon"},{"location":"converted/api/functions/core_base.extendObject/#function-extendobject","text":"extendObject( target: Record , other: Record , ): Record #### Parameters target: Record other: Record #### Returns Record Defined in core/base.ts:91","title":"Function extendObject"},{"location":"converted/api/functions/core_base.extendObject/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_base.isFunction/","text":"isFunction | Photon Photon Preparing search index... core/base isFunction Function isFunction isFunction(value: any): value is Function #### Parameters value: any #### Returns value is Function Defined in core/base.ts:102 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"isFunction | Photon"},{"location":"converted/api/functions/core_base.isFunction/#function-isfunction","text":"isFunction(value: any): value is Function #### Parameters value: any #### Returns value is Function Defined in core/base.ts:102","title":"Function isFunction"},{"location":"converted/api/functions/core_base.isFunction/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_base.isNumber/","text":"isNumber | Photon Photon Preparing search index... core/base isNumber Function isNumber isNumber(value: any): value is number #### Parameters value: any #### Returns value is number Defined in core/base.ts:103 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"isNumber | Photon"},{"location":"converted/api/functions/core_base.isNumber/#function-isnumber","text":"isNumber(value: any): value is number #### Parameters value: any #### Returns value is number Defined in core/base.ts:103","title":"Function isNumber"},{"location":"converted/api/functions/core_base.isNumber/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_base.isObject/","text":"isObject | Photon Photon Preparing search index... core/base isObject Function isObject isObject(value: any): value is object #### Parameters value: any #### Returns value is object Defined in core/base.ts:104 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"isObject | Photon"},{"location":"converted/api/functions/core_base.isObject/#function-isobject","text":"isObject(value: any): value is object #### Parameters value: any #### Returns value is object Defined in core/base.ts:104","title":"Function isObject"},{"location":"converted/api/functions/core_base.isObject/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_base.isPoint/","text":"isPoint | Photon Photon Preparing search index... core/base isPoint Function isPoint isPoint(item: any): item is [number, number] #### Parameters item: any #### Returns item is [number, number] Defined in core/base.ts:105 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"isPoint | Photon"},{"location":"converted/api/functions/core_base.isPoint/#function-ispoint","text":"isPoint(item: any): item is [number, number] #### Parameters item: any #### Returns item is [number, number] Defined in core/base.ts:105","title":"Function isPoint"},{"location":"converted/api/functions/core_base.isPoint/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_base.round/","text":"round | Photon Photon Preparing search index... core/base round Function round round(n: number, accuracy?: number): number #### Parameters n: number accuracy: number = 0.0000001 #### Returns number Defined in core/base.ts:66 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"round | Photon"},{"location":"converted/api/functions/core_base.round/#function-round","text":"round(n: number, accuracy?: number): number #### Parameters n: number accuracy: number = 0.0000001 #### Returns number Defined in core/base.ts:66","title":"Function round"},{"location":"converted/api/functions/core_base.round/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_base.splitDecimal/","text":"splitDecimal | Photon Photon Preparing search index... core/base splitDecimal Function splitDecimal splitDecimal(n: number): string[] #### Parameters n: number #### Returns string[] Defined in core/base.ts:56 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"splitDecimal | Photon"},{"location":"converted/api/functions/core_base.splitDecimal/#function-splitdecimal","text":"splitDecimal(n: number): string[] #### Parameters n: number #### Returns string[] Defined in core/base.ts:56","title":"Function splitDecimal"},{"location":"converted/api/functions/core_base.splitDecimal/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_boolean-utils.addPathToModel/","text":"addPathToModel | Photon Photon Preparing search index... core/boolean-utils addPathToModel Function addPathToModel addPathToModel(modelContext: IModel , pathContext: IPath , pathId: string): void #### Parameters modelContext: IModel pathContext: IPath pathId: string #### Returns void Defined in core/boolean-utils.ts:86 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"addPathToModel | Photon"},{"location":"converted/api/functions/core_boolean-utils.addPathToModel/#function-addpathtomodel","text":"addPathToModel(modelContext: IModel , pathContext: IPath , pathId: string): void #### Parameters modelContext: IModel pathContext: IPath pathId: string #### Returns void Defined in core/boolean-utils.ts:86","title":"Function addPathToModel"},{"location":"converted/api/functions/core_boolean-utils.addPathToModel/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_boolean-utils.ensurePathLayer/","text":"ensurePathLayer | Photon Photon Preparing search index... core/boolean-utils ensurePathLayer Function ensurePathLayer ensurePathLayer(source: IPath , target: IPath ): void #### Parameters source: IPath target: IPath #### Returns void Defined in core/boolean-utils.ts:40 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"ensurePathLayer | Photon"},{"location":"converted/api/functions/core_boolean-utils.ensurePathLayer/#function-ensurepathlayer","text":"ensurePathLayer(source: IPath , target: IPath ): void #### Parameters source: IPath target: IPath #### Returns void Defined in core/boolean-utils.ts:40","title":"Function ensurePathLayer"},{"location":"converted/api/functions/core_boolean-utils.ensurePathLayer/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_boolean-utils.findPointsOnPath/","text":"findPointsOnPath | Photon Photon Preparing search index... core/boolean-utils findPointsOnPath Function findPointsOnPath findPointsOnPath( points: IPoint [], pathContext: IPath , tolerance?: number, ): IPoint [] #### Parameters points: IPoint [] pathContext: IPath tolerance: number = DEFAULT_POINT_MATCHING_DISTANCE #### Returns IPoint [] Defined in core/boolean-utils.ts:109 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"findPointsOnPath | Photon"},{"location":"converted/api/functions/core_boolean-utils.findPointsOnPath/#function-findpointsonpath","text":"findPointsOnPath( points: IPoint [], pathContext: IPath , tolerance?: number, ): IPoint [] #### Parameters points: IPoint [] pathContext: IPath tolerance: number = DEFAULT_POINT_MATCHING_DISTANCE #### Returns IPoint [] Defined in core/boolean-utils.ts:109","title":"Function findPointsOnPath"},{"location":"converted/api/functions/core_boolean-utils.findPointsOnPath/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_boolean-utils.isArcEnclosingAngle/","text":"isArcEnclosingAngle | Photon Photon Preparing search index... core/boolean-utils isArcEnclosingAngle Function isArcEnclosingAngle isArcEnclosingAngle( arc: IPathArc , angleInQuestion: number, exclusive?: boolean, ): boolean #### Parameters arc: IPathArc angleInQuestion: number exclusive: boolean = false #### Returns boolean Defined in core/boolean-utils.ts:26 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"isArcEnclosingAngle | Photon"},{"location":"converted/api/functions/core_boolean-utils.isArcEnclosingAngle/#function-isarcenclosingangle","text":"isArcEnclosingAngle( arc: IPathArc , angleInQuestion: number, exclusive?: boolean, ): boolean #### Parameters arc: IPathArc angleInQuestion: number exclusive: boolean = false #### Returns boolean Defined in core/boolean-utils.ts:26","title":"Function isArcEnclosingAngle"},{"location":"converted/api/functions/core_boolean-utils.isArcEnclosingAngle/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_boolean-utils.isBetween/","text":"isBetween | Photon Photon Preparing search index... core/boolean-utils isBetween Function isBetween isBetween( valueInQuestion: number, limitA: number, limitB: number, exclusive: boolean, tolerance?: number, ): boolean #### Parameters valueInQuestion: number limitA: number limitB: number exclusive: boolean tolerance: number = DEFAULT_POINT_MATCHING_DISTANCE #### Returns boolean Defined in core/boolean-utils.ts:46 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"isBetween | Photon"},{"location":"converted/api/functions/core_boolean-utils.isBetween/#function-isbetween","text":"isBetween( valueInQuestion: number, limitA: number, limitB: number, exclusive: boolean, tolerance?: number, ): boolean #### Parameters valueInQuestion: number limitA: number limitB: number exclusive: boolean tolerance: number = DEFAULT_POINT_MATCHING_DISTANCE #### Returns boolean Defined in core/boolean-utils.ts:46","title":"Function isBetween"},{"location":"converted/api/functions/core_boolean-utils.isBetween/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_boolean-utils.isBetweenArcAngles/","text":"isBetweenArcAngles | Photon Photon Preparing search index... core/boolean-utils isBetweenArcAngles Function isBetweenArcAngles isBetweenArcAngles( angleInQuestion: number, arc: IPathArc , exclusive: boolean, tolerance?: number, ): boolean #### Parameters angleInQuestion: number arc: IPathArc exclusive: boolean tolerance: number = DEFAULT_POINT_MATCHING_DISTANCE #### Returns boolean Defined in core/boolean-utils.ts:55 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"isBetweenArcAngles | Photon"},{"location":"converted/api/functions/core_boolean-utils.isBetweenArcAngles/#function-isbetweenarcangles","text":"isBetweenArcAngles( angleInQuestion: number, arc: IPathArc , exclusive: boolean, tolerance?: number, ): boolean #### Parameters angleInQuestion: number arc: IPathArc exclusive: boolean tolerance: number = DEFAULT_POINT_MATCHING_DISTANCE #### Returns boolean Defined in core/boolean-utils.ts:55","title":"Function isBetweenArcAngles"},{"location":"converted/api/functions/core_boolean-utils.isBetweenArcAngles/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_boolean-utils.isBetweenPoints/","text":"isBetweenPoints | Photon Photon Preparing search index... core/boolean-utils isBetweenPoints Function isBetweenPoints isBetweenPoints( pointInQuestion: IPoint , line: IPathLine , exclusive: boolean, tolerance?: number, ): boolean #### Parameters pointInQuestion: IPoint line: IPathLine exclusive: boolean tolerance: number = DEFAULT_POINT_MATCHING_DISTANCE #### Returns boolean Defined in core/boolean-utils.ts:66 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"isBetweenPoints | Photon"},{"location":"converted/api/functions/core_boolean-utils.isBetweenPoints/#function-isbetweenpoints","text":"isBetweenPoints( pointInQuestion: IPoint , line: IPathLine , exclusive: boolean, tolerance?: number, ): boolean #### Parameters pointInQuestion: IPoint line: IPathLine exclusive: boolean tolerance: number = DEFAULT_POINT_MATCHING_DISTANCE #### Returns boolean Defined in core/boolean-utils.ts:66","title":"Function isBetweenPoints"},{"location":"converted/api/functions/core_boolean-utils.isBetweenPoints/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_boolean-utils.isCircleOrArc/","text":"isCircleOrArc | Photon Photon Preparing search index... core/boolean-utils isCircleOrArc Function isCircleOrArc isCircleOrArc(pathContext: IPath ): pathContext is IPathCircle | IPathArc #### Parameters pathContext: IPath #### Returns pathContext is IPathCircle | IPathArc Defined in core/boolean-utils.ts:22 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"isCircleOrArc | Photon"},{"location":"converted/api/functions/core_boolean-utils.isCircleOrArc/#function-iscircleorarc","text":"isCircleOrArc(pathContext: IPath ): pathContext is IPathCircle | IPathArc #### Parameters pathContext: IPath #### Returns pathContext is IPathCircle | IPathArc Defined in core/boolean-utils.ts:22","title":"Function isCircleOrArc"},{"location":"converted/api/functions/core_boolean-utils.isCircleOrArc/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_boolean-utils.isZeroLength/","text":"isZeroLength | Photon Photon Preparing search index... core/boolean-utils isZeroLength Function isZeroLength isZeroLength(pathContext: IPath , tolerance?: number): boolean #### Parameters pathContext: IPath tolerance: number = ... #### Returns boolean Defined in core/boolean-utils.ts:18 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"isZeroLength | Photon"},{"location":"converted/api/functions/core_boolean-utils.isZeroLength/#function-iszerolength","text":"isZeroLength(pathContext: IPath , tolerance?: number): boolean #### Parameters pathContext: IPath tolerance: number = ... #### Returns boolean Defined in core/boolean-utils.ts:18","title":"Function isZeroLength"},{"location":"converted/api/functions/core_boolean-utils.isZeroLength/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_boolean-utils.pathBoundingBox/","text":"pathBoundingBox | Photon Photon Preparing search index... core/boolean-utils pathBoundingBox Function pathBoundingBox pathBoundingBox(pathContext: IPath , offset?: IPoint ): IMeasure #### Parameters pathContext: IPath Optional offset: IPoint #### Returns IMeasure Defined in core/boolean-utils.ts:105 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"pathBoundingBox | Photon"},{"location":"converted/api/functions/core_boolean-utils.pathBoundingBox/#function-pathboundingbox","text":"pathBoundingBox(pathContext: IPath , offset?: IPoint ): IMeasure #### Parameters pathContext: IPath Optional offset: IPoint #### Returns IMeasure Defined in core/boolean-utils.ts:105","title":"Function pathBoundingBox"},{"location":"converted/api/functions/core_boolean-utils.pathBoundingBox/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_boolean-utils.trackDeletedPath/","text":"trackDeletedPath | Photon Photon Preparing search index... core/boolean-utils trackDeletedPath Function trackDeletedPath trackDeletedPath( container: { paths: Record IPath > }, deletedPath: IPath , pathId: string, reason: string, routeKey?: string, ): void #### Parameters container: { paths: Record IPath > } deletedPath: IPath pathId: string reason: string Optional routeKey: string #### Returns void Defined in core/boolean-utils.ts:96 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"trackDeletedPath | Photon"},{"location":"converted/api/functions/core_boolean-utils.trackDeletedPath/#function-trackdeletedpath","text":"trackDeletedPath( container: { paths: Record IPath > }, deletedPath: IPath , pathId: string, reason: string, routeKey?: string, ): void #### Parameters container: { paths: Record IPath > } deletedPath: IPath pathId: string reason: string Optional routeKey: string #### Returns void Defined in core/boolean-utils.ts:96","title":"Function trackDeletedPath"},{"location":"converted/api/functions/core_boolean-utils.trackDeletedPath/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_break.breakAtPoint/","text":"breakAtPoint | Photon Photon Preparing search index... core/break breakAtPoint Function breakAtPoint breakAtPoint(pathToBreak: IPath , pointOfBreak: IPoint ): IPath Breaks a path in two. The supplied path will end at the supplied pointOfBreak, a new path is returned which begins at the pointOfBreak and ends at the supplied path's initial end point. For Circle, the original path will be converted in place to an Arc, and null is returned. #### Parameters pathToBreak: IPath The path to break. + pointOfBreak: IPoint The point at which to break the path. #### Returns IPath A new path of the same type, when path type is line or arc. Returns null for circle. Defined in core/break.ts:143 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"breakAtPoint | Photon"},{"location":"converted/api/functions/core_break.breakAtPoint/#function-breakatpoint","text":"breakAtPoint(pathToBreak: IPath , pointOfBreak: IPoint ): IPath Breaks a path in two. The supplied path will end at the supplied pointOfBreak, a new path is returned which begins at the pointOfBreak and ends at the supplied path's initial end point. For Circle, the original path will be converted in place to an Arc, and null is returned. #### Parameters pathToBreak: IPath The path to break. + pointOfBreak: IPoint The point at which to break the path. #### Returns IPath A new path of the same type, when path type is line or arc. Returns null for circle. Defined in core/break.ts:143","title":"Function breakAtPoint"},{"location":"converted/api/functions/core_break.breakAtPoint/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_chain.cycle/","text":"cycle | Photon Photon Preparing search index... core/chain cycle Function cycle cycle(chainContext: IChain , amount?: number): IChain Shift the links of an endless chain. #### Parameters chainContext: IChain Chain to cycle through. Must be endless. + amount: number = 1 Optional number of links to shift. May be negative to cycle backwards. #### Returns IChain The chainContext for cascading. Defined in core/chain.ts:456 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"cycle | Photon"},{"location":"converted/api/functions/core_chain.cycle/#function-cycle","text":"cycle(chainContext: IChain , amount?: number): IChain Shift the links of an endless chain. #### Parameters chainContext: IChain Chain to cycle through. Must be endless. + amount: number = 1 Optional number of links to shift. May be negative to cycle backwards. #### Returns IChain The chainContext for cascading. Defined in core/chain.ts:456","title":"Function cycle"},{"location":"converted/api/functions/core_chain.cycle/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_chain.findChains/","text":"findChains | Photon Photon Preparing search index... core/chain findChains Function findChains findChains( modelContext: IModel , options?: IFindChainsOptions , ): IChain [] | IChainsMap Find paths that have common endpoints and form chains. #### Parameters modelContext: IModel The model to search for chains. + Optional options: IFindChainsOptions Optional options object. #### Returns IChain [] | IChainsMap An array of chains, or a map (keyed by layer id) of arrays of chains - if options.byLayers is true. Defined in core/chain.ts:160 findChains( modelContext: IModel , callback: IChainCallback , options?: IFindChainsOptions , ): IChain [] | IChainsMap Find paths that have common endpoints and form chains. #### Parameters modelContext: IModel The model to search for chains. + callback: IChainCallback Callback function when chains are found. + Optional options: IFindChainsOptions Optional options object. #### Returns IChain [] | IChainsMap An array of chains, or a map (keyed by layer id) of arrays of chains - if options.byLayers is true. Defined in core/chain.ts:170 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"findChains | Photon"},{"location":"converted/api/functions/core_chain.findChains/#function-findchains","text":"findChains( modelContext: IModel , options?: IFindChainsOptions , ): IChain [] | IChainsMap Find paths that have common endpoints and form chains. #### Parameters modelContext: IModel The model to search for chains. + Optional options: IFindChainsOptions Optional options object. #### Returns IChain [] | IChainsMap An array of chains, or a map (keyed by layer id) of arrays of chains - if options.byLayers is true. Defined in core/chain.ts:160 findChains( modelContext: IModel , callback: IChainCallback , options?: IFindChainsOptions , ): IChain [] | IChainsMap Find paths that have common endpoints and form chains. #### Parameters modelContext: IModel The model to search for chains. + callback: IChainCallback Callback function when chains are found. + Optional options: IFindChainsOptions Optional options object. #### Returns IChain [] | IChainsMap An array of chains, or a map (keyed by layer id) of arrays of chains - if options.byLayers is true. Defined in core/chain.ts:170","title":"Function findChains"},{"location":"converted/api/functions/core_chain.findChains/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_chain.findSingleChain/","text":"findSingleChain | Photon Photon Preparing search index... core/chain findSingleChain Function findSingleChain findSingleChain(modelContext: IModel ): IChain Find a single chain within a model, across all layers. Shorthand of findChains; useful when you know there is only one chain to find in your model. #### Parameters modelContext: IModel The model to search for a chain. #### Returns IChain A chain object or null if chains were not found. Defined in core/chain.ts:132 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"findSingleChain | Photon"},{"location":"converted/api/functions/core_chain.findSingleChain/#function-findsinglechain","text":"findSingleChain(modelContext: IModel ): IChain Find a single chain within a model, across all layers. Shorthand of findChains; useful when you know there is only one chain to find in your model. #### Parameters modelContext: IModel The model to search for a chain. #### Returns IChain A chain object or null if chains were not found. Defined in core/chain.ts:132","title":"Function findSingleChain"},{"location":"converted/api/functions/core_chain.findSingleChain/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_chain.reverse/","text":"reverse | Photon Photon Preparing search index... core/chain reverse Function reverse reverse(chainContext: IChain ): IChain Reverse the links of a chain. #### Parameters chainContext: IChain Chain to reverse. #### Returns IChain The chainContext for cascading. Defined in core/chain.ts:486 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"reverse | Photon"},{"location":"converted/api/functions/core_chain.reverse/#function-reverse","text":"reverse(chainContext: IChain ): IChain Reverse the links of a chain. #### Parameters chainContext: IChain Chain to reverse. #### Returns IChain The chainContext for cascading. Defined in core/chain.ts:486","title":"Function reverse"},{"location":"converted/api/functions/core_chain.reverse/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_chain.startAt/","text":"startAt | Photon Photon Preparing search index... core/chain startAt Function startAt startAt(chainContext: IChain , routeKey: string): IChain Set the beginning of an endless chain to a known routeKey of a path. #### Parameters chainContext: IChain Chain to cycle through. Must be endless. + routeKey: string RouteKey of the desired path to start the chain with. #### Returns IChain The chainContext for cascading. Defined in core/chain.ts:499 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"startAt | Photon"},{"location":"converted/api/functions/core_chain.startAt/#function-startat","text":"startAt(chainContext: IChain , routeKey: string): IChain Set the beginning of an endless chain to a known routeKey of a path. #### Parameters chainContext: IChain Chain to cycle through. Must be endless. + routeKey: string RouteKey of the desired path to start the chain with. #### Returns IChain The chainContext for cascading. Defined in core/chain.ts:499","title":"Function startAt"},{"location":"converted/api/functions/core_chain.startAt/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_chain.toKeyPoints/","text":"toKeyPoints | Photon Photon Preparing search index... core/chain toKeyPoints Function toKeyPoints toKeyPoints(chainContext: IChain , maxArcFacet?: number): IPoint [] Get key points (a minimal a number of points) along a chain of paths. #### Parameters chainContext: IChain Chain of paths to get points from. + Optional maxArcFacet: number The maximum length between points on an arc or circle. #### Returns IPoint [] Array of points which are on the chain. Defined in core/chain.ts:631 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"toKeyPoints | Photon"},{"location":"converted/api/functions/core_chain.toKeyPoints/#function-tokeypoints","text":"toKeyPoints(chainContext: IChain , maxArcFacet?: number): IPoint [] Get key points (a minimal a number of points) along a chain of paths. #### Parameters chainContext: IChain Chain of paths to get points from. + Optional maxArcFacet: number The maximum length between points on an arc or circle. #### Returns IPoint [] Array of points which are on the chain. Defined in core/chain.ts:631","title":"Function toKeyPoints"},{"location":"converted/api/functions/core_chain.toKeyPoints/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_chain.toNewModel/","text":"toNewModel | Photon Photon Preparing search index... core/chain toNewModel Function toNewModel toNewModel(chainContext: IChain , detachFromOldModel?: boolean): IModel Convert a chain to a new model, independent of any model from where the chain was found. #### Parameters chainContext: IChain Chain to convert to a model. + detachFromOldModel: boolean = false Flag to remove the chain's paths from their current parent model. If false, each path will be cloned. If true, the original path will be re-parented into the resulting new model. Default is false. #### Returns IModel A new model containing paths from the chain. Defined in core/chain.ts:522 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"toNewModel | Photon"},{"location":"converted/api/functions/core_chain.toNewModel/#function-tonewmodel","text":"toNewModel(chainContext: IChain , detachFromOldModel?: boolean): IModel Convert a chain to a new model, independent of any model from where the chain was found. #### Parameters chainContext: IChain Chain to convert to a model. + detachFromOldModel: boolean = false Flag to remove the chain's paths from their current parent model. If false, each path will be cloned. If true, the original path will be re-parented into the resulting new model. Default is false. #### Returns IModel A new model containing paths from the chain. Defined in core/chain.ts:522","title":"Function toNewModel"},{"location":"converted/api/functions/core_chain.toNewModel/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_chain.toPoints/","text":"toPoints | Photon Photon Preparing search index... core/chain toPoints Function toPoints toPoints( chainContext: IChain , distanceOrDistances: number | number[], maxPoints?: number, ): IPoint [] Get points along a chain of paths. #### Parameters chainContext: IChain Chain of paths to get points from. + distanceOrDistances: number | number[] + Optional maxPoints: number Maximum number of points to retrieve. #### Returns IPoint [] Array of points which are on the chain spread at a uniform interval. Defined in core/chain.ts:577 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"toPoints | Photon"},{"location":"converted/api/functions/core_chain.toPoints/#function-topoints","text":"toPoints( chainContext: IChain , distanceOrDistances: number | number[], maxPoints?: number, ): IPoint [] Get points along a chain of paths. #### Parameters chainContext: IChain Chain of paths to get points from. + distanceOrDistances: number | number[] + Optional maxPoints: number Maximum number of points to retrieve. #### Returns IPoint [] Array of points which are on the chain spread at a uniform interval. Defined in core/chain.ts:577","title":"Function toPoints"},{"location":"converted/api/functions/core_chain.toPoints/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_combine.breakPathsAtIntersections/","text":"breakPathsAtIntersections | Photon Photon Preparing search index... core/combine breakPathsAtIntersections Function breakPathsAtIntersections breakPathsAtIntersections( modelToBreak: IModel , modelToIntersect?: IModel , ): IModel #### Parameters modelToBreak: IModel Optional modelToIntersect: IModel #### Returns IModel Defined in core/combine.ts:294 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"breakPathsAtIntersections | Photon"},{"location":"converted/api/functions/core_combine.breakPathsAtIntersections/#function-breakpathsatintersections","text":"breakPathsAtIntersections( modelToBreak: IModel , modelToIntersect?: IModel , ): IModel #### Parameters modelToBreak: IModel Optional modelToIntersect: IModel #### Returns IModel Defined in core/combine.ts:294","title":"Function breakPathsAtIntersections"},{"location":"converted/api/functions/core_combine.breakPathsAtIntersections/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_combine.combine/","text":"combine | Photon Photon Preparing search index... core/combine combine Function combine combine( modelA: IModel , modelB: IModel , includeAInsideB?: boolean, includeAOutsideB?: boolean, includeBInsideA?: boolean, includeBOutsideA?: boolean, options?: ICombineOptions , ): IModel #### Parameters modelA: IModel modelB: IModel includeAInsideB: boolean = false includeAOutsideB: boolean = true includeBInsideA: boolean = false includeBOutsideA: boolean = true Optional options: ICombineOptions #### Returns IModel Defined in core/combine.ts:313 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"combine | Photon"},{"location":"converted/api/functions/core_combine.combine/#function-combine","text":"combine( modelA: IModel , modelB: IModel , includeAInsideB?: boolean, includeAOutsideB?: boolean, includeBInsideA?: boolean, includeBOutsideA?: boolean, options?: ICombineOptions , ): IModel #### Parameters modelA: IModel modelB: IModel includeAInsideB: boolean = false includeAOutsideB: boolean = true includeBInsideA: boolean = false includeBOutsideA: boolean = true Optional options: ICombineOptions #### Returns IModel Defined in core/combine.ts:313","title":"Function combine"},{"location":"converted/api/functions/core_combine.combine/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_combine.combineIntersection/","text":"combineIntersection | Photon Photon Preparing search index... core/combine combineIntersection Function combineIntersection combineIntersection(modelA: IModel , modelB: IModel ): IModel #### Parameters modelA: IModel modelB: IModel #### Returns IModel Defined in core/combine.ts:385 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"combineIntersection | Photon"},{"location":"converted/api/functions/core_combine.combineIntersection/#function-combineintersection","text":"combineIntersection(modelA: IModel , modelB: IModel ): IModel #### Parameters modelA: IModel modelB: IModel #### Returns IModel Defined in core/combine.ts:385","title":"Function combineIntersection"},{"location":"converted/api/functions/core_combine.combineIntersection/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_combine.combineSubtraction/","text":"combineSubtraction | Photon Photon Preparing search index... core/combine combineSubtraction Function combineSubtraction combineSubtraction(modelA: IModel , modelB: IModel ): IModel #### Parameters modelA: IModel modelB: IModel #### Returns IModel Defined in core/combine.ts:389 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"combineSubtraction | Photon"},{"location":"converted/api/functions/core_combine.combineSubtraction/#function-combinesubtraction","text":"combineSubtraction(modelA: IModel , modelB: IModel ): IModel #### Parameters modelA: IModel modelB: IModel #### Returns IModel Defined in core/combine.ts:389","title":"Function combineSubtraction"},{"location":"converted/api/functions/core_combine.combineSubtraction/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_combine.combineUnion/","text":"combineUnion | Photon Photon Preparing search index... core/combine combineUnion Function combineUnion combineUnion(modelA: IModel , modelB: IModel ): IModel #### Parameters modelA: IModel modelB: IModel #### Returns IModel Defined in core/combine.ts:393 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"combineUnion | Photon"},{"location":"converted/api/functions/core_combine.combineUnion/#function-combineunion","text":"combineUnion(modelA: IModel , modelB: IModel ): IModel #### Parameters modelA: IModel modelB: IModel #### Returns IModel Defined in core/combine.ts:393","title":"Function combineUnion"},{"location":"converted/api/functions/core_combine.combineUnion/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_combine.isPathInsideModel/","text":"isPathInsideModel | Photon Photon Preparing search index... core/combine isPathInsideModel Function isPathInsideModel isPathInsideModel( pathContext: IPath , modelContext: IModel , pathOffset?: IPoint , farPoint?: IPoint , measureAtlas?: any, ): boolean #### Parameters pathContext: IPath modelContext: IModel Optional pathOffset: IPoint Optional farPoint: IPoint Optional measureAtlas: any #### Returns boolean Defined in core/combine.ts:143 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"isPathInsideModel | Photon"},{"location":"converted/api/functions/core_combine.isPathInsideModel/#function-ispathinsidemodel","text":"isPathInsideModel( pathContext: IPath , modelContext: IModel , pathOffset?: IPoint , farPoint?: IPoint , measureAtlas?: any, ): boolean #### Parameters pathContext: IPath modelContext: IModel Optional pathOffset: IPoint Optional farPoint: IPoint Optional measureAtlas: any #### Returns boolean Defined in core/combine.ts:143","title":"Function isPathInsideModel"},{"location":"converted/api/functions/core_combine.isPathInsideModel/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_deadend.removeDeadEnds/","text":"removeDeadEnds | Photon Photon Preparing search index... core/deadend removeDeadEnds Function removeDeadEnds removeDeadEnds( modelContext: IModel , pointMatchingDistance?: number, keep?: IWalkPathBooleanCallback , trackDeleted?: (wp: IWalkPath , reason: string) => void, ): IModel Remove paths from a model which have endpoints that do not connect to other paths. #### Parameters modelContext: IModel The model to search for dead ends. + Optional pointMatchingDistance: number Optional max distance to consider two points as the same. + Optional keep: IWalkPathBooleanCallback Optional callback function (which should return a boolean) to decide if a dead end path should be kept instead. + Optional trackDeleted: (wp: IWalkPath , reason: string) => void Optional callback function which will log discarded paths and the reason they were discarded. #### Returns IModel The input model (for cascading). Defined in core/deadend.ts:141 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"removeDeadEnds | Photon"},{"location":"converted/api/functions/core_deadend.removeDeadEnds/#function-removedeadends","text":"removeDeadEnds( modelContext: IModel , pointMatchingDistance?: number, keep?: IWalkPathBooleanCallback , trackDeleted?: (wp: IWalkPath , reason: string) => void, ): IModel Remove paths from a model which have endpoints that do not connect to other paths. #### Parameters modelContext: IModel The model to search for dead ends. + Optional pointMatchingDistance: number Optional max distance to consider two points as the same. + Optional keep: IWalkPathBooleanCallback Optional callback function (which should return a boolean) to decide if a dead end path should be kept instead. + Optional trackDeleted: (wp: IWalkPath , reason: string) => void Optional callback function which will log discarded paths and the reason they were discarded. #### Returns IModel The input model (for cascading). Defined in core/deadend.ts:141","title":"Function removeDeadEnds"},{"location":"converted/api/functions/core_deadend.removeDeadEnds/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_dxf.toDXF/","text":"toDXF | Photon Photon Preparing search index... core/dxf toDXF Function toDXF Renders an item in AutoDesk DFX file format. Param: itemToExport Item to render: may be a path, an array of paths, or a model object. Param: options Rendering options object. Param: options.units String of the unit system. May be omitted. See makerjs.unitType for possible values. Returns String of DXF content. toDXF(modelToExport: IModel , options?: IDXFRenderOptions ): string #### Parameters modelToExport: IModel Optional options: IDXFRenderOptions #### Returns string Defined in core/dxf.ts:22 toDXF(pathsToExport: IPath [], options?: IDXFRenderOptions ): string #### Parameters pathsToExport: IPath [] Optional options: IDXFRenderOptions #### Returns string Defined in core/dxf.ts:23 toDXF(pathToExport: IPath , options?: IDXFRenderOptions ): string #### Parameters pathToExport: IPath Optional options: IDXFRenderOptions #### Returns string Defined in core/dxf.ts:24 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"toDXF | Photon"},{"location":"converted/api/functions/core_dxf.toDXF/#function-todxf","text":"Renders an item in AutoDesk DFX file format.","title":"Function toDXF"},{"location":"converted/api/functions/core_dxf.toDXF/#param-itemtoexport","text":"Item to render: may be a path, an array of paths, or a model object.","title":"Param: itemToExport"},{"location":"converted/api/functions/core_dxf.toDXF/#param-options","text":"Rendering options object.","title":"Param: options"},{"location":"converted/api/functions/core_dxf.toDXF/#param-optionsunits","text":"String of the unit system. May be omitted. See makerjs.unitType for possible values.","title":"Param: options.units"},{"location":"converted/api/functions/core_dxf.toDXF/#returns","text":"String of DXF content. toDXF(modelToExport: IModel , options?: IDXFRenderOptions ): string #### Parameters modelToExport: IModel Optional options: IDXFRenderOptions #### Returns string Defined in core/dxf.ts:22 toDXF(pathsToExport: IPath [], options?: IDXFRenderOptions ): string #### Parameters pathsToExport: IPath [] Optional options: IDXFRenderOptions #### Returns string Defined in core/dxf.ts:23 toDXF(pathToExport: IPath , options?: IDXFRenderOptions ): string #### Parameters pathToExport: IPath Optional options: IDXFRenderOptions #### Returns string Defined in core/dxf.ts:24","title":"Returns"},{"location":"converted/api/functions/core_dxf.toDXF/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_equal.isAngleEqual/","text":"isAngleEqual | Photon Photon Preparing search index... core/equal isAngleEqual Function isAngleEqual isAngleEqual(angleA: number, angleB: number, accuracy?: number): boolean Find out if two angles are equal. #### Parameters angleA: number angleB: number accuracy: number = .0001 #### Returns boolean Defined in core/equal.ts:11 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"isAngleEqual | Photon"},{"location":"converted/api/functions/core_equal.isAngleEqual/#function-isangleequal","text":"isAngleEqual(angleA: number, angleB: number, accuracy?: number): boolean Find out if two angles are equal. #### Parameters angleA: number angleB: number accuracy: number = .0001 #### Returns boolean Defined in core/equal.ts:11","title":"Function isAngleEqual"},{"location":"converted/api/functions/core_equal.isAngleEqual/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_equal.isPathEqual/","text":"isPathEqual | Photon Photon Preparing search index... core/equal isPathEqual Function isPathEqual isPathEqual( pathA: IPath , pathB: IPath , withinPointDistance?: number, pathAOffset?: IPoint , pathBOffset?: IPoint , ): boolean Find out if two paths are equal. #### Parameters pathA: IPath pathB: IPath Optional withinPointDistance: number Optional pathAOffset: IPoint Optional pathBOffset: IPoint #### Returns boolean Defined in core/equal.ts:38 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"isPathEqual | Photon"},{"location":"converted/api/functions/core_equal.isPathEqual/#function-ispathequal","text":"isPathEqual( pathA: IPath , pathB: IPath , withinPointDistance?: number, pathAOffset?: IPoint , pathBOffset?: IPoint , ): boolean Find out if two paths are equal. #### Parameters pathA: IPath pathB: IPath Optional withinPointDistance: number Optional pathAOffset: IPoint Optional pathBOffset: IPoint #### Returns boolean Defined in core/equal.ts:38","title":"Function isPathEqual"},{"location":"converted/api/functions/core_equal.isPathEqual/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_equal.isPointDistinct/","text":"isPointDistinct | Photon Photon Preparing search index... core/equal isPointDistinct Function isPointDistinct isPointDistinct( pointToCheck: IPoint , pointArray: IPoint [], withinDistance?: number, ): boolean Find out if a point is distinct among an array of points. #### Parameters pointToCheck: IPoint pointArray: IPoint [] Optional withinDistance: number #### Returns boolean Defined in core/equal.ts:78 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"isPointDistinct | Photon"},{"location":"converted/api/functions/core_equal.isPointDistinct/#function-ispointdistinct","text":"isPointDistinct( pointToCheck: IPoint , pointArray: IPoint [], withinDistance?: number, ): boolean Find out if a point is distinct among an array of points. #### Parameters pointToCheck: IPoint pointArray: IPoint [] Optional withinDistance: number #### Returns boolean Defined in core/equal.ts:78","title":"Function isPointDistinct"},{"location":"converted/api/functions/core_equal.isPointDistinct/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_equal.isPointEqual/","text":"isPointEqual | Photon Photon Preparing search index... core/equal isPointEqual Function isPointEqual isPointEqual(a: IPoint , b: IPoint , withinDistance?: number): boolean Find out if two points are equal. #### Parameters a: IPoint b: IPoint Optional withinDistance: number #### Returns boolean Defined in core/equal.ts:60 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"isPointEqual | Photon"},{"location":"converted/api/functions/core_equal.isPointEqual/#function-ispointequal","text":"isPointEqual(a: IPoint , b: IPoint , withinDistance?: number): boolean Find out if two points are equal. #### Parameters a: IPoint b: IPoint Optional withinDistance: number #### Returns boolean Defined in core/equal.ts:60","title":"Function isPointEqual"},{"location":"converted/api/functions/core_equal.isPointEqual/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_equal.isPointOnCircle/","text":"isPointOnCircle | Photon Photon Preparing search index... core/equal isPointOnCircle Function isPointOnCircle isPointOnCircle( p: IPoint , circle: IPathCircle , withinDistance?: number, ): boolean Find out if point is on a circle. #### Parameters p: IPoint circle: IPathCircle withinDistance: number = 0 #### Returns boolean Defined in core/equal.ts:99 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"isPointOnCircle | Photon"},{"location":"converted/api/functions/core_equal.isPointOnCircle/#function-ispointoncircle","text":"isPointOnCircle( p: IPoint , circle: IPathCircle , withinDistance?: number, ): boolean Find out if point is on a circle. #### Parameters p: IPoint circle: IPathCircle withinDistance: number = 0 #### Returns boolean Defined in core/equal.ts:99","title":"Function isPointOnCircle"},{"location":"converted/api/functions/core_equal.isPointOnCircle/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_equal.isPointOnPath/","text":"isPointOnPath | Photon Photon Preparing search index... core/equal isPointOnPath Function isPointOnPath isPointOnPath( pointToCheck: IPoint , onPath: IPath , withinDistance?: number, pathOffset?: IPoint , options?: IIsPointOnPathOptions , ): boolean Find out if a point lies on a path. #### Parameters pointToCheck: IPoint onPath: IPath withinDistance: number = 0 Optional pathOffset: IPoint Optional options: IIsPointOnPathOptions #### Returns boolean Defined in core/equal.ts:127 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"isPointOnPath | Photon"},{"location":"converted/api/functions/core_equal.isPointOnPath/#function-ispointonpath","text":"isPointOnPath( pointToCheck: IPoint , onPath: IPath , withinDistance?: number, pathOffset?: IPoint , options?: IIsPointOnPathOptions , ): boolean Find out if a point lies on a path. #### Parameters pointToCheck: IPoint onPath: IPath withinDistance: number = 0 Optional pathOffset: IPoint Optional options: IIsPointOnPathOptions #### Returns boolean Defined in core/equal.ts:127","title":"Function isPointOnPath"},{"location":"converted/api/functions/core_equal.isPointOnPath/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_equal.isPointOnSlope/","text":"isPointOnSlope | Photon Photon Preparing search index... core/equal isPointOnSlope Function isPointOnSlope isPointOnSlope(p: IPoint , slope: ISlope , withinDistance?: number): boolean Find out if point is on a slope. #### Parameters p: IPoint slope: ISlope withinDistance: number = 0 #### Returns boolean Defined in core/equal.ts:88 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"isPointOnSlope | Photon"},{"location":"converted/api/functions/core_equal.isPointOnSlope/#function-ispointonslope","text":"isPointOnSlope(p: IPoint , slope: ISlope , withinDistance?: number): boolean Find out if point is on a slope. #### Parameters p: IPoint slope: ISlope withinDistance: number = 0 #### Returns boolean Defined in core/equal.ts:88","title":"Function isPointOnSlope"},{"location":"converted/api/functions/core_equal.isPointOnSlope/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_equal.isSlopeEqual/","text":"isSlopeEqual | Photon Photon Preparing search index... core/equal isSlopeEqual Function isSlopeEqual isSlopeEqual(slopeA: ISlope , slopeB: ISlope ): boolean Check for slope equality. #### Parameters slopeA: ISlope slopeB: ISlope #### Returns boolean Defined in core/equal.ts:137 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"isSlopeEqual | Photon"},{"location":"converted/api/functions/core_equal.isSlopeEqual/#function-isslopeequal","text":"isSlopeEqual(slopeA: ISlope , slopeB: ISlope ): boolean Check for slope equality. #### Parameters slopeA: ISlope slopeB: ISlope #### Returns boolean Defined in core/equal.ts:137","title":"Function isSlopeEqual"},{"location":"converted/api/functions/core_equal.isSlopeEqual/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_equal.isSlopeParallel/","text":"isSlopeParallel | Photon Photon Preparing search index... core/equal isSlopeParallel Function isSlopeParallel isSlopeParallel(slopeA: ISlope , slopeB: ISlope ): boolean Check for parallel slopes. #### Parameters slopeA: ISlope slopeB: ISlope #### Returns boolean Defined in core/equal.ts:158 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"isSlopeParallel | Photon"},{"location":"converted/api/functions/core_equal.isSlopeParallel/#function-isslopeparallel","text":"isSlopeParallel(slopeA: ISlope , slopeB: ISlope ): boolean Check for parallel slopes. #### Parameters slopeA: ISlope slopeB: ISlope #### Returns boolean Defined in core/equal.ts:158","title":"Function isSlopeParallel"},{"location":"converted/api/functions/core_equal.isSlopeParallel/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_expand.expand/","text":"expand | Photon Photon Preparing search index... core/expand expand Function expand expand(pathToExpand: IPath , expansion: number, isolateCaps?: boolean): IModel #### Parameters pathToExpand: IPath expansion: number isolateCaps: boolean = false #### Returns IModel Defined in core/expand.ts:36 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"expand | Photon"},{"location":"converted/api/functions/core_expand.expand/#function-expand","text":"expand(pathToExpand: IPath , expansion: number, isolateCaps?: boolean): IModel #### Parameters pathToExpand: IPath expansion: number isolateCaps: boolean = false #### Returns IModel Defined in core/expand.ts:36","title":"Function expand"},{"location":"converted/api/functions/core_expand.expand/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_expand.expandPaths/","text":"expandPaths | Photon Photon Preparing search index... core/expand expandPaths Function expandPaths expandPaths( modelToExpand: IModel , distance: number, joints?: number, combineOptions?: ICombineOptions , ): IModel #### Parameters modelToExpand: IModel distance: number joints: number = 0 combineOptions: ICombineOptions = {} #### Returns IModel Defined in core/expand.ts:81 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"expandPaths | Photon"},{"location":"converted/api/functions/core_expand.expandPaths/#function-expandpaths","text":"expandPaths( modelToExpand: IModel , distance: number, joints?: number, combineOptions?: ICombineOptions , ): IModel #### Parameters modelToExpand: IModel distance: number joints: number = 0 combineOptions: ICombineOptions = {} #### Returns IModel Defined in core/expand.ts:81","title":"Function expandPaths"},{"location":"converted/api/functions/core_expand.expandPaths/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_expand.outline/","text":"outline | Photon Photon Preparing search index... core/expand outline Function outline outline( modelToOutline: IModel , distance: number, joints?: number, inside?: boolean, options?: ICombineOptions , ): IModel #### Parameters modelToOutline: IModel distance: number joints: number = 0 inside: boolean = false options: ICombineOptions = {} #### Returns IModel Defined in core/expand.ts:196 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"outline | Photon"},{"location":"converted/api/functions/core_expand.outline/#function-outline","text":"outline( modelToOutline: IModel , distance: number, joints?: number, inside?: boolean, options?: ICombineOptions , ): IModel #### Parameters modelToOutline: IModel distance: number joints: number = 0 inside: boolean = false options: ICombineOptions = {} #### Returns IModel Defined in core/expand.ts:196","title":"Function outline"},{"location":"converted/api/functions/core_expand.outline/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_expand.straighten/","text":"straighten | Photon Photon Preparing search index... core/expand straighten Function straighten straighten( arc: IPathArc , bevel?: boolean, prefix?: string, close?: boolean, ): IModel #### Parameters arc: IPathArc Optional bevel: boolean Optional prefix: string Optional close: boolean #### Returns IModel Defined in core/expand.ts:46 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"straighten | Photon"},{"location":"converted/api/functions/core_expand.straighten/#function-straighten","text":"straighten( arc: IPathArc , bevel?: boolean, prefix?: string, close?: boolean, ): IModel #### Parameters arc: IPathArc Optional bevel: boolean Optional prefix: string Optional close: boolean #### Returns IModel Defined in core/expand.ts:46","title":"Function straighten"},{"location":"converted/api/functions/core_expand.straighten/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_exporter.toJson/","text":"toJson | Photon Photon Preparing search index... core/exporter toJson Function toJson toJson(itemToExport: any, options?: IJsonExportOptions ): string Renders an item in JSON. #### Parameters itemToExport: any Item to render: may be a path, an array of paths, or a model object. + options: IJsonExportOptions = {} Rendering options object. Options for JSON export. Optional accuracy?: number Optional exemplar of number of decimal places. - ##### Optional indentation?: number Optional number of characters to indent after a newline. - ##### Optional units?: string Optional unit system to embed in exported file, if the export format allows alternate unit systems. #### Returns string String of DXF content. Defined in core/exporter.ts:42 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"toJson | Photon"},{"location":"converted/api/functions/core_exporter.toJson/#function-tojson","text":"toJson(itemToExport: any, options?: IJsonExportOptions ): string Renders an item in JSON. #### Parameters itemToExport: any Item to render: may be a path, an array of paths, or a model object. + options: IJsonExportOptions = {} Rendering options object. Options for JSON export.","title":"Function toJson"},{"location":"converted/api/functions/core_exporter.toJson/#optionalaccuracy-number","text":"Optional exemplar of number of decimal places. - ##### Optional indentation?: number Optional number of characters to indent after a newline. - ##### Optional units?: string Optional unit system to embed in exported file, if the export format allows alternate unit systems. #### Returns string String of DXF content. Defined in core/exporter.ts:42","title":"Optionalaccuracy?: number"},{"location":"converted/api/functions/core_exporter.toJson/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_fillet-chain.chainDogbone/","text":"chainDogbone | Photon Photon Preparing search index... core/fillet-chain chainDogbone Function chainDogbone chainDogbone( chainToFillet: IChain , filletSpec: number | { left?: number; right?: number }, ): IModel #### Parameters chainToFillet: IChain filletSpec: number | { left?: number; right?: number } #### Returns IModel Defined in core/fillet-chain.ts:7 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"chainDogbone | Photon"},{"location":"converted/api/functions/core_fillet-chain.chainDogbone/#function-chaindogbone","text":"chainDogbone( chainToFillet: IChain , filletSpec: number | { left?: number; right?: number }, ): IModel #### Parameters chainToFillet: IChain filletSpec: number | { left?: number; right?: number } #### Returns IModel Defined in core/fillet-chain.ts:7","title":"Function chainDogbone"},{"location":"converted/api/functions/core_fillet-chain.chainDogbone/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_fillet-chain.chainFillet/","text":"chainFillet | Photon Photon Preparing search index... core/fillet-chain chainFillet Function chainFillet chainFillet( chainToFillet: IChain , filletSpec: number | { left?: number; right?: number }, ): IModel #### Parameters chainToFillet: IChain filletSpec: number | { left?: number; right?: number } #### Returns IModel Defined in core/fillet-chain.ts:11 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"chainFillet | Photon"},{"location":"converted/api/functions/core_fillet-chain.chainFillet/#function-chainfillet","text":"chainFillet( chainToFillet: IChain , filletSpec: number | { left?: number; right?: number }, ): IModel #### Parameters chainToFillet: IChain filletSpec: number | { left?: number; right?: number } #### Returns IModel Defined in core/fillet-chain.ts:11","title":"Function chainFillet"},{"location":"converted/api/functions/core_fillet-chain.chainFillet/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_fillet-path.pathDogbone/","text":"pathDogbone | Photon Photon Preparing search index... core/fillet-path pathDogbone Function pathDogbone pathDogbone( lineA: IPathLine , lineB: IPathLine , filletRadius: number, options?: IPointMatchOptions , ): IPathArc #### Parameters lineA: IPathLine lineB: IPathLine filletRadius: number Optional options: IPointMatchOptions #### Returns IPathArc Defined in core/fillet-path.ts:18 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"pathDogbone | Photon"},{"location":"converted/api/functions/core_fillet-path.pathDogbone/#function-pathdogbone","text":"pathDogbone( lineA: IPathLine , lineB: IPathLine , filletRadius: number, options?: IPointMatchOptions , ): IPathArc #### Parameters lineA: IPathLine lineB: IPathLine filletRadius: number Optional options: IPointMatchOptions #### Returns IPathArc Defined in core/fillet-path.ts:18","title":"Function pathDogbone"},{"location":"converted/api/functions/core_fillet-path.pathDogbone/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_fillet-path.pathFillet/","text":"pathFillet | Photon Photon Preparing search index... core/fillet-path pathFillet Function pathFillet pathFillet( pathA: IPath , pathB: IPath , filletRadius: number, options?: IPointMatchOptions , ): IPathArc #### Parameters pathA: IPath pathB: IPath filletRadius: number Optional options: IPointMatchOptions #### Returns IPathArc Defined in core/fillet-path.ts:55 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"pathFillet | Photon"},{"location":"converted/api/functions/core_fillet-path.pathFillet/#function-pathfillet","text":"pathFillet( pathA: IPath , pathB: IPath , filletRadius: number, options?: IPointMatchOptions , ): IPathArc #### Parameters pathA: IPath pathB: IPath filletRadius: number Optional options: IPointMatchOptions #### Returns IPathArc Defined in core/fillet-path.ts:55","title":"Function pathFillet"},{"location":"converted/api/functions/core_fillet-path.pathFillet/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_importer.parseNumericList/","text":"parseNumericList | Photon Photon Preparing search index... core/importer parseNumericList Function parseNumericList parseNumericList(s: string): number[] Create a numeric array from a string of numbers. The numbers may be delimited by anything non-numeric. Example: const n = makerjs.importer.parseNumericList('5, 10, 15.20 25-30-35 4e1 .5'); Copy #### Parameters s: string The string of numbers. #### Returns number[] Array of numbers. Defined in core/importer.ts:12 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"parseNumericList | Photon"},{"location":"converted/api/functions/core_importer.parseNumericList/#function-parsenumericlist","text":"parseNumericList(s: string): number[] Create a numeric array from a string of numbers. The numbers may be delimited by anything non-numeric. Example: const n = makerjs.importer.parseNumericList('5, 10, 15.20 25-30-35 4e1 .5'); Copy #### Parameters s: string The string of numbers. #### Returns number[] Array of numbers. Defined in core/importer.ts:12","title":"Function parseNumericList"},{"location":"converted/api/functions/core_importer.parseNumericList/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_intersect.intersection/","text":"intersection | Photon Photon Preparing search index... core/intersect intersection Function intersection intersection( path1: IPath , path2: IPath , options?: IPathIntersectionOptions , ): IPathIntersection Find the point(s) where 2 paths intersect. #### Parameters path1: IPath First path to find intersection. + path2: IPath Second path to find intersection. + options: IPathIntersectionOptions = {} Optional IPathIntersectionOptions. #### Returns IPathIntersection IPathIntersection object, with points(s) of intersection (and angles, when a path is an arc or circle); or null if the paths did not intersect. Defined in core/intersect.ts:248 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"intersection | Photon"},{"location":"converted/api/functions/core_intersect.intersection/#function-intersection","text":"intersection( path1: IPath , path2: IPath , options?: IPathIntersectionOptions , ): IPathIntersection Find the point(s) where 2 paths intersect. #### Parameters path1: IPath First path to find intersection. + path2: IPath Second path to find intersection. + options: IPathIntersectionOptions = {} Optional IPathIntersectionOptions. #### Returns IPathIntersection IPathIntersection object, with points(s) of intersection (and angles, when a path is an arc or circle); or null if the paths did not intersect. Defined in core/intersect.ts:248","title":"Function intersection"},{"location":"converted/api/functions/core_intersect.intersection/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_kit.construct/","text":"construct | Photon Photon Preparing search index... core/kit construct Function construct construct(ctor: IKit , args: any): IModel Helper function to use the JavaScript \"apply\" function in conjunction with the \"new\" keyword. #### Parameters ctor: IKit args: any #### Returns IModel Defined in core/kit.ts:5 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"construct | Photon"},{"location":"converted/api/functions/core_kit.construct/#function-construct","text":"construct(ctor: IKit , args: any): IModel Helper function to use the JavaScript \"apply\" function in conjunction with the \"new\" keyword. #### Parameters ctor: IKit args: any #### Returns IModel Defined in core/kit.ts:5","title":"Function construct"},{"location":"converted/api/functions/core_kit.construct/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_kit.getParameterValues/","text":"getParameterValues | Photon Photon Preparing search index... core/kit getParameterValues Function getParameterValues getParameterValues(ctor: IKit ): any[] Extract just the initial sample values from a kit. #### Parameters ctor: IKit #### Returns any[] Defined in core/kit.ts:14 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"getParameterValues | Photon"},{"location":"converted/api/functions/core_kit.getParameterValues/#function-getparametervalues","text":"getParameterValues(ctor: IKit ): any[] Extract just the initial sample values from a kit. #### Parameters ctor: IKit #### Returns any[] Defined in core/kit.ts:14","title":"Function getParameterValues"},{"location":"converted/api/functions/core_kit.getParameterValues/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_layout.childrenOnChain/","text":"childrenOnChain | Photon Photon Preparing search index... core/layout childrenOnChain Function childrenOnChain childrenOnChain( parentModel: IModel , onChain: IChain , baseline?: number, reversed?: boolean, contain?: boolean, rotated?: boolean, ): IModel Layout the children of a model along a chain. The x-position of each child will be projected onto the chain so that the proportion between children is maintained. The projected positions of the children will become an array of points that approximate the chain. Each child will be rotated such that it will be mitered according to the vertex angles formed by this series of points. #### Parameters parentModel: IModel The model containing children to lay out. + onChain: IChain The chain on which to lay out. + baseline: number = 0 Numeric percentage value of vertical displacement from the chain. Default is zero. + reversed: boolean = false Flag to travel along the chain in reverse. Default is false. + contain: boolean = false Flag to contain the children layout within the length of the chain. Default is false. + rotated: boolean = true #### Returns IModel The parentModel, for cascading. Defined in core/layout.ts:197 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"childrenOnChain | Photon"},{"location":"converted/api/functions/core_layout.childrenOnChain/#function-childrenonchain","text":"childrenOnChain( parentModel: IModel , onChain: IChain , baseline?: number, reversed?: boolean, contain?: boolean, rotated?: boolean, ): IModel Layout the children of a model along a chain. The x-position of each child will be projected onto the chain so that the proportion between children is maintained. The projected positions of the children will become an array of points that approximate the chain. Each child will be rotated such that it will be mitered according to the vertex angles formed by this series of points. #### Parameters parentModel: IModel The model containing children to lay out. + onChain: IChain The chain on which to lay out. + baseline: number = 0 Numeric percentage value of vertical displacement from the chain. Default is zero. + reversed: boolean = false Flag to travel along the chain in reverse. Default is false. + contain: boolean = false Flag to contain the children layout within the length of the chain. Default is false. + rotated: boolean = true #### Returns IModel The parentModel, for cascading. Defined in core/layout.ts:197","title":"Function childrenOnChain"},{"location":"converted/api/functions/core_layout.childrenOnChain/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_layout.childrenOnPath/","text":"childrenOnPath | Photon Photon Preparing search index... core/layout childrenOnPath Function childrenOnPath childrenOnPath( parentModel: IModel , onPath: IPath , baseline?: number, reversed?: boolean, contain?: boolean, rotate?: boolean, ): IModel Layout the children of a model along a path. The x-position of each child will be projected onto the path so that the proportion between children is maintained. Each child will be rotated such that it will be perpendicular to the path at the child's x-center. #### Parameters parentModel: IModel The model containing children to lay out. + onPath: IPath The path on which to lay out. + baseline: number = 0 Numeric percentage value of vertical displacement from the path. Default is zero. + reversed: boolean = false Flag to travel along the path in reverse. Default is false. + contain: boolean = false Flag to contain the children layout within the length of the path. Default is false. + rotate: boolean = true Flag to rotate the child to perpendicular. Default is true. #### Returns IModel The parentModel, for cascading. Defined in core/layout.ts:133 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"childrenOnPath | Photon"},{"location":"converted/api/functions/core_layout.childrenOnPath/#function-childrenonpath","text":"childrenOnPath( parentModel: IModel , onPath: IPath , baseline?: number, reversed?: boolean, contain?: boolean, rotate?: boolean, ): IModel Layout the children of a model along a path. The x-position of each child will be projected onto the path so that the proportion between children is maintained. Each child will be rotated such that it will be perpendicular to the path at the child's x-center. #### Parameters parentModel: IModel The model containing children to lay out. + onPath: IPath The path on which to lay out. + baseline: number = 0 Numeric percentage value of vertical displacement from the path. Default is zero. + reversed: boolean = false Flag to travel along the path in reverse. Default is false. + contain: boolean = false Flag to contain the children layout within the length of the path. Default is false. + rotate: boolean = true Flag to rotate the child to perpendicular. Default is true. #### Returns IModel The parentModel, for cascading. Defined in core/layout.ts:133","title":"Function childrenOnPath"},{"location":"converted/api/functions/core_layout.childrenOnPath/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_layout.cloneToBrick/","text":"cloneToBrick | Photon Photon Preparing search index... core/layout cloneToBrick Function cloneToBrick cloneToBrick( itemToClone: IPath | IModel , xCount: number, yCount: number, margin?: number | IPoint , ): IModel Layout clones in a brick format. Alternating rows will have an additional item in each row. Examples: //Brick wall import { exporter, layout, models, paths } from 'photon/core'; const brick = new models.RoundRectangle(50, 30, 4); const wall = layout.cloneToBrick(brick, 8, 6, 3); document.write(exporter.toSVG(wall)); Copy //Fish scales import { exporter, layout, models, paths } from 'photon/core'; const arc = new paths.Arc([0, 0], 50, 20, 160); const scales = layout.cloneToBrick(arc, 8, 20); document.write(exporter.toSVG(scales)); Copy #### Parameters itemToClone: IPath | IModel xCount: number Number of columns in the brick grid. + yCount: number Number of rows in the brick grid. + Optional margin: number | IPoint Optional numeric distance between each clone. Can also be a 2 dimensional array of numbers, to specify distances in x and y dimensions. #### Returns IModel A new model with clones in a brick layout. Defined in core/layout.ts:476 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"cloneToBrick | Photon"},{"location":"converted/api/functions/core_layout.cloneToBrick/#function-clonetobrick","text":"cloneToBrick( itemToClone: IPath | IModel , xCount: number, yCount: number, margin?: number | IPoint , ): IModel Layout clones in a brick format. Alternating rows will have an additional item in each row. Examples: //Brick wall import { exporter, layout, models, paths } from 'photon/core'; const brick = new models.RoundRectangle(50, 30, 4); const wall = layout.cloneToBrick(brick, 8, 6, 3); document.write(exporter.toSVG(wall)); Copy //Fish scales import { exporter, layout, models, paths } from 'photon/core'; const arc = new paths.Arc([0, 0], 50, 20, 160); const scales = layout.cloneToBrick(arc, 8, 20); document.write(exporter.toSVG(scales)); Copy #### Parameters itemToClone: IPath | IModel xCount: number Number of columns in the brick grid. + yCount: number Number of rows in the brick grid. + Optional margin: number | IPoint Optional numeric distance between each clone. Can also be a 2 dimensional array of numbers, to specify distances in x and y dimensions. #### Returns IModel A new model with clones in a brick layout. Defined in core/layout.ts:476","title":"Function cloneToBrick"},{"location":"converted/api/functions/core_layout.cloneToBrick/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_layout.cloneToColumn/","text":"cloneToColumn | Photon Photon Preparing search index... core/layout cloneToColumn Function cloneToColumn cloneToColumn( itemToClone: IPath | IModel , count: number, margin?: number, ): IModel Layout clones in a column format. Example: //Grooves for a finger joint import { exporter, layout, models } from 'photon/core'; const dogbone = new models.Dogbone(50, 20, 2, -1, false); const grooves = layout.cloneToColumn(dogbone, 5, 20); document.write(exporter.toSVG(grooves)); Copy #### Parameters itemToClone: IPath | IModel count: number Number of clones in the column. + margin: number = 0 Optional distance between each clone. #### Returns IModel A new model with clones in a column. Defined in core/layout.ts:352 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"cloneToColumn | Photon"},{"location":"converted/api/functions/core_layout.cloneToColumn/#function-clonetocolumn","text":"cloneToColumn( itemToClone: IPath | IModel , count: number, margin?: number, ): IModel Layout clones in a column format. Example: //Grooves for a finger joint import { exporter, layout, models } from 'photon/core'; const dogbone = new models.Dogbone(50, 20, 2, -1, false); const grooves = layout.cloneToColumn(dogbone, 5, 20); document.write(exporter.toSVG(grooves)); Copy #### Parameters itemToClone: IPath | IModel count: number Number of clones in the column. + margin: number = 0 Optional distance between each clone. #### Returns IModel A new model with clones in a column. Defined in core/layout.ts:352","title":"Function cloneToColumn"},{"location":"converted/api/functions/core_layout.cloneToColumn/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_layout.cloneToGrid/","text":"cloneToGrid | Photon Photon Preparing search index... core/layout cloneToGrid Function cloneToGrid cloneToGrid( itemToClone: IPath | IModel , xCount: number, yCount: number, margin?: number | IPoint , ): IModel Layout clones in a grid format. Example: //Grid of squares import { exporter, layout, models } from 'photon/core'; const square = new models.Square(43); const grid = layout.cloneToGrid(square, 5, 5, 7); document.write(exporter.toSVG(grid)); Copy #### Parameters itemToClone: IPath | IModel xCount: number Number of columns in the grid. + yCount: number Number of rows in the grid. + Optional margin: number | IPoint Optional numeric distance between each clone. Can also be a 2 dimensional array of numbers, to specify distances in x and y dimensions. #### Returns IModel A new model with clones in a grid layout. Defined in core/layout.ts:403 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"cloneToGrid | Photon"},{"location":"converted/api/functions/core_layout.cloneToGrid/#function-clonetogrid","text":"cloneToGrid( itemToClone: IPath | IModel , xCount: number, yCount: number, margin?: number | IPoint , ): IModel Layout clones in a grid format. Example: //Grid of squares import { exporter, layout, models } from 'photon/core'; const square = new models.Square(43); const grid = layout.cloneToGrid(square, 5, 5, 7); document.write(exporter.toSVG(grid)); Copy #### Parameters itemToClone: IPath | IModel xCount: number Number of columns in the grid. + yCount: number Number of rows in the grid. + Optional margin: number | IPoint Optional numeric distance between each clone. Can also be a 2 dimensional array of numbers, to specify distances in x and y dimensions. #### Returns IModel A new model with clones in a grid layout. Defined in core/layout.ts:403","title":"Function cloneToGrid"},{"location":"converted/api/functions/core_layout.cloneToGrid/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_layout.cloneToHoneycomb/","text":"cloneToHoneycomb | Photon Photon Preparing search index... core/layout cloneToHoneycomb Function cloneToHoneycomb cloneToHoneycomb( itemToClone: IPath | IModel , xCount: number, yCount: number, margin?: number, ): IModel Layout clones in a honeycomb format. Alternating rows will have an additional item in each row. Examples: //Honeycomb import { exporter, layout, models } from 'photon/core'; const hex = new models.Polygon(6, 50, 30); const pattern = layout.cloneToHoneycomb(hex, 8, 9, 10); document.write(exporter.toSVG(pattern)); Copy #### Parameters itemToClone: IPath | IModel xCount: number Number of columns in the honeycomb grid. + yCount: number Number of rows in the honeycomb grid. + margin: number = 0 Optional distance between each clone. #### Returns IModel A new model with clones in a honeycomb layout. Defined in core/layout.ts:508 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"cloneToHoneycomb | Photon"},{"location":"converted/api/functions/core_layout.cloneToHoneycomb/#function-clonetohoneycomb","text":"cloneToHoneycomb( itemToClone: IPath | IModel , xCount: number, yCount: number, margin?: number, ): IModel Layout clones in a honeycomb format. Alternating rows will have an additional item in each row. Examples: //Honeycomb import { exporter, layout, models } from 'photon/core'; const hex = new models.Polygon(6, 50, 30); const pattern = layout.cloneToHoneycomb(hex, 8, 9, 10); document.write(exporter.toSVG(pattern)); Copy #### Parameters itemToClone: IPath | IModel xCount: number Number of columns in the honeycomb grid. + yCount: number Number of rows in the honeycomb grid. + margin: number = 0 Optional distance between each clone. #### Returns IModel A new model with clones in a honeycomb layout. Defined in core/layout.ts:508","title":"Function cloneToHoneycomb"},{"location":"converted/api/functions/core_layout.cloneToHoneycomb/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_layout.cloneToRadial/","text":"cloneToRadial | Photon Photon Preparing search index... core/layout cloneToRadial Function cloneToRadial cloneToRadial( itemToClone: IPath | IModel , count: number, angleInDegrees: number, rotationOrigin?: IPoint , ): IModel Layout clones in a radial format. Example: //daisy petals import { exporter, layout, model, models } from 'photon/core'; const belt = new models.Belt(5, 50, 20); model.move(belt, [25, 0]); const petals = layout.cloneToRadial(belt, 8, 45); document.write(exporter.toSVG(petals)); Copy #### Parameters itemToClone: IPath | IModel count: number Number of clones in the radial result. + angleInDegrees: number angle of rotation between clones.. + Optional rotationOrigin: IPoint #### Returns IModel A new model with clones in a radial format. Defined in core/layout.ts:281 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"cloneToRadial | Photon"},{"location":"converted/api/functions/core_layout.cloneToRadial/#function-clonetoradial","text":"cloneToRadial( itemToClone: IPath | IModel , count: number, angleInDegrees: number, rotationOrigin?: IPoint , ): IModel Layout clones in a radial format. Example: //daisy petals import { exporter, layout, model, models } from 'photon/core'; const belt = new models.Belt(5, 50, 20); model.move(belt, [25, 0]); const petals = layout.cloneToRadial(belt, 8, 45); document.write(exporter.toSVG(petals)); Copy #### Parameters itemToClone: IPath | IModel count: number Number of clones in the radial result. + angleInDegrees: number angle of rotation between clones.. + Optional rotationOrigin: IPoint #### Returns IModel A new model with clones in a radial format. Defined in core/layout.ts:281","title":"Function cloneToRadial"},{"location":"converted/api/functions/core_layout.cloneToRadial/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_layout.cloneToRow/","text":"cloneToRow | Photon Photon Preparing search index... core/layout cloneToRow Function cloneToRow cloneToRow(itemToClone: IPath | IModel , count: number, margin?: number): IModel Layout clones in a row format. Example: //Tongue and grooves for a box joint import { exporter, layout, models, paths } from 'photon/core'; const tongueWidth = 60; const grooveWidth = 50; const grooveDepth = 30; const groove = new models.Dogbone(grooveWidth, grooveDepth, 5, 0, true); groove.paths['leftTongue'] = new paths.Line([-tongueWidth / 2, 0], [0, 0]); groove.paths['rightTongue'] = new paths.Line([grooveWidth, 0], [grooveWidth + tongueWidth / 2, 0]); const tongueAndGrooves = layout.cloneToRow(groove, 3); document.write(exporter.toSVG(tongueAndGrooves)); Copy #### Parameters itemToClone: IPath | IModel count: number Number of clones in the row. + margin: number = 0 Optional distance between each clone. #### Returns IModel A new model with clones in a row. Defined in core/layout.ts:381 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"cloneToRow | Photon"},{"location":"converted/api/functions/core_layout.cloneToRow/#function-clonetorow","text":"cloneToRow(itemToClone: IPath | IModel , count: number, margin?: number): IModel Layout clones in a row format. Example: //Tongue and grooves for a box joint import { exporter, layout, models, paths } from 'photon/core'; const tongueWidth = 60; const grooveWidth = 50; const grooveDepth = 30; const groove = new models.Dogbone(grooveWidth, grooveDepth, 5, 0, true); groove.paths['leftTongue'] = new paths.Line([-tongueWidth / 2, 0], [0, 0]); groove.paths['rightTongue'] = new paths.Line([grooveWidth, 0], [grooveWidth + tongueWidth / 2, 0]); const tongueAndGrooves = layout.cloneToRow(groove, 3); document.write(exporter.toSVG(tongueAndGrooves)); Copy #### Parameters itemToClone: IPath | IModel count: number Number of clones in the row. + margin: number = 0 Optional distance between each clone. #### Returns IModel A new model with clones in a row. Defined in core/layout.ts:381","title":"Function cloneToRow"},{"location":"converted/api/functions/core_layout.cloneToRow/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_maker.cloneObject/","text":"cloneObject | Photon Photon Preparing search index... core/maker cloneObject Function cloneObject cloneObject< T >(objectToClone: T ): T Clone an object. #### Type Parameters T #### Parameters objectToClone: T #### Returns T Defined in core/maker.ts:115 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"cloneObject | Photon"},{"location":"converted/api/functions/core_maker.cloneObject/#function-cloneobject","text":"cloneObject< T >(objectToClone: T ): T Clone an object. #### Type Parameters T #### Parameters objectToClone: T #### Returns T Defined in core/maker.ts:115","title":"Function cloneObject"},{"location":"converted/api/functions/core_maker.cloneObject/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_maker.createRouteKey/","text":"createRouteKey | Photon Photon Preparing search index... core/maker createRouteKey Function createRouteKey createRouteKey(route: string[]): string Create a string representation of a route array. #### Parameters route: string[] #### Returns string Defined in core/maker.ts:82 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"createRouteKey | Photon"},{"location":"converted/api/functions/core_maker.createRouteKey/#function-createroutekey","text":"createRouteKey(route: string[]): string Create a string representation of a route array. #### Parameters route: string[] #### Returns string Defined in core/maker.ts:82","title":"Function createRouteKey"},{"location":"converted/api/functions/core_maker.createRouteKey/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_maker.extendObject/","text":"extendObject | Photon Photon Preparing search index... core/maker extendObject Function extendObject extendObject(target: any, other: any): any Copy the properties from one object to another object. #### Parameters target: any other: any #### Returns any Defined in core/maker.ts:124 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"extendObject | Photon"},{"location":"converted/api/functions/core_maker.extendObject/#function-extendobject","text":"extendObject(target: any, other: any): any Copy the properties from one object to another object. #### Parameters target: any other: any #### Returns any Defined in core/maker.ts:124","title":"Function extendObject"},{"location":"converted/api/functions/core_maker.extendObject/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_maker.isChain/","text":"isChain | Photon Photon Preparing search index... core/maker isChain Function isChain isChain(item: any): boolean Test to see if an object implements the required properties of a chain. #### Parameters item: any The item to test. #### Returns boolean Defined in core/maker.ts:486 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"isChain | Photon"},{"location":"converted/api/functions/core_maker.isChain/#function-ischain","text":"isChain(item: any): boolean Test to see if an object implements the required properties of a chain. #### Parameters item: any The item to test. #### Returns boolean Defined in core/maker.ts:486","title":"Function isChain"},{"location":"converted/api/functions/core_maker.isChain/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_maker.isFunction/","text":"isFunction | Photon Photon Preparing search index... core/maker isFunction Function isFunction isFunction(value: any): boolean Test to see if a variable is a function. #### Parameters value: any #### Returns boolean Defined in core/maker.ts:136 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"isFunction | Photon"},{"location":"converted/api/functions/core_maker.isFunction/#function-isfunction","text":"isFunction(value: any): boolean Test to see if a variable is a function. #### Parameters value: any #### Returns boolean Defined in core/maker.ts:136","title":"Function isFunction"},{"location":"converted/api/functions/core_maker.isFunction/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_maker.isModel/","text":"isModel | Photon Photon Preparing search index... core/maker isModel Function isModel isModel(item: any): boolean Test to see if an object implements the required properties of a model. #### Parameters item: any #### Returns boolean Defined in core/maker.ts:379 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"isModel | Photon"},{"location":"converted/api/functions/core_maker.isModel/#function-ismodel","text":"isModel(item: any): boolean Test to see if an object implements the required properties of a model. #### Parameters item: any #### Returns boolean Defined in core/maker.ts:379","title":"Function isModel"},{"location":"converted/api/functions/core_maker.isModel/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_maker.isNumber/","text":"isNumber | Photon Photon Preparing search index... core/maker isNumber Function isNumber isNumber(value: any): boolean Test to see if a variable is a number. #### Parameters value: any #### Returns boolean Defined in core/maker.ts:141 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"isNumber | Photon"},{"location":"converted/api/functions/core_maker.isNumber/#function-isnumber","text":"isNumber(value: any): boolean Test to see if a variable is a number. #### Parameters value: any #### Returns boolean Defined in core/maker.ts:141","title":"Function isNumber"},{"location":"converted/api/functions/core_maker.isNumber/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_maker.isObject/","text":"isObject | Photon Photon Preparing search index... core/maker isObject Function isObject isObject(value: any): boolean Test to see if a variable is an object. #### Parameters value: any #### Returns boolean Defined in core/maker.ts:146 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"isObject | Photon"},{"location":"converted/api/functions/core_maker.isObject/#function-isobject","text":"isObject(value: any): boolean Test to see if a variable is an object. #### Parameters value: any #### Returns boolean Defined in core/maker.ts:146","title":"Function isObject"},{"location":"converted/api/functions/core_maker.isObject/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_maker.isPath/","text":"isPath | Photon Photon Preparing search index... core/maker isPath Function isPath isPath(item: any): boolean Test to see if an object implements the required properties of a path. #### Parameters item: any #### Returns boolean Defined in core/maker.ts:187 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"isPath | Photon"},{"location":"converted/api/functions/core_maker.isPath/#function-ispath","text":"isPath(item: any): boolean Test to see if an object implements the required properties of a path. #### Parameters item: any #### Returns boolean Defined in core/maker.ts:187","title":"Function isPath"},{"location":"converted/api/functions/core_maker.isPath/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_maker.isPathArc/","text":"isPathArc | Photon Photon Preparing search index... core/maker isPathArc Function isPathArc isPathArc(item: any): boolean Test to see if an object implements the required properties of an arc. #### Parameters item: any #### Returns boolean Defined in core/maker.ts:202 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"isPathArc | Photon"},{"location":"converted/api/functions/core_maker.isPathArc/#function-ispatharc","text":"isPathArc(item: any): boolean Test to see if an object implements the required properties of an arc. #### Parameters item: any #### Returns boolean Defined in core/maker.ts:202","title":"Function isPathArc"},{"location":"converted/api/functions/core_maker.isPathArc/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_maker.isPathArcInBezierCurve/","text":"isPathArcInBezierCurve | Photon Photon Preparing search index... core/maker isPathArcInBezierCurve Function isPathArcInBezierCurve isPathArcInBezierCurve(item: any): boolean Test to see if an object implements the required properties of an arc in a bezier curve. #### Parameters item: any #### Returns boolean Defined in core/maker.ts:207 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"isPathArcInBezierCurve | Photon"},{"location":"converted/api/functions/core_maker.isPathArcInBezierCurve/#function-ispatharcinbeziercurve","text":"isPathArcInBezierCurve(item: any): boolean Test to see if an object implements the required properties of an arc in a bezier curve. #### Parameters item: any #### Returns boolean Defined in core/maker.ts:207","title":"Function isPathArcInBezierCurve"},{"location":"converted/api/functions/core_maker.isPathArcInBezierCurve/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_maker.isPathCircle/","text":"isPathCircle | Photon Photon Preparing search index... core/maker isPathCircle Function isPathCircle isPathCircle(item: any): boolean Test to see if an object implements the required properties of a circle. #### Parameters item: any #### Returns boolean Defined in core/maker.ts:197 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"isPathCircle | Photon"},{"location":"converted/api/functions/core_maker.isPathCircle/#function-ispathcircle","text":"isPathCircle(item: any): boolean Test to see if an object implements the required properties of a circle. #### Parameters item: any #### Returns boolean Defined in core/maker.ts:197","title":"Function isPathCircle"},{"location":"converted/api/functions/core_maker.isPathCircle/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_maker.isPathLine/","text":"isPathLine | Photon Photon Preparing search index... core/maker isPathLine Function isPathLine isPathLine(item: any): boolean Test to see if an object implements the required properties of a line. #### Parameters item: any #### Returns boolean Defined in core/maker.ts:192 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"isPathLine | Photon"},{"location":"converted/api/functions/core_maker.isPathLine/#function-ispathline","text":"isPathLine(item: any): boolean Test to see if an object implements the required properties of a line. #### Parameters item: any #### Returns boolean Defined in core/maker.ts:192","title":"Function isPathLine"},{"location":"converted/api/functions/core_maker.isPathLine/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_maker.isPoint/","text":"isPoint | Photon Photon Preparing search index... core/maker isPoint Function isPoint isPoint(item: any): boolean Test to see if an object implements the required properties of a point. #### Parameters item: any #### Returns boolean Defined in core/maker.ts:151 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"isPoint | Photon"},{"location":"converted/api/functions/core_maker.isPoint/#function-ispoint","text":"isPoint(item: any): boolean Test to see if an object implements the required properties of a point. #### Parameters item: any #### Returns boolean Defined in core/maker.ts:151","title":"Function isPoint"},{"location":"converted/api/functions/core_maker.isPoint/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_maker.round/","text":"round | Photon Photon Preparing search index... core/maker round Function round round(n: number, accuracy?: number): number Numeric rounding #### Parameters n: number accuracy: number = .0000001 #### Returns number Defined in core/maker.ts:75 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"round | Photon"},{"location":"converted/api/functions/core_maker.round/#function-round","text":"round(n: number, accuracy?: number): number Numeric rounding #### Parameters n: number accuracy: number = .0000001 #### Returns number Defined in core/maker.ts:75","title":"Function round"},{"location":"converted/api/functions/core_maker.round/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_maker.splitDecimal/","text":"splitDecimal | Photon Photon Preparing search index... core/maker splitDecimal Function splitDecimal splitDecimal(n: number): string[] Split a decimal into its whole and fractional parts as strings. #### Parameters n: number #### Returns string[] Defined in core/maker.ts:66 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"splitDecimal | Photon"},{"location":"converted/api/functions/core_maker.splitDecimal/#function-splitdecimal","text":"splitDecimal(n: number): string[] Split a decimal into its whole and fractional parts as strings. #### Parameters n: number #### Returns string[] Defined in core/maker.ts:66","title":"Function splitDecimal"},{"location":"converted/api/functions/core_maker.splitDecimal/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_maker.travel/","text":"travel | Photon Photon Preparing search index... core/maker travel Function travel travel( modelContext: IModel , route: string | string[], ): { offset: IPoint ; result: IPath | IModel } Travel along a route inside of a model to extract a specific node in its tree. #### Parameters modelContext: IModel route: string | string[] #### Returns { offset: IPoint ; result: IPath | IModel } Defined in core/maker.ts:93 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"travel | Photon"},{"location":"converted/api/functions/core_maker.travel/#function-travel","text":"travel( modelContext: IModel , route: string | string[], ): { offset: IPoint ; result: IPath | IModel } Travel along a route inside of a model to extract a specific node in its tree. #### Parameters modelContext: IModel route: string | string[] #### Returns { offset: IPoint ; result: IPath | IModel } Defined in core/maker.ts:93","title":"Function travel"},{"location":"converted/api/functions/core_maker.travel/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_measure-minimal.augment/","text":"augment | Photon Photon Preparing search index... core/measure-minimal augment Function augment augment(measureToAugment: IMeasure ): IMeasureWithCenter Augment a measurement with center and width/height. #### Parameters measureToAugment: IMeasure #### Returns IMeasureWithCenter Defined in core/measure-minimal.ts:240 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"augment | Photon"},{"location":"converted/api/functions/core_measure-minimal.augment/#function-augment","text":"augment(measureToAugment: IMeasure ): IMeasureWithCenter Augment a measurement with center and width/height. #### Parameters measureToAugment: IMeasure #### Returns IMeasureWithCenter Defined in core/measure-minimal.ts:240","title":"Function augment"},{"location":"converted/api/functions/core_measure-minimal.augment/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_measure-minimal.isBezierSeedLinear/","text":"isBezierSeedLinear | Photon Photon Preparing search index... core/measure-minimal isBezierSeedLinear Function isBezierSeedLinear isBezierSeedLinear(seed: IPathBezierSeed , exclusive?: boolean): boolean Check if a bezier seed has control points on the line slope and between the line endpoints. #### Parameters seed: IPathBezierSeed Optional exclusive: boolean #### Returns boolean Defined in core/measure-minimal.ts:46 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"isBezierSeedLinear | Photon"},{"location":"converted/api/functions/core_measure-minimal.isBezierSeedLinear/#function-isbezierseedlinear","text":"isBezierSeedLinear(seed: IPathBezierSeed , exclusive?: boolean): boolean Check if a bezier seed has control points on the line slope and between the line endpoints. #### Parameters seed: IPathBezierSeed Optional exclusive: boolean #### Returns boolean Defined in core/measure-minimal.ts:46","title":"Function isBezierSeedLinear"},{"location":"converted/api/functions/core_measure-minimal.isBezierSeedLinear/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_measure-minimal.lineSlope/","text":"lineSlope | Photon Photon Preparing search index... core/measure-minimal lineSlope Function lineSlope lineSlope(line: IPathLine ): ISlope Gets the slope of a line. #### Parameters line: IPathLine #### Returns ISlope Defined in core/measure-minimal.ts:25 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"lineSlope | Photon"},{"location":"converted/api/functions/core_measure-minimal.lineSlope/#function-lineslope","text":"lineSlope(line: IPathLine ): ISlope Gets the slope of a line. #### Parameters line: IPathLine #### Returns ISlope Defined in core/measure-minimal.ts:25","title":"Function lineSlope"},{"location":"converted/api/functions/core_measure-minimal.lineSlope/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_measure-minimal.modelExtents/","text":"modelExtents | Photon Photon Preparing search index... core/measure-minimal modelExtents Function modelExtents modelExtents(modelToMeasure: IModel ): IMeasureWithCenter Measures the smallest rectangle which contains a model. #### Parameters modelToMeasure: IModel #### Returns IMeasureWithCenter Defined in core/measure-minimal.ts:251 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"modelExtents | Photon"},{"location":"converted/api/functions/core_measure-minimal.modelExtents/#function-modelextents","text":"modelExtents(modelToMeasure: IModel ): IMeasureWithCenter Measures the smallest rectangle which contains a model. #### Parameters modelToMeasure: IModel #### Returns IMeasureWithCenter Defined in core/measure-minimal.ts:251","title":"Function modelExtents"},{"location":"converted/api/functions/core_measure-minimal.modelExtents/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_measure-minimal.pathExtents/","text":"pathExtents | Photon Photon Preparing search index... core/measure-minimal pathExtents Function pathExtents pathExtents(pathToMeasure: IPath , addOffset?: IPoint ): IMeasure Calculates the smallest rectangle which contains a path. #### Parameters pathToMeasure: IPath Optional addOffset: IPoint #### Returns IMeasure Defined in core/measure-minimal.ts:167 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"pathExtents | Photon"},{"location":"converted/api/functions/core_measure-minimal.pathExtents/#function-pathextents","text":"pathExtents(pathToMeasure: IPath , addOffset?: IPoint ): IMeasure Calculates the smallest rectangle which contains a path. #### Parameters pathToMeasure: IPath Optional addOffset: IPoint #### Returns IMeasure Defined in core/measure-minimal.ts:167","title":"Function pathExtents"},{"location":"converted/api/functions/core_measure-minimal.pathExtents/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_measure-minimal.pathLength/","text":"pathLength | Photon Photon Preparing search index... core/measure-minimal pathLength Function pathLength pathLength(pathToMeasure: IPath ): number Measures the length of a path. #### Parameters pathToMeasure: IPath #### Returns number Defined in core/measure-minimal.ts:206 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"pathLength | Photon"},{"location":"converted/api/functions/core_measure-minimal.pathLength/#function-pathlength","text":"pathLength(pathToMeasure: IPath ): number Measures the length of a path. #### Parameters pathToMeasure: IPath #### Returns number Defined in core/measure-minimal.ts:206","title":"Function pathLength"},{"location":"converted/api/functions/core_measure-minimal.pathLength/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_measure-minimal.pointDistance/","text":"pointDistance | Photon Photon Preparing search index... core/measure-minimal pointDistance Function pointDistance pointDistance(a: IPoint , b: IPoint ): number Measures the distance between two points. #### Parameters a: IPoint b: IPoint #### Returns number Defined in core/measure-minimal.ts:18 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"pointDistance | Photon"},{"location":"converted/api/functions/core_measure-minimal.pointDistance/#function-pointdistance","text":"pointDistance(a: IPoint , b: IPoint ): number Measures the distance between two points. #### Parameters a: IPoint b: IPoint #### Returns number Defined in core/measure-minimal.ts:18","title":"Function pointDistance"},{"location":"converted/api/functions/core_measure-minimal.pointDistance/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_measure.augment/","text":"augment | Photon Photon Preparing search index... core/measure augment Function augment augment(measureToAugment: IMeasure ): IMeasureWithCenter Augment a measurement - add more properties such as center point, height and width. #### Parameters measureToAugment: IMeasure The measurement to augment. #### Returns IMeasureWithCenter Measurement object with augmented properties. Defined in core/measure.ts:577 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"augment | Photon"},{"location":"converted/api/functions/core_measure.augment/#function-augment","text":"augment(measureToAugment: IMeasure ): IMeasureWithCenter Augment a measurement - add more properties such as center point, height and width. #### Parameters measureToAugment: IMeasure The measurement to augment. #### Returns IMeasureWithCenter Measurement object with augmented properties. Defined in core/measure.ts:577","title":"Function augment"},{"location":"converted/api/functions/core_measure.augment/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_measure.boundingHexagon/","text":"boundingHexagon | Photon Photon Preparing search index... core/measure boundingHexagon Function boundingHexagon boundingHexagon(modelToMeasure: IModel ): IBoundingHex Measures the minimum bounding hexagon surrounding a model. The hexagon is oriented such that the right and left sides are vertical, and the top and bottom are pointed. #### Parameters modelToMeasure: IModel The model to measure. #### Returns IBoundingHex IBoundingHex object which is a hexagon model, with an additional radius property. Defined in core/measure.ts:774 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"boundingHexagon | Photon"},{"location":"converted/api/functions/core_measure.boundingHexagon/#function-boundinghexagon","text":"boundingHexagon(modelToMeasure: IModel ): IBoundingHex Measures the minimum bounding hexagon surrounding a model. The hexagon is oriented such that the right and left sides are vertical, and the top and bottom are pointed. #### Parameters modelToMeasure: IModel The model to measure. #### Returns IBoundingHex IBoundingHex object which is a hexagon model, with an additional radius property. Defined in core/measure.ts:774","title":"Function boundingHexagon"},{"location":"converted/api/functions/core_measure.boundingHexagon/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_measure.increase/","text":"increase | Photon Photon Preparing search index... core/measure increase Function increase increase( baseMeasure: IMeasure , addMeasure: IMeasure , augmentBaseMeasure?: boolean, ): IMeasure Increase a measurement by an additional measurement. #### Parameters baseMeasure: IMeasure The measurement to increase. + addMeasure: IMeasure The additional measurement. + Optional augmentBaseMeasure: boolean Optional flag to call measure.augment on the measurement. #### Returns IMeasure The increased original measurement (for cascading). Defined in core/measure.ts:47 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"increase | Photon"},{"location":"converted/api/functions/core_measure.increase/#function-increase","text":"increase( baseMeasure: IMeasure , addMeasure: IMeasure , augmentBaseMeasure?: boolean, ): IMeasure Increase a measurement by an additional measurement. #### Parameters baseMeasure: IMeasure The measurement to increase. + addMeasure: IMeasure The additional measurement. + Optional augmentBaseMeasure: boolean Optional flag to call measure.augment on the measurement. #### Returns IMeasure The increased original measurement (for cascading). Defined in core/measure.ts:47","title":"Function increase"},{"location":"converted/api/functions/core_measure.increase/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_measure.isArcConcaveTowardsPoint/","text":"isArcConcaveTowardsPoint | Photon Photon Preparing search index... core/measure isArcConcaveTowardsPoint Function isArcConcaveTowardsPoint isArcConcaveTowardsPoint(arc: IPathArc , towardsPoint: IPoint ): boolean Check for arc being concave or convex towards a given point. #### Parameters arc: IPathArc The arc to test. + towardsPoint: IPoint The point to test. #### Returns boolean Boolean true if arc is concave towards point. Defined in core/measure.ts:84 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"isArcConcaveTowardsPoint | Photon"},{"location":"converted/api/functions/core_measure.isArcConcaveTowardsPoint/#function-isarcconcavetowardspoint","text":"isArcConcaveTowardsPoint(arc: IPathArc , towardsPoint: IPoint ): boolean Check for arc being concave or convex towards a given point. #### Parameters arc: IPathArc The arc to test. + towardsPoint: IPoint The point to test. #### Returns boolean Boolean true if arc is concave towards point. Defined in core/measure.ts:84","title":"Function isArcConcaveTowardsPoint"},{"location":"converted/api/functions/core_measure.isArcConcaveTowardsPoint/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_measure.isArcOverlapping/","text":"isArcOverlapping | Photon Photon Preparing search index... core/measure isArcOverlapping Function isArcOverlapping isArcOverlapping( arcA: IPathArc , arcB: IPathArc , excludeTangents: boolean, ): boolean DEPRECATED - use isArcSpanOverlapping() instead. #### Parameters arcA: IPathArc arcB: IPathArc excludeTangents: boolean #### Returns boolean Defined in core/measure.ts:104 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"isArcOverlapping | Photon"},{"location":"converted/api/functions/core_measure.isArcOverlapping/#function-isarcoverlapping","text":"isArcOverlapping( arcA: IPathArc , arcB: IPathArc , excludeTangents: boolean, ): boolean DEPRECATED - use isArcSpanOverlapping() instead. #### Parameters arcA: IPathArc arcB: IPathArc excludeTangents: boolean #### Returns boolean Defined in core/measure.ts:104","title":"Function isArcOverlapping"},{"location":"converted/api/functions/core_measure.isArcOverlapping/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_measure.isArcSpanOverlapping/","text":"isArcSpanOverlapping | Photon Photon Preparing search index... core/measure isArcSpanOverlapping Function isArcSpanOverlapping isArcSpanOverlapping( arcA: IPathArc , arcB: IPathArc , excludeTangents: boolean, ): boolean Check for arc overlapping another arc. #### Parameters arcA: IPathArc The arc to test. + arcB: IPathArc The arc to check for overlap. + excludeTangents: boolean Boolean to exclude exact endpoints and only look for deep overlaps. #### Returns boolean Boolean true if arcA is overlapped with arcB. Defined in core/measure.ts:116 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"isArcSpanOverlapping | Photon"},{"location":"converted/api/functions/core_measure.isArcSpanOverlapping/#function-isarcspanoverlapping","text":"isArcSpanOverlapping( arcA: IPathArc , arcB: IPathArc , excludeTangents: boolean, ): boolean Check for arc overlapping another arc. #### Parameters arcA: IPathArc The arc to test. + arcB: IPathArc The arc to check for overlap. + excludeTangents: boolean Boolean to exclude exact endpoints and only look for deep overlaps. #### Returns boolean Boolean true if arcA is overlapped with arcB. Defined in core/measure.ts:116","title":"Function isArcSpanOverlapping"},{"location":"converted/api/functions/core_measure.isArcSpanOverlapping/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_measure.isBetween/","text":"isBetween | Photon Photon Preparing search index... core/measure isBetween Function isBetween isBetween( valueInQuestion: number, limitA: number, limitB: number, exclusive: boolean, ): boolean Check if a given number is between two given limits. #### Parameters valueInQuestion: number The number to test. + limitA: number First limit. + limitB: number Second limit. + exclusive: boolean Flag to exclude equaling the limits. #### Returns boolean Boolean true if value is between (or equal to) the limits. Defined in core/measure.ts:140 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"isBetween | Photon"},{"location":"converted/api/functions/core_measure.isBetween/#function-isbetween","text":"isBetween( valueInQuestion: number, limitA: number, limitB: number, exclusive: boolean, ): boolean Check if a given number is between two given limits. #### Parameters valueInQuestion: number The number to test. + limitA: number First limit. + limitB: number Second limit. + exclusive: boolean Flag to exclude equaling the limits. #### Returns boolean Boolean true if value is between (or equal to) the limits. Defined in core/measure.ts:140","title":"Function isBetween"},{"location":"converted/api/functions/core_measure.isBetween/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_measure.isBetweenArcAngles/","text":"isBetweenArcAngles | Photon Photon Preparing search index... core/measure isBetweenArcAngles Function isBetweenArcAngles isBetweenArcAngles( angleInQuestion: number, arc: IPathArc , exclusive: boolean, ): boolean Check if a given angle is between an arc's start and end angles. #### Parameters angleInQuestion: number The angle to test. + arc: IPathArc Arc to test against. + exclusive: boolean Flag to exclude equaling the start or end angles. #### Returns boolean Boolean true if angle is between (or equal to) the arc's start and end angles. Defined in core/measure.ts:156 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"isBetweenArcAngles | Photon"},{"location":"converted/api/functions/core_measure.isBetweenArcAngles/#function-isbetweenarcangles","text":"isBetweenArcAngles( angleInQuestion: number, arc: IPathArc , exclusive: boolean, ): boolean Check if a given angle is between an arc's start and end angles. #### Parameters angleInQuestion: number The angle to test. + arc: IPathArc Arc to test against. + exclusive: boolean Flag to exclude equaling the start or end angles. #### Returns boolean Boolean true if angle is between (or equal to) the arc's start and end angles. Defined in core/measure.ts:156","title":"Function isBetweenArcAngles"},{"location":"converted/api/functions/core_measure.isBetweenArcAngles/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_measure.isBetweenPoints/","text":"isBetweenPoints | Photon Photon Preparing search index... core/measure isBetweenPoints Function isBetweenPoints isBetweenPoints( pointInQuestion: IPoint , line: IPathLine , exclusive: boolean, ): boolean Check if a given point is between a line's end points. #### Parameters pointInQuestion: IPoint The point to test. + line: IPathLine Line to test against. + exclusive: boolean Flag to exclude equaling the origin or end points. #### Returns boolean Boolean true if point is between (or equal to) the line's origin and end points. Defined in core/measure.ts:176 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"isBetweenPoints | Photon"},{"location":"converted/api/functions/core_measure.isBetweenPoints/#function-isbetweenpoints","text":"isBetweenPoints( pointInQuestion: IPoint , line: IPathLine , exclusive: boolean, ): boolean Check if a given point is between a line's end points. #### Parameters pointInQuestion: IPoint The point to test. + line: IPathLine Line to test against. + exclusive: boolean Flag to exclude equaling the origin or end points. #### Returns boolean Boolean true if point is between (or equal to) the line's origin and end points. Defined in core/measure.ts:176","title":"Function isBetweenPoints"},{"location":"converted/api/functions/core_measure.isBetweenPoints/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_measure.isBezierSeedLinear/","text":"isBezierSeedLinear | Photon Photon Preparing search index... core/measure isBezierSeedLinear Function isBezierSeedLinear isBezierSeedLinear(seed: IPathBezierSeed , exclusive?: boolean): boolean Check if a given bezier seed has all points on the same slope. #### Parameters seed: IPathBezierSeed The bezier seed to test. + Optional exclusive: boolean Optional boolean to test only within the boundary of the endpoints. #### Returns boolean Boolean true if bezier seed has control points on the line slope and between the line endpoints. Defined in core/measure.ts:198 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"isBezierSeedLinear | Photon"},{"location":"converted/api/functions/core_measure.isBezierSeedLinear/#function-isbezierseedlinear","text":"isBezierSeedLinear(seed: IPathBezierSeed , exclusive?: boolean): boolean Check if a given bezier seed has all points on the same slope. #### Parameters seed: IPathBezierSeed The bezier seed to test. + Optional exclusive: boolean Optional boolean to test only within the boundary of the endpoints. #### Returns boolean Boolean true if bezier seed has control points on the line slope and between the line endpoints. Defined in core/measure.ts:198","title":"Function isBezierSeedLinear"},{"location":"converted/api/functions/core_measure.isBezierSeedLinear/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_measure.isChainClockwise/","text":"isChainClockwise | Photon Photon Preparing search index... core/measure isChainClockwise Function isChainClockwise isChainClockwise( chainContext: IChain , out_result?: { hullPoints?: IPoint []; keyPoints?: IPoint [] }, ): boolean Check for flow of paths in a chain being clockwise or not. #### Parameters chainContext: IChain The chain to test. + Optional out_result: { hullPoints?: IPoint []; keyPoints?: IPoint [] } Optional output object, if provided, will be populated with convex hull results. #### Returns boolean Boolean true if paths in the chain flow clockwise. Defined in core/measure.ts:228 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"isChainClockwise | Photon"},{"location":"converted/api/functions/core_measure.isChainClockwise/#function-ischainclockwise","text":"isChainClockwise( chainContext: IChain , out_result?: { hullPoints?: IPoint []; keyPoints?: IPoint [] }, ): boolean Check for flow of paths in a chain being clockwise or not. #### Parameters chainContext: IChain The chain to test. + Optional out_result: { hullPoints?: IPoint []; keyPoints?: IPoint [] } Optional output object, if provided, will be populated with convex hull results. #### Returns boolean Boolean true if paths in the chain flow clockwise. Defined in core/measure.ts:228","title":"Function isChainClockwise"},{"location":"converted/api/functions/core_measure.isChainClockwise/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_measure.isLineOverlapping/","text":"isLineOverlapping | Photon Photon Preparing search index... core/measure isLineOverlapping Function isLineOverlapping isLineOverlapping( lineA: IPathLine , lineB: IPathLine , excludeTangents: boolean, ): boolean Check for line overlapping another line. #### Parameters lineA: IPathLine The line to test. + lineB: IPathLine The line to check for overlap. + excludeTangents: boolean Boolean to exclude exact endpoints and only look for deep overlaps. #### Returns boolean Boolean true if lineA is overlapped with lineB. Defined in core/measure.ts:295 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"isLineOverlapping | Photon"},{"location":"converted/api/functions/core_measure.isLineOverlapping/#function-islineoverlapping","text":"isLineOverlapping( lineA: IPathLine , lineB: IPathLine , excludeTangents: boolean, ): boolean Check for line overlapping another line. #### Parameters lineA: IPathLine The line to test. + lineB: IPathLine The line to check for overlap. + excludeTangents: boolean Boolean to exclude exact endpoints and only look for deep overlaps. #### Returns boolean Boolean true if lineA is overlapped with lineB. Defined in core/measure.ts:295","title":"Function isLineOverlapping"},{"location":"converted/api/functions/core_measure.isLineOverlapping/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_measure.isMeasurementOverlapping/","text":"isMeasurementOverlapping | Photon Photon Preparing search index... core/measure isMeasurementOverlapping Function isMeasurementOverlapping isMeasurementOverlapping(measureA: IMeasure , measureB: IMeasure ): boolean Check for measurement overlapping another measurement. #### Parameters measureA: IMeasure The measurement to test. + measureB: IMeasure The measurement to check for overlap. #### Returns boolean Boolean true if measureA is overlapped with measureB. Defined in core/measure.ts:317 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"isMeasurementOverlapping | Photon"},{"location":"converted/api/functions/core_measure.isMeasurementOverlapping/#function-ismeasurementoverlapping","text":"isMeasurementOverlapping(measureA: IMeasure , measureB: IMeasure ): boolean Check for measurement overlapping another measurement. #### Parameters measureA: IMeasure The measurement to test. + measureB: IMeasure The measurement to check for overlap. #### Returns boolean Boolean true if measureA is overlapped with measureB. Defined in core/measure.ts:317","title":"Function isMeasurementOverlapping"},{"location":"converted/api/functions/core_measure.isMeasurementOverlapping/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_measure.isPointArrayClockwise/","text":"isPointArrayClockwise | Photon Photon Preparing search index... core/measure isPointArrayClockwise Function isPointArrayClockwise isPointArrayClockwise( points: IPoint [], out_result?: { hullPoints?: IPoint []; keyPoints?: IPoint [] }, ): boolean Check for array of points being clockwise or not. #### Parameters points: IPoint [] The array of points to test. + Optional out_result: { hullPoints?: IPoint []; keyPoints?: IPoint [] } Optional output object, if provided, will be populated with convex hull results. #### Returns boolean Boolean true if points flow clockwise. Defined in core/measure.ts:247 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"isPointArrayClockwise | Photon"},{"location":"converted/api/functions/core_measure.isPointArrayClockwise/#function-ispointarrayclockwise","text":"isPointArrayClockwise( points: IPoint [], out_result?: { hullPoints?: IPoint []; keyPoints?: IPoint [] }, ): boolean Check for array of points being clockwise or not. #### Parameters points: IPoint [] The array of points to test. + Optional out_result: { hullPoints?: IPoint []; keyPoints?: IPoint [] } Optional output object, if provided, will be populated with convex hull results. #### Returns boolean Boolean true if points flow clockwise. Defined in core/measure.ts:247","title":"Function isPointArrayClockwise"},{"location":"converted/api/functions/core_measure.isPointArrayClockwise/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_measure.isPointInsideModel/","text":"isPointInsideModel | Photon Photon Preparing search index... core/measure isPointInsideModel Function isPointInsideModel isPointInsideModel( pointToCheck: IPoint , modelContext: IModel , options?: IMeasurePointInsideOptions , ): boolean Check to see if a point is inside of a model. #### Parameters pointToCheck: IPoint The point to check. + modelContext: IModel The model to check against. + options: IMeasurePointInsideOptions = {} Optional IMeasurePointInsideOptions object. #### Returns boolean Boolean true if the path is inside of the modelContext. Defined in core/measure.ts:893 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"isPointInsideModel | Photon"},{"location":"converted/api/functions/core_measure.isPointInsideModel/#function-ispointinsidemodel","text":"isPointInsideModel( pointToCheck: IPoint , modelContext: IModel , options?: IMeasurePointInsideOptions , ): boolean Check to see if a point is inside of a model. #### Parameters pointToCheck: IPoint The point to check. + modelContext: IModel The model to check against. + options: IMeasurePointInsideOptions = {} Optional IMeasurePointInsideOptions object. #### Returns boolean Boolean true if the path is inside of the modelContext. Defined in core/measure.ts:893","title":"Function isPointInsideModel"},{"location":"converted/api/functions/core_measure.isPointInsideModel/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_measure.lineSlope/","text":"lineSlope | Photon Photon Preparing search index... core/measure lineSlope Function lineSlope lineSlope(line: IPathLine ): ISlope Gets the slope of a line. #### Parameters line: IPathLine #### Returns ISlope Defined in core/measure.ts:328 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"lineSlope | Photon"},{"location":"converted/api/functions/core_measure.lineSlope/#function-lineslope","text":"lineSlope(line: IPathLine ): ISlope Gets the slope of a line. #### Parameters line: IPathLine #### Returns ISlope Defined in core/measure.ts:328","title":"Function lineSlope"},{"location":"converted/api/functions/core_measure.lineSlope/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_measure.modelExtents/","text":"modelExtents | Photon Photon Preparing search index... core/measure modelExtents Function modelExtents modelExtents(modelToMeasure: IModel , atlas?: Atlas ): IMeasureWithCenter Measures the smallest rectangle which contains a model. #### Parameters modelToMeasure: IModel The model to measure. + Optional atlas: Atlas Optional atlas to save measurements. #### Returns IMeasureWithCenter object with low and high points. Defined in core/measure.ts:521 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"modelExtents | Photon"},{"location":"converted/api/functions/core_measure.modelExtents/#function-modelextents","text":"modelExtents(modelToMeasure: IModel , atlas?: Atlas ): IMeasureWithCenter Measures the smallest rectangle which contains a model. #### Parameters modelToMeasure: IModel The model to measure. + Optional atlas: Atlas Optional atlas to save measurements. #### Returns IMeasureWithCenter object with low and high points. Defined in core/measure.ts:521","title":"Function modelExtents"},{"location":"converted/api/functions/core_measure.modelExtents/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_measure.modelPathLength/","text":"modelPathLength | Photon Photon Preparing search index... core/measure modelPathLength Function modelPathLength modelPathLength(modelToMeasure: IModel ): number Measures the length of all paths in a model. #### Parameters modelToMeasure: IModel The model containing paths to measure. #### Returns number Length of all paths in the model. Defined in core/measure.ts:492 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"modelPathLength | Photon"},{"location":"converted/api/functions/core_measure.modelPathLength/#function-modelpathlength","text":"modelPathLength(modelToMeasure: IModel ): number Measures the length of all paths in a model. #### Parameters modelToMeasure: IModel The model containing paths to measure. #### Returns number Length of all paths in the model. Defined in core/measure.ts:492","title":"Function modelPathLength"},{"location":"converted/api/functions/core_measure.modelPathLength/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_measure.pathExtents/","text":"pathExtents | Photon Photon Preparing search index... core/measure pathExtents Function pathExtents pathExtents(pathToMeasure: IPath , addOffset?: IPoint ): IMeasure Calculates the smallest rectangle which contains a path. #### Parameters pathToMeasure: IPath The path to measure. + Optional addOffset: IPoint #### Returns IMeasure object with low and high points. Defined in core/measure.ts:421 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"pathExtents | Photon"},{"location":"converted/api/functions/core_measure.pathExtents/#function-pathextents","text":"pathExtents(pathToMeasure: IPath , addOffset?: IPoint ): IMeasure Calculates the smallest rectangle which contains a path. #### Parameters pathToMeasure: IPath The path to measure. + Optional addOffset: IPoint #### Returns IMeasure object with low and high points. Defined in core/measure.ts:421","title":"Function pathExtents"},{"location":"converted/api/functions/core_measure.pathExtents/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_measure.pathLength/","text":"pathLength | Photon Photon Preparing search index... core/measure pathLength Function pathLength pathLength(pathToMeasure: IPath ): number Measures the length of a path. #### Parameters pathToMeasure: IPath The path to measure. #### Returns number Length of the path. Defined in core/measure.ts:474 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"pathLength | Photon"},{"location":"converted/api/functions/core_measure.pathLength/#function-pathlength","text":"pathLength(pathToMeasure: IPath ): number Measures the length of a path. #### Parameters pathToMeasure: IPath The path to measure. #### Returns number Length of the path. Defined in core/measure.ts:474","title":"Function pathLength"},{"location":"converted/api/functions/core_measure.pathLength/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_measure.pointDistance/","text":"pointDistance | Photon Photon Preparing search index... core/measure pointDistance Function pointDistance pointDistance(a: IPoint , b: IPoint ): number Calculates the distance between two points. #### Parameters a: IPoint First point. + b: IPoint Second point. #### Returns number Distance between points. Defined in core/measure.ts:357 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"pointDistance | Photon"},{"location":"converted/api/functions/core_measure.pointDistance/#function-pointdistance","text":"pointDistance(a: IPoint , b: IPoint ): number Calculates the distance between two points. #### Parameters a: IPoint First point. + b: IPoint Second point. #### Returns number Distance between points. Defined in core/measure.ts:357","title":"Function pointDistance"},{"location":"converted/api/functions/core_measure.pointDistance/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_model.addCaption/","text":"addCaption | Photon Photon Preparing search index... core/model addCaption Function addCaption addCaption( modelContext: IModel , text: string, leftAnchorPoint?: IPoint , rightAnchorPoint?: IPoint , ): IModel Add a Caption object to a model. #### Parameters modelContext: IModel text: string Optional leftAnchorPoint: IPoint Optional rightAnchorPoint: IPoint #### Returns IModel Defined in core/model.ts:24 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"addCaption | Photon"},{"location":"converted/api/functions/core_model.addCaption/#function-addcaption","text":"addCaption( modelContext: IModel , text: string, leftAnchorPoint?: IPoint , rightAnchorPoint?: IPoint , ): IModel Add a Caption object to a model. #### Parameters modelContext: IModel text: string Optional leftAnchorPoint: IPoint Optional rightAnchorPoint: IPoint #### Returns IModel Defined in core/model.ts:24","title":"Function addCaption"},{"location":"converted/api/functions/core_model.addCaption/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_model.addModel/","text":"addModel | Photon Photon Preparing search index... core/model addModel Function addModel addModel( parentModel: IModel , childModel: IModel , childModelId: string, overWrite?: boolean, ): IModel Add a model as a child. This is basically equivalent to: parentModel.models[childModelId] = childModel; Copy with additional checks to make it safe for cascading. #### Parameters parentModel: IModel The model to add to. + childModel: IModel The model to add. + childModelId: string The id of the child model. + overWrite: boolean = false Optional flag to overwrite any model referenced by childModelId. Default is false, which will create an id similar to childModelId. #### Returns IModel The original model (for cascading). Defined in core/model.ts:68 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"addModel | Photon"},{"location":"converted/api/functions/core_model.addModel/#function-addmodel","text":"addModel( parentModel: IModel , childModel: IModel , childModelId: string, overWrite?: boolean, ): IModel Add a model as a child. This is basically equivalent to: parentModel.models[childModelId] = childModel; Copy with additional checks to make it safe for cascading. #### Parameters parentModel: IModel The model to add to. + childModel: IModel The model to add. + childModelId: string The id of the child model. + overWrite: boolean = false Optional flag to overwrite any model referenced by childModelId. Default is false, which will create an id similar to childModelId. #### Returns IModel The original model (for cascading). Defined in core/model.ts:68","title":"Function addModel"},{"location":"converted/api/functions/core_model.addModel/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_model.addPath/","text":"addPath | Photon Photon Preparing search index... core/model addPath Function addPath addPath( modelContext: IModel , pathContext: IPath , pathId: string, overWrite?: boolean, ): IModel Add a path as a child. This is basically equivalent to: parentModel.paths[childPathId] = childPath; Copy with additional checks to make it safe for cascading. #### Parameters modelContext: IModel The model to add to. + pathContext: IPath The path to add. + pathId: string The id of the path. + overWrite: boolean = false Optional flag to overwrite any path referenced by pathId. Default is false, which will create an id similar to pathId. #### Returns IModel The original model (for cascading). Defined in core/model.ts:48 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"addPath | Photon"},{"location":"converted/api/functions/core_model.addPath/#function-addpath","text":"addPath( modelContext: IModel , pathContext: IPath , pathId: string, overWrite?: boolean, ): IModel Add a path as a child. This is basically equivalent to: parentModel.paths[childPathId] = childPath; Copy with additional checks to make it safe for cascading. #### Parameters modelContext: IModel The model to add to. + pathContext: IPath The path to add. + pathId: string The id of the path. + overWrite: boolean = false Optional flag to overwrite any path referenced by pathId. Default is false, which will create an id similar to pathId. #### Returns IModel The original model (for cascading). Defined in core/model.ts:48","title":"Function addPath"},{"location":"converted/api/functions/core_model.addPath/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_model.addTo/","text":"addTo | Photon Photon Preparing search index... core/model addTo Function addTo addTo( childModel: IModel , parentModel: IModel , childModelId: string, overWrite?: boolean, ): IModel Add a model as a child of another model. This is basically equivalent to: parentModel.models[childModelId] = childModel; Copy with additional checks to make it safe for cascading. #### Parameters childModel: IModel The model to add. + parentModel: IModel The model to add to. + childModelId: string The id of the child model. + overWrite: boolean = false Optional flag to overwrite any model referenced by childModelId. Default is false, which will create an id similar to childModelId. #### Returns IModel The original model (for cascading). Defined in core/model.ts:88 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"addTo | Photon"},{"location":"converted/api/functions/core_model.addTo/#function-addto","text":"addTo( childModel: IModel , parentModel: IModel , childModelId: string, overWrite?: boolean, ): IModel Add a model as a child of another model. This is basically equivalent to: parentModel.models[childModelId] = childModel; Copy with additional checks to make it safe for cascading. #### Parameters childModel: IModel The model to add. + parentModel: IModel The model to add to. + childModelId: string The id of the child model. + overWrite: boolean = false Optional flag to overwrite any model referenced by childModelId. Default is false, which will create an id similar to childModelId. #### Returns IModel The original model (for cascading). Defined in core/model.ts:88","title":"Function addTo"},{"location":"converted/api/functions/core_model.addTo/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_model.center/","text":"center | Photon Photon Preparing search index... core/model center Function center center(modelToCenter: IModel , centerX?: boolean, centerY?: boolean): IModel Center a model at [0, 0]. #### Parameters modelToCenter: IModel The model to center. + centerX: boolean = true Boolean to center on the x axis. Default is true. + centerY: boolean = true Boolean to center on the y axis. Default is true. #### Returns IModel The original model (for cascading). Defined in core/model.ts:246 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"center | Photon"},{"location":"converted/api/functions/core_model.center/#function-center","text":"center(modelToCenter: IModel , centerX?: boolean, centerY?: boolean): IModel Center a model at [0, 0]. #### Parameters modelToCenter: IModel The model to center. + centerX: boolean = true Boolean to center on the x axis. Default is true. + centerY: boolean = true Boolean to center on the y axis. Default is true. #### Returns IModel The original model (for cascading). Defined in core/model.ts:246","title":"Function center"},{"location":"converted/api/functions/core_model.center/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_model.clone/","text":"clone | Photon Photon Preparing search index... core/model clone Function clone clone(modelToClone: IModel ): IModel Clone a model. Alias of makerjs.cloneObject(modelToClone) #### Parameters modelToClone: IModel The model to clone. #### Returns IModel A clone of the model you passed. Defined in core/model.ts:99 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"clone | Photon"},{"location":"converted/api/functions/core_model.clone/#function-clone","text":"clone(modelToClone: IModel ): IModel Clone a model. Alias of makerjs.cloneObject(modelToClone) #### Parameters modelToClone: IModel The model to clone. #### Returns IModel A clone of the model you passed. Defined in core/model.ts:99","title":"Function clone"},{"location":"converted/api/functions/core_model.clone/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_model.convertUnits/","text":"convertUnits | Photon Photon Preparing search index... core/model convertUnits Function convertUnits convertUnits(modeltoConvert: IModel , destUnitType: string): IModel Convert a model to match a different unit system. #### Parameters modeltoConvert: IModel The model to convert. + destUnitType: string The unit system. #### Returns IModel The scaled model (for cascading). Defined in core/model.ts:528 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"convertUnits | Photon"},{"location":"converted/api/functions/core_model.convertUnits/#function-convertunits","text":"convertUnits(modeltoConvert: IModel , destUnitType: string): IModel Convert a model to match a different unit system. #### Parameters modeltoConvert: IModel The model to convert. + destUnitType: string The unit system. #### Returns IModel The scaled model (for cascading). Defined in core/model.ts:528","title":"Function convertUnits"},{"location":"converted/api/functions/core_model.convertUnits/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_model.countChildModels/","text":"countChildModels | Photon Photon Preparing search index... core/model countChildModels Function countChildModels countChildModels(modelContext: IModel ): number Count the number of child models within a given model. #### Parameters modelContext: IModel The model containing other models. #### Returns number Number of child models. Defined in core/model.ts:109 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"countChildModels | Photon"},{"location":"converted/api/functions/core_model.countChildModels/#function-countchildmodels","text":"countChildModels(modelContext: IModel ): number Count the number of child models within a given model. #### Parameters modelContext: IModel The model containing other models. #### Returns number Number of child models. Defined in core/model.ts:109","title":"Function countChildModels"},{"location":"converted/api/functions/core_model.countChildModels/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_model.distort/","text":"distort | Photon Photon Preparing search index... core/model distort Function distort distort( modelToDistort: IModel , scaleX: number, scaleY: number, scaleOrigin?: boolean, bezierAccuracy?: number, ): IModel Create a distorted copy of a model - scale x and y individually. #### Parameters modelToDistort: IModel The model to distort. + scaleX: number The amount of x scaling. + scaleY: number The amount of y scaling. + scaleOrigin: boolean = false Optional boolean to scale the origin point. Typically false for the root model. + Optional bezierAccuracy: number Optional accuracy of Bezier curves. #### Returns IModel New model (for cascading). Defined in core/model.ts:479 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"distort | Photon"},{"location":"converted/api/functions/core_model.distort/#function-distort","text":"distort( modelToDistort: IModel , scaleX: number, scaleY: number, scaleOrigin?: boolean, bezierAccuracy?: number, ): IModel Create a distorted copy of a model - scale x and y individually. #### Parameters modelToDistort: IModel The model to distort. + scaleX: number The amount of x scaling. + scaleY: number The amount of y scaling. + scaleOrigin: boolean = false Optional boolean to scale the origin point. Typically false for the root model. + Optional bezierAccuracy: number Optional accuracy of Bezier curves. #### Returns IModel New model (for cascading). Defined in core/model.ts:479","title":"Function distort"},{"location":"converted/api/functions/core_model.distort/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_model.findChains/","text":"findChains | Photon Photon Preparing search index... core/model findChains Function findChains findChains( modelContext: IModel , callbackOrOptions?: IChainCallback | IFindChainsOptions , maybeOptions?: IFindChainsOptions , ): IChain [] | IChainsMap #### Parameters modelContext: IModel Optional callbackOrOptions: IChainCallback | IFindChainsOptions Optional maybeOptions: IFindChainsOptions #### Returns IChain [] | IChainsMap Defined in core/model.ts:12 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"findChains | Photon"},{"location":"converted/api/functions/core_model.findChains/#function-findchains","text":"findChains( modelContext: IModel , callbackOrOptions?: IChainCallback | IFindChainsOptions , maybeOptions?: IFindChainsOptions , ): IChain [] | IChainsMap #### Parameters modelContext: IModel Optional callbackOrOptions: IChainCallback | IFindChainsOptions Optional maybeOptions: IFindChainsOptions #### Returns IChain [] | IChainsMap Defined in core/model.ts:12","title":"Function findChains"},{"location":"converted/api/functions/core_model.findChains/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_model.findSingleChain/","text":"findSingleChain | Photon Photon Preparing search index... core/model findSingleChain Function findSingleChain findSingleChain(modelContext: IModel ): IChain #### Parameters modelContext: IModel #### Returns IChain Defined in core/model.ts:19 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"findSingleChain | Photon"},{"location":"converted/api/functions/core_model.findSingleChain/#function-findsinglechain","text":"findSingleChain(modelContext: IModel ): IChain #### Parameters modelContext: IModel #### Returns IChain Defined in core/model.ts:19","title":"Function findSingleChain"},{"location":"converted/api/functions/core_model.findSingleChain/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_model.getAllCaptionsOffset/","text":"getAllCaptionsOffset | Photon Photon Preparing search index... core/model getAllCaptionsOffset Function getAllCaptionsOffset getAllCaptionsOffset(modelContext: IModel ): ( ICaption & { layer?: string })[] Gets all Caption objects, in absolute position, in this model and its children. #### Parameters modelContext: IModel The model to search for Caption objects. #### Returns ( ICaption & { layer?: string })[] Array of Caption objects. Defined in core/model.ts:126 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"getAllCaptionsOffset | Photon"},{"location":"converted/api/functions/core_model.getAllCaptionsOffset/#function-getallcaptionsoffset","text":"getAllCaptionsOffset(modelContext: IModel ): ( ICaption & { layer?: string })[] Gets all Caption objects, in absolute position, in this model and its children. #### Parameters modelContext: IModel The model to search for Caption objects. #### Returns ( ICaption & { layer?: string })[] Array of Caption objects. Defined in core/model.ts:126","title":"Function getAllCaptionsOffset"},{"location":"converted/api/functions/core_model.getAllCaptionsOffset/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_model.getSimilarModelId/","text":"getSimilarModelId | Photon Photon Preparing search index... core/model getSimilarModelId Function getSimilarModelId getSimilarModelId(modelContext: IModel , modelId: string): string Get an unused id in the models map with the same prefix. #### Parameters modelContext: IModel The model containing the models map. + modelId: string The id to use directly (if unused), or as a prefix. #### Returns string Defined in core/model.ts:163 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"getSimilarModelId | Photon"},{"location":"converted/api/functions/core_model.getSimilarModelId/#function-getsimilarmodelid","text":"getSimilarModelId(modelContext: IModel , modelId: string): string Get an unused id in the models map with the same prefix. #### Parameters modelContext: IModel The model containing the models map. + modelId: string The id to use directly (if unused), or as a prefix. #### Returns string Defined in core/model.ts:163","title":"Function getSimilarModelId"},{"location":"converted/api/functions/core_model.getSimilarModelId/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_model.getSimilarPathId/","text":"getSimilarPathId | Photon Photon Preparing search index... core/model getSimilarPathId Function getSimilarPathId getSimilarPathId(modelContext: IModel , pathId: string): string Get an unused id in the paths map with the same prefix. #### Parameters modelContext: IModel The model containing the paths map. + pathId: string The id to use directly (if unused), or as a prefix. #### Returns string Defined in core/model.ts:173 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"getSimilarPathId | Photon"},{"location":"converted/api/functions/core_model.getSimilarPathId/#function-getsimilarpathid","text":"getSimilarPathId(modelContext: IModel , pathId: string): string Get an unused id in the paths map with the same prefix. #### Parameters modelContext: IModel The model containing the paths map. + pathId: string The id to use directly (if unused), or as a prefix. #### Returns string Defined in core/model.ts:173","title":"Function getSimilarPathId"},{"location":"converted/api/functions/core_model.getSimilarPathId/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_model.layer/","text":"layer | Photon Photon Preparing search index... core/model layer Function layer layer(modelContext: IModel , layer: string): IModel Set the layer of a model. This is equivalent to: modelContext.layer = layer; Copy #### Parameters modelContext: IModel The model to set the layer. + layer: string The layer name. #### Returns IModel The original model (for cascading). Defined in core/model.ts:187 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"layer | Photon"},{"location":"converted/api/functions/core_model.layer/#function-layer","text":"layer(modelContext: IModel , layer: string): IModel Set the layer of a model. This is equivalent to: modelContext.layer = layer; Copy #### Parameters modelContext: IModel The model to set the layer. + layer: string The layer name. #### Returns IModel The original model (for cascading). Defined in core/model.ts:187","title":"Function layer"},{"location":"converted/api/functions/core_model.layer/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_model.mirror/","text":"mirror | Photon Photon Preparing search index... core/model mirror Function mirror mirror(modelToMirror: IModel , mirrorX: boolean, mirrorY: boolean): IModel Create a clone of a model, mirrored on either or both x and y axes. #### Parameters modelToMirror: IModel The model to mirror. + mirrorX: boolean Boolean to mirror on the x axis. + mirrorY: boolean Boolean to mirror on the y axis. #### Returns IModel Mirrored model. Defined in core/model.ts:263 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"mirror | Photon"},{"location":"converted/api/functions/core_model.mirror/#function-mirror","text":"mirror(modelToMirror: IModel , mirrorX: boolean, mirrorY: boolean): IModel Create a clone of a model, mirrored on either or both x and y axes. #### Parameters modelToMirror: IModel The model to mirror. + mirrorX: boolean Boolean to mirror on the x axis. + mirrorY: boolean Boolean to mirror on the y axis. #### Returns IModel Mirrored model. Defined in core/model.ts:263","title":"Function mirror"},{"location":"converted/api/functions/core_model.mirror/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_model.move/","text":"move | Photon Photon Preparing search index... core/model move Function move move(modelToMove: IModel , origin: IPoint ): IModel Move a model to an absolute point. Note that this is also accomplished by directly setting the origin property. This function exists for cascading. #### Parameters modelToMove: IModel The model to move. + origin: IPoint The new position of the model. #### Returns IModel The original model (for cascading). Defined in core/model.ts:326 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"move | Photon"},{"location":"converted/api/functions/core_model.move/#function-move","text":"move(modelToMove: IModel , origin: IPoint ): IModel Move a model to an absolute point. Note that this is also accomplished by directly setting the origin property. This function exists for cascading. #### Parameters modelToMove: IModel The model to move. + origin: IPoint The new position of the model. #### Returns IModel The original model (for cascading). Defined in core/model.ts:326","title":"Function move"},{"location":"converted/api/functions/core_model.move/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_model.moveRelative/","text":"moveRelative | Photon Photon Preparing search index... core/model moveRelative Function moveRelative moveRelative(modelToMove: IModel , delta: IPoint ): IModel Move a model's origin by a relative amount. #### Parameters modelToMove: IModel The model to move. + delta: IPoint The x & y adjustments as a point object. #### Returns IModel The original model (for cascading). Defined in core/model.ts:338 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"moveRelative | Photon"},{"location":"converted/api/functions/core_model.moveRelative/#function-moverelative","text":"moveRelative(modelToMove: IModel , delta: IPoint ): IModel Move a model's origin by a relative amount. #### Parameters modelToMove: IModel The model to move. + delta: IPoint The x & y adjustments as a point object. #### Returns IModel The original model (for cascading). Defined in core/model.ts:338","title":"Function moveRelative"},{"location":"converted/api/functions/core_model.moveRelative/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_model.originate/","text":"originate | Photon Photon Preparing search index... core/model originate Function originate originate(modelToOriginate: IModel , origin?: IPoint ): IModel Moves all of a model's children (models and paths, recursively) in reference to a single common origin. Useful when points between children need to connect to each other. #### Parameters modelToOriginate: IModel The model to originate. + Optional origin: IPoint Optional offset reference point. #### Returns IModel The original model (for cascading). Defined in core/model.ts:199 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"originate | Photon"},{"location":"converted/api/functions/core_model.originate/#function-originate","text":"originate(modelToOriginate: IModel , origin?: IPoint ): IModel Moves all of a model's children (models and paths, recursively) in reference to a single common origin. Useful when points between children need to connect to each other. #### Parameters modelToOriginate: IModel The model to originate. + Optional origin: IPoint Optional offset reference point. #### Returns IModel The original model (for cascading). Defined in core/model.ts:199","title":"Function originate"},{"location":"converted/api/functions/core_model.originate/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_model.prefixPathIds/","text":"prefixPathIds | Photon Photon Preparing search index... core/model prefixPathIds Function prefixPathIds prefixPathIds(modelToPrefix: IModel , prefix: string): IModel Prefix the ids of paths in a model. #### Parameters modelToPrefix: IModel The model to prefix. + prefix: string The prefix to prepend on paths ids. #### Returns IModel The original model (for cascading). Defined in core/model.ts:354 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"prefixPathIds | Photon"},{"location":"converted/api/functions/core_model.prefixPathIds/#function-prefixpathids","text":"prefixPathIds(modelToPrefix: IModel , prefix: string): IModel Prefix the ids of paths in a model. #### Parameters modelToPrefix: IModel The model to prefix. + prefix: string The prefix to prepend on paths ids. #### Returns IModel The original model (for cascading). Defined in core/model.ts:354","title":"Function prefixPathIds"},{"location":"converted/api/functions/core_model.prefixPathIds/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_model.rotate/","text":"rotate | Photon Photon Preparing search index... core/model rotate Function rotate rotate( modelToRotate: IModel , angleInDegrees: number, rotationOrigin?: IPoint , ): IModel Rotate a model. #### Parameters modelToRotate: IModel The model to rotate. + angleInDegrees: number The amount of rotation, in degrees. + rotationOrigin: IPoint = ... The center point of rotation. #### Returns IModel The original model (for cascading). Defined in core/model.ts:383 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"rotate | Photon"},{"location":"converted/api/functions/core_model.rotate/#function-rotate","text":"rotate( modelToRotate: IModel , angleInDegrees: number, rotationOrigin?: IPoint , ): IModel Rotate a model. #### Parameters modelToRotate: IModel The model to rotate. + angleInDegrees: number The amount of rotation, in degrees. + rotationOrigin: IPoint = ... The center point of rotation. #### Returns IModel The original model (for cascading). Defined in core/model.ts:383","title":"Function rotate"},{"location":"converted/api/functions/core_model.rotate/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_model.scale/","text":"scale | Photon Photon Preparing search index... core/model scale Function scale scale(modelToScale: IModel , scaleValue: number, scaleOrigin?: boolean): IModel Scale a model. #### Parameters modelToScale: IModel The model to scale. + scaleValue: number The amount of scaling. + scaleOrigin: boolean = false Optional boolean to scale the origin point. Typically false for the root model. #### Returns IModel The original model (for cascading). Defined in core/model.ts:419 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"scale | Photon"},{"location":"converted/api/functions/core_model.scale/#function-scale","text":"scale(modelToScale: IModel , scaleValue: number, scaleOrigin?: boolean): IModel Scale a model. #### Parameters modelToScale: IModel The model to scale. + scaleValue: number The amount of scaling. + scaleOrigin: boolean = false Optional boolean to scale the origin point. Typically false for the root model. #### Returns IModel The original model (for cascading). Defined in core/model.ts:419","title":"Function scale"},{"location":"converted/api/functions/core_model.scale/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_model.walk/","text":"walk | Photon Photon Preparing search index... core/model walk Function walk walk(modelContext: IModel , options: IWalkOptions ): IModel Recursively walk through all child models and paths for a given model. #### Parameters modelContext: IModel The model to walk. + options: IWalkOptions Object containing callbacks. #### Returns IModel The original model (for cascading). Defined in core/model.ts:575 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"walk | Photon"},{"location":"converted/api/functions/core_model.walk/#function-walk","text":"walk(modelContext: IModel , options: IWalkOptions ): IModel Recursively walk through all child models and paths for a given model. #### Parameters modelContext: IModel The model to walk. + options: IWalkOptions Object containing callbacks. #### Returns IModel The original model (for cascading). Defined in core/model.ts:575","title":"Function walk"},{"location":"converted/api/functions/core_model.walk/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_model.walkPaths/","text":"walkPaths | Photon Photon Preparing search index... core/model walkPaths Function walkPaths walkPaths(modelContext: IModel , callback: IModelPathCallback ): void DEPRECATED - use model.walk instead. Recursively walk through all paths for a given model. #### Parameters modelContext: IModel The model to walk. + callback: IModelPathCallback Callback for each path. #### Returns void Defined in core/model.ts:551 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"walkPaths | Photon"},{"location":"converted/api/functions/core_model.walkPaths/#function-walkpaths","text":"walkPaths(modelContext: IModel , callback: IModelPathCallback ): void DEPRECATED - use model.walk instead. Recursively walk through all paths for a given model. #### Parameters modelContext: IModel The model to walk. + callback: IModelPathCallback Callback for each path. #### Returns void Defined in core/model.ts:551","title":"Function walkPaths"},{"location":"converted/api/functions/core_model.walkPaths/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_model.zero/","text":"zero | Photon Photon Preparing search index... core/model zero Function zero zero(modelToZero: IModel , zeroX?: boolean, zeroY?: boolean): IModel Move a model so its bounding box begins at [0, 0]. #### Parameters modelToZero: IModel The model to zero. + zeroX: boolean = true Boolean to zero on the x axis. Default is true. + zeroY: boolean = true Boolean to zero on the y axis. Default is true. #### Returns IModel The original model (for cascading). Defined in core/model.ts:646 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"zero | Photon"},{"location":"converted/api/functions/core_model.zero/#function-zero","text":"zero(modelToZero: IModel , zeroX?: boolean, zeroY?: boolean): IModel Move a model so its bounding box begins at [0, 0]. #### Parameters modelToZero: IModel The model to zero. + zeroX: boolean = true Boolean to zero on the x axis. Default is true. + zeroY: boolean = true Boolean to zero on the y axis. Default is true. #### Returns IModel The original model (for cascading). Defined in core/model.ts:646","title":"Function zero"},{"location":"converted/api/functions/core_model.zero/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_openjscad-esm.toJscadCAG/","text":"toJscadCAG | Photon Photon Preparing search index... core/openjscad-esm toJscadCAG Function toJscadCAG toJscadCAG( jscadCAG: typeof CAG , modelToExport: IModel , jsCadCagOptions?: IJscadCagOptions , ): CAG | { [layerId: string]: CAG } Converts a model to a @jscad/csg CAG object - 2D to 2D. See https://en.wikibooks.org/wiki/OpenJSCAD_User_Guide#2D_Paths Example: //First, use npm install @jscad/csg from the command line in your jscad project //Create a CAG instance from a model. var { CAG } = require('@jscad/csg'); const model = new makerjs.models.Ellipse(70, 40); const cag = makerjs.exporter.toJscadCAG(CAG, model, {maxArcFacet: 1}); Copy #### Parameters jscadCAG: typeof CAG @jscad/csg CAG engine, see https://www.npmjs.com/package/@jscad/csg + modelToExport: IModel Model object to export. + Optional jsCadCagOptions: IJscadCagOptions #### Returns CAG | { [layerId: string]: CAG } jscad CAG object in 2D, or a map (keyed by layer id) of jscad CAG objects - if options.byLayers is true. Defined in core/openjscad-esm.ts:275 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"toJscadCAG | Photon"},{"location":"converted/api/functions/core_openjscad-esm.toJscadCAG/#function-tojscadcag","text":"toJscadCAG( jscadCAG: typeof CAG , modelToExport: IModel , jsCadCagOptions?: IJscadCagOptions , ): CAG | { [layerId: string]: CAG } Converts a model to a @jscad/csg CAG object - 2D to 2D. See https://en.wikibooks.org/wiki/OpenJSCAD_User_Guide#2D_Paths Example: //First, use npm install @jscad/csg from the command line in your jscad project //Create a CAG instance from a model. var { CAG } = require('@jscad/csg'); const model = new makerjs.models.Ellipse(70, 40); const cag = makerjs.exporter.toJscadCAG(CAG, model, {maxArcFacet: 1}); Copy #### Parameters jscadCAG: typeof CAG @jscad/csg CAG engine, see https://www.npmjs.com/package/@jscad/csg + modelToExport: IModel Model object to export. + Optional jsCadCagOptions: IJscadCagOptions #### Returns CAG | { [layerId: string]: CAG } jscad CAG object in 2D, or a map (keyed by layer id) of jscad CAG objects - if options.byLayers is true. Defined in core/openjscad-esm.ts:275","title":"Function toJscadCAG"},{"location":"converted/api/functions/core_openjscad-esm.toJscadCAG/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_openjscad-esm.toJscadCSG/","text":"toJscadCSG | Photon Photon Preparing search index... core/openjscad-esm toJscadCSG Function toJscadCSG toJscadCSG( jscadCAG: typeof CAG , modelToExport: IModel , options?: IJscadCsgOptions , ): export= . CSG Converts a model to a @jscad/csg CSG object - 2D to 3D. Example: //First, use npm install @jscad/csg from the command line in your jscad project //Create a CSG instance from a model. var { CAG } = require('@jscad/csg'); const model = new makerjs.models.Ellipse(70, 40); const csg = makerjs.exporter.toJscadCSG(CAG, model, {maxArcFacet: 1, extrude: 10}); Copy #### Parameters jscadCAG: typeof CAG @jscad/csg CAG engine, see https://www.npmjs.com/package/@jscad/csg + modelToExport: IModel Model object to export. + Optional options: IJscadCsgOptions Optional options object. Jscad CSG export options. Optional accuracy?: number Optional exemplar of number of decimal places. - ##### Optional byLayers?: boolean Flag to separate chains by layers. - ##### Optional extrude?: number Optional depth of 3D extrusion. - ##### Optional layerOptions?: { [layerId: string]: IJscadExtrudeOptions } SVG options per layer. - ##### Optional maxArcFacet?: number The maximum length between points on an arc or circle. - ##### Optional pointMatchingDistance?: number Max distance to consider two points as the same. - ##### Optional statusCallback?: IStatusCallback Optional callback to get status during the export. - ##### Optional units?: string Optional unit system to embed in exported file, if the export format allows alternate unit systems. - ##### Optional z?: number Optional depth of 3D extrusion. #### Returns export= . CSG jscad CAG object in 2D, or a map (keyed by layer id) of jscad CAG objects - if options.byLayers is true. Defined in core/openjscad-esm.ts:377 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"toJscadCSG | Photon"},{"location":"converted/api/functions/core_openjscad-esm.toJscadCSG/#function-tojscadcsg","text":"toJscadCSG( jscadCAG: typeof CAG , modelToExport: IModel , options?: IJscadCsgOptions , ): export= . CSG Converts a model to a @jscad/csg CSG object - 2D to 3D. Example: //First, use npm install @jscad/csg from the command line in your jscad project //Create a CSG instance from a model. var { CAG } = require('@jscad/csg'); const model = new makerjs.models.Ellipse(70, 40); const csg = makerjs.exporter.toJscadCSG(CAG, model, {maxArcFacet: 1, extrude: 10}); Copy #### Parameters jscadCAG: typeof CAG @jscad/csg CAG engine, see https://www.npmjs.com/package/@jscad/csg + modelToExport: IModel Model object to export. + Optional options: IJscadCsgOptions Optional options object. Jscad CSG export options.","title":"Function toJscadCSG"},{"location":"converted/api/functions/core_openjscad-esm.toJscadCSG/#optionalaccuracy-number","text":"Optional exemplar of number of decimal places. - ##### Optional byLayers?: boolean Flag to separate chains by layers. - ##### Optional extrude?: number Optional depth of 3D extrusion. - ##### Optional layerOptions?: { [layerId: string]: IJscadExtrudeOptions } SVG options per layer. - ##### Optional maxArcFacet?: number The maximum length between points on an arc or circle. - ##### Optional pointMatchingDistance?: number Max distance to consider two points as the same. - ##### Optional statusCallback?: IStatusCallback Optional callback to get status during the export. - ##### Optional units?: string Optional unit system to embed in exported file, if the export format allows alternate unit systems. - ##### Optional z?: number Optional depth of 3D extrusion. #### Returns export= . CSG jscad CAG object in 2D, or a map (keyed by layer id) of jscad CAG objects - if options.byLayers is true. Defined in core/openjscad-esm.ts:377","title":"Optionalaccuracy?: number"},{"location":"converted/api/functions/core_openjscad-esm.toJscadCSG/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_openjscad-esm.toJscadSTL/","text":"toJscadSTL | Photon Photon Preparing search index... core/openjscad-esm toJscadSTL Function toJscadSTL toJscadSTL( CAG: typeof CAG , stlSerializer: StlSerializer , modelToExport: IModel , options?: IJscadCsgOptions , ): string Exports a model in STL format - 2D to 3D. #### Parameters CAG: typeof CAG stlSerializer: StlSerializer @jscad/stl-serializer, see https://www.npmjs.com/package/@jscad/stl-serializer + modelToExport: IModel Model object to export. + options: IJscadCsgOptions = {} Optional options object. Jscad CSG export options. Optional accuracy?: number Optional exemplar of number of decimal places. - ##### Optional byLayers?: boolean Flag to separate chains by layers. - ##### Optional extrude?: number Optional depth of 3D extrusion. - ##### Optional layerOptions?: { [layerId: string]: IJscadExtrudeOptions } SVG options per layer. - ##### Optional maxArcFacet?: number The maximum length between points on an arc or circle. - ##### Optional pointMatchingDistance?: number Max distance to consider two points as the same. - ##### Optional statusCallback?: IStatusCallback Optional callback to get status during the export. - ##### Optional units?: string Optional unit system to embed in exported file, if the export format allows alternate unit systems. - ##### Optional z?: number Optional depth of 3D extrusion. #### Returns string String in STL ASCII format. Defined in core/openjscad-esm.ts:462 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"toJscadSTL | Photon"},{"location":"converted/api/functions/core_openjscad-esm.toJscadSTL/#function-tojscadstl","text":"toJscadSTL( CAG: typeof CAG , stlSerializer: StlSerializer , modelToExport: IModel , options?: IJscadCsgOptions , ): string Exports a model in STL format - 2D to 3D. #### Parameters CAG: typeof CAG stlSerializer: StlSerializer @jscad/stl-serializer, see https://www.npmjs.com/package/@jscad/stl-serializer + modelToExport: IModel Model object to export. + options: IJscadCsgOptions = {} Optional options object. Jscad CSG export options.","title":"Function toJscadSTL"},{"location":"converted/api/functions/core_openjscad-esm.toJscadSTL/#optionalaccuracy-number","text":"Optional exemplar of number of decimal places. - ##### Optional byLayers?: boolean Flag to separate chains by layers. - ##### Optional extrude?: number Optional depth of 3D extrusion. - ##### Optional layerOptions?: { [layerId: string]: IJscadExtrudeOptions } SVG options per layer. - ##### Optional maxArcFacet?: number The maximum length between points on an arc or circle. - ##### Optional pointMatchingDistance?: number Max distance to consider two points as the same. - ##### Optional statusCallback?: IStatusCallback Optional callback to get status during the export. - ##### Optional units?: string Optional unit system to embed in exported file, if the export format allows alternate unit systems. - ##### Optional z?: number Optional depth of 3D extrusion. #### Returns string String in STL ASCII format. Defined in core/openjscad-esm.ts:462","title":"Optionalaccuracy?: number"},{"location":"converted/api/functions/core_openjscad-esm.toJscadSTL/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_openjscad-esm.toJscadScript/","text":"toJscadScript | Photon Photon Preparing search index... core/openjscad-esm toJscadScript Function toJscadScript toJscadScript(modelToExport: IModel , options?: IJscadScriptOptions ): string Creates a string of JavaScript code for execution with a Jscad environment. #### Parameters modelToExport: IModel Model object to export. + options: IJscadScriptOptions = {} Export options object. Jscad Script export options. Optional accuracy?: number Optional exemplar of number of decimal places. - ##### Optional byLayers?: boolean Flag to separate chains by layers. - ##### Optional extrude?: number Optional depth of 3D extrusion. - ##### Optional functionName?: string Optional override of function name, default is \"main\". - ##### Optional indent?: number Optional number of spaces to indent. - ##### Optional layerOptions?: { [layerId: string]: IJscadExtrudeOptions } SVG options per layer. - ##### Optional maxArcFacet?: number The maximum length between points on an arc or circle. - ##### Optional pointMatchingDistance?: number Max distance to consider two points as the same. - ##### Optional statusCallback?: IStatusCallback Optional callback to get status during the export. - ##### Optional units?: string Optional unit system to embed in exported file, if the export format allows alternate unit systems. - ##### Optional z?: number Optional depth of 3D extrusion. #### Returns string String of JavaScript containing a main() function for Jscad. Defined in core/openjscad-esm.ts:410 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"toJscadScript | Photon"},{"location":"converted/api/functions/core_openjscad-esm.toJscadScript/#function-tojscadscript","text":"toJscadScript(modelToExport: IModel , options?: IJscadScriptOptions ): string Creates a string of JavaScript code for execution with a Jscad environment. #### Parameters modelToExport: IModel Model object to export. + options: IJscadScriptOptions = {} Export options object. Jscad Script export options.","title":"Function toJscadScript"},{"location":"converted/api/functions/core_openjscad-esm.toJscadScript/#optionalaccuracy-number","text":"Optional exemplar of number of decimal places. - ##### Optional byLayers?: boolean Flag to separate chains by layers. - ##### Optional extrude?: number Optional depth of 3D extrusion. - ##### Optional functionName?: string Optional override of function name, default is \"main\". - ##### Optional indent?: number Optional number of spaces to indent. - ##### Optional layerOptions?: { [layerId: string]: IJscadExtrudeOptions } SVG options per layer. - ##### Optional maxArcFacet?: number The maximum length between points on an arc or circle. - ##### Optional pointMatchingDistance?: number Max distance to consider two points as the same. - ##### Optional statusCallback?: IStatusCallback Optional callback to get status during the export. - ##### Optional units?: string Optional unit system to embed in exported file, if the export format allows alternate unit systems. - ##### Optional z?: number Optional depth of 3D extrusion. #### Returns string String of JavaScript containing a main() function for Jscad. Defined in core/openjscad-esm.ts:410","title":"Optionalaccuracy?: number"},{"location":"converted/api/functions/core_openjscad-esm.toJscadScript/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_path.addTo/","text":"addTo | Photon Photon Preparing search index... core/path addTo Function addTo addTo( childPath: IPath , parentModel: IModel , pathId: string, overwrite?: boolean, ): IPath Add a path to a model. #### Parameters childPath: IPath parentModel: IModel pathId: string overwrite: boolean = false #### Returns IPath Defined in core/path.ts:24 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"addTo | Photon"},{"location":"converted/api/functions/core_path.addTo/#function-addto","text":"addTo( childPath: IPath , parentModel: IModel , pathId: string, overwrite?: boolean, ): IPath Add a path to a model. #### Parameters childPath: IPath parentModel: IModel pathId: string overwrite: boolean = false #### Returns IPath Defined in core/path.ts:24","title":"Function addTo"},{"location":"converted/api/functions/core_path.addTo/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_path.alterLength/","text":"alterLength | Photon Photon Preparing search index... core/path alterLength Function alterLength alterLength(pathToAlter: IPath , distance: number, useOrigin?: boolean): IPath Alter a path by lengthening or shortening it. #### Parameters pathToAlter: IPath distance: number useOrigin: boolean = false #### Returns IPath Defined in core/path.ts:325 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"alterLength | Photon"},{"location":"converted/api/functions/core_path.alterLength/#function-alterlength","text":"alterLength(pathToAlter: IPath , distance: number, useOrigin?: boolean): IPath Alter a path by lengthening or shortening it. #### Parameters pathToAlter: IPath distance: number useOrigin: boolean = false #### Returns IPath Defined in core/path.ts:325","title":"Function alterLength"},{"location":"converted/api/functions/core_path.alterLength/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_path.center/","text":"center | Photon Photon Preparing search index... core/path center Function center center(pathToCenter: IPath ): IPath Center a path at [0, 0]. #### Parameters pathToCenter: IPath #### Returns IPath Defined in core/path.ts:403 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"center | Photon"},{"location":"converted/api/functions/core_path.center/#function-center","text":"center(pathToCenter: IPath ): IPath Center a path at [0, 0]. #### Parameters pathToCenter: IPath #### Returns IPath Defined in core/path.ts:403","title":"Function center"},{"location":"converted/api/functions/core_path.center/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_path.clone/","text":"clone | Photon Photon Preparing search index... core/path clone Function clone clone(pathToClone: IPath , offset?: IPoint ): IPath Create a clone of a path. This is faster than cloneObject. #### Parameters pathToClone: IPath Optional offset: IPoint #### Returns IPath Defined in core/path.ts:60 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"clone | Photon"},{"location":"converted/api/functions/core_path.clone/#function-clone","text":"clone(pathToClone: IPath , offset?: IPoint ): IPath Create a clone of a path. This is faster than cloneObject. #### Parameters pathToClone: IPath Optional offset: IPoint #### Returns IPath Defined in core/path.ts:60","title":"Function clone"},{"location":"converted/api/functions/core_path.clone/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_path.converge/","text":"converge | Photon Photon Preparing search index... core/path converge Function converge converge( lineA: IPathLine , lineB: IPathLine , useOriginA?: boolean, useOriginB?: boolean, ): IPoint Connect 2 lines at their slope intersection point. #### Parameters lineA: IPathLine lineB: IPathLine Optional useOriginA: boolean Optional useOriginB: boolean #### Returns IPoint Defined in core/path.ts:277 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"converge | Photon"},{"location":"converted/api/functions/core_path.converge/#function-converge","text":"converge( lineA: IPathLine , lineB: IPathLine , useOriginA?: boolean, useOriginB?: boolean, ): IPoint Connect 2 lines at their slope intersection point. #### Parameters lineA: IPathLine lineB: IPathLine Optional useOriginA: boolean Optional useOriginB: boolean #### Returns IPoint Defined in core/path.ts:277","title":"Function converge"},{"location":"converted/api/functions/core_path.converge/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_path.copyProps/","text":"copyProps | Photon Photon Preparing search index... core/path copyProps Function copyProps copyProps(srcPath: IPath , destPath: IPath ): IPath Copy the schema properties of one path to another. #### Parameters srcPath: IPath destPath: IPath #### Returns IPath Defined in core/path.ts:71 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"copyProps | Photon"},{"location":"converted/api/functions/core_path.copyProps/#function-copyprops","text":"copyProps(srcPath: IPath , destPath: IPath ): IPath Copy the schema properties of one path to another. #### Parameters srcPath: IPath destPath: IPath #### Returns IPath Defined in core/path.ts:71","title":"Function copyProps"},{"location":"converted/api/functions/core_path.copyProps/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_path.distort/","text":"distort | Photon Photon Preparing search index... core/path distort Function distort distort(pathToDistort: IPath , scaleX: number, scaleY: number): IPath | IModel Distort a path - scale x and y individually. #### Parameters pathToDistort: IPath scaleX: number scaleY: number #### Returns IPath | IModel Defined in core/path.ts:263 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"distort | Photon"},{"location":"converted/api/functions/core_path.distort/#function-distort","text":"distort(pathToDistort: IPath , scaleX: number, scaleY: number): IPath | IModel Distort a path - scale x and y individually. #### Parameters pathToDistort: IPath scaleX: number scaleY: number #### Returns IPath | IModel Defined in core/path.ts:263","title":"Function distort"},{"location":"converted/api/functions/core_path.distort/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_path.layer/","text":"layer | Photon Photon Preparing search index... core/path layer Function layer layer(pathContext: IPath , layer: string): IPath Set the layer of a path. #### Parameters pathContext: IPath layer: string #### Returns IPath Defined in core/path.ts:106 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"layer | Photon"},{"location":"converted/api/functions/core_path.layer/#function-layer","text":"layer(pathContext: IPath , layer: string): IPath Set the layer of a path. #### Parameters pathContext: IPath layer: string #### Returns IPath Defined in core/path.ts:106","title":"Function layer"},{"location":"converted/api/functions/core_path.layer/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_path.mirror/","text":"mirror | Photon Photon Preparing search index... core/path mirror Function mirror mirror(pathToMirror: IPath , mirrorX: boolean, mirrorY: boolean): IPath Create a clone of a path, mirrored on either or both x and y axes. #### Parameters pathToMirror: IPath mirrorX: boolean mirrorY: boolean #### Returns IPath Defined in core/path.ts:112 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"mirror | Photon"},{"location":"converted/api/functions/core_path.mirror/#function-mirror","text":"mirror(pathToMirror: IPath , mirrorX: boolean, mirrorY: boolean): IPath Create a clone of a path, mirrored on either or both x and y axes. #### Parameters pathToMirror: IPath mirrorX: boolean mirrorY: boolean #### Returns IPath Defined in core/path.ts:112","title":"Function mirror"},{"location":"converted/api/functions/core_path.mirror/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_path.move/","text":"move | Photon Photon Preparing search index... core/path move Function move move(pathToMove: IPath , origin: IPoint ): IPath Move a path to an absolute point. #### Parameters pathToMove: IPath origin: IPoint #### Returns IPath Defined in core/path.ts:133 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"move | Photon"},{"location":"converted/api/functions/core_path.move/#function-move","text":"move(pathToMove: IPath , origin: IPoint ): IPath Move a path to an absolute point. #### Parameters pathToMove: IPath origin: IPoint #### Returns IPath Defined in core/path.ts:133","title":"Function move"},{"location":"converted/api/functions/core_path.move/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_path.moveRelative/","text":"moveRelative | Photon Photon Preparing search index... core/path moveRelative Function moveRelative moveRelative(pathToMove: IPath , delta: IPoint , subtract?: boolean): IPath Move a path's origin by a relative amount. #### Parameters pathToMove: IPath delta: IPoint Optional subtract: boolean #### Returns IPath Defined in core/path.ts:156 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"moveRelative | Photon"},{"location":"converted/api/functions/core_path.moveRelative/#function-moverelative","text":"moveRelative(pathToMove: IPath , delta: IPoint , subtract?: boolean): IPath Move a path's origin by a relative amount. #### Parameters pathToMove: IPath delta: IPoint Optional subtract: boolean #### Returns IPath Defined in core/path.ts:156","title":"Function moveRelative"},{"location":"converted/api/functions/core_path.moveRelative/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_path.moveTemporary/","text":"moveTemporary | Photon Photon Preparing search index... core/path moveTemporary Function moveTemporary moveTemporary(pathsToMove: IPath [], deltas: IPoint [], task: Function): void Move some paths relatively during a task execution, then unmove them. #### Parameters pathsToMove: IPath [] deltas: IPoint [] task: Function #### Returns void Defined in core/path.ts:168 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"moveTemporary | Photon"},{"location":"converted/api/functions/core_path.moveTemporary/#function-movetemporary","text":"moveTemporary(pathsToMove: IPath [], deltas: IPoint [], task: Function): void Move some paths relatively during a task execution, then unmove them. #### Parameters pathsToMove: IPath [] deltas: IPoint [] task: Function #### Returns void Defined in core/path.ts:168","title":"Function moveTemporary"},{"location":"converted/api/functions/core_path.moveTemporary/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_path.rotate/","text":"rotate | Photon Photon Preparing search index... core/path rotate Function rotate rotate( pathToRotate: IPath , angleInDegrees: number, rotationOrigin?: IPoint , ): IPath Rotate a path. #### Parameters pathToRotate: IPath angleInDegrees: number rotationOrigin: IPoint = ... #### Returns IPath Defined in core/path.ts:198 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"rotate | Photon"},{"location":"converted/api/functions/core_path.rotate/#function-rotate","text":"rotate( pathToRotate: IPath , angleInDegrees: number, rotationOrigin?: IPoint , ): IPath Rotate a path. #### Parameters pathToRotate: IPath angleInDegrees: number rotationOrigin: IPoint = ... #### Returns IPath Defined in core/path.ts:198","title":"Function rotate"},{"location":"converted/api/functions/core_path.rotate/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_path.scale/","text":"scale | Photon Photon Preparing search index... core/path scale Function scale scale(pathToScale: IPath , scaleValue: number): IPath Scale a path. #### Parameters pathToScale: IPath scaleValue: number #### Returns IPath Defined in core/path.ts:226 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"scale | Photon"},{"location":"converted/api/functions/core_path.scale/#function-scale","text":"scale(pathToScale: IPath , scaleValue: number): IPath Scale a path. #### Parameters pathToScale: IPath scaleValue: number #### Returns IPath Defined in core/path.ts:226","title":"Function scale"},{"location":"converted/api/functions/core_path.scale/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_path.toKeyPoints/","text":"toKeyPoints | Photon Photon Preparing search index... core/path toKeyPoints Function toKeyPoints toKeyPoints(pathContext: IPath , maxArcFacet?: number): IPoint [] Get key points (a minimal a number of points) along a path. #### Parameters pathContext: IPath Optional maxArcFacet: number #### Returns IPoint [] Defined in core/path.ts:370 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"toKeyPoints | Photon"},{"location":"converted/api/functions/core_path.toKeyPoints/#function-tokeypoints","text":"toKeyPoints(pathContext: IPath , maxArcFacet?: number): IPoint [] Get key points (a minimal a number of points) along a path. #### Parameters pathContext: IPath Optional maxArcFacet: number #### Returns IPoint [] Defined in core/path.ts:370","title":"Function toKeyPoints"},{"location":"converted/api/functions/core_path.toKeyPoints/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_path.toPoints/","text":"toPoints | Photon Photon Preparing search index... core/path toPoints Function toPoints toPoints(pathContext: IPath , numberOfPoints: number): IPoint [] Get points along a path. #### Parameters pathContext: IPath numberOfPoints: number #### Returns IPoint [] Defined in core/path.ts:338 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"toPoints | Photon"},{"location":"converted/api/functions/core_path.toPoints/#function-topoints","text":"toPoints(pathContext: IPath , numberOfPoints: number): IPoint [] Get points along a path. #### Parameters pathContext: IPath numberOfPoints: number #### Returns IPoint [] Defined in core/path.ts:338","title":"Function toPoints"},{"location":"converted/api/functions/core_path.toPoints/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_path.zero/","text":"zero | Photon Photon Preparing search index... core/path zero Function zero zero(pathToZero: IPath ): IPath Move a path so its bounding box begins at [0, 0]. #### Parameters pathToZero: IPath #### Returns IPath Defined in core/path.ts:412 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"zero | Photon"},{"location":"converted/api/functions/core_path.zero/#function-zero","text":"zero(pathToZero: IPath ): IPath Move a path so its bounding box begins at [0, 0]. #### Parameters pathToZero: IPath #### Returns IPath Defined in core/path.ts:412","title":"Function zero"},{"location":"converted/api/functions/core_path.zero/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_pdf-esm.toPDF/","text":"toPDF | Photon Photon Preparing search index... core/pdf-esm toPDF Function toPDF toPDF( doc: PDFDocument, modelToExport: IModel , options?: IPDFRenderOptions , ): void Injects drawing into a PDFKit document. #### Parameters doc: PDFDocument PDFKit.PDFDocument object. See https://pdfkit.org/ + modelToExport: IModel Model object to export. + Optional options: IPDFRenderOptions Export options object. #### Returns void String of PDF file contents. Defined in core/pdf-esm.ts:47 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"toPDF | Photon"},{"location":"converted/api/functions/core_pdf-esm.toPDF/#function-topdf","text":"toPDF( doc: PDFDocument, modelToExport: IModel , options?: IPDFRenderOptions , ): void Injects drawing into a PDFKit document. #### Parameters doc: PDFDocument PDFKit.PDFDocument object. See https://pdfkit.org/ + modelToExport: IModel Model object to export. + Optional options: IPDFRenderOptions Export options object. #### Returns void String of PDF file contents. Defined in core/pdf-esm.ts:47","title":"Function toPDF"},{"location":"converted/api/functions/core_pdf-esm.toPDF/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_point.add/","text":"add | Photon Photon Preparing search index... core/point add Function add add(a: IPoint , b: IPoint , subtract?: boolean): IPoint Add two points together and return the result as a new point object. #### Parameters a: IPoint b: IPoint Optional subtract: boolean #### Returns IPoint Defined in core/point.ts:12 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"add | Photon"},{"location":"converted/api/functions/core_point.add/#function-add","text":"add(a: IPoint , b: IPoint , subtract?: boolean): IPoint Add two points together and return the result as a new point object. #### Parameters a: IPoint b: IPoint Optional subtract: boolean #### Returns IPoint Defined in core/point.ts:12","title":"Function add"},{"location":"converted/api/functions/core_point.add/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_point.average/","text":"average | Photon Photon Preparing search index... core/point average Function average average(a: IPoint , b: IPoint ): IPoint Get the average of two points. #### Parameters a: IPoint b: IPoint #### Returns IPoint Defined in core/point.ts:26 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"average | Photon"},{"location":"converted/api/functions/core_point.average/#function-average","text":"average(a: IPoint , b: IPoint ): IPoint Get the average of two points. #### Parameters a: IPoint b: IPoint #### Returns IPoint Defined in core/point.ts:26","title":"Function average"},{"location":"converted/api/functions/core_point.average/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_point.clone/","text":"clone | Photon Photon Preparing search index... core/point clone Function clone clone(pointToClone: IPoint ): IPoint Clone a point into a new point. #### Parameters pointToClone: IPoint #### Returns IPoint Defined in core/point.ts:32 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"clone | Photon"},{"location":"converted/api/functions/core_point.clone/#function-clone","text":"clone(pointToClone: IPoint ): IPoint Clone a point into a new point. #### Parameters pointToClone: IPoint #### Returns IPoint Defined in core/point.ts:32","title":"Function clone"},{"location":"converted/api/functions/core_point.clone/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_point.closest/","text":"closest | Photon Photon Preparing search index... core/point closest Function closest closest(referencePoint: IPoint , pointOptions: IPoint []): IPoint From an array of points, find the closest point to a given reference point. #### Parameters referencePoint: IPoint pointOptions: IPoint [] #### Returns IPoint Defined in core/point.ts:38 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"closest | Photon"},{"location":"converted/api/functions/core_point.closest/#function-closest","text":"closest(referencePoint: IPoint , pointOptions: IPoint []): IPoint From an array of points, find the closest point to a given reference point. #### Parameters referencePoint: IPoint pointOptions: IPoint [] #### Returns IPoint Defined in core/point.ts:38","title":"Function closest"},{"location":"converted/api/functions/core_point.closest/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_point.distort/","text":"distort | Photon Photon Preparing search index... core/point distort Function distort distort(pointToDistort: IPoint , scaleX: number, scaleY: number): IPoint Distort a point's coordinates. #### Parameters pointToDistort: IPoint scaleX: number scaleY: number #### Returns IPoint Defined in core/point.ts:187 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"distort | Photon"},{"location":"converted/api/functions/core_point.distort/#function-distort","text":"distort(pointToDistort: IPoint , scaleX: number, scaleY: number): IPoint Distort a point's coordinates. #### Parameters pointToDistort: IPoint scaleX: number scaleY: number #### Returns IPoint Defined in core/point.ts:187","title":"Function distort"},{"location":"converted/api/functions/core_point.distort/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_point.fromAngleOnCircle/","text":"fromAngleOnCircle | Photon Photon Preparing search index... core/point fromAngleOnCircle Function fromAngleOnCircle fromAngleOnCircle(angleInDegrees: number, circle: IPathCircle ): IPoint Get a point on a circle or arc path, at a given angle. #### Parameters angleInDegrees: number circle: IPathCircle #### Returns IPoint Defined in core/point.ts:67 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"fromAngleOnCircle | Photon"},{"location":"converted/api/functions/core_point.fromAngleOnCircle/#function-fromangleoncircle","text":"fromAngleOnCircle(angleInDegrees: number, circle: IPathCircle ): IPoint Get a point on a circle or arc path, at a given angle. #### Parameters angleInDegrees: number circle: IPathCircle #### Returns IPoint Defined in core/point.ts:67","title":"Function fromAngleOnCircle"},{"location":"converted/api/functions/core_point.fromAngleOnCircle/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_point.fromArc/","text":"fromArc | Photon Photon Preparing search index... core/point fromArc Function fromArc fromArc(arc: IPathArc ): IPoint [] Get the two end points of an arc path. #### Parameters arc: IPathArc #### Returns IPoint [] Defined in core/point.ts:72 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"fromArc | Photon"},{"location":"converted/api/functions/core_point.fromArc/#function-fromarc","text":"fromArc(arc: IPathArc ): IPoint [] Get the two end points of an arc path. #### Parameters arc: IPathArc #### Returns IPoint [] Defined in core/point.ts:72","title":"Function fromArc"},{"location":"converted/api/functions/core_point.fromArc/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_point.fromPathEnds/","text":"fromPathEnds | Photon Photon Preparing search index... core/point fromPathEnds Function fromPathEnds fromPathEnds(pathContext: IPath , pathOffset?: IPoint ): IPoint [] Get the two end points of a path. #### Parameters pathContext: IPath Optional pathOffset: IPoint #### Returns IPoint [] Defined in core/point.ts:83 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"fromPathEnds | Photon"},{"location":"converted/api/functions/core_point.fromPathEnds/#function-frompathends","text":"fromPathEnds(pathContext: IPath , pathOffset?: IPoint ): IPoint [] Get the two end points of a path. #### Parameters pathContext: IPath Optional pathOffset: IPoint #### Returns IPoint [] Defined in core/point.ts:83","title":"Function fromPathEnds"},{"location":"converted/api/functions/core_point.fromPathEnds/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_point.fromPolar/","text":"fromPolar | Photon Photon Preparing search index... core/point fromPolar Function fromPolar fromPolar(angleInRadians: number, radius: number): IPoint Get a point from its polar coordinates. #### Parameters angleInRadians: number radius: number #### Returns IPoint Defined in core/point.ts:59 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"fromPolar | Photon"},{"location":"converted/api/functions/core_point.fromPolar/#function-frompolar","text":"fromPolar(angleInRadians: number, radius: number): IPoint Get a point from its polar coordinates. #### Parameters angleInRadians: number radius: number #### Returns IPoint Defined in core/point.ts:59","title":"Function fromPolar"},{"location":"converted/api/functions/core_point.fromPolar/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_point.fromSlopeIntersection/","text":"fromSlopeIntersection | Photon Photon Preparing search index... core/point fromSlopeIntersection Function fromSlopeIntersection fromSlopeIntersection( lineA: IPathLine , lineB: IPathLine , options?: IPathIntersectionBaseOptions , ): IPoint Calculates the intersection of slopes of two lines. #### Parameters lineA: IPathLine lineB: IPathLine options: IPathIntersectionBaseOptions = {} #### Returns IPoint Defined in core/point.ts:102 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"fromSlopeIntersection | Photon"},{"location":"converted/api/functions/core_point.fromSlopeIntersection/#function-fromslopeintersection","text":"fromSlopeIntersection( lineA: IPathLine , lineB: IPathLine , options?: IPathIntersectionBaseOptions , ): IPoint Calculates the intersection of slopes of two lines. #### Parameters lineA: IPathLine lineB: IPathLine options: IPathIntersectionBaseOptions = {} #### Returns IPoint Defined in core/point.ts:102","title":"Function fromSlopeIntersection"},{"location":"converted/api/functions/core_point.fromSlopeIntersection/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_point.middle/","text":"middle | Photon Photon Preparing search index... core/point middle Function middle middle(pathContext: IPath , ratio?: number): IPoint Get the middle point of a path. #### Parameters pathContext: IPath ratio: number = .5 #### Returns IPoint Defined in core/point.ts:147 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"middle | Photon"},{"location":"converted/api/functions/core_point.middle/#function-middle","text":"middle(pathContext: IPath , ratio?: number): IPoint Get the middle point of a path. #### Parameters pathContext: IPath ratio: number = .5 #### Returns IPoint Defined in core/point.ts:147","title":"Function middle"},{"location":"converted/api/functions/core_point.middle/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_point.mirror/","text":"mirror | Photon Photon Preparing search index... core/point mirror Function mirror mirror(pointToMirror: IPoint , mirrorX: boolean, mirrorY: boolean): IPoint Create a clone of a point, mirrored on either or both x and y axes. #### Parameters pointToMirror: IPoint mirrorX: boolean mirrorY: boolean #### Returns IPoint Defined in core/point.ts:157 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"mirror | Photon"},{"location":"converted/api/functions/core_point.mirror/#function-mirror","text":"mirror(pointToMirror: IPoint , mirrorX: boolean, mirrorY: boolean): IPoint Create a clone of a point, mirrored on either or both x and y axes. #### Parameters pointToMirror: IPoint mirrorX: boolean mirrorY: boolean #### Returns IPoint Defined in core/point.ts:157","title":"Function mirror"},{"location":"converted/api/functions/core_point.mirror/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_point.rotate/","text":"rotate | Photon Photon Preparing search index... core/point rotate Function rotate rotate( pointToRotate: IPoint , angleInDegrees: number, rotationOrigin?: IPoint , ): IPoint Rotate a point. #### Parameters pointToRotate: IPoint angleInDegrees: number rotationOrigin: IPoint = ... #### Returns IPoint Defined in core/point.ts:170 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"rotate | Photon"},{"location":"converted/api/functions/core_point.rotate/#function-rotate","text":"rotate( pointToRotate: IPoint , angleInDegrees: number, rotationOrigin?: IPoint , ): IPoint Rotate a point. #### Parameters pointToRotate: IPoint angleInDegrees: number rotationOrigin: IPoint = ... #### Returns IPoint Defined in core/point.ts:170","title":"Function rotate"},{"location":"converted/api/functions/core_point.rotate/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_point.rounded/","text":"rounded | Photon Photon Preparing search index... core/point rounded Function rounded rounded(pointContext: IPoint , accuracy?: number): IPoint Round the values of a point. #### Parameters pointContext: IPoint Optional accuracy: number #### Returns IPoint Defined in core/point.ts:165 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"rounded | Photon"},{"location":"converted/api/functions/core_point.rounded/#function-rounded","text":"rounded(pointContext: IPoint , accuracy?: number): IPoint Round the values of a point. #### Parameters pointContext: IPoint Optional accuracy: number #### Returns IPoint Defined in core/point.ts:165","title":"Function rounded"},{"location":"converted/api/functions/core_point.rounded/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_point.scale/","text":"scale | Photon Photon Preparing search index... core/point scale Function scale scale(pointToScale: IPoint , scaleValue: number): IPoint Scale a point's coordinates. #### Parameters pointToScale: IPoint scaleValue: number #### Returns IPoint Defined in core/point.ts:178 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"scale | Photon"},{"location":"converted/api/functions/core_point.scale/#function-scale","text":"scale(pointToScale: IPoint , scaleValue: number): IPoint Scale a point's coordinates. #### Parameters pointToScale: IPoint scaleValue: number #### Returns IPoint Defined in core/point.ts:178","title":"Function scale"},{"location":"converted/api/functions/core_point.scale/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_point.subtract/","text":"subtract | Photon Photon Preparing search index... core/point subtract Function subtract subtract(a: IPoint , b: IPoint ): IPoint Subtract a point from another point, and return the result as a new point. #### Parameters a: IPoint b: IPoint #### Returns IPoint Defined in core/point.ts:192 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"subtract | Photon"},{"location":"converted/api/functions/core_point.subtract/#function-subtract","text":"subtract(a: IPoint , b: IPoint ): IPoint Subtract a point from another point, and return the result as a new point. #### Parameters a: IPoint b: IPoint #### Returns IPoint Defined in core/point.ts:192","title":"Function subtract"},{"location":"converted/api/functions/core_point.subtract/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_point.zero/","text":"zero | Photon Photon Preparing search index... core/point zero Function zero zero(): IPoint A point at 0,0 coordinates. #### Returns IPoint Defined in core/point.ts:197 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"zero | Photon"},{"location":"converted/api/functions/core_point.zero/#function-zero","text":"zero(): IPoint A point at 0,0 coordinates. #### Returns IPoint Defined in core/point.ts:197","title":"Function zero"},{"location":"converted/api/functions/core_point.zero/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_simplify.simplify/","text":"simplify | Photon Photon Preparing search index... core/simplify simplify Function simplify simplify(modelToSimplify: IModel , options?: ISimplifyOptions ): IModel #### Parameters modelToSimplify: IModel Optional options: ISimplifyOptions #### Returns IModel Defined in core/simplify.ts:53 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"simplify | Photon"},{"location":"converted/api/functions/core_simplify.simplify/#function-simplify","text":"simplify(modelToSimplify: IModel , options?: ISimplifyOptions ): IModel #### Parameters modelToSimplify: IModel Optional options: ISimplifyOptions #### Returns IModel Defined in core/simplify.ts:53","title":"Function simplify"},{"location":"converted/api/functions/core_simplify.simplify/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_solvers.circleTangentAngles/","text":"circleTangentAngles | Photon Photon Preparing search index... core/solvers circleTangentAngles Function circleTangentAngles circleTangentAngles(a: IPathCircle , b: IPathCircle , inner?: boolean): number[] Solves for the angles of the tangent lines between 2 circles. #### Parameters a: IPathCircle b: IPathCircle inner: boolean = false #### Returns number[] Defined in core/solvers.ts:32 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"circleTangentAngles | Photon"},{"location":"converted/api/functions/core_solvers.circleTangentAngles/#function-circletangentangles","text":"circleTangentAngles(a: IPathCircle , b: IPathCircle , inner?: boolean): number[] Solves for the angles of the tangent lines between 2 circles. #### Parameters a: IPathCircle b: IPathCircle inner: boolean = false #### Returns number[] Defined in core/solvers.ts:32","title":"Function circleTangentAngles"},{"location":"converted/api/functions/core_solvers.circleTangentAngles/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_solvers.equilateralAltitude/","text":"equilateralAltitude | Photon Photon Preparing search index... core/solvers equilateralAltitude Function equilateralAltitude equilateralAltitude(sideLength: number): number Solves for the altitude of an equilateral triangle when you know its side length. #### Parameters sideLength: number #### Returns number Defined in core/solvers.ts:11 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"equilateralAltitude | Photon"},{"location":"converted/api/functions/core_solvers.equilateralAltitude/#function-equilateralaltitude","text":"equilateralAltitude(sideLength: number): number Solves for the altitude of an equilateral triangle when you know its side length. #### Parameters sideLength: number #### Returns number Defined in core/solvers.ts:11","title":"Function equilateralAltitude"},{"location":"converted/api/functions/core_solvers.equilateralAltitude/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_solvers.equilateralSide/","text":"equilateralSide | Photon Photon Preparing search index... core/solvers equilateralSide Function equilateralSide equilateralSide(altitude: number): number Solves for the side length of an equilateral triangle when you know its altitude. #### Parameters altitude: number #### Returns number Defined in core/solvers.ts:16 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"equilateralSide | Photon"},{"location":"converted/api/functions/core_solvers.equilateralSide/#function-equilateralside","text":"equilateralSide(altitude: number): number Solves for the side length of an equilateral triangle when you know its altitude. #### Parameters altitude: number #### Returns number Defined in core/solvers.ts:16","title":"Function equilateralSide"},{"location":"converted/api/functions/core_solvers.equilateralSide/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_solvers.solveTriangleASA/","text":"solveTriangleASA | Photon Photon Preparing search index... core/solvers solveTriangleASA Function solveTriangleASA solveTriangleASA( oppositeAngleInDegrees: number, lengthOfSideBetweenAngles: number, otherAngleInDegrees: number, ): number Solves for the length of a side of a triangle when you know length of one side and 2 angles. #### Parameters oppositeAngleInDegrees: number lengthOfSideBetweenAngles: number otherAngleInDegrees: number #### Returns number Defined in core/solvers.ts:26 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"solveTriangleASA | Photon"},{"location":"converted/api/functions/core_solvers.solveTriangleASA/#function-solvetriangleasa","text":"solveTriangleASA( oppositeAngleInDegrees: number, lengthOfSideBetweenAngles: number, otherAngleInDegrees: number, ): number Solves for the length of a side of a triangle when you know length of one side and 2 angles. #### Parameters oppositeAngleInDegrees: number lengthOfSideBetweenAngles: number otherAngleInDegrees: number #### Returns number Defined in core/solvers.ts:26","title":"Function solveTriangleASA"},{"location":"converted/api/functions/core_solvers.solveTriangleASA/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_solvers.solveTriangleSSS/","text":"solveTriangleSSS | Photon Photon Preparing search index... core/solvers solveTriangleSSS Function solveTriangleSSS solveTriangleSSS(lengthA: number, lengthB: number, lengthC: number): number Solves for the angle of a triangle when you know lengths of 3 sides. #### Parameters lengthA: number lengthB: number lengthC: number #### Returns number Defined in core/solvers.ts:21 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"solveTriangleSSS | Photon"},{"location":"converted/api/functions/core_solvers.solveTriangleSSS/#function-solvetrianglesss","text":"solveTriangleSSS(lengthA: number, lengthB: number, lengthC: number): number Solves for the angle of a triangle when you know lengths of 3 sides. #### Parameters lengthA: number lengthB: number lengthC: number #### Returns number Defined in core/solvers.ts:21","title":"Function solveTriangleSSS"},{"location":"converted/api/functions/core_solvers.solveTriangleSSS/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_svg-esm.fromSVGPathData/","text":"fromSVGPathData | Photon Photon Preparing search index... core/svg-esm fromSVGPathData Function fromSVGPathData fromSVGPathData(pathData: string, options?: ISVGImportOptions ): IModel #### Parameters pathData: string options: ISVGImportOptions = {} #### Returns IModel Defined in core/svg-esm.ts:49 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"fromSVGPathData | Photon"},{"location":"converted/api/functions/core_svg-esm.fromSVGPathData/#function-fromsvgpathdata","text":"fromSVGPathData(pathData: string, options?: ISVGImportOptions ): IModel #### Parameters pathData: string options: ISVGImportOptions = {} #### Returns IModel Defined in core/svg-esm.ts:49","title":"Function fromSVGPathData"},{"location":"converted/api/functions/core_svg-esm.fromSVGPathData/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_svg-esm.toSVG/","text":"toSVG | Photon Photon Preparing search index... core/svg-esm toSVG Function toSVG toSVG(itemToExport: any, options?: ISVGRenderOptions ): string #### Parameters itemToExport: any options: ISVGRenderOptions = {} #### Returns string Defined in core/svg-esm.ts:421 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"toSVG | Photon"},{"location":"converted/api/functions/core_svg-esm.toSVG/#function-tosvg","text":"toSVG(itemToExport: any, options?: ISVGRenderOptions ): string #### Parameters itemToExport: any options: ISVGRenderOptions = {} #### Returns string Defined in core/svg-esm.ts:421","title":"Function toSVG"},{"location":"converted/api/functions/core_svg-esm.toSVG/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_svg-esm.toSVGPathData/","text":"toSVGPathData | Photon Photon Preparing search index... core/svg-esm toSVGPathData Function toSVGPathData toSVGPathData( modelToExport: IModel , ...args: any[], ): string | IPathDataByLayerMap #### Parameters modelToExport: IModel ...args: any[] #### Returns string | IPathDataByLayerMap Defined in core/svg-esm.ts:311 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"toSVGPathData | Photon"},{"location":"converted/api/functions/core_svg-esm.toSVGPathData/#function-tosvgpathdata","text":"toSVGPathData( modelToExport: IModel , ...args: any[], ): string | IPathDataByLayerMap #### Parameters modelToExport: IModel ...args: any[] #### Returns string | IPathDataByLayerMap Defined in core/svg-esm.ts:311","title":"Function toSVGPathData"},{"location":"converted/api/functions/core_svg-esm.toSVGPathData/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_svg-helpers.chainToSVGPathData/","text":"chainToSVGPathData | Photon Photon Preparing search index... core/svg-helpers chainToSVGPathData Function chainToSVGPathData chainToSVGPathData(chain: IChain , offset: IPoint , accuracy?: number): string Convert a chain to SVG path-data string. #### Parameters chain: IChain offset: IPoint accuracy: number = 0.001 #### Returns string Defined in core/svg-helpers.ts:153 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"chainToSVGPathData | Photon"},{"location":"converted/api/functions/core_svg-helpers.chainToSVGPathData/#function-chaintosvgpathdata","text":"chainToSVGPathData(chain: IChain , offset: IPoint , accuracy?: number): string Convert a chain to SVG path-data string. #### Parameters chain: IChain offset: IPoint accuracy: number = 0.001 #### Returns string Defined in core/svg-helpers.ts:153","title":"Function chainToSVGPathData"},{"location":"converted/api/functions/core_svg-helpers.chainToSVGPathData/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_svg-helpers.pathToSVGPathData/","text":"pathToSVGPathData | Photon Photon Preparing search index... core/svg-helpers pathToSVGPathData Function pathToSVGPathData pathToSVGPathData( pathToExport: IPath , pathOffset: IPoint , exportOffset: IPoint , accuracy?: number, clockwiseCircle?: boolean, ): string Export a single path to SVG path-data string. #### Parameters pathToExport: IPath pathOffset: IPoint exportOffset: IPoint accuracy: number = 0.001 Optional clockwiseCircle: boolean #### Returns string Defined in core/svg-helpers.ts:110 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"pathToSVGPathData | Photon"},{"location":"converted/api/functions/core_svg-helpers.pathToSVGPathData/#function-pathtosvgpathdata","text":"pathToSVGPathData( pathToExport: IPath , pathOffset: IPoint , exportOffset: IPoint , accuracy?: number, clockwiseCircle?: boolean, ): string Export a single path to SVG path-data string. #### Parameters pathToExport: IPath pathOffset: IPoint exportOffset: IPoint accuracy: number = 0.001 Optional clockwiseCircle: boolean #### Returns string Defined in core/svg-helpers.ts:110","title":"Function pathToSVGPathData"},{"location":"converted/api/functions/core_svg-helpers.pathToSVGPathData/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_units.conversionScale/","text":"conversionScale | Photon Photon Preparing search index... core/units conversionScale Function conversionScale conversionScale(srcUnitType: string, destUnitType: string): number Get a conversion ratio between a source unit and a destination unit. #### Parameters srcUnitType: string destUnitType: string #### Returns number Defined in core/units.ts:36 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"conversionScale | Photon"},{"location":"converted/api/functions/core_units.conversionScale/#function-conversionscale","text":"conversionScale(srcUnitType: string, destUnitType: string): number Get a conversion ratio between a source unit and a destination unit. #### Parameters srcUnitType: string destUnitType: string #### Returns number Defined in core/units.ts:36","title":"Function conversionScale"},{"location":"converted/api/functions/core_units.conversionScale/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/core_units.isValidUnit/","text":"isValidUnit | Photon Photon Preparing search index... core/units isValidUnit Function isValidUnit isValidUnit(tryUnit: string): boolean Check to see if unit type is a valid Maker.js unit. #### Parameters tryUnit: string #### Returns boolean Defined in core/units.ts:57 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"isValidUnit | Photon"},{"location":"converted/api/functions/core_units.isValidUnit/#function-isvalidunit","text":"isValidUnit(tryUnit: string): boolean Check to see if unit type is a valid Maker.js unit. #### Parameters tryUnit: string #### Returns boolean Defined in core/units.ts:57","title":"Function isValidUnit"},{"location":"converted/api/functions/core_units.isValidUnit/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/functions/types_jscad.export_.CSG.Path2D.arc/","text":"arc | Photon Photon Preparing search index... types/jscad export= CSG Path2D arc Function arc arc(options: IArcOptions ): any Create an arc path #### Parameters options: IArcOptions #### Returns any Defined in types/jscad.d.ts:89 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"arc | Photon"},{"location":"converted/api/functions/types_jscad.export_.CSG.Path2D.arc/#function-arc","text":"arc(options: IArcOptions ): any Create an arc path #### Parameters options: IArcOptions #### Returns any Defined in types/jscad.d.ts:89","title":"Function arc"},{"location":"converted/api/functions/types_jscad.export_.CSG.Path2D.arc/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/interfaces/core_angle.IChainLink/","text":"IChainLink | Photon Photon Preparing search index... core/angle IChainLink Interface IChainLink interface IChainLink { reversed : boolean; walkedPath : { pathContext: IPath }; } Defined in core/angle.ts:9 Index Properties reversed walkedPath Properties reversed reversed: boolean Defined in core/angle.ts:11 walkedPath walkedPath: { pathContext: IPath } Defined in core/angle.ts:10 Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Properties reversed walkedPath Photon Loading... Generated using TypeDoc","title":"IChainLink | Photon"},{"location":"converted/api/interfaces/core_angle.IChainLink/#interface-ichainlink","text":"interface IChainLink { reversed : boolean; walkedPath : { pathContext: IPath }; } Defined in core/angle.ts:9","title":"Interface IChainLink"},{"location":"converted/api/interfaces/core_angle.IChainLink/#index","text":"","title":"Index"},{"location":"converted/api/interfaces/core_angle.IChainLink/#properties","text":"reversed walkedPath","title":"Properties"},{"location":"converted/api/interfaces/core_angle.IChainLink/#properties_1","text":"","title":"Properties"},{"location":"converted/api/interfaces/core_angle.IChainLink/#reversed","text":"reversed: boolean Defined in core/angle.ts:11","title":"reversed"},{"location":"converted/api/interfaces/core_angle.IChainLink/#walkedpath","text":"walkedPath: { pathContext: IPath } Defined in core/angle.ts:10","title":"walkedPath"},{"location":"converted/api/interfaces/core_angle.IChainLink/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/interfaces/core_angle.IChainLink/#on-this-page","text":"Properties reversed walkedPath Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/interfaces/core_boolean-utils.DeletedPathInfo/","text":"DeletedPathInfo | Photon Photon Preparing search index... core/boolean-utils DeletedPathInfo Interface DeletedPathInfo A line, curved line or other simple two dimensional shape. interface DeletedPathInfo { layer ?: string; origin : IPoint ; reason : string; routeKey : string; type : string; } Hierarchy ( View Summary ) IPath DeletedPathInfo Defined in core/boolean-utils.ts:91 Index Properties layer? origin reason routeKey type Properties Optional layer layer?: string Optional layer of this path. Inherited from IPath . layer Defined in core/schema.ts:24 origin origin: IPoint The main point of reference for this path. Inherited from IPath . origin Defined in core/schema.ts:22 reason reason: string Defined in core/boolean-utils.ts:92 routeKey routeKey: string Defined in core/boolean-utils.ts:93 type type: string The type of the path, e.g. \"line\", \"circle\", or \"arc\". These strings are enumerated in pathType. Inherited from IPath . type Defined in core/schema.ts:20 Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Properties layer origin reason routeKey type Photon Loading... Generated using TypeDoc","title":"DeletedPathInfo | Photon"},{"location":"converted/api/interfaces/core_boolean-utils.DeletedPathInfo/#interface-deletedpathinfo","text":"A line, curved line or other simple two dimensional shape. interface DeletedPathInfo { layer ?: string; origin : IPoint ; reason : string; routeKey : string; type : string; }","title":"Interface DeletedPathInfo"},{"location":"converted/api/interfaces/core_boolean-utils.DeletedPathInfo/#hierarchy-view-summary","text":"IPath DeletedPathInfo Defined in core/boolean-utils.ts:91","title":"Hierarchy (View Summary)"},{"location":"converted/api/interfaces/core_boolean-utils.DeletedPathInfo/#index","text":"","title":"Index"},{"location":"converted/api/interfaces/core_boolean-utils.DeletedPathInfo/#properties","text":"layer? origin reason routeKey type","title":"Properties"},{"location":"converted/api/interfaces/core_boolean-utils.DeletedPathInfo/#properties_1","text":"","title":"Properties"},{"location":"converted/api/interfaces/core_boolean-utils.DeletedPathInfo/#optionallayer","text":"layer?: string Optional layer of this path. Inherited from IPath . layer Defined in core/schema.ts:24","title":"Optionallayer"},{"location":"converted/api/interfaces/core_boolean-utils.DeletedPathInfo/#origin","text":"origin: IPoint The main point of reference for this path. Inherited from IPath . origin Defined in core/schema.ts:22","title":"origin"},{"location":"converted/api/interfaces/core_boolean-utils.DeletedPathInfo/#reason","text":"reason: string Defined in core/boolean-utils.ts:92","title":"reason"},{"location":"converted/api/interfaces/core_boolean-utils.DeletedPathInfo/#routekey","text":"routeKey: string Defined in core/boolean-utils.ts:93","title":"routeKey"},{"location":"converted/api/interfaces/core_boolean-utils.DeletedPathInfo/#type","text":"type: string The type of the path, e.g. \"line\", \"circle\", or \"arc\". These strings are enumerated in pathType. Inherited from IPath . type Defined in core/schema.ts:20","title":"type"},{"location":"converted/api/interfaces/core_boolean-utils.DeletedPathInfo/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/interfaces/core_boolean-utils.DeletedPathInfo/#on-this-page","text":"Properties layer origin reason routeKey type Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/interfaces/core_boolean-utils.SegmentClassification/","text":"SegmentClassification | Photon Photon Preparing search index... core/boolean-utils SegmentClassification Interface SegmentClassification interface SegmentClassification { isDuplicate : boolean; isInside : boolean; } Defined in core/boolean-utils.ts:11 Index Properties isDuplicate isInside Properties isDuplicate isDuplicate: boolean Defined in core/boolean-utils.ts:13 isInside isInside: boolean Defined in core/boolean-utils.ts:12 Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Properties isDuplicate isInside Photon Loading... Generated using TypeDoc","title":"SegmentClassification | Photon"},{"location":"converted/api/interfaces/core_boolean-utils.SegmentClassification/#interface-segmentclassification","text":"interface SegmentClassification { isDuplicate : boolean; isInside : boolean; } Defined in core/boolean-utils.ts:11","title":"Interface SegmentClassification"},{"location":"converted/api/interfaces/core_boolean-utils.SegmentClassification/#index","text":"","title":"Index"},{"location":"converted/api/interfaces/core_boolean-utils.SegmentClassification/#properties","text":"isDuplicate isInside","title":"Properties"},{"location":"converted/api/interfaces/core_boolean-utils.SegmentClassification/#properties_1","text":"","title":"Properties"},{"location":"converted/api/interfaces/core_boolean-utils.SegmentClassification/#isduplicate","text":"isDuplicate: boolean Defined in core/boolean-utils.ts:13","title":"isDuplicate"},{"location":"converted/api/interfaces/core_boolean-utils.SegmentClassification/#isinside","text":"isInside: boolean Defined in core/boolean-utils.ts:12","title":"isInside"},{"location":"converted/api/interfaces/core_boolean-utils.SegmentClassification/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/interfaces/core_boolean-utils.SegmentClassification/#on-this-page","text":"Properties isDuplicate isInside Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/interfaces/core_cascades.MakerJs.ICascade/","text":"ICascade | Photon Photon Preparing search index... core/cascades MakerJs ICascade Interface ICascade interface ICascade { \\(initial](#initial): any; [\\) reset : () => this; $result : any; } Hierarchy ( View Summary ) ICascade ICascadeModel ICascadePath ICascadePoint Defined in core/cascades.ts:5 Index Properties \\(initial](#initial) [\\) reset $result Properties $initial $initial: any Defined in core/cascades.ts:6 $reset $reset: () => this Defined in core/cascades.ts:8 $result $result: any Defined in core/cascades.ts:7 Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Properties \\(initial](#initial)[\\) reset $result Photon Loading... Generated using TypeDoc","title":"ICascade | Photon"},{"location":"converted/api/interfaces/core_cascades.MakerJs.ICascade/#interface-icascade","text":"interface ICascade { \\(initial](#initial): any; [\\) reset : () => this; $result : any; }","title":"Interface ICascade"},{"location":"converted/api/interfaces/core_cascades.MakerJs.ICascade/#hierarchy-view-summary","text":"ICascade ICascadeModel ICascadePath ICascadePoint Defined in core/cascades.ts:5","title":"Hierarchy (View Summary)"},{"location":"converted/api/interfaces/core_cascades.MakerJs.ICascade/#index","text":"","title":"Index"},{"location":"converted/api/interfaces/core_cascades.MakerJs.ICascade/#properties","text":"\\(initial](#initial) [\\) reset $result","title":"Properties"},{"location":"converted/api/interfaces/core_cascades.MakerJs.ICascade/#properties_1","text":"","title":"Properties"},{"location":"converted/api/interfaces/core_cascades.MakerJs.ICascade/#initial","text":"$initial: any Defined in core/cascades.ts:6","title":"$initial"},{"location":"converted/api/interfaces/core_cascades.MakerJs.ICascade/#reset","text":"$reset: () => this Defined in core/cascades.ts:8","title":"$reset"},{"location":"converted/api/interfaces/core_cascades.MakerJs.ICascade/#result","text":"$result: any Defined in core/cascades.ts:7","title":"$result"},{"location":"converted/api/interfaces/core_cascades.MakerJs.ICascade/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/interfaces/core_cascades.MakerJs.ICascade/#on-this-page","text":"Properties \\(initial](#initial)[\\) reset $result Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/interfaces/core_cascades.MakerJs.ICascadeModel/","text":"ICascadeModel | Photon Photon Preparing search index... core/cascades MakerJs ICascadeModel Interface ICascadeModel interface ICascadeModel { \\(initial](#initial): any; [\\) reset : () => this; $result : any; } Hierarchy ( View Summary ) MakerJs . ICascade ICascadeModel Defined in core/cascades.ts:11 Index Properties \\(initial](#initial) [\\) reset $result Properties $initial $initial: any Inherited from ICascade . $initial Defined in core/cascades.ts:6 $reset $reset: () => this Inherited from ICascade . $reset Defined in core/cascades.ts:8 $result $result: any Inherited from ICascade . $result Defined in core/cascades.ts:7 Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Properties \\(initial](#initial)[\\) reset $result Photon Loading... Generated using TypeDoc","title":"ICascadeModel | Photon"},{"location":"converted/api/interfaces/core_cascades.MakerJs.ICascadeModel/#interface-icascademodel","text":"interface ICascadeModel { \\(initial](#initial): any; [\\) reset : () => this; $result : any; }","title":"Interface ICascadeModel"},{"location":"converted/api/interfaces/core_cascades.MakerJs.ICascadeModel/#hierarchy-view-summary","text":"MakerJs . ICascade ICascadeModel Defined in core/cascades.ts:11","title":"Hierarchy (View Summary)"},{"location":"converted/api/interfaces/core_cascades.MakerJs.ICascadeModel/#index","text":"","title":"Index"},{"location":"converted/api/interfaces/core_cascades.MakerJs.ICascadeModel/#properties","text":"\\(initial](#initial) [\\) reset $result","title":"Properties"},{"location":"converted/api/interfaces/core_cascades.MakerJs.ICascadeModel/#properties_1","text":"","title":"Properties"},{"location":"converted/api/interfaces/core_cascades.MakerJs.ICascadeModel/#initial","text":"$initial: any Inherited from ICascade . $initial Defined in core/cascades.ts:6","title":"$initial"},{"location":"converted/api/interfaces/core_cascades.MakerJs.ICascadeModel/#reset","text":"$reset: () => this Inherited from ICascade . $reset Defined in core/cascades.ts:8","title":"$reset"},{"location":"converted/api/interfaces/core_cascades.MakerJs.ICascadeModel/#result","text":"$result: any Inherited from ICascade . $result Defined in core/cascades.ts:7","title":"$result"},{"location":"converted/api/interfaces/core_cascades.MakerJs.ICascadeModel/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/interfaces/core_cascades.MakerJs.ICascadeModel/#on-this-page","text":"Properties \\(initial](#initial)[\\) reset $result Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/interfaces/core_cascades.MakerJs.ICascadePath/","text":"ICascadePath | Photon Photon Preparing search index... core/cascades MakerJs ICascadePath Interface ICascadePath interface ICascadePath { \\(initial](#initial): any; [\\) reset : () => this; $result : any; } Hierarchy ( View Summary ) MakerJs . ICascade ICascadePath Defined in core/cascades.ts:15 Index Properties \\(initial](#initial) [\\) reset $result Properties $initial $initial: any Inherited from ICascade . $initial Defined in core/cascades.ts:6 $reset $reset: () => this Inherited from ICascade . $reset Defined in core/cascades.ts:8 $result $result: any Inherited from ICascade . $result Defined in core/cascades.ts:7 Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Properties \\(initial](#initial)[\\) reset $result Photon Loading... Generated using TypeDoc","title":"ICascadePath | Photon"},{"location":"converted/api/interfaces/core_cascades.MakerJs.ICascadePath/#interface-icascadepath","text":"interface ICascadePath { \\(initial](#initial): any; [\\) reset : () => this; $result : any; }","title":"Interface ICascadePath"},{"location":"converted/api/interfaces/core_cascades.MakerJs.ICascadePath/#hierarchy-view-summary","text":"MakerJs . ICascade ICascadePath Defined in core/cascades.ts:15","title":"Hierarchy (View Summary)"},{"location":"converted/api/interfaces/core_cascades.MakerJs.ICascadePath/#index","text":"","title":"Index"},{"location":"converted/api/interfaces/core_cascades.MakerJs.ICascadePath/#properties","text":"\\(initial](#initial) [\\) reset $result","title":"Properties"},{"location":"converted/api/interfaces/core_cascades.MakerJs.ICascadePath/#properties_1","text":"","title":"Properties"},{"location":"converted/api/interfaces/core_cascades.MakerJs.ICascadePath/#initial","text":"$initial: any Inherited from ICascade . $initial Defined in core/cascades.ts:6","title":"$initial"},{"location":"converted/api/interfaces/core_cascades.MakerJs.ICascadePath/#reset","text":"$reset: () => this Inherited from ICascade . $reset Defined in core/cascades.ts:8","title":"$reset"},{"location":"converted/api/interfaces/core_cascades.MakerJs.ICascadePath/#result","text":"$result: any Inherited from ICascade . $result Defined in core/cascades.ts:7","title":"$result"},{"location":"converted/api/interfaces/core_cascades.MakerJs.ICascadePath/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/interfaces/core_cascades.MakerJs.ICascadePath/#on-this-page","text":"Properties \\(initial](#initial)[\\) reset $result Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/interfaces/core_cascades.MakerJs.ICascadePoint/","text":"ICascadePoint | Photon Photon Preparing search index... core/cascades MakerJs ICascadePoint Interface ICascadePoint interface ICascadePoint { \\(initial](#initial): any; [\\) reset : () => this; $result : any; } Hierarchy ( View Summary ) MakerJs . ICascade ICascadePoint Defined in core/cascades.ts:19 Index Properties \\(initial](#initial) [\\) reset $result Properties $initial $initial: any Inherited from ICascade . $initial Defined in core/cascades.ts:6 $reset $reset: () => this Inherited from ICascade . $reset Defined in core/cascades.ts:8 $result $result: any Inherited from ICascade . $result Defined in core/cascades.ts:7 Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Properties \\(initial](#initial)[\\) reset $result Photon Loading... Generated using TypeDoc","title":"ICascadePoint | Photon"},{"location":"converted/api/interfaces/core_cascades.MakerJs.ICascadePoint/#interface-icascadepoint","text":"interface ICascadePoint { \\(initial](#initial): any; [\\) reset : () => this; $result : any; }","title":"Interface ICascadePoint"},{"location":"converted/api/interfaces/core_cascades.MakerJs.ICascadePoint/#hierarchy-view-summary","text":"MakerJs . ICascade ICascadePoint Defined in core/cascades.ts:19","title":"Hierarchy (View Summary)"},{"location":"converted/api/interfaces/core_cascades.MakerJs.ICascadePoint/#index","text":"","title":"Index"},{"location":"converted/api/interfaces/core_cascades.MakerJs.ICascadePoint/#properties","text":"\\(initial](#initial) [\\) reset $result","title":"Properties"},{"location":"converted/api/interfaces/core_cascades.MakerJs.ICascadePoint/#properties_1","text":"","title":"Properties"},{"location":"converted/api/interfaces/core_cascades.MakerJs.ICascadePoint/#initial","text":"$initial: any Inherited from ICascade . $initial Defined in core/cascades.ts:6","title":"$initial"},{"location":"converted/api/interfaces/core_cascades.MakerJs.ICascadePoint/#reset","text":"$reset: () => this Inherited from ICascade . $reset Defined in core/cascades.ts:8","title":"$reset"},{"location":"converted/api/interfaces/core_cascades.MakerJs.ICascadePoint/#result","text":"$result: any Inherited from ICascade . $result Defined in core/cascades.ts:7","title":"$result"},{"location":"converted/api/interfaces/core_cascades.MakerJs.ICascadePoint/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/interfaces/core_cascades.MakerJs.ICascadePoint/#on-this-page","text":"Properties \\(initial](#initial)[\\) reset $result Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/interfaces/core_collect.ICollection/","text":"ICollection | Photon Photon Preparing search index... core/collect ICollection Interface ICollection A collection for items that share a common key. interface ICollection< K , T > { items : T []; key : K ; } Type Parameters K T Defined in core/collect.ts:14 Index Properties items key Properties items items: T [] Defined in core/collect.ts:16 key key: K Defined in core/collect.ts:15 Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Properties items key Photon Loading... Generated using TypeDoc","title":"ICollection | Photon"},{"location":"converted/api/interfaces/core_collect.ICollection/#interface-icollection","text":"A collection for items that share a common key. interface ICollection< K , T > { items : T []; key : K ; }","title":"Interface ICollection"},{"location":"converted/api/interfaces/core_collect.ICollection/#type-parameters","text":"K T Defined in core/collect.ts:14","title":"Type Parameters"},{"location":"converted/api/interfaces/core_collect.ICollection/#index","text":"","title":"Index"},{"location":"converted/api/interfaces/core_collect.ICollection/#properties","text":"items key","title":"Properties"},{"location":"converted/api/interfaces/core_collect.ICollection/#properties_1","text":"","title":"Properties"},{"location":"converted/api/interfaces/core_collect.ICollection/#items","text":"items: T [] Defined in core/collect.ts:16","title":"items"},{"location":"converted/api/interfaces/core_collect.ICollection/#key","text":"key: K Defined in core/collect.ts:15","title":"key"},{"location":"converted/api/interfaces/core_collect.ICollection/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/interfaces/core_collect.ICollection/#on-this-page","text":"Properties items key Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/interfaces/core_collect.ICollectionKeyComparer/","text":"ICollectionKeyComparer | Photon Photon Preparing search index... core/collect ICollectionKeyComparer Interface ICollectionKeyComparer Compare keys to see if they are equal. Type Parameters K ICollectionKeyComparer(a: K , b: K ): boolean #### Parameters a: K b: K #### Returns boolean Defined in core/collect.ts:8 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"ICollectionKeyComparer | Photon"},{"location":"converted/api/interfaces/core_collect.ICollectionKeyComparer/#interface-icollectionkeycomparer","text":"Compare keys to see if they are equal.","title":"Interface ICollectionKeyComparer"},{"location":"converted/api/interfaces/core_collect.ICollectionKeyComparer/#type-parameters","text":"K ICollectionKeyComparer(a: K , b: K ): boolean #### Parameters a: K b: K #### Returns boolean Defined in core/collect.ts:8","title":"Type Parameters"},{"location":"converted/api/interfaces/core_collect.ICollectionKeyComparer/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/interfaces/core_collect.IPointGraphIndexElement/","text":"IPointGraphIndexElement | Photon Photon Preparing search index... core/collect IPointGraphIndexElement Interface IPointGraphIndexElement The element type stored in the index of a PointGraph. interface IPointGraphIndexElement { kdId ?: number; merged ?: number[]; point : IPoint ; pointId : number; valueIds : number[]; } Defined in core/collect.ts:95 Index Properties kdId? merged? point pointId valueIds Properties Optional kdId kdId?: number This point's ordinal position in the kd-tree. Defined in core/collect.ts:120 Optional merged merged?: number[] Array of other pointId's merged with this one. Defined in core/collect.ts:110 point point: IPoint The point. Defined in core/collect.ts:100 pointId pointId: number The id of this point. Defined in core/collect.ts:105 valueIds valueIds: number[] Array of valueId's for this point. Defined in core/collect.ts:115 Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Properties kdId merged point pointId valueIds Photon Loading... Generated using TypeDoc","title":"IPointGraphIndexElement | Photon"},{"location":"converted/api/interfaces/core_collect.IPointGraphIndexElement/#interface-ipointgraphindexelement","text":"The element type stored in the index of a PointGraph. interface IPointGraphIndexElement { kdId ?: number; merged ?: number[]; point : IPoint ; pointId : number; valueIds : number[]; } Defined in core/collect.ts:95","title":"Interface IPointGraphIndexElement"},{"location":"converted/api/interfaces/core_collect.IPointGraphIndexElement/#index","text":"","title":"Index"},{"location":"converted/api/interfaces/core_collect.IPointGraphIndexElement/#properties","text":"kdId? merged? point pointId valueIds","title":"Properties"},{"location":"converted/api/interfaces/core_collect.IPointGraphIndexElement/#properties_1","text":"","title":"Properties"},{"location":"converted/api/interfaces/core_collect.IPointGraphIndexElement/#optionalkdid","text":"kdId?: number This point's ordinal position in the kd-tree. Defined in core/collect.ts:120","title":"OptionalkdId"},{"location":"converted/api/interfaces/core_collect.IPointGraphIndexElement/#optionalmerged","text":"merged?: number[] Array of other pointId's merged with this one. Defined in core/collect.ts:110","title":"Optionalmerged"},{"location":"converted/api/interfaces/core_collect.IPointGraphIndexElement/#point","text":"point: IPoint The point. Defined in core/collect.ts:100","title":"point"},{"location":"converted/api/interfaces/core_collect.IPointGraphIndexElement/#pointid","text":"pointId: number The id of this point. Defined in core/collect.ts:105","title":"pointId"},{"location":"converted/api/interfaces/core_collect.IPointGraphIndexElement/#valueids","text":"valueIds: number[] Array of valueId's for this point. Defined in core/collect.ts:115","title":"valueIds"},{"location":"converted/api/interfaces/core_collect.IPointGraphIndexElement/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/interfaces/core_collect.IPointGraphIndexElement/#on-this-page","text":"Properties kdId merged point pointId valueIds Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/interfaces/core_dxf.IDXFLayerOptions/","text":"IDXFLayerOptions | Photon Photon Preparing search index... core/dxf IDXFLayerOptions Interface IDXFLayerOptions DXF layer options. interface IDXFLayerOptions { color : number; fontSize ?: number; } Defined in core/dxf.ts:534 Index Properties color fontSize? Properties color color: number DXF layer color. Defined in core/dxf.ts:539 Optional fontSize fontSize?: number Text size for TEXT entities. Defined in core/dxf.ts:544 Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Properties color fontSize Photon Loading... Generated using TypeDoc","title":"IDXFLayerOptions | Photon"},{"location":"converted/api/interfaces/core_dxf.IDXFLayerOptions/#interface-idxflayeroptions","text":"DXF layer options. interface IDXFLayerOptions { color : number; fontSize ?: number; } Defined in core/dxf.ts:534","title":"Interface IDXFLayerOptions"},{"location":"converted/api/interfaces/core_dxf.IDXFLayerOptions/#index","text":"","title":"Index"},{"location":"converted/api/interfaces/core_dxf.IDXFLayerOptions/#properties","text":"color fontSize?","title":"Properties"},{"location":"converted/api/interfaces/core_dxf.IDXFLayerOptions/#properties_1","text":"","title":"Properties"},{"location":"converted/api/interfaces/core_dxf.IDXFLayerOptions/#color","text":"color: number DXF layer color. Defined in core/dxf.ts:539","title":"color"},{"location":"converted/api/interfaces/core_dxf.IDXFLayerOptions/#optionalfontsize","text":"fontSize?: number Text size for TEXT entities. Defined in core/dxf.ts:544","title":"OptionalfontSize"},{"location":"converted/api/interfaces/core_dxf.IDXFLayerOptions/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/interfaces/core_dxf.IDXFLayerOptions/#on-this-page","text":"Properties color fontSize Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/interfaces/core_dxf.IDXFRenderOptions/","text":"IDXFRenderOptions | Photon Photon Preparing search index... core/dxf IDXFRenderOptions Interface IDXFRenderOptions DXF rendering options. interface IDXFRenderOptions { accuracy ?: number; fontSize ?: number; layerOptions ?: { [layerId: string]: IDXFLayerOptions }; pointMatchingDistance ?: number; units ?: string; usePOLYLINE ?: boolean; } Hierarchy ( View Summary ) IPointMatchOptions IDXFRenderOptions Defined in core/dxf.ts:550 Index Properties accuracy? fontSize? layerOptions? pointMatchingDistance? units? usePOLYLINE? Properties Optional accuracy accuracy?: number Optional exemplar of number of decimal places. Inherited from IExportOptions.accuracy Defined in core/exporter.ts:14 Optional fontSize fontSize?: number Text size for TEXT entities. Defined in core/dxf.ts:555 Optional layerOptions layerOptions?: { [layerId: string]: IDXFLayerOptions } DXF options per layer. Defined in core/dxf.ts:560 Optional pointMatchingDistance pointMatchingDistance?: number Max distance to consider two points as the same. Inherited from IPointMatchOptions . pointMatchingDistance Defined in core/maker.ts:282 Optional units units?: string Optional unit system to embed in exported file, if the export format allows alternate unit systems. Inherited from IExportOptions.units Defined in core/exporter.ts:19 Optional usePOLYLINE usePOLYLINE?: boolean Flag to use POLYLINE Defined in core/dxf.ts:565 Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Properties accuracy fontSize layerOptions pointMatchingDistance units usePOLYLINE Photon Loading... Generated using TypeDoc","title":"IDXFRenderOptions | Photon"},{"location":"converted/api/interfaces/core_dxf.IDXFRenderOptions/#interface-idxfrenderoptions","text":"DXF rendering options. interface IDXFRenderOptions { accuracy ?: number; fontSize ?: number; layerOptions ?: { [layerId: string]: IDXFLayerOptions }; pointMatchingDistance ?: number; units ?: string; usePOLYLINE ?: boolean; }","title":"Interface IDXFRenderOptions"},{"location":"converted/api/interfaces/core_dxf.IDXFRenderOptions/#hierarchy-view-summary","text":"IPointMatchOptions IDXFRenderOptions Defined in core/dxf.ts:550","title":"Hierarchy (View Summary)"},{"location":"converted/api/interfaces/core_dxf.IDXFRenderOptions/#index","text":"","title":"Index"},{"location":"converted/api/interfaces/core_dxf.IDXFRenderOptions/#properties","text":"accuracy? fontSize? layerOptions? pointMatchingDistance? units? usePOLYLINE?","title":"Properties"},{"location":"converted/api/interfaces/core_dxf.IDXFRenderOptions/#properties_1","text":"","title":"Properties"},{"location":"converted/api/interfaces/core_dxf.IDXFRenderOptions/#optionalaccuracy","text":"accuracy?: number Optional exemplar of number of decimal places. Inherited from IExportOptions.accuracy Defined in core/exporter.ts:14","title":"Optionalaccuracy"},{"location":"converted/api/interfaces/core_dxf.IDXFRenderOptions/#optionalfontsize","text":"fontSize?: number Text size for TEXT entities. Defined in core/dxf.ts:555","title":"OptionalfontSize"},{"location":"converted/api/interfaces/core_dxf.IDXFRenderOptions/#optionallayeroptions","text":"layerOptions?: { [layerId: string]: IDXFLayerOptions } DXF options per layer. Defined in core/dxf.ts:560","title":"OptionallayerOptions"},{"location":"converted/api/interfaces/core_dxf.IDXFRenderOptions/#optionalpointmatchingdistance","text":"pointMatchingDistance?: number Max distance to consider two points as the same. Inherited from IPointMatchOptions . pointMatchingDistance Defined in core/maker.ts:282","title":"OptionalpointMatchingDistance"},{"location":"converted/api/interfaces/core_dxf.IDXFRenderOptions/#optionalunits","text":"units?: string Optional unit system to embed in exported file, if the export format allows alternate unit systems. Inherited from IExportOptions.units Defined in core/exporter.ts:19","title":"Optionalunits"},{"location":"converted/api/interfaces/core_dxf.IDXFRenderOptions/#optionalusepolyline","text":"usePOLYLINE?: boolean Flag to use POLYLINE Defined in core/dxf.ts:565","title":"OptionalusePOLYLINE"},{"location":"converted/api/interfaces/core_dxf.IDXFRenderOptions/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/interfaces/core_dxf.IDXFRenderOptions/#on-this-page","text":"Properties accuracy fontSize layerOptions pointMatchingDistance units usePOLYLINE Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/interfaces/core_exporter.IJsonExportOptions/","text":"IJsonExportOptions | Photon Photon Preparing search index... core/exporter IJsonExportOptions Interface IJsonExportOptions Options for JSON export. interface IJsonExportOptions { accuracy ?: number; indentation ?: number; units ?: string; } Defined in core/exporter.ts:25 Index Properties accuracy? indentation? units? Properties Optional accuracy accuracy?: number Optional exemplar of number of decimal places. Inherited from IExportOptions.accuracy Defined in core/exporter.ts:14 Optional indentation indentation?: number Optional number of characters to indent after a newline. Defined in core/exporter.ts:30 Optional units units?: string Optional unit system to embed in exported file, if the export format allows alternate unit systems. Inherited from IExportOptions.units Defined in core/exporter.ts:19 Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Properties accuracy indentation units Photon Loading... Generated using TypeDoc","title":"IJsonExportOptions | Photon"},{"location":"converted/api/interfaces/core_exporter.IJsonExportOptions/#interface-ijsonexportoptions","text":"Options for JSON export. interface IJsonExportOptions { accuracy ?: number; indentation ?: number; units ?: string; } Defined in core/exporter.ts:25","title":"Interface IJsonExportOptions"},{"location":"converted/api/interfaces/core_exporter.IJsonExportOptions/#index","text":"","title":"Index"},{"location":"converted/api/interfaces/core_exporter.IJsonExportOptions/#properties","text":"accuracy? indentation? units?","title":"Properties"},{"location":"converted/api/interfaces/core_exporter.IJsonExportOptions/#properties_1","text":"","title":"Properties"},{"location":"converted/api/interfaces/core_exporter.IJsonExportOptions/#optionalaccuracy","text":"accuracy?: number Optional exemplar of number of decimal places. Inherited from IExportOptions.accuracy Defined in core/exporter.ts:14","title":"Optionalaccuracy"},{"location":"converted/api/interfaces/core_exporter.IJsonExportOptions/#optionalindentation","text":"indentation?: number Optional number of characters to indent after a newline. Defined in core/exporter.ts:30","title":"Optionalindentation"},{"location":"converted/api/interfaces/core_exporter.IJsonExportOptions/#optionalunits","text":"units?: string Optional unit system to embed in exported file, if the export format allows alternate unit systems. Inherited from IExportOptions.units Defined in core/exporter.ts:19","title":"Optionalunits"},{"location":"converted/api/interfaces/core_exporter.IJsonExportOptions/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/interfaces/core_exporter.IJsonExportOptions/#on-this-page","text":"Properties accuracy indentation units Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/interfaces/core_exporter.IStatusCallback/","text":"IStatusCallback | Photon Photon Preparing search index... core/exporter IStatusCallback Interface IStatusCallback IStatusCallback(status: { progress?: number }): void #### Parameters status: { progress?: number } #### Returns void Defined in core/exporter.ts:92 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"IStatusCallback | Photon"},{"location":"converted/api/interfaces/core_exporter.IStatusCallback/#interface-istatuscallback","text":"IStatusCallback(status: { progress?: number }): void #### Parameters status: { progress?: number } #### Returns void Defined in core/exporter.ts:92","title":"Interface IStatusCallback"},{"location":"converted/api/interfaces/core_exporter.IStatusCallback/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/interfaces/core_maker.IBoundingHex/","text":"IBoundingHex | Photon Photon Preparing search index... core/maker IBoundingHex Interface IBoundingHex A hexagon which surrounds a model. interface IBoundingHex { caption ?: ICaption ; exporterOptions ?: { [exporterName: string]: any }; layer ?: string; models ?: IModelMap ; notes ?: string; origin ?: IPoint ; paths ?: IPathMap ; radius : number; type ?: string; units ?: string; } Hierarchy ( View Summary ) IModel IBoundingHex Defined in core/maker.ts:588 Index Properties caption? exporterOptions? layer? models? notes? origin? paths? radius type? units? Properties Optional caption caption?: ICaption Optional Caption object. Inherited from IModel . caption Defined in core/schema.ts:107 Optional exporterOptions exporterOptions?: { [exporterName: string]: any } Optional exporter options for this model. Inherited from IModel . exporterOptions Defined in core/schema.ts:109 Optional layer layer?: string Optional layer of this model. Inherited from IModel . layer Defined in core/schema.ts:105 Optional models models?: IModelMap Optional map of models within this model. Inherited from IModel . models Defined in core/schema.ts:99 Optional notes notes?: string An author may wish to add notes to this model instance. Inherited from IModel . notes Defined in core/schema.ts:103 Optional origin origin?: IPoint Optional origin location of this model. Inherited from IModel . origin Defined in core/schema.ts:93 Optional paths paths?: IPathMap Optional map of path objects in this model. Inherited from IModel . paths Defined in core/schema.ts:97 radius radius: number Radius of the hexagon, which is also the length of a side. Defined in core/maker.ts:593 Optional type type?: string A model may want to specify its type, but this value is not employed yet. Inherited from IModel . type Defined in core/schema.ts:95 Optional units units?: string Optional unit system of this model. See UnitType for possible values. Inherited from IModel . units Defined in core/schema.ts:101 Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Properties caption exporterOptions layer models notes origin paths radius type units Photon Loading... Generated using TypeDoc","title":"IBoundingHex | Photon"},{"location":"converted/api/interfaces/core_maker.IBoundingHex/#interface-iboundinghex","text":"A hexagon which surrounds a model. interface IBoundingHex { caption ?: ICaption ; exporterOptions ?: { [exporterName: string]: any }; layer ?: string; models ?: IModelMap ; notes ?: string; origin ?: IPoint ; paths ?: IPathMap ; radius : number; type ?: string; units ?: string; }","title":"Interface IBoundingHex"},{"location":"converted/api/interfaces/core_maker.IBoundingHex/#hierarchy-view-summary","text":"IModel IBoundingHex Defined in core/maker.ts:588","title":"Hierarchy (View Summary)"},{"location":"converted/api/interfaces/core_maker.IBoundingHex/#index","text":"","title":"Index"},{"location":"converted/api/interfaces/core_maker.IBoundingHex/#properties","text":"caption? exporterOptions? layer? models? notes? origin? paths? radius type? units?","title":"Properties"},{"location":"converted/api/interfaces/core_maker.IBoundingHex/#properties_1","text":"","title":"Properties"},{"location":"converted/api/interfaces/core_maker.IBoundingHex/#optionalcaption","text":"caption?: ICaption Optional Caption object. Inherited from IModel . caption Defined in core/schema.ts:107","title":"Optionalcaption"},{"location":"converted/api/interfaces/core_maker.IBoundingHex/#optionalexporteroptions","text":"exporterOptions?: { [exporterName: string]: any } Optional exporter options for this model. Inherited from IModel . exporterOptions Defined in core/schema.ts:109","title":"OptionalexporterOptions"},{"location":"converted/api/interfaces/core_maker.IBoundingHex/#optionallayer","text":"layer?: string Optional layer of this model. Inherited from IModel . layer Defined in core/schema.ts:105","title":"Optionallayer"},{"location":"converted/api/interfaces/core_maker.IBoundingHex/#optionalmodels","text":"models?: IModelMap Optional map of models within this model. Inherited from IModel . models Defined in core/schema.ts:99","title":"Optionalmodels"},{"location":"converted/api/interfaces/core_maker.IBoundingHex/#optionalnotes","text":"notes?: string An author may wish to add notes to this model instance. Inherited from IModel . notes Defined in core/schema.ts:103","title":"Optionalnotes"},{"location":"converted/api/interfaces/core_maker.IBoundingHex/#optionalorigin","text":"origin?: IPoint Optional origin location of this model. Inherited from IModel . origin Defined in core/schema.ts:93","title":"Optionalorigin"},{"location":"converted/api/interfaces/core_maker.IBoundingHex/#optionalpaths","text":"paths?: IPathMap Optional map of path objects in this model. Inherited from IModel . paths Defined in core/schema.ts:97","title":"Optionalpaths"},{"location":"converted/api/interfaces/core_maker.IBoundingHex/#radius","text":"radius: number Radius of the hexagon, which is also the length of a side. Defined in core/maker.ts:593","title":"radius"},{"location":"converted/api/interfaces/core_maker.IBoundingHex/#optionaltype","text":"type?: string A model may want to specify its type, but this value is not employed yet. Inherited from IModel . type Defined in core/schema.ts:95","title":"Optionaltype"},{"location":"converted/api/interfaces/core_maker.IBoundingHex/#optionalunits","text":"units?: string Optional unit system of this model. See UnitType for possible values. Inherited from IModel . units Defined in core/schema.ts:101","title":"Optionalunits"},{"location":"converted/api/interfaces/core_maker.IBoundingHex/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/interfaces/core_maker.IBoundingHex/#on-this-page","text":"Properties caption exporterOptions layer models notes origin paths radius type units Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/interfaces/core_maker.ICascade/","text":"ICascade | Photon Photon Preparing search index... core/maker ICascade Interface ICascade A container that allows a series of functions to be called upon an object. interface ICascade { \\(initial](#initial): any; [\\) reset : () => this; $result : any; } Defined in core/maker.ts:661 Index Properties \\(initial](#initial) [\\) reset $result Properties $initial $initial: any The initial context object of the cascade. Defined in core/maker.ts:666 $reset $reset: () => this Use the $original as the $result. Defined in core/maker.ts:676 $result $result: any The current final value of the cascade. Defined in core/maker.ts:671 Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Properties \\(initial](#initial)[\\) reset $result Photon Loading... Generated using TypeDoc","title":"ICascade | Photon"},{"location":"converted/api/interfaces/core_maker.ICascade/#interface-icascade","text":"A container that allows a series of functions to be called upon an object. interface ICascade { \\(initial](#initial): any; [\\) reset : () => this; $result : any; } Defined in core/maker.ts:661","title":"Interface ICascade"},{"location":"converted/api/interfaces/core_maker.ICascade/#index","text":"","title":"Index"},{"location":"converted/api/interfaces/core_maker.ICascade/#properties","text":"\\(initial](#initial) [\\) reset $result","title":"Properties"},{"location":"converted/api/interfaces/core_maker.ICascade/#properties_1","text":"","title":"Properties"},{"location":"converted/api/interfaces/core_maker.ICascade/#initial","text":"$initial: any The initial context object of the cascade. Defined in core/maker.ts:666","title":"$initial"},{"location":"converted/api/interfaces/core_maker.ICascade/#reset","text":"$reset: () => this Use the $original as the $result. Defined in core/maker.ts:676","title":"$reset"},{"location":"converted/api/interfaces/core_maker.ICascade/#result","text":"$result: any The current final value of the cascade. Defined in core/maker.ts:671","title":"$result"},{"location":"converted/api/interfaces/core_maker.ICascade/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/interfaces/core_maker.ICascade/#on-this-page","text":"Properties \\(initial](#initial)[\\) reset $result Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/interfaces/core_maker.IChain/","text":"IChain | Photon Photon Preparing search index... core/maker IChain Interface IChain A chain of paths which connect end to end. interface IChain { contains ?: IChain[]; endless : boolean; links : IChainLink []; pathLength : number; } Defined in core/maker.ts:451 Index Properties contains? endless links pathLength Properties Optional contains contains?: IChain[] Chains that are contained within this chain. Populated when chains are found with the 'contain' option Defined in core/maker.ts:471 endless endless: boolean Flag if this chain forms a loop end to end. Defined in core/maker.ts:461 links links: IChainLink [] The links in this chain. Defined in core/maker.ts:456 pathLength pathLength: number Total length of all paths in the chain. Defined in core/maker.ts:466 Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Properties contains endless links pathLength Photon Loading... Generated using TypeDoc","title":"IChain | Photon"},{"location":"converted/api/interfaces/core_maker.IChain/#interface-ichain","text":"A chain of paths which connect end to end. interface IChain { contains ?: IChain[]; endless : boolean; links : IChainLink []; pathLength : number; } Defined in core/maker.ts:451","title":"Interface IChain"},{"location":"converted/api/interfaces/core_maker.IChain/#index","text":"","title":"Index"},{"location":"converted/api/interfaces/core_maker.IChain/#properties","text":"contains? endless links pathLength","title":"Properties"},{"location":"converted/api/interfaces/core_maker.IChain/#properties_1","text":"","title":"Properties"},{"location":"converted/api/interfaces/core_maker.IChain/#optionalcontains","text":"contains?: IChain[] Chains that are contained within this chain. Populated when chains are found with the 'contain' option Defined in core/maker.ts:471","title":"Optionalcontains"},{"location":"converted/api/interfaces/core_maker.IChain/#endless","text":"endless: boolean Flag if this chain forms a loop end to end. Defined in core/maker.ts:461","title":"endless"},{"location":"converted/api/interfaces/core_maker.IChain/#links","text":"links: IChainLink [] The links in this chain. Defined in core/maker.ts:456","title":"links"},{"location":"converted/api/interfaces/core_maker.IChain/#pathlength","text":"pathLength: number Total length of all paths in the chain. Defined in core/maker.ts:466","title":"pathLength"},{"location":"converted/api/interfaces/core_maker.IChain/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/interfaces/core_maker.IChain/#on-this-page","text":"Properties contains endless links pathLength Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/interfaces/core_maker.IChainCallback/","text":"IChainCallback | Photon Photon Preparing search index... core/maker IChainCallback Interface IChainCallback Callback to model.findChains() with resulting array of chains and unchained paths. IChainCallback( chains: IChain [], loose: IWalkPath [], layer: string, ignored?: IWalkPath [], ): void #### Parameters chains: IChain [] loose: IWalkPath [] layer: string Optional ignored: IWalkPath [] #### Returns void Defined in core/maker.ts:495 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"IChainCallback | Photon"},{"location":"converted/api/interfaces/core_maker.IChainCallback/#interface-ichaincallback","text":"Callback to model.findChains() with resulting array of chains and unchained paths. IChainCallback( chains: IChain [], loose: IWalkPath [], layer: string, ignored?: IWalkPath [], ): void #### Parameters chains: IChain [] loose: IWalkPath [] layer: string Optional ignored: IWalkPath [] #### Returns void Defined in core/maker.ts:495","title":"Interface IChainCallback"},{"location":"converted/api/interfaces/core_maker.IChainCallback/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/interfaces/core_maker.IChainLink/","text":"IChainLink | Photon Photon Preparing search index... core/maker IChainLink Interface IChainLink A link in a chain, with direction of flow. interface IChainLink { endPoints : IPoint []; pathLength : number; reversed : boolean; walkedPath : IWalkPath ; } Defined in core/maker.ts:425 Index Properties endPoints pathLength reversed walkedPath Properties endPoints endPoints: IPoint [] The endpoints of the path, in absolute coords. Defined in core/maker.ts:440 pathLength pathLength: number Length of the path. Defined in core/maker.ts:445 reversed reversed: boolean Path flows forwards or reverse. Defined in core/maker.ts:435 walkedPath walkedPath: IWalkPath Reference to the path. Defined in core/maker.ts:430 Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Properties endPoints pathLength reversed walkedPath Photon Loading... Generated using TypeDoc","title":"IChainLink | Photon"},{"location":"converted/api/interfaces/core_maker.IChainLink/#interface-ichainlink","text":"A link in a chain, with direction of flow. interface IChainLink { endPoints : IPoint []; pathLength : number; reversed : boolean; walkedPath : IWalkPath ; } Defined in core/maker.ts:425","title":"Interface IChainLink"},{"location":"converted/api/interfaces/core_maker.IChainLink/#index","text":"","title":"Index"},{"location":"converted/api/interfaces/core_maker.IChainLink/#properties","text":"endPoints pathLength reversed walkedPath","title":"Properties"},{"location":"converted/api/interfaces/core_maker.IChainLink/#properties_1","text":"","title":"Properties"},{"location":"converted/api/interfaces/core_maker.IChainLink/#endpoints","text":"endPoints: IPoint [] The endpoints of the path, in absolute coords. Defined in core/maker.ts:440","title":"endPoints"},{"location":"converted/api/interfaces/core_maker.IChainLink/#pathlength","text":"pathLength: number Length of the path. Defined in core/maker.ts:445","title":"pathLength"},{"location":"converted/api/interfaces/core_maker.IChainLink/#reversed","text":"reversed: boolean Path flows forwards or reverse. Defined in core/maker.ts:435","title":"reversed"},{"location":"converted/api/interfaces/core_maker.IChainLink/#walkedpath","text":"walkedPath: IWalkPath Reference to the path. Defined in core/maker.ts:430","title":"walkedPath"},{"location":"converted/api/interfaces/core_maker.IChainLink/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/interfaces/core_maker.IChainLink/#on-this-page","text":"Properties endPoints pathLength reversed walkedPath Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/interfaces/core_maker.IChainsMap/","text":"IChainsMap | Photon Photon Preparing search index... core/maker IChainsMap Interface IChainsMap A map of chains by layer. Indexable Defined in core/maker.ts:477 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"IChainsMap | Photon"},{"location":"converted/api/interfaces/core_maker.IChainsMap/#interface-ichainsmap","text":"A map of chains by layer.","title":"Interface IChainsMap"},{"location":"converted/api/interfaces/core_maker.IChainsMap/#indexable","text":"Defined in core/maker.ts:477","title":"Indexable"},{"location":"converted/api/interfaces/core_maker.IChainsMap/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/interfaces/core_maker.ICombineOptions/","text":"ICombineOptions | Photon Photon Preparing search index... core/maker ICombineOptions Interface ICombineOptions Options to pass to model.combine. interface ICombineOptions { farPoint ?: IPoint ; measureA ?: any; measureB ?: any; out_deleted ?: IModel []; pointMatchingDistance ?: number; trimDeadEnds ?: boolean; } Hierarchy ( View Summary ) IPointMatchOptions ICombineOptions Defined in core/maker.ts:288 Index Properties farPoint? measureA? measureB? out_deleted? pointMatchingDistance? trimDeadEnds? Properties Optional farPoint farPoint?: IPoint Point which is known to be outside of the model. Defined in core/maker.ts:298 Optional measureA measureA?: any Cached measurements for model A. Defined in core/maker.ts:303 Optional measureB measureB?: any Cached measurements for model B. Defined in core/maker.ts:308 Optional out_deleted out_deleted?: IModel [] Output array of 2 models (corresponding to the input models) containing paths that were deleted in the combination. Each path will be of type IPathRemoved, which has a .reason property describing why it was removed. Defined in core/maker.ts:314 Optional pointMatchingDistance pointMatchingDistance?: number Max distance to consider two points as the same. Inherited from IPointMatchOptions . pointMatchingDistance Defined in core/maker.ts:282 Optional trimDeadEnds trimDeadEnds?: boolean Flag to remove paths which are not part of a loop. Defined in core/maker.ts:293 Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Properties farPoint measureA measureB out_deleted pointMatchingDistance trimDeadEnds Photon Loading... Generated using TypeDoc","title":"ICombineOptions | Photon"},{"location":"converted/api/interfaces/core_maker.ICombineOptions/#interface-icombineoptions","text":"Options to pass to model.combine. interface ICombineOptions { farPoint ?: IPoint ; measureA ?: any; measureB ?: any; out_deleted ?: IModel []; pointMatchingDistance ?: number; trimDeadEnds ?: boolean; }","title":"Interface ICombineOptions"},{"location":"converted/api/interfaces/core_maker.ICombineOptions/#hierarchy-view-summary","text":"IPointMatchOptions ICombineOptions Defined in core/maker.ts:288","title":"Hierarchy (View Summary)"},{"location":"converted/api/interfaces/core_maker.ICombineOptions/#index","text":"","title":"Index"},{"location":"converted/api/interfaces/core_maker.ICombineOptions/#properties","text":"farPoint? measureA? measureB? out_deleted? pointMatchingDistance? trimDeadEnds?","title":"Properties"},{"location":"converted/api/interfaces/core_maker.ICombineOptions/#properties_1","text":"","title":"Properties"},{"location":"converted/api/interfaces/core_maker.ICombineOptions/#optionalfarpoint","text":"farPoint?: IPoint Point which is known to be outside of the model. Defined in core/maker.ts:298","title":"OptionalfarPoint"},{"location":"converted/api/interfaces/core_maker.ICombineOptions/#optionalmeasurea","text":"measureA?: any Cached measurements for model A. Defined in core/maker.ts:303","title":"OptionalmeasureA"},{"location":"converted/api/interfaces/core_maker.ICombineOptions/#optionalmeasureb","text":"measureB?: any Cached measurements for model B. Defined in core/maker.ts:308","title":"OptionalmeasureB"},{"location":"converted/api/interfaces/core_maker.ICombineOptions/#optionalout_deleted","text":"out_deleted?: IModel [] Output array of 2 models (corresponding to the input models) containing paths that were deleted in the combination. Each path will be of type IPathRemoved, which has a .reason property describing why it was removed. Defined in core/maker.ts:314","title":"Optionalout_deleted"},{"location":"converted/api/interfaces/core_maker.ICombineOptions/#optionalpointmatchingdistance","text":"pointMatchingDistance?: number Max distance to consider two points as the same. Inherited from IPointMatchOptions . pointMatchingDistance Defined in core/maker.ts:282","title":"OptionalpointMatchingDistance"},{"location":"converted/api/interfaces/core_maker.ICombineOptions/#optionaltrimdeadends","text":"trimDeadEnds?: boolean Flag to remove paths which are not part of a loop. Defined in core/maker.ts:293","title":"OptionaltrimDeadEnds"},{"location":"converted/api/interfaces/core_maker.ICombineOptions/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/interfaces/core_maker.ICombineOptions/#on-this-page","text":"Properties farPoint measureA measureB out_deleted pointMatchingDistance trimDeadEnds Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/interfaces/core_maker.IContainChainsOptions/","text":"IContainChainsOptions | Photon Photon Preparing search index... core/maker IContainChainsOptions Interface IContainChainsOptions Sub-options to pass to model.findChains.contain option. interface IContainChainsOptions { alternateDirection ?: boolean; } Defined in core/maker.ts:527 Index Properties alternateDirection? Properties Optional alternateDirection alternateDirection?: boolean Flag to alternate direction of contained chains. Defined in core/maker.ts:532 Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Properties alternateDirection Photon Loading... Generated using TypeDoc","title":"IContainChainsOptions | Photon"},{"location":"converted/api/interfaces/core_maker.IContainChainsOptions/#interface-icontainchainsoptions","text":"Sub-options to pass to model.findChains.contain option. interface IContainChainsOptions { alternateDirection ?: boolean; } Defined in core/maker.ts:527","title":"Interface IContainChainsOptions"},{"location":"converted/api/interfaces/core_maker.IContainChainsOptions/#index","text":"","title":"Index"},{"location":"converted/api/interfaces/core_maker.IContainChainsOptions/#properties","text":"alternateDirection?","title":"Properties"},{"location":"converted/api/interfaces/core_maker.IContainChainsOptions/#properties_1","text":"","title":"Properties"},{"location":"converted/api/interfaces/core_maker.IContainChainsOptions/#optionalalternatedirection","text":"alternateDirection?: boolean Flag to alternate direction of contained chains. Defined in core/maker.ts:532","title":"OptionalalternateDirection"},{"location":"converted/api/interfaces/core_maker.IContainChainsOptions/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/interfaces/core_maker.IContainChainsOptions/#on-this-page","text":"Properties alternateDirection Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/interfaces/core_maker.IFindChainsOptions/","text":"IFindChainsOptions | Photon Photon Preparing search index... core/maker IFindChainsOptions Interface IFindChainsOptions Options to pass to model.findChains. interface IFindChainsOptions { byLayers ?: boolean; contain ?: boolean | IContainChainsOptions ; pointMatchingDistance ?: number; shallow ?: boolean; unifyBeziers ?: boolean; } Hierarchy ( View Summary ) IPointMatchOptions IFindChainsOptions Defined in core/maker.ts:501 Index Properties byLayers? contain? pointMatchingDistance? shallow? unifyBeziers? Properties Optional byLayers byLayers?: boolean Flag to separate chains by layers. Defined in core/maker.ts:506 Optional contain contain?: boolean | IContainChainsOptions Flag to order chains in a heirarchy by their paths being within one another. Defined in core/maker.ts:516 Optional pointMatchingDistance pointMatchingDistance?: number Max distance to consider two points as the same. Inherited from IPointMatchOptions . pointMatchingDistance Defined in core/maker.ts:282 Optional shallow shallow?: boolean Flag to not recurse models, look only within current model's immediate paths. Defined in core/maker.ts:511 Optional unifyBeziers unifyBeziers?: boolean Flag to flatten BezierCurve arc segments into IPathBezierSeeds. Defined in core/maker.ts:521 Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Properties byLayers contain pointMatchingDistance shallow unifyBeziers Photon Loading... Generated using TypeDoc","title":"IFindChainsOptions | Photon"},{"location":"converted/api/interfaces/core_maker.IFindChainsOptions/#interface-ifindchainsoptions","text":"Options to pass to model.findChains. interface IFindChainsOptions { byLayers ?: boolean; contain ?: boolean | IContainChainsOptions ; pointMatchingDistance ?: number; shallow ?: boolean; unifyBeziers ?: boolean; }","title":"Interface IFindChainsOptions"},{"location":"converted/api/interfaces/core_maker.IFindChainsOptions/#hierarchy-view-summary","text":"IPointMatchOptions IFindChainsOptions Defined in core/maker.ts:501","title":"Hierarchy (View Summary)"},{"location":"converted/api/interfaces/core_maker.IFindChainsOptions/#index","text":"","title":"Index"},{"location":"converted/api/interfaces/core_maker.IFindChainsOptions/#properties","text":"byLayers? contain? pointMatchingDistance? shallow? unifyBeziers?","title":"Properties"},{"location":"converted/api/interfaces/core_maker.IFindChainsOptions/#properties_1","text":"","title":"Properties"},{"location":"converted/api/interfaces/core_maker.IFindChainsOptions/#optionalbylayers","text":"byLayers?: boolean Flag to separate chains by layers. Defined in core/maker.ts:506","title":"OptionalbyLayers"},{"location":"converted/api/interfaces/core_maker.IFindChainsOptions/#optionalcontain","text":"contain?: boolean | IContainChainsOptions Flag to order chains in a heirarchy by their paths being within one another. Defined in core/maker.ts:516","title":"Optionalcontain"},{"location":"converted/api/interfaces/core_maker.IFindChainsOptions/#optionalpointmatchingdistance","text":"pointMatchingDistance?: number Max distance to consider two points as the same. Inherited from IPointMatchOptions . pointMatchingDistance Defined in core/maker.ts:282","title":"OptionalpointMatchingDistance"},{"location":"converted/api/interfaces/core_maker.IFindChainsOptions/#optionalshallow","text":"shallow?: boolean Flag to not recurse models, look only within current model's immediate paths. Defined in core/maker.ts:511","title":"Optionalshallow"},{"location":"converted/api/interfaces/core_maker.IFindChainsOptions/#optionalunifybeziers","text":"unifyBeziers?: boolean Flag to flatten BezierCurve arc segments into IPathBezierSeeds. Defined in core/maker.ts:521","title":"OptionalunifyBeziers"},{"location":"converted/api/interfaces/core_maker.IFindChainsOptions/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/interfaces/core_maker.IFindChainsOptions/#on-this-page","text":"Properties byLayers contain pointMatchingDistance shallow unifyBeziers Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/interfaces/core_maker.IFindLoopsOptions/","text":"IFindLoopsOptions | Photon Photon Preparing search index... core/maker IFindLoopsOptions Interface IFindLoopsOptions Options to pass to model.findLoops. interface IFindLoopsOptions { pointMatchingDistance ?: number; removeFromOriginal ?: boolean; } Hierarchy ( View Summary ) IPointMatchOptions IFindLoopsOptions IOpenJsCadOptions Defined in core/maker.ts:331 Index Properties pointMatchingDistance? removeFromOriginal? Properties Optional pointMatchingDistance pointMatchingDistance?: number Max distance to consider two points as the same. Inherited from IPointMatchOptions . pointMatchingDistance Defined in core/maker.ts:282 Optional removeFromOriginal removeFromOriginal?: boolean Flag to remove looped paths from the original model. Defined in core/maker.ts:336 Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Properties pointMatchingDistance removeFromOriginal Photon Loading... Generated using TypeDoc","title":"IFindLoopsOptions | Photon"},{"location":"converted/api/interfaces/core_maker.IFindLoopsOptions/#interface-ifindloopsoptions","text":"Options to pass to model.findLoops. interface IFindLoopsOptions { pointMatchingDistance ?: number; removeFromOriginal ?: boolean; }","title":"Interface IFindLoopsOptions"},{"location":"converted/api/interfaces/core_maker.IFindLoopsOptions/#hierarchy-view-summary","text":"IPointMatchOptions IFindLoopsOptions IOpenJsCadOptions Defined in core/maker.ts:331","title":"Hierarchy (View Summary)"},{"location":"converted/api/interfaces/core_maker.IFindLoopsOptions/#index","text":"","title":"Index"},{"location":"converted/api/interfaces/core_maker.IFindLoopsOptions/#properties","text":"pointMatchingDistance? removeFromOriginal?","title":"Properties"},{"location":"converted/api/interfaces/core_maker.IFindLoopsOptions/#properties_1","text":"","title":"Properties"},{"location":"converted/api/interfaces/core_maker.IFindLoopsOptions/#optionalpointmatchingdistance","text":"pointMatchingDistance?: number Max distance to consider two points as the same. Inherited from IPointMatchOptions . pointMatchingDistance Defined in core/maker.ts:282","title":"OptionalpointMatchingDistance"},{"location":"converted/api/interfaces/core_maker.IFindLoopsOptions/#optionalremovefromoriginal","text":"removeFromOriginal?: boolean Flag to remove looped paths from the original model. Defined in core/maker.ts:336","title":"OptionalremoveFromOriginal"},{"location":"converted/api/interfaces/core_maker.IFindLoopsOptions/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/interfaces/core_maker.IFindLoopsOptions/#on-this-page","text":"Properties pointMatchingDistance removeFromOriginal Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/interfaces/core_maker.IIsPointOnPathOptions/","text":"IIsPointOnPathOptions | Photon Photon Preparing search index... core/maker IIsPointOnPathOptions Interface IIsPointOnPathOptions Options to pass to measure.isPointOnPath. interface IIsPointOnPathOptions { cachedLineSlope ?: ISlope ; } Defined in core/maker.ts:320 Index Properties cachedLineSlope? Properties Optional cachedLineSlope cachedLineSlope?: ISlope The slope of the line, if applicable. This will be added to the options object if it did not exist. Defined in core/maker.ts:325 Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Properties cachedLineSlope Photon Loading... Generated using TypeDoc","title":"IIsPointOnPathOptions | Photon"},{"location":"converted/api/interfaces/core_maker.IIsPointOnPathOptions/#interface-iispointonpathoptions","text":"Options to pass to measure.isPointOnPath. interface IIsPointOnPathOptions { cachedLineSlope ?: ISlope ; } Defined in core/maker.ts:320","title":"Interface IIsPointOnPathOptions"},{"location":"converted/api/interfaces/core_maker.IIsPointOnPathOptions/#index","text":"","title":"Index"},{"location":"converted/api/interfaces/core_maker.IIsPointOnPathOptions/#properties","text":"cachedLineSlope?","title":"Properties"},{"location":"converted/api/interfaces/core_maker.IIsPointOnPathOptions/#properties_1","text":"","title":"Properties"},{"location":"converted/api/interfaces/core_maker.IIsPointOnPathOptions/#optionalcachedlineslope","text":"cachedLineSlope?: ISlope The slope of the line, if applicable. This will be added to the options object if it did not exist. Defined in core/maker.ts:325","title":"OptionalcachedLineSlope"},{"location":"converted/api/interfaces/core_maker.IIsPointOnPathOptions/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/interfaces/core_maker.IIsPointOnPathOptions/#on-this-page","text":"Properties cachedLineSlope Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/interfaces/core_maker.IKit/","text":"IKit | Photon Photon Preparing search index... core/maker IKit Interface IKit An IKit is a model-producing class with some sample parameters. Think of it as a packaged model with instructions on how to best use it. interface IKit { new IKit (...args: any[]): IModel ; metaParameters ?: IMetaParameter []; notes ?: string; } Defined in core/maker.ts:637 Index Constructors constructor Properties metaParameters? notes? Constructors constructor new IKit(...args: any[]): IModel The constructor. The kit must be \"new-able\" and it must produce an IModel. It can have any number of any type of parameters. #### Parameters ...args: any[] #### Returns IModel Defined in core/maker.ts:643 Properties Optional metaParameters metaParameters?: IMetaParameter [] Attached to the constructor is a property named metaParameters which is an array of IMetaParameter objects. Each element of the array corresponds to a parameter of the constructor, in order. Defined in core/maker.ts:649 Optional notes notes?: string Information about this kit, in plain text or markdown format. Defined in core/maker.ts:654 Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Constructors constructor Properties metaParameters notes Photon Loading... Generated using TypeDoc","title":"IKit | Photon"},{"location":"converted/api/interfaces/core_maker.IKit/#interface-ikit","text":"An IKit is a model-producing class with some sample parameters. Think of it as a packaged model with instructions on how to best use it. interface IKit { new IKit (...args: any[]): IModel ; metaParameters ?: IMetaParameter []; notes ?: string; } Defined in core/maker.ts:637","title":"Interface IKit"},{"location":"converted/api/interfaces/core_maker.IKit/#index","text":"","title":"Index"},{"location":"converted/api/interfaces/core_maker.IKit/#constructors","text":"constructor","title":"Constructors"},{"location":"converted/api/interfaces/core_maker.IKit/#properties","text":"metaParameters? notes?","title":"Properties"},{"location":"converted/api/interfaces/core_maker.IKit/#constructors_1","text":"","title":"Constructors"},{"location":"converted/api/interfaces/core_maker.IKit/#constructor","text":"new IKit(...args: any[]): IModel The constructor. The kit must be \"new-able\" and it must produce an IModel. It can have any number of any type of parameters. #### Parameters ...args: any[] #### Returns IModel Defined in core/maker.ts:643","title":"constructor"},{"location":"converted/api/interfaces/core_maker.IKit/#properties_1","text":"","title":"Properties"},{"location":"converted/api/interfaces/core_maker.IKit/#optionalmetaparameters","text":"metaParameters?: IMetaParameter [] Attached to the constructor is a property named metaParameters which is an array of IMetaParameter objects. Each element of the array corresponds to a parameter of the constructor, in order. Defined in core/maker.ts:649","title":"OptionalmetaParameters"},{"location":"converted/api/interfaces/core_maker.IKit/#optionalnotes","text":"notes?: string Information about this kit, in plain text or markdown format. Defined in core/maker.ts:654","title":"Optionalnotes"},{"location":"converted/api/interfaces/core_maker.IKit/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/interfaces/core_maker.IKit/#on-this-page","text":"Constructors constructor Properties metaParameters notes Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/interfaces/core_maker.IMeasure/","text":"IMeasure | Photon Photon Preparing search index... core/maker IMeasure Interface IMeasure A measurement of extents, the high and low points. interface IMeasure { high : IPoint ; low : IPoint ; } Hierarchy ( View Summary ) IMeasure IMeasureWithCenter Defined in core/maker.ts:156 Index Properties high low Properties high high: IPoint Defined in core/maker.ts:158 low low: IPoint Defined in core/maker.ts:157 Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Properties high low Photon Loading... Generated using TypeDoc","title":"IMeasure | Photon"},{"location":"converted/api/interfaces/core_maker.IMeasure/#interface-imeasure","text":"A measurement of extents, the high and low points. interface IMeasure { high : IPoint ; low : IPoint ; }","title":"Interface IMeasure"},{"location":"converted/api/interfaces/core_maker.IMeasure/#hierarchy-view-summary","text":"IMeasure IMeasureWithCenter Defined in core/maker.ts:156","title":"Hierarchy (View Summary)"},{"location":"converted/api/interfaces/core_maker.IMeasure/#index","text":"","title":"Index"},{"location":"converted/api/interfaces/core_maker.IMeasure/#properties","text":"high low","title":"Properties"},{"location":"converted/api/interfaces/core_maker.IMeasure/#properties_1","text":"","title":"Properties"},{"location":"converted/api/interfaces/core_maker.IMeasure/#high","text":"high: IPoint Defined in core/maker.ts:158","title":"high"},{"location":"converted/api/interfaces/core_maker.IMeasure/#low","text":"low: IPoint Defined in core/maker.ts:157","title":"low"},{"location":"converted/api/interfaces/core_maker.IMeasure/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/interfaces/core_maker.IMeasure/#on-this-page","text":"Properties high low Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/interfaces/core_maker.IMeasureMap/","text":"IMeasureMap | Photon Photon Preparing search index... core/maker IMeasureMap Interface IMeasureMap A map of measurements. Indexable Defined in core/maker.ts:169 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"IMeasureMap | Photon"},{"location":"converted/api/interfaces/core_maker.IMeasureMap/#interface-imeasuremap","text":"A map of measurements.","title":"Interface IMeasureMap"},{"location":"converted/api/interfaces/core_maker.IMeasureMap/#indexable","text":"Defined in core/maker.ts:169","title":"Indexable"},{"location":"converted/api/interfaces/core_maker.IMeasureMap/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/interfaces/core_maker.IMeasurePointInsideOptions/","text":"IMeasurePointInsideOptions | Photon Photon Preparing search index... core/maker IMeasurePointInsideOptions Interface IMeasurePointInsideOptions Options to pass to measure.isPointInsideModel(). interface IMeasurePointInsideOptions { farPoint ?: IPoint ; measureAtlas ?: any; out_intersectionPoints ?: IPoint []; } Defined in core/maker.ts:180 Index Properties farPoint? measureAtlas? out_intersectionPoints? Properties Optional farPoint farPoint?: IPoint Defined in core/maker.ts:181 Optional measureAtlas measureAtlas?: any Defined in core/maker.ts:182 Optional out_intersectionPoints out_intersectionPoints?: IPoint [] Defined in core/maker.ts:183 Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Properties farPoint measureAtlas out_intersectionPoints Photon Loading... Generated using TypeDoc","title":"IMeasurePointInsideOptions | Photon"},{"location":"converted/api/interfaces/core_maker.IMeasurePointInsideOptions/#interface-imeasurepointinsideoptions","text":"Options to pass to measure.isPointInsideModel(). interface IMeasurePointInsideOptions { farPoint ?: IPoint ; measureAtlas ?: any; out_intersectionPoints ?: IPoint []; } Defined in core/maker.ts:180","title":"Interface IMeasurePointInsideOptions"},{"location":"converted/api/interfaces/core_maker.IMeasurePointInsideOptions/#index","text":"","title":"Index"},{"location":"converted/api/interfaces/core_maker.IMeasurePointInsideOptions/#properties","text":"farPoint? measureAtlas? out_intersectionPoints?","title":"Properties"},{"location":"converted/api/interfaces/core_maker.IMeasurePointInsideOptions/#properties_1","text":"","title":"Properties"},{"location":"converted/api/interfaces/core_maker.IMeasurePointInsideOptions/#optionalfarpoint","text":"farPoint?: IPoint Defined in core/maker.ts:181","title":"OptionalfarPoint"},{"location":"converted/api/interfaces/core_maker.IMeasurePointInsideOptions/#optionalmeasureatlas","text":"measureAtlas?: any Defined in core/maker.ts:182","title":"OptionalmeasureAtlas"},{"location":"converted/api/interfaces/core_maker.IMeasurePointInsideOptions/#optionalout_intersectionpoints","text":"out_intersectionPoints?: IPoint [] Defined in core/maker.ts:183","title":"Optionalout_intersectionPoints"},{"location":"converted/api/interfaces/core_maker.IMeasurePointInsideOptions/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/interfaces/core_maker.IMeasurePointInsideOptions/#on-this-page","text":"Properties farPoint measureAtlas out_intersectionPoints Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/interfaces/core_maker.IMeasureWithCenter/","text":"IMeasureWithCenter | Photon Photon Preparing search index... core/maker IMeasureWithCenter Interface IMeasureWithCenter A measurement of extents, with a center point. interface IMeasureWithCenter { center : IPoint ; height : number; high : IPoint ; low : IPoint ; width : number; } Hierarchy ( View Summary ) IMeasure IMeasureWithCenter Defined in core/maker.ts:162 Index Properties center height high low width Properties center center: IPoint Defined in core/maker.ts:163 height height: number Defined in core/maker.ts:165 high high: IPoint Inherited from IMeasure . high Defined in core/maker.ts:158 low low: IPoint Inherited from IMeasure . low Defined in core/maker.ts:157 width width: number Defined in core/maker.ts:164 Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Properties center height high low width Photon Loading... Generated using TypeDoc","title":"IMeasureWithCenter | Photon"},{"location":"converted/api/interfaces/core_maker.IMeasureWithCenter/#interface-imeasurewithcenter","text":"A measurement of extents, with a center point. interface IMeasureWithCenter { center : IPoint ; height : number; high : IPoint ; low : IPoint ; width : number; }","title":"Interface IMeasureWithCenter"},{"location":"converted/api/interfaces/core_maker.IMeasureWithCenter/#hierarchy-view-summary","text":"IMeasure IMeasureWithCenter Defined in core/maker.ts:162","title":"Hierarchy (View Summary)"},{"location":"converted/api/interfaces/core_maker.IMeasureWithCenter/#index","text":"","title":"Index"},{"location":"converted/api/interfaces/core_maker.IMeasureWithCenter/#properties","text":"center height high low width","title":"Properties"},{"location":"converted/api/interfaces/core_maker.IMeasureWithCenter/#properties_1","text":"","title":"Properties"},{"location":"converted/api/interfaces/core_maker.IMeasureWithCenter/#center","text":"center: IPoint Defined in core/maker.ts:163","title":"center"},{"location":"converted/api/interfaces/core_maker.IMeasureWithCenter/#height","text":"height: number Defined in core/maker.ts:165","title":"height"},{"location":"converted/api/interfaces/core_maker.IMeasureWithCenter/#high","text":"high: IPoint Inherited from IMeasure . high Defined in core/maker.ts:158","title":"high"},{"location":"converted/api/interfaces/core_maker.IMeasureWithCenter/#low","text":"low: IPoint Inherited from IMeasure . low Defined in core/maker.ts:157","title":"low"},{"location":"converted/api/interfaces/core_maker.IMeasureWithCenter/#width","text":"width: number Defined in core/maker.ts:164","title":"width"},{"location":"converted/api/interfaces/core_maker.IMeasureWithCenter/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/interfaces/core_maker.IMeasureWithCenter/#on-this-page","text":"Properties center height high low width Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/interfaces/core_maker.IMetaParameter/","text":"IMetaParameter | Photon Photon Preparing search index... core/maker IMetaParameter Interface IMetaParameter Describes a parameter and its limits. interface IMetaParameter { max ?: number; min ?: number; step ?: number; title : string; type : string; value : any; } Defined in core/maker.ts:601 Index Properties max? min? step? title type value Properties Optional max max?: number Optional maximum value of the range. Defined in core/maker.ts:621 Optional min min?: number Optional minimum value of the range. Defined in core/maker.ts:616 Optional step step?: number Optional step value between min and max. Defined in core/maker.ts:626 title title: string Display text of the parameter. Defined in core/maker.ts:606 type type: string Type of the parameter. Currently supports \"range\". Defined in core/maker.ts:611 value value: any Initial sample value for this parameter. Defined in core/maker.ts:631 Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Properties max min step title type value Photon Loading... Generated using TypeDoc","title":"IMetaParameter | Photon"},{"location":"converted/api/interfaces/core_maker.IMetaParameter/#interface-imetaparameter","text":"Describes a parameter and its limits. interface IMetaParameter { max ?: number; min ?: number; step ?: number; title : string; type : string; value : any; } Defined in core/maker.ts:601","title":"Interface IMetaParameter"},{"location":"converted/api/interfaces/core_maker.IMetaParameter/#index","text":"","title":"Index"},{"location":"converted/api/interfaces/core_maker.IMetaParameter/#properties","text":"max? min? step? title type value","title":"Properties"},{"location":"converted/api/interfaces/core_maker.IMetaParameter/#properties_1","text":"","title":"Properties"},{"location":"converted/api/interfaces/core_maker.IMetaParameter/#optionalmax","text":"max?: number Optional maximum value of the range. Defined in core/maker.ts:621","title":"Optionalmax"},{"location":"converted/api/interfaces/core_maker.IMetaParameter/#optionalmin","text":"min?: number Optional minimum value of the range. Defined in core/maker.ts:616","title":"Optionalmin"},{"location":"converted/api/interfaces/core_maker.IMetaParameter/#optionalstep","text":"step?: number Optional step value between min and max. Defined in core/maker.ts:626","title":"Optionalstep"},{"location":"converted/api/interfaces/core_maker.IMetaParameter/#title","text":"title: string Display text of the parameter. Defined in core/maker.ts:606","title":"title"},{"location":"converted/api/interfaces/core_maker.IMetaParameter/#type","text":"type: string Type of the parameter. Currently supports \"range\". Defined in core/maker.ts:611","title":"type"},{"location":"converted/api/interfaces/core_maker.IMetaParameter/#value","text":"value: any Initial sample value for this parameter. Defined in core/maker.ts:631","title":"value"},{"location":"converted/api/interfaces/core_maker.IMetaParameter/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/interfaces/core_maker.IMetaParameter/#on-this-page","text":"Properties max min step title type value Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/interfaces/core_maker.IModelPathCallback/","text":"IModelPathCallback | Photon Photon Preparing search index... core/maker IModelPathCallback Interface IModelPathCallback Callback signature for model.walkPaths(). IModelPathCallback( modelContext: IModel , pathId: string, pathContext: IPath , ): void #### Parameters modelContext: IModel pathId: string pathContext: IPath #### Returns void Defined in core/maker.ts:373 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"IModelPathCallback | Photon"},{"location":"converted/api/interfaces/core_maker.IModelPathCallback/#interface-imodelpathcallback","text":"Callback signature for model.walkPaths(). IModelPathCallback( modelContext: IModel , pathId: string, pathContext: IPath , ): void #### Parameters modelContext: IModel pathId: string pathContext: IPath #### Returns void Defined in core/maker.ts:373","title":"Interface IModelPathCallback"},{"location":"converted/api/interfaces/core_maker.IModelPathCallback/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/interfaces/core_maker.IPathDirectional/","text":"IPathDirectional | Photon Photon Preparing search index... core/maker IPathDirectional Interface IPathDirectional A path that may be indicated to \"flow\" in either direction between its endpoints. interface IPathDirectional { endPoints : IPoint []; layer ?: string; origin : IPoint ; reversed ?: boolean; type : string; } Hierarchy ( View Summary ) IPath IPathDirectional Defined in core/maker.ts:354 Index Properties endPoints layer? origin reversed? type Properties endPoints endPoints: IPoint [] The endpoints of the path. Defined in core/maker.ts:359 Optional layer layer?: string Optional layer of this path. Inherited from IPath . layer Defined in core/schema.ts:24 origin origin: IPoint The main point of reference for this path. Inherited from IPath . origin Defined in core/schema.ts:22 Optional reversed reversed?: boolean Path flows forwards or reverse. Defined in core/maker.ts:364 type type: string The type of the path, e.g. \"line\", \"circle\", or \"arc\". These strings are enumerated in pathType. Inherited from IPath . type Defined in core/schema.ts:20 Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Properties endPoints layer origin reversed type Photon Loading... Generated using TypeDoc","title":"IPathDirectional | Photon"},{"location":"converted/api/interfaces/core_maker.IPathDirectional/#interface-ipathdirectional","text":"A path that may be indicated to \"flow\" in either direction between its endpoints. interface IPathDirectional { endPoints : IPoint []; layer ?: string; origin : IPoint ; reversed ?: boolean; type : string; }","title":"Interface IPathDirectional"},{"location":"converted/api/interfaces/core_maker.IPathDirectional/#hierarchy-view-summary","text":"IPath IPathDirectional Defined in core/maker.ts:354","title":"Hierarchy (View Summary)"},{"location":"converted/api/interfaces/core_maker.IPathDirectional/#index","text":"","title":"Index"},{"location":"converted/api/interfaces/core_maker.IPathDirectional/#properties","text":"endPoints layer? origin reversed? type","title":"Properties"},{"location":"converted/api/interfaces/core_maker.IPathDirectional/#properties_1","text":"","title":"Properties"},{"location":"converted/api/interfaces/core_maker.IPathDirectional/#endpoints","text":"endPoints: IPoint [] The endpoints of the path. Defined in core/maker.ts:359","title":"endPoints"},{"location":"converted/api/interfaces/core_maker.IPathDirectional/#optionallayer","text":"layer?: string Optional layer of this path. Inherited from IPath . layer Defined in core/schema.ts:24","title":"Optionallayer"},{"location":"converted/api/interfaces/core_maker.IPathDirectional/#origin","text":"origin: IPoint The main point of reference for this path. Inherited from IPath . origin Defined in core/schema.ts:22","title":"origin"},{"location":"converted/api/interfaces/core_maker.IPathDirectional/#optionalreversed","text":"reversed?: boolean Path flows forwards or reverse. Defined in core/maker.ts:364","title":"Optionalreversed"},{"location":"converted/api/interfaces/core_maker.IPathDirectional/#type","text":"type: string The type of the path, e.g. \"line\", \"circle\", or \"arc\". These strings are enumerated in pathType. Inherited from IPath . type Defined in core/schema.ts:20","title":"type"},{"location":"converted/api/interfaces/core_maker.IPathDirectional/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/interfaces/core_maker.IPathDirectional/#on-this-page","text":"Properties endPoints layer origin reversed type Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/interfaces/core_maker.IPathIntersection/","text":"IPathIntersection | Photon Photon Preparing search index... core/maker IPathIntersection Interface IPathIntersection An intersection of two paths. interface IPathIntersection { intersectionPoints : IPoint []; path1Angles ?: number[]; path2Angles ?: number[]; } Defined in core/maker.ts:252 Index Properties intersectionPoints path1Angles? path2Angles? Properties intersectionPoints intersectionPoints: IPoint [] Array of points where the two paths intersected. The length of the array may be either 1 or 2 points. Defined in core/maker.ts:257 Optional path1Angles path1Angles?: number[] This Array property will only be defined if the first parameter passed to pathIntersection is either an Arc or a Circle. It contains the angles of intersection relative to the first path parameter. The length of the array may be either 1 or 2. Defined in core/maker.ts:264 Optional path2Angles path2Angles?: number[] This Array property will only be defined if the second parameter passed to pathIntersection is either an Arc or a Circle. It contains the angles of intersection relative to the second path parameter. The length of the array may be either 1 or 2. Defined in core/maker.ts:271 Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Properties intersectionPoints path1Angles path2Angles Photon Loading... Generated using TypeDoc","title":"IPathIntersection | Photon"},{"location":"converted/api/interfaces/core_maker.IPathIntersection/#interface-ipathintersection","text":"An intersection of two paths. interface IPathIntersection { intersectionPoints : IPoint []; path1Angles ?: number[]; path2Angles ?: number[]; } Defined in core/maker.ts:252","title":"Interface IPathIntersection"},{"location":"converted/api/interfaces/core_maker.IPathIntersection/#index","text":"","title":"Index"},{"location":"converted/api/interfaces/core_maker.IPathIntersection/#properties","text":"intersectionPoints path1Angles? path2Angles?","title":"Properties"},{"location":"converted/api/interfaces/core_maker.IPathIntersection/#properties_1","text":"","title":"Properties"},{"location":"converted/api/interfaces/core_maker.IPathIntersection/#intersectionpoints","text":"intersectionPoints: IPoint [] Array of points where the two paths intersected. The length of the array may be either 1 or 2 points. Defined in core/maker.ts:257","title":"intersectionPoints"},{"location":"converted/api/interfaces/core_maker.IPathIntersection/#optionalpath1angles","text":"path1Angles?: number[] This Array property will only be defined if the first parameter passed to pathIntersection is either an Arc or a Circle. It contains the angles of intersection relative to the first path parameter. The length of the array may be either 1 or 2. Defined in core/maker.ts:264","title":"Optionalpath1Angles"},{"location":"converted/api/interfaces/core_maker.IPathIntersection/#optionalpath2angles","text":"path2Angles?: number[] This Array property will only be defined if the second parameter passed to pathIntersection is either an Arc or a Circle. It contains the angles of intersection relative to the second path parameter. The length of the array may be either 1 or 2. Defined in core/maker.ts:271","title":"Optionalpath2Angles"},{"location":"converted/api/interfaces/core_maker.IPathIntersection/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/interfaces/core_maker.IPathIntersection/#on-this-page","text":"Properties intersectionPoints path1Angles path2Angles Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/interfaces/core_maker.IPathIntersectionBaseOptions/","text":"IPathIntersectionBaseOptions | Photon Photon Preparing search index... core/maker IPathIntersectionBaseOptions Interface IPathIntersectionBaseOptions Options to pass to path.intersection() interface IPathIntersectionBaseOptions { excludeTangents ?: boolean; out_AreOverlapped ?: boolean; } Hierarchy ( View Summary ) IPathIntersectionBaseOptions IPathIntersectionOptions Defined in core/maker.ts:228 Index Properties excludeTangents? out_AreOverlapped? Properties Optional excludeTangents excludeTangents?: boolean Defined in core/maker.ts:229 Optional out_AreOverlapped out_AreOverlapped?: boolean Defined in core/maker.ts:230 Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Properties excludeTangents out_AreOverlapped Photon Loading... Generated using TypeDoc","title":"IPathIntersectionBaseOptions | Photon"},{"location":"converted/api/interfaces/core_maker.IPathIntersectionBaseOptions/#interface-ipathintersectionbaseoptions","text":"Options to pass to path.intersection() interface IPathIntersectionBaseOptions { excludeTangents ?: boolean; out_AreOverlapped ?: boolean; }","title":"Interface IPathIntersectionBaseOptions"},{"location":"converted/api/interfaces/core_maker.IPathIntersectionBaseOptions/#hierarchy-view-summary","text":"IPathIntersectionBaseOptions IPathIntersectionOptions Defined in core/maker.ts:228","title":"Hierarchy (View Summary)"},{"location":"converted/api/interfaces/core_maker.IPathIntersectionBaseOptions/#index","text":"","title":"Index"},{"location":"converted/api/interfaces/core_maker.IPathIntersectionBaseOptions/#properties","text":"excludeTangents? out_AreOverlapped?","title":"Properties"},{"location":"converted/api/interfaces/core_maker.IPathIntersectionBaseOptions/#properties_1","text":"","title":"Properties"},{"location":"converted/api/interfaces/core_maker.IPathIntersectionBaseOptions/#optionalexcludetangents","text":"excludeTangents?: boolean Defined in core/maker.ts:229","title":"OptionalexcludeTangents"},{"location":"converted/api/interfaces/core_maker.IPathIntersectionBaseOptions/#optionalout_areoverlapped","text":"out_AreOverlapped?: boolean Defined in core/maker.ts:230","title":"Optionalout_AreOverlapped"},{"location":"converted/api/interfaces/core_maker.IPathIntersectionBaseOptions/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/interfaces/core_maker.IPathIntersectionBaseOptions/#on-this-page","text":"Properties excludeTangents out_AreOverlapped Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/interfaces/core_maker.IPathIntersectionOptions/","text":"IPathIntersectionOptions | Photon Photon Preparing search index... core/maker IPathIntersectionOptions Interface IPathIntersectionOptions Options to pass to path.intersection() interface IPathIntersectionOptions { excludeTangents ?: boolean; out_AreOverlapped ?: boolean; path1Offset ?: IPoint ; path2Offset ?: IPoint ; } Hierarchy ( View Summary ) IPathIntersectionBaseOptions IPathIntersectionOptions Defined in core/maker.ts:236 Index Properties excludeTangents? out_AreOverlapped? path1Offset? path2Offset? Properties Optional excludeTangents excludeTangents?: boolean Inherited from IPathIntersectionBaseOptions . excludeTangents Defined in core/maker.ts:229 Optional out_AreOverlapped out_AreOverlapped?: boolean Inherited from IPathIntersectionBaseOptions . out_AreOverlapped Defined in core/maker.ts:230 Optional path1Offset path1Offset?: IPoint Optional boolean to only return deep intersections, i.e. not on an end point or tangent. Defined in core/maker.ts:241 Optional path2Offset path2Offset?: IPoint Optional output variable which will be set to true if the paths are overlapped. Defined in core/maker.ts:246 Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Properties excludeTangents out_AreOverlapped path1Offset path2Offset Photon Loading... Generated using TypeDoc","title":"IPathIntersectionOptions | Photon"},{"location":"converted/api/interfaces/core_maker.IPathIntersectionOptions/#interface-ipathintersectionoptions","text":"Options to pass to path.intersection() interface IPathIntersectionOptions { excludeTangents ?: boolean; out_AreOverlapped ?: boolean; path1Offset ?: IPoint ; path2Offset ?: IPoint ; }","title":"Interface IPathIntersectionOptions"},{"location":"converted/api/interfaces/core_maker.IPathIntersectionOptions/#hierarchy-view-summary","text":"IPathIntersectionBaseOptions IPathIntersectionOptions Defined in core/maker.ts:236","title":"Hierarchy (View Summary)"},{"location":"converted/api/interfaces/core_maker.IPathIntersectionOptions/#index","text":"","title":"Index"},{"location":"converted/api/interfaces/core_maker.IPathIntersectionOptions/#properties","text":"excludeTangents? out_AreOverlapped? path1Offset? path2Offset?","title":"Properties"},{"location":"converted/api/interfaces/core_maker.IPathIntersectionOptions/#properties_1","text":"","title":"Properties"},{"location":"converted/api/interfaces/core_maker.IPathIntersectionOptions/#optionalexcludetangents","text":"excludeTangents?: boolean Inherited from IPathIntersectionBaseOptions . excludeTangents Defined in core/maker.ts:229","title":"OptionalexcludeTangents"},{"location":"converted/api/interfaces/core_maker.IPathIntersectionOptions/#optionalout_areoverlapped","text":"out_AreOverlapped?: boolean Inherited from IPathIntersectionBaseOptions . out_AreOverlapped Defined in core/maker.ts:230","title":"Optionalout_AreOverlapped"},{"location":"converted/api/interfaces/core_maker.IPathIntersectionOptions/#optionalpath1offset","text":"path1Offset?: IPoint Optional boolean to only return deep intersections, i.e. not on an end point or tangent. Defined in core/maker.ts:241","title":"Optionalpath1Offset"},{"location":"converted/api/interfaces/core_maker.IPathIntersectionOptions/#optionalpath2offset","text":"path2Offset?: IPoint Optional output variable which will be set to true if the paths are overlapped. Defined in core/maker.ts:246","title":"Optionalpath2Offset"},{"location":"converted/api/interfaces/core_maker.IPathIntersectionOptions/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/interfaces/core_maker.IPathIntersectionOptions/#on-this-page","text":"Properties excludeTangents out_AreOverlapped path1Offset path2Offset Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/interfaces/core_maker.IPathRemoved/","text":"IPathRemoved | Photon Photon Preparing search index... core/maker IPathRemoved Interface IPathRemoved A path that was removed in a combine operation. interface IPathRemoved { layer ?: string; origin : IPoint ; reason : string; routeKey : string; type : string; } Hierarchy ( View Summary ) IPath IPathRemoved Defined in core/maker.ts:174 Index Properties layer? origin reason routeKey type Properties Optional layer layer?: string Optional layer of this path. Inherited from IPath . layer Defined in core/schema.ts:24 origin origin: IPoint The main point of reference for this path. Inherited from IPath . origin Defined in core/schema.ts:22 reason reason: string Defined in core/maker.ts:175 routeKey routeKey: string Defined in core/maker.ts:176 type type: string The type of the path, e.g. \"line\", \"circle\", or \"arc\". These strings are enumerated in pathType. Inherited from IPath . type Defined in core/schema.ts:20 Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Properties layer origin reason routeKey type Photon Loading... Generated using TypeDoc","title":"IPathRemoved | Photon"},{"location":"converted/api/interfaces/core_maker.IPathRemoved/#interface-ipathremoved","text":"A path that was removed in a combine operation. interface IPathRemoved { layer ?: string; origin : IPoint ; reason : string; routeKey : string; type : string; }","title":"Interface IPathRemoved"},{"location":"converted/api/interfaces/core_maker.IPathRemoved/#hierarchy-view-summary","text":"IPath IPathRemoved Defined in core/maker.ts:174","title":"Hierarchy (View Summary)"},{"location":"converted/api/interfaces/core_maker.IPathRemoved/#index","text":"","title":"Index"},{"location":"converted/api/interfaces/core_maker.IPathRemoved/#properties","text":"layer? origin reason routeKey type","title":"Properties"},{"location":"converted/api/interfaces/core_maker.IPathRemoved/#properties_1","text":"","title":"Properties"},{"location":"converted/api/interfaces/core_maker.IPathRemoved/#optionallayer","text":"layer?: string Optional layer of this path. Inherited from IPath . layer Defined in core/schema.ts:24","title":"Optionallayer"},{"location":"converted/api/interfaces/core_maker.IPathRemoved/#origin","text":"origin: IPoint The main point of reference for this path. Inherited from IPath . origin Defined in core/schema.ts:22","title":"origin"},{"location":"converted/api/interfaces/core_maker.IPathRemoved/#reason","text":"reason: string Defined in core/maker.ts:175","title":"reason"},{"location":"converted/api/interfaces/core_maker.IPathRemoved/#routekey","text":"routeKey: string Defined in core/maker.ts:176","title":"routeKey"},{"location":"converted/api/interfaces/core_maker.IPathRemoved/#type","text":"type: string The type of the path, e.g. \"line\", \"circle\", or \"arc\". These strings are enumerated in pathType. Inherited from IPath . type Defined in core/schema.ts:20","title":"type"},{"location":"converted/api/interfaces/core_maker.IPathRemoved/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/interfaces/core_maker.IPathRemoved/#on-this-page","text":"Properties layer origin reason routeKey type Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/interfaces/core_maker.IPointMatchOptions/","text":"IPointMatchOptions | Photon Photon Preparing search index... core/maker IPointMatchOptions Interface IPointMatchOptions Options when matching points interface IPointMatchOptions { pointMatchingDistance ?: number; } Hierarchy ( View Summary ) IPointMatchOptions IDXFRenderOptions ICombineOptions IFindLoopsOptions ISimplifyOptions IFindChainsOptions IJscadCagOptions Defined in core/maker.ts:277 Index Properties pointMatchingDistance? Properties Optional pointMatchingDistance pointMatchingDistance?: number Max distance to consider two points as the same. Defined in core/maker.ts:282 Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Properties pointMatchingDistance Photon Loading... Generated using TypeDoc","title":"IPointMatchOptions | Photon"},{"location":"converted/api/interfaces/core_maker.IPointMatchOptions/#interface-ipointmatchoptions","text":"Options when matching points interface IPointMatchOptions { pointMatchingDistance ?: number; }","title":"Interface IPointMatchOptions"},{"location":"converted/api/interfaces/core_maker.IPointMatchOptions/#hierarchy-view-summary","text":"IPointMatchOptions IDXFRenderOptions ICombineOptions IFindLoopsOptions ISimplifyOptions IFindChainsOptions IJscadCagOptions Defined in core/maker.ts:277","title":"Hierarchy (View Summary)"},{"location":"converted/api/interfaces/core_maker.IPointMatchOptions/#index","text":"","title":"Index"},{"location":"converted/api/interfaces/core_maker.IPointMatchOptions/#properties","text":"pointMatchingDistance?","title":"Properties"},{"location":"converted/api/interfaces/core_maker.IPointMatchOptions/#properties_1","text":"","title":"Properties"},{"location":"converted/api/interfaces/core_maker.IPointMatchOptions/#optionalpointmatchingdistance","text":"pointMatchingDistance?: number Max distance to consider two points as the same. Defined in core/maker.ts:282","title":"OptionalpointMatchingDistance"},{"location":"converted/api/interfaces/core_maker.IPointMatchOptions/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/interfaces/core_maker.IPointMatchOptions/#on-this-page","text":"Properties pointMatchingDistance Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/interfaces/core_maker.IRefModelInModel/","text":"IRefModelInModel | Photon Photon Preparing search index... core/maker IRefModelInModel Interface IRefModelInModel Reference to a model within a model. interface IRefModelInModel { childId : string; childModel : IModel ; parentModel : IModel ; } Hierarchy ( View Summary ) IRefModelInModel IWalkModel Defined in core/maker.ts:538 Index Properties childId childModel parentModel Properties childId childId: string Defined in core/maker.ts:540 childModel childModel: IModel Defined in core/maker.ts:541 parentModel parentModel: IModel Defined in core/maker.ts:539 Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Properties childId childModel parentModel Photon Loading... Generated using TypeDoc","title":"IRefModelInModel | Photon"},{"location":"converted/api/interfaces/core_maker.IRefModelInModel/#interface-irefmodelinmodel","text":"Reference to a model within a model. interface IRefModelInModel { childId : string; childModel : IModel ; parentModel : IModel ; }","title":"Interface IRefModelInModel"},{"location":"converted/api/interfaces/core_maker.IRefModelInModel/#hierarchy-view-summary","text":"IRefModelInModel IWalkModel Defined in core/maker.ts:538","title":"Hierarchy (View Summary)"},{"location":"converted/api/interfaces/core_maker.IRefModelInModel/#index","text":"","title":"Index"},{"location":"converted/api/interfaces/core_maker.IRefModelInModel/#properties","text":"childId childModel parentModel","title":"Properties"},{"location":"converted/api/interfaces/core_maker.IRefModelInModel/#properties_1","text":"","title":"Properties"},{"location":"converted/api/interfaces/core_maker.IRefModelInModel/#childid","text":"childId: string Defined in core/maker.ts:540","title":"childId"},{"location":"converted/api/interfaces/core_maker.IRefModelInModel/#childmodel","text":"childModel: IModel Defined in core/maker.ts:541","title":"childModel"},{"location":"converted/api/interfaces/core_maker.IRefModelInModel/#parentmodel","text":"parentModel: IModel Defined in core/maker.ts:539","title":"parentModel"},{"location":"converted/api/interfaces/core_maker.IRefModelInModel/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/interfaces/core_maker.IRefModelInModel/#on-this-page","text":"Properties childId childModel parentModel Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/interfaces/core_maker.IRefPathIdInModel/","text":"IRefPathIdInModel | Photon Photon Preparing search index... core/maker IRefPathIdInModel Interface IRefPathIdInModel Reference to a path id within a model. interface IRefPathIdInModel { modelContext : IModel ; pathId : string; } Hierarchy ( View Summary ) IRefPathIdInModel IWalkPath Defined in core/maker.ts:386 Index Properties modelContext pathId Properties modelContext modelContext: IModel Defined in core/maker.ts:387 pathId pathId: string Defined in core/maker.ts:388 Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Properties modelContext pathId Photon Loading... Generated using TypeDoc","title":"IRefPathIdInModel | Photon"},{"location":"converted/api/interfaces/core_maker.IRefPathIdInModel/#interface-irefpathidinmodel","text":"Reference to a path id within a model. interface IRefPathIdInModel { modelContext : IModel ; pathId : string; }","title":"Interface IRefPathIdInModel"},{"location":"converted/api/interfaces/core_maker.IRefPathIdInModel/#hierarchy-view-summary","text":"IRefPathIdInModel IWalkPath Defined in core/maker.ts:386","title":"Hierarchy (View Summary)"},{"location":"converted/api/interfaces/core_maker.IRefPathIdInModel/#index","text":"","title":"Index"},{"location":"converted/api/interfaces/core_maker.IRefPathIdInModel/#properties","text":"modelContext pathId","title":"Properties"},{"location":"converted/api/interfaces/core_maker.IRefPathIdInModel/#properties_1","text":"","title":"Properties"},{"location":"converted/api/interfaces/core_maker.IRefPathIdInModel/#modelcontext","text":"modelContext: IModel Defined in core/maker.ts:387","title":"modelContext"},{"location":"converted/api/interfaces/core_maker.IRefPathIdInModel/#pathid","text":"pathId: string Defined in core/maker.ts:388","title":"pathId"},{"location":"converted/api/interfaces/core_maker.IRefPathIdInModel/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/interfaces/core_maker.IRefPathIdInModel/#on-this-page","text":"Properties modelContext pathId Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/interfaces/core_maker.IRouteOffset/","text":"IRouteOffset | Photon Photon Preparing search index... core/maker IRouteOffset Interface IRouteOffset A route to either a path or a model, and the absolute offset of it. interface IRouteOffset { layer : string; offset : IPoint ; route : string[]; routeKey : string; } Hierarchy ( View Summary ) IRouteOffset IWalkPath IWalkModel Defined in core/maker.ts:394 Index Properties layer offset route routeKey Properties layer layer: string Defined in core/maker.ts:395 offset offset: IPoint Defined in core/maker.ts:396 route route: string[] Defined in core/maker.ts:397 routeKey routeKey: string Defined in core/maker.ts:398 Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Properties layer offset route routeKey Photon Loading... Generated using TypeDoc","title":"IRouteOffset | Photon"},{"location":"converted/api/interfaces/core_maker.IRouteOffset/#interface-irouteoffset","text":"A route to either a path or a model, and the absolute offset of it. interface IRouteOffset { layer : string; offset : IPoint ; route : string[]; routeKey : string; }","title":"Interface IRouteOffset"},{"location":"converted/api/interfaces/core_maker.IRouteOffset/#hierarchy-view-summary","text":"IRouteOffset IWalkPath IWalkModel Defined in core/maker.ts:394","title":"Hierarchy (View Summary)"},{"location":"converted/api/interfaces/core_maker.IRouteOffset/#index","text":"","title":"Index"},{"location":"converted/api/interfaces/core_maker.IRouteOffset/#properties","text":"layer offset route routeKey","title":"Properties"},{"location":"converted/api/interfaces/core_maker.IRouteOffset/#properties_1","text":"","title":"Properties"},{"location":"converted/api/interfaces/core_maker.IRouteOffset/#layer","text":"layer: string Defined in core/maker.ts:395","title":"layer"},{"location":"converted/api/interfaces/core_maker.IRouteOffset/#offset","text":"offset: IPoint Defined in core/maker.ts:396","title":"offset"},{"location":"converted/api/interfaces/core_maker.IRouteOffset/#route","text":"route: string[] Defined in core/maker.ts:397","title":"route"},{"location":"converted/api/interfaces/core_maker.IRouteOffset/#routekey","text":"routeKey: string Defined in core/maker.ts:398","title":"routeKey"},{"location":"converted/api/interfaces/core_maker.IRouteOffset/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/interfaces/core_maker.IRouteOffset/#on-this-page","text":"Properties layer offset route routeKey Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/interfaces/core_maker.ISimplifyOptions/","text":"ISimplifyOptions | Photon Photon Preparing search index... core/maker ISimplifyOptions Interface ISimplifyOptions Options to pass to model.simplify() interface ISimplifyOptions { pointMatchingDistance ?: number; scalarMatchingDistance ?: number; } Hierarchy ( View Summary ) IPointMatchOptions ISimplifyOptions Defined in core/maker.ts:342 Index Properties pointMatchingDistance? scalarMatchingDistance? Properties Optional pointMatchingDistance pointMatchingDistance?: number Max distance to consider two points as the same. Inherited from IPointMatchOptions . pointMatchingDistance Defined in core/maker.ts:282 Optional scalarMatchingDistance scalarMatchingDistance?: number Optional Defined in core/maker.ts:347 Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Properties pointMatchingDistance scalarMatchingDistance Photon Loading... Generated using TypeDoc","title":"ISimplifyOptions | Photon"},{"location":"converted/api/interfaces/core_maker.ISimplifyOptions/#interface-isimplifyoptions","text":"Options to pass to model.simplify() interface ISimplifyOptions { pointMatchingDistance ?: number; scalarMatchingDistance ?: number; }","title":"Interface ISimplifyOptions"},{"location":"converted/api/interfaces/core_maker.ISimplifyOptions/#hierarchy-view-summary","text":"IPointMatchOptions ISimplifyOptions Defined in core/maker.ts:342","title":"Hierarchy (View Summary)"},{"location":"converted/api/interfaces/core_maker.ISimplifyOptions/#index","text":"","title":"Index"},{"location":"converted/api/interfaces/core_maker.ISimplifyOptions/#properties","text":"pointMatchingDistance? scalarMatchingDistance?","title":"Properties"},{"location":"converted/api/interfaces/core_maker.ISimplifyOptions/#properties_1","text":"","title":"Properties"},{"location":"converted/api/interfaces/core_maker.ISimplifyOptions/#optionalpointmatchingdistance","text":"pointMatchingDistance?: number Max distance to consider two points as the same. Inherited from IPointMatchOptions . pointMatchingDistance Defined in core/maker.ts:282","title":"OptionalpointMatchingDistance"},{"location":"converted/api/interfaces/core_maker.ISimplifyOptions/#optionalscalarmatchingdistance","text":"scalarMatchingDistance?: number Optional Defined in core/maker.ts:347","title":"OptionalscalarMatchingDistance"},{"location":"converted/api/interfaces/core_maker.ISimplifyOptions/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/interfaces/core_maker.ISimplifyOptions/#on-this-page","text":"Properties pointMatchingDistance scalarMatchingDistance Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/interfaces/core_maker.ISlope/","text":"ISlope | Photon Photon Preparing search index... core/maker ISlope Interface ISlope Slope and y-intercept of a line. interface ISlope { hasSlope : boolean; line : IPathLine ; slope ?: number; yIntercept ?: number; } Defined in core/maker.ts:220 Index Properties hasSlope line slope? yIntercept? Properties hasSlope hasSlope: boolean Defined in core/maker.ts:221 line line: IPathLine Defined in core/maker.ts:223 Optional slope slope?: number Defined in core/maker.ts:222 Optional yIntercept yIntercept?: number Defined in core/maker.ts:224 Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Properties hasSlope line slope yIntercept Photon Loading... Generated using TypeDoc","title":"ISlope | Photon"},{"location":"converted/api/interfaces/core_maker.ISlope/#interface-islope","text":"Slope and y-intercept of a line. interface ISlope { hasSlope : boolean; line : IPathLine ; slope ?: number; yIntercept ?: number; } Defined in core/maker.ts:220","title":"Interface ISlope"},{"location":"converted/api/interfaces/core_maker.ISlope/#index","text":"","title":"Index"},{"location":"converted/api/interfaces/core_maker.ISlope/#properties","text":"hasSlope line slope? yIntercept?","title":"Properties"},{"location":"converted/api/interfaces/core_maker.ISlope/#properties_1","text":"","title":"Properties"},{"location":"converted/api/interfaces/core_maker.ISlope/#hasslope","text":"hasSlope: boolean Defined in core/maker.ts:221","title":"hasSlope"},{"location":"converted/api/interfaces/core_maker.ISlope/#line","text":"line: IPathLine Defined in core/maker.ts:223","title":"line"},{"location":"converted/api/interfaces/core_maker.ISlope/#optionalslope","text":"slope?: number Defined in core/maker.ts:222","title":"Optionalslope"},{"location":"converted/api/interfaces/core_maker.ISlope/#optionalyintercept","text":"yIntercept?: number Defined in core/maker.ts:224","title":"OptionalyIntercept"},{"location":"converted/api/interfaces/core_maker.ISlope/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/interfaces/core_maker.ISlope/#on-this-page","text":"Properties hasSlope line slope yIntercept Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/interfaces/core_maker.IWalkModel/","text":"IWalkModel | Photon Photon Preparing search index... core/maker IWalkModel Interface IWalkModel A model reference in a walk. interface IWalkModel { childId : string; childModel : IModel ; layer : string; offset : IPoint ; parentModel : IModel ; route : string[]; routeKey : string; } Hierarchy ( View Summary ) IRefModelInModel IRouteOffset IWalkModel Defined in core/maker.ts:547 Index Properties childId childModel layer offset parentModel route routeKey Properties childId childId: string Inherited from IRefModelInModel . childId Defined in core/maker.ts:540 childModel childModel: IModel Inherited from IRefModelInModel . childModel Defined in core/maker.ts:541 layer layer: string Inherited from IRouteOffset . layer Defined in core/maker.ts:395 offset offset: IPoint Inherited from IRouteOffset . offset Defined in core/maker.ts:396 parentModel parentModel: IModel Inherited from IRefModelInModel . parentModel Defined in core/maker.ts:539 route route: string[] Inherited from IRouteOffset . route Defined in core/maker.ts:397 routeKey routeKey: string Inherited from IRouteOffset . routeKey Defined in core/maker.ts:398 Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Properties childId childModel layer offset parentModel route routeKey Photon Loading... Generated using TypeDoc","title":"IWalkModel | Photon"},{"location":"converted/api/interfaces/core_maker.IWalkModel/#interface-iwalkmodel","text":"A model reference in a walk. interface IWalkModel { childId : string; childModel : IModel ; layer : string; offset : IPoint ; parentModel : IModel ; route : string[]; routeKey : string; }","title":"Interface IWalkModel"},{"location":"converted/api/interfaces/core_maker.IWalkModel/#hierarchy-view-summary","text":"IRefModelInModel IRouteOffset IWalkModel Defined in core/maker.ts:547","title":"Hierarchy (View Summary)"},{"location":"converted/api/interfaces/core_maker.IWalkModel/#index","text":"","title":"Index"},{"location":"converted/api/interfaces/core_maker.IWalkModel/#properties","text":"childId childModel layer offset parentModel route routeKey","title":"Properties"},{"location":"converted/api/interfaces/core_maker.IWalkModel/#properties_1","text":"","title":"Properties"},{"location":"converted/api/interfaces/core_maker.IWalkModel/#childid","text":"childId: string Inherited from IRefModelInModel . childId Defined in core/maker.ts:540","title":"childId"},{"location":"converted/api/interfaces/core_maker.IWalkModel/#childmodel","text":"childModel: IModel Inherited from IRefModelInModel . childModel Defined in core/maker.ts:541","title":"childModel"},{"location":"converted/api/interfaces/core_maker.IWalkModel/#layer","text":"layer: string Inherited from IRouteOffset . layer Defined in core/maker.ts:395","title":"layer"},{"location":"converted/api/interfaces/core_maker.IWalkModel/#offset","text":"offset: IPoint Inherited from IRouteOffset . offset Defined in core/maker.ts:396","title":"offset"},{"location":"converted/api/interfaces/core_maker.IWalkModel/#parentmodel","text":"parentModel: IModel Inherited from IRefModelInModel . parentModel Defined in core/maker.ts:539","title":"parentModel"},{"location":"converted/api/interfaces/core_maker.IWalkModel/#route","text":"route: string[] Inherited from IRouteOffset . route Defined in core/maker.ts:397","title":"route"},{"location":"converted/api/interfaces/core_maker.IWalkModel/#routekey","text":"routeKey: string Inherited from IRouteOffset . routeKey Defined in core/maker.ts:398","title":"routeKey"},{"location":"converted/api/interfaces/core_maker.IWalkModel/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/interfaces/core_maker.IWalkModel/#on-this-page","text":"Properties childId childModel layer offset parentModel route routeKey Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/interfaces/core_maker.IWalkModelCallback/","text":"IWalkModelCallback | Photon Photon Preparing search index... core/maker IWalkModelCallback Interface IWalkModelCallback Callback signature for model.walk(). IWalkModelCallback(context: IWalkModel ): void #### Parameters context: IWalkModel #### Returns void Defined in core/maker.ts:554 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"IWalkModelCallback | Photon"},{"location":"converted/api/interfaces/core_maker.IWalkModelCallback/#interface-iwalkmodelcallback","text":"Callback signature for model.walk(). IWalkModelCallback(context: IWalkModel ): void #### Parameters context: IWalkModel #### Returns void Defined in core/maker.ts:554","title":"Interface IWalkModelCallback"},{"location":"converted/api/interfaces/core_maker.IWalkModelCallback/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/interfaces/core_maker.IWalkModelCancellableCallback/","text":"IWalkModelCancellableCallback | Photon Photon Preparing search index... core/maker IWalkModelCancellableCallback Interface IWalkModelCancellableCallback Callback signature for model.walk(), which may return false to halt any further walking. IWalkModelCancellableCallback(context: IWalkModel ): boolean #### Parameters context: IWalkModel #### Returns boolean Defined in core/maker.ts:561 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"IWalkModelCancellableCallback | Photon"},{"location":"converted/api/interfaces/core_maker.IWalkModelCancellableCallback/#interface-iwalkmodelcancellablecallback","text":"Callback signature for model.walk(), which may return false to halt any further walking. IWalkModelCancellableCallback(context: IWalkModel ): boolean #### Parameters context: IWalkModel #### Returns boolean Defined in core/maker.ts:561","title":"Interface IWalkModelCancellableCallback"},{"location":"converted/api/interfaces/core_maker.IWalkModelCancellableCallback/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/interfaces/core_maker.IWalkOptions/","text":"IWalkOptions | Photon Photon Preparing search index... core/maker IWalkOptions Interface IWalkOptions Options to pass to model.walk(). interface IWalkOptions { afterChildWalk ?: IWalkModelCallback ; beforeChildWalk ?: IWalkModelCancellableCallback ; onPath ?: IWalkPathCallback ; } Defined in core/maker.ts:567 Index Properties afterChildWalk? beforeChildWalk? onPath? Properties Optional afterChildWalk afterChildWalk?: IWalkModelCallback Callback for every child model in every model, after all of its children have been walked. Defined in core/maker.ts:582 Optional beforeChildWalk beforeChildWalk?: IWalkModelCancellableCallback Callback for every child model in every model. Return false to stop walking down further models. Defined in core/maker.ts:577 Optional onPath onPath?: IWalkPathCallback Callback for every path in every model. Defined in core/maker.ts:572 Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Properties afterChildWalk beforeChildWalk onPath Photon Loading... Generated using TypeDoc","title":"IWalkOptions | Photon"},{"location":"converted/api/interfaces/core_maker.IWalkOptions/#interface-iwalkoptions","text":"Options to pass to model.walk(). interface IWalkOptions { afterChildWalk ?: IWalkModelCallback ; beforeChildWalk ?: IWalkModelCancellableCallback ; onPath ?: IWalkPathCallback ; } Defined in core/maker.ts:567","title":"Interface IWalkOptions"},{"location":"converted/api/interfaces/core_maker.IWalkOptions/#index","text":"","title":"Index"},{"location":"converted/api/interfaces/core_maker.IWalkOptions/#properties","text":"afterChildWalk? beforeChildWalk? onPath?","title":"Properties"},{"location":"converted/api/interfaces/core_maker.IWalkOptions/#properties_1","text":"","title":"Properties"},{"location":"converted/api/interfaces/core_maker.IWalkOptions/#optionalafterchildwalk","text":"afterChildWalk?: IWalkModelCallback Callback for every child model in every model, after all of its children have been walked. Defined in core/maker.ts:582","title":"OptionalafterChildWalk"},{"location":"converted/api/interfaces/core_maker.IWalkOptions/#optionalbeforechildwalk","text":"beforeChildWalk?: IWalkModelCancellableCallback Callback for every child model in every model. Return false to stop walking down further models. Defined in core/maker.ts:577","title":"OptionalbeforeChildWalk"},{"location":"converted/api/interfaces/core_maker.IWalkOptions/#optionalonpath","text":"onPath?: IWalkPathCallback Callback for every path in every model. Defined in core/maker.ts:572","title":"OptionalonPath"},{"location":"converted/api/interfaces/core_maker.IWalkOptions/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/interfaces/core_maker.IWalkOptions/#on-this-page","text":"Properties afterChildWalk beforeChildWalk onPath Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/interfaces/core_maker.IWalkPath/","text":"IWalkPath | Photon Photon Preparing search index... core/maker IWalkPath Interface IWalkPath A path reference in a walk. interface IWalkPath { layer : string; modelContext : IModel ; offset : IPoint ; pathContext : IPath ; pathId : string; route : string[]; routeKey : string; } Hierarchy ( View Summary ) IRefPathIdInModel IRouteOffset IWalkPath Defined in core/maker.ts:404 Index Properties layer modelContext offset pathContext pathId route routeKey Properties layer layer: string Inherited from IRouteOffset . layer Defined in core/maker.ts:395 modelContext modelContext: IModel Inherited from IRefPathIdInModel . modelContext Defined in core/maker.ts:387 offset offset: IPoint Inherited from IRouteOffset . offset Defined in core/maker.ts:396 pathContext pathContext: IPath Defined in core/maker.ts:405 pathId pathId: string Inherited from IRefPathIdInModel . pathId Defined in core/maker.ts:388 route route: string[] Inherited from IRouteOffset . route Defined in core/maker.ts:397 routeKey routeKey: string Inherited from IRouteOffset . routeKey Defined in core/maker.ts:398 Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Properties layer modelContext offset pathContext pathId route routeKey Photon Loading... Generated using TypeDoc","title":"IWalkPath | Photon"},{"location":"converted/api/interfaces/core_maker.IWalkPath/#interface-iwalkpath","text":"A path reference in a walk. interface IWalkPath { layer : string; modelContext : IModel ; offset : IPoint ; pathContext : IPath ; pathId : string; route : string[]; routeKey : string; }","title":"Interface IWalkPath"},{"location":"converted/api/interfaces/core_maker.IWalkPath/#hierarchy-view-summary","text":"IRefPathIdInModel IRouteOffset IWalkPath Defined in core/maker.ts:404","title":"Hierarchy (View Summary)"},{"location":"converted/api/interfaces/core_maker.IWalkPath/#index","text":"","title":"Index"},{"location":"converted/api/interfaces/core_maker.IWalkPath/#properties","text":"layer modelContext offset pathContext pathId route routeKey","title":"Properties"},{"location":"converted/api/interfaces/core_maker.IWalkPath/#properties_1","text":"","title":"Properties"},{"location":"converted/api/interfaces/core_maker.IWalkPath/#layer","text":"layer: string Inherited from IRouteOffset . layer Defined in core/maker.ts:395","title":"layer"},{"location":"converted/api/interfaces/core_maker.IWalkPath/#modelcontext","text":"modelContext: IModel Inherited from IRefPathIdInModel . modelContext Defined in core/maker.ts:387","title":"modelContext"},{"location":"converted/api/interfaces/core_maker.IWalkPath/#offset","text":"offset: IPoint Inherited from IRouteOffset . offset Defined in core/maker.ts:396","title":"offset"},{"location":"converted/api/interfaces/core_maker.IWalkPath/#pathcontext","text":"pathContext: IPath Defined in core/maker.ts:405","title":"pathContext"},{"location":"converted/api/interfaces/core_maker.IWalkPath/#pathid","text":"pathId: string Inherited from IRefPathIdInModel . pathId Defined in core/maker.ts:388","title":"pathId"},{"location":"converted/api/interfaces/core_maker.IWalkPath/#route","text":"route: string[] Inherited from IRouteOffset . route Defined in core/maker.ts:397","title":"route"},{"location":"converted/api/interfaces/core_maker.IWalkPath/#routekey","text":"routeKey: string Inherited from IRouteOffset . routeKey Defined in core/maker.ts:398","title":"routeKey"},{"location":"converted/api/interfaces/core_maker.IWalkPath/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/interfaces/core_maker.IWalkPath/#on-this-page","text":"Properties layer modelContext offset pathContext pathId route routeKey Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/interfaces/core_maker.IWalkPathBooleanCallback/","text":"IWalkPathBooleanCallback | Photon Photon Preparing search index... core/maker IWalkPathBooleanCallback Interface IWalkPathBooleanCallback Callback for returning a boolean from an IWalkPath. IWalkPathBooleanCallback(context: IWalkPath ): boolean #### Parameters context: IWalkPath #### Returns boolean Defined in core/maker.ts:419 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"IWalkPathBooleanCallback | Photon"},{"location":"converted/api/interfaces/core_maker.IWalkPathBooleanCallback/#interface-iwalkpathbooleancallback","text":"Callback for returning a boolean from an IWalkPath. IWalkPathBooleanCallback(context: IWalkPath ): boolean #### Parameters context: IWalkPath #### Returns boolean Defined in core/maker.ts:419","title":"Interface IWalkPathBooleanCallback"},{"location":"converted/api/interfaces/core_maker.IWalkPathBooleanCallback/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/interfaces/core_maker.IWalkPathCallback/","text":"IWalkPathCallback | Photon Photon Preparing search index... core/maker IWalkPathCallback Interface IWalkPathCallback Callback signature for path in model.walk(). IWalkPathCallback(context: IWalkPath ): void #### Parameters context: IWalkPath #### Returns void Defined in core/maker.ts:412 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"IWalkPathCallback | Photon"},{"location":"converted/api/interfaces/core_maker.IWalkPathCallback/#interface-iwalkpathcallback","text":"Callback signature for path in model.walk(). IWalkPathCallback(context: IWalkPath ): void #### Parameters context: IWalkPath #### Returns void Defined in core/maker.ts:412","title":"Interface IWalkPathCallback"},{"location":"converted/api/interfaces/core_maker.IWalkPathCallback/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/interfaces/core_openjscad-esm.IJscadCagOptions/","text":"IJscadCagOptions | Photon Photon Preparing search index... core/openjscad-esm IJscadCagOptions Interface IJscadCagOptions Jscad CAG export options. interface IJscadCagOptions { accuracy ?: number; byLayers ?: boolean; maxArcFacet ?: number; pointMatchingDistance ?: number; statusCallback ?: IStatusCallback ; units ?: string; } Hierarchy ( View Summary ) IPointMatchOptions IJscadCagOptions IJscadCsgOptions Defined in core/openjscad-esm.ts:509 Index Properties accuracy? byLayers? maxArcFacet? pointMatchingDistance? statusCallback? units? Properties Optional accuracy accuracy?: number Optional exemplar of number of decimal places. Inherited from IExportOptions.accuracy Defined in core/exporter.ts:14 Optional byLayers byLayers?: boolean Flag to separate chains by layers. Defined in core/openjscad-esm.ts:513 Optional maxArcFacet maxArcFacet?: number The maximum length between points on an arc or circle. Defined in core/openjscad-esm.ts:518 Optional pointMatchingDistance pointMatchingDistance?: number Max distance to consider two points as the same. Inherited from IPointMatchOptions . pointMatchingDistance Defined in core/maker.ts:282 Optional statusCallback statusCallback?: IStatusCallback Optional callback to get status during the export. Defined in core/openjscad-esm.ts:523 Optional units units?: string Optional unit system to embed in exported file, if the export format allows alternate unit systems. Inherited from IExportOptions.units Defined in core/exporter.ts:19 Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Properties accuracy byLayers maxArcFacet pointMatchingDistance statusCallback units Photon Loading... Generated using TypeDoc","title":"IJscadCagOptions | Photon"},{"location":"converted/api/interfaces/core_openjscad-esm.IJscadCagOptions/#interface-ijscadcagoptions","text":"Jscad CAG export options. interface IJscadCagOptions { accuracy ?: number; byLayers ?: boolean; maxArcFacet ?: number; pointMatchingDistance ?: number; statusCallback ?: IStatusCallback ; units ?: string; }","title":"Interface IJscadCagOptions"},{"location":"converted/api/interfaces/core_openjscad-esm.IJscadCagOptions/#hierarchy-view-summary","text":"IPointMatchOptions IJscadCagOptions IJscadCsgOptions Defined in core/openjscad-esm.ts:509","title":"Hierarchy (View Summary)"},{"location":"converted/api/interfaces/core_openjscad-esm.IJscadCagOptions/#index","text":"","title":"Index"},{"location":"converted/api/interfaces/core_openjscad-esm.IJscadCagOptions/#properties","text":"accuracy? byLayers? maxArcFacet? pointMatchingDistance? statusCallback? units?","title":"Properties"},{"location":"converted/api/interfaces/core_openjscad-esm.IJscadCagOptions/#properties_1","text":"","title":"Properties"},{"location":"converted/api/interfaces/core_openjscad-esm.IJscadCagOptions/#optionalaccuracy","text":"accuracy?: number Optional exemplar of number of decimal places. Inherited from IExportOptions.accuracy Defined in core/exporter.ts:14","title":"Optionalaccuracy"},{"location":"converted/api/interfaces/core_openjscad-esm.IJscadCagOptions/#optionalbylayers","text":"byLayers?: boolean Flag to separate chains by layers. Defined in core/openjscad-esm.ts:513","title":"OptionalbyLayers"},{"location":"converted/api/interfaces/core_openjscad-esm.IJscadCagOptions/#optionalmaxarcfacet","text":"maxArcFacet?: number The maximum length between points on an arc or circle. Defined in core/openjscad-esm.ts:518","title":"OptionalmaxArcFacet"},{"location":"converted/api/interfaces/core_openjscad-esm.IJscadCagOptions/#optionalpointmatchingdistance","text":"pointMatchingDistance?: number Max distance to consider two points as the same. Inherited from IPointMatchOptions . pointMatchingDistance Defined in core/maker.ts:282","title":"OptionalpointMatchingDistance"},{"location":"converted/api/interfaces/core_openjscad-esm.IJscadCagOptions/#optionalstatuscallback","text":"statusCallback?: IStatusCallback Optional callback to get status during the export. Defined in core/openjscad-esm.ts:523","title":"OptionalstatusCallback"},{"location":"converted/api/interfaces/core_openjscad-esm.IJscadCagOptions/#optionalunits","text":"units?: string Optional unit system to embed in exported file, if the export format allows alternate unit systems. Inherited from IExportOptions.units Defined in core/exporter.ts:19","title":"Optionalunits"},{"location":"converted/api/interfaces/core_openjscad-esm.IJscadCagOptions/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/interfaces/core_openjscad-esm.IJscadCagOptions/#on-this-page","text":"Properties accuracy byLayers maxArcFacet pointMatchingDistance statusCallback units Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/interfaces/core_openjscad-esm.IJscadCsgOptions/","text":"IJscadCsgOptions | Photon Photon Preparing search index... core/openjscad-esm IJscadCsgOptions Interface IJscadCsgOptions Jscad CSG export options. interface IJscadCsgOptions { accuracy ?: number; byLayers ?: boolean; extrude ?: number; layerOptions ?: { [layerId: string]: IJscadExtrudeOptions }; maxArcFacet ?: number; pointMatchingDistance ?: number; statusCallback ?: IStatusCallback ; units ?: string; z ?: number; } Hierarchy ( View Summary ) IJscadCagOptions IJscadExtrudeOptions IJscadCsgOptions IJscadScriptOptions Defined in core/openjscad-esm.ts:544 Index Properties accuracy? byLayers? extrude? layerOptions? maxArcFacet? pointMatchingDistance? statusCallback? units? z? Properties Optional accuracy accuracy?: number Optional exemplar of number of decimal places. Inherited from IJscadCagOptions . accuracy Defined in core/exporter.ts:14 Optional byLayers byLayers?: boolean Flag to separate chains by layers. Inherited from IJscadCagOptions . byLayers Defined in core/openjscad-esm.ts:513 Optional extrude extrude?: number Optional depth of 3D extrusion. Inherited from IJscadExtrudeOptions . extrude Defined in core/openjscad-esm.ts:533 Optional layerOptions layerOptions?: { [layerId: string]: IJscadExtrudeOptions } SVG options per layer. Defined in core/openjscad-esm.ts:548 Optional maxArcFacet maxArcFacet?: number The maximum length between points on an arc or circle. Inherited from IJscadCagOptions . maxArcFacet Defined in core/openjscad-esm.ts:518 Optional pointMatchingDistance pointMatchingDistance?: number Max distance to consider two points as the same. Inherited from IJscadCagOptions . pointMatchingDistance Defined in core/maker.ts:282 Optional statusCallback statusCallback?: IStatusCallback Optional callback to get status during the export. Inherited from IJscadCagOptions . statusCallback Defined in core/openjscad-esm.ts:523 Optional units units?: string Optional unit system to embed in exported file, if the export format allows alternate unit systems. Inherited from IJscadCagOptions . units Defined in core/exporter.ts:19 Optional z z?: number Optional depth of 3D extrusion. Inherited from IJscadExtrudeOptions . z Defined in core/openjscad-esm.ts:538 Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Properties accuracy byLayers extrude layerOptions maxArcFacet pointMatchingDistance statusCallback units z Photon Loading... Generated using TypeDoc","title":"IJscadCsgOptions | Photon"},{"location":"converted/api/interfaces/core_openjscad-esm.IJscadCsgOptions/#interface-ijscadcsgoptions","text":"Jscad CSG export options. interface IJscadCsgOptions { accuracy ?: number; byLayers ?: boolean; extrude ?: number; layerOptions ?: { [layerId: string]: IJscadExtrudeOptions }; maxArcFacet ?: number; pointMatchingDistance ?: number; statusCallback ?: IStatusCallback ; units ?: string; z ?: number; }","title":"Interface IJscadCsgOptions"},{"location":"converted/api/interfaces/core_openjscad-esm.IJscadCsgOptions/#hierarchy-view-summary","text":"IJscadCagOptions IJscadExtrudeOptions IJscadCsgOptions IJscadScriptOptions Defined in core/openjscad-esm.ts:544","title":"Hierarchy (View Summary)"},{"location":"converted/api/interfaces/core_openjscad-esm.IJscadCsgOptions/#index","text":"","title":"Index"},{"location":"converted/api/interfaces/core_openjscad-esm.IJscadCsgOptions/#properties","text":"accuracy? byLayers? extrude? layerOptions? maxArcFacet? pointMatchingDistance? statusCallback? units? z?","title":"Properties"},{"location":"converted/api/interfaces/core_openjscad-esm.IJscadCsgOptions/#properties_1","text":"","title":"Properties"},{"location":"converted/api/interfaces/core_openjscad-esm.IJscadCsgOptions/#optionalaccuracy","text":"accuracy?: number Optional exemplar of number of decimal places. Inherited from IJscadCagOptions . accuracy Defined in core/exporter.ts:14","title":"Optionalaccuracy"},{"location":"converted/api/interfaces/core_openjscad-esm.IJscadCsgOptions/#optionalbylayers","text":"byLayers?: boolean Flag to separate chains by layers. Inherited from IJscadCagOptions . byLayers Defined in core/openjscad-esm.ts:513","title":"OptionalbyLayers"},{"location":"converted/api/interfaces/core_openjscad-esm.IJscadCsgOptions/#optionalextrude","text":"extrude?: number Optional depth of 3D extrusion. Inherited from IJscadExtrudeOptions . extrude Defined in core/openjscad-esm.ts:533","title":"Optionalextrude"},{"location":"converted/api/interfaces/core_openjscad-esm.IJscadCsgOptions/#optionallayeroptions","text":"layerOptions?: { [layerId: string]: IJscadExtrudeOptions } SVG options per layer. Defined in core/openjscad-esm.ts:548","title":"OptionallayerOptions"},{"location":"converted/api/interfaces/core_openjscad-esm.IJscadCsgOptions/#optionalmaxarcfacet","text":"maxArcFacet?: number The maximum length between points on an arc or circle. Inherited from IJscadCagOptions . maxArcFacet Defined in core/openjscad-esm.ts:518","title":"OptionalmaxArcFacet"},{"location":"converted/api/interfaces/core_openjscad-esm.IJscadCsgOptions/#optionalpointmatchingdistance","text":"pointMatchingDistance?: number Max distance to consider two points as the same. Inherited from IJscadCagOptions . pointMatchingDistance Defined in core/maker.ts:282","title":"OptionalpointMatchingDistance"},{"location":"converted/api/interfaces/core_openjscad-esm.IJscadCsgOptions/#optionalstatuscallback","text":"statusCallback?: IStatusCallback Optional callback to get status during the export. Inherited from IJscadCagOptions . statusCallback Defined in core/openjscad-esm.ts:523","title":"OptionalstatusCallback"},{"location":"converted/api/interfaces/core_openjscad-esm.IJscadCsgOptions/#optionalunits","text":"units?: string Optional unit system to embed in exported file, if the export format allows alternate unit systems. Inherited from IJscadCagOptions . units Defined in core/exporter.ts:19","title":"Optionalunits"},{"location":"converted/api/interfaces/core_openjscad-esm.IJscadCsgOptions/#optionalz","text":"z?: number Optional depth of 3D extrusion. Inherited from IJscadExtrudeOptions . z Defined in core/openjscad-esm.ts:538","title":"Optionalz"},{"location":"converted/api/interfaces/core_openjscad-esm.IJscadCsgOptions/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/interfaces/core_openjscad-esm.IJscadCsgOptions/#on-this-page","text":"Properties accuracy byLayers extrude layerOptions maxArcFacet pointMatchingDistance statusCallback units z Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/interfaces/core_openjscad-esm.IJscadExtrudeOptions/","text":"IJscadExtrudeOptions | Photon Photon Preparing search index... core/openjscad-esm IJscadExtrudeOptions Interface IJscadExtrudeOptions Jscad CAG extrusion options. interface IJscadExtrudeOptions { extrude ?: number; z ?: number; } Hierarchy ( View Summary ) IJscadExtrudeOptions IJscadCsgOptions Defined in core/openjscad-esm.ts:529 Index Properties extrude? z? Properties Optional extrude extrude?: number Optional depth of 3D extrusion. Defined in core/openjscad-esm.ts:533 Optional z z?: number Optional depth of 3D extrusion. Defined in core/openjscad-esm.ts:538 Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Properties extrude z Photon Loading... Generated using TypeDoc","title":"IJscadExtrudeOptions | Photon"},{"location":"converted/api/interfaces/core_openjscad-esm.IJscadExtrudeOptions/#interface-ijscadextrudeoptions","text":"Jscad CAG extrusion options. interface IJscadExtrudeOptions { extrude ?: number; z ?: number; }","title":"Interface IJscadExtrudeOptions"},{"location":"converted/api/interfaces/core_openjscad-esm.IJscadExtrudeOptions/#hierarchy-view-summary","text":"IJscadExtrudeOptions IJscadCsgOptions Defined in core/openjscad-esm.ts:529","title":"Hierarchy (View Summary)"},{"location":"converted/api/interfaces/core_openjscad-esm.IJscadExtrudeOptions/#index","text":"","title":"Index"},{"location":"converted/api/interfaces/core_openjscad-esm.IJscadExtrudeOptions/#properties","text":"extrude? z?","title":"Properties"},{"location":"converted/api/interfaces/core_openjscad-esm.IJscadExtrudeOptions/#properties_1","text":"","title":"Properties"},{"location":"converted/api/interfaces/core_openjscad-esm.IJscadExtrudeOptions/#optionalextrude","text":"extrude?: number Optional depth of 3D extrusion. Defined in core/openjscad-esm.ts:533","title":"Optionalextrude"},{"location":"converted/api/interfaces/core_openjscad-esm.IJscadExtrudeOptions/#optionalz","text":"z?: number Optional depth of 3D extrusion. Defined in core/openjscad-esm.ts:538","title":"Optionalz"},{"location":"converted/api/interfaces/core_openjscad-esm.IJscadExtrudeOptions/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/interfaces/core_openjscad-esm.IJscadExtrudeOptions/#on-this-page","text":"Properties extrude z Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/interfaces/core_openjscad-esm.IJscadScriptOptions/","text":"IJscadScriptOptions | Photon Photon Preparing search index... core/openjscad-esm IJscadScriptOptions Interface IJscadScriptOptions Jscad Script export options. interface IJscadScriptOptions { accuracy ?: number; byLayers ?: boolean; extrude ?: number; functionName ?: string; indent ?: number; layerOptions ?: { [layerId: string]: IJscadExtrudeOptions }; maxArcFacet ?: number; pointMatchingDistance ?: number; statusCallback ?: IStatusCallback ; units ?: string; z ?: number; } Hierarchy ( View Summary ) IJscadCsgOptions IJscadScriptOptions Defined in core/openjscad-esm.ts:554 Index Properties accuracy? byLayers? extrude? functionName? indent? layerOptions? maxArcFacet? pointMatchingDistance? statusCallback? units? z? Properties Optional accuracy accuracy?: number Optional exemplar of number of decimal places. Inherited from IJscadCsgOptions . accuracy Defined in core/exporter.ts:14 Optional byLayers byLayers?: boolean Flag to separate chains by layers. Inherited from IJscadCsgOptions . byLayers Defined in core/openjscad-esm.ts:513 Optional extrude extrude?: number Optional depth of 3D extrusion. Inherited from IJscadCsgOptions . extrude Defined in core/openjscad-esm.ts:533 Optional functionName functionName?: string Optional override of function name, default is \"main\". Defined in core/openjscad-esm.ts:558 Optional indent indent?: number Optional number of spaces to indent. Defined in core/openjscad-esm.ts:563 Optional layerOptions layerOptions?: { [layerId: string]: IJscadExtrudeOptions } SVG options per layer. Inherited from IJscadCsgOptions . layerOptions Defined in core/openjscad-esm.ts:548 Optional maxArcFacet maxArcFacet?: number The maximum length between points on an arc or circle. Inherited from IJscadCsgOptions . maxArcFacet Defined in core/openjscad-esm.ts:518 Optional pointMatchingDistance pointMatchingDistance?: number Max distance to consider two points as the same. Inherited from IJscadCsgOptions . pointMatchingDistance Defined in core/maker.ts:282 Optional statusCallback statusCallback?: IStatusCallback Optional callback to get status during the export. Inherited from IJscadCsgOptions . statusCallback Defined in core/openjscad-esm.ts:523 Optional units units?: string Optional unit system to embed in exported file, if the export format allows alternate unit systems. Inherited from IJscadCsgOptions . units Defined in core/exporter.ts:19 Optional z z?: number Optional depth of 3D extrusion. Inherited from IJscadCsgOptions . z Defined in core/openjscad-esm.ts:538 Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Properties accuracy byLayers extrude functionName indent layerOptions maxArcFacet pointMatchingDistance statusCallback units z Photon Loading... Generated using TypeDoc","title":"IJscadScriptOptions | Photon"},{"location":"converted/api/interfaces/core_openjscad-esm.IJscadScriptOptions/#interface-ijscadscriptoptions","text":"Jscad Script export options. interface IJscadScriptOptions { accuracy ?: number; byLayers ?: boolean; extrude ?: number; functionName ?: string; indent ?: number; layerOptions ?: { [layerId: string]: IJscadExtrudeOptions }; maxArcFacet ?: number; pointMatchingDistance ?: number; statusCallback ?: IStatusCallback ; units ?: string; z ?: number; }","title":"Interface IJscadScriptOptions"},{"location":"converted/api/interfaces/core_openjscad-esm.IJscadScriptOptions/#hierarchy-view-summary","text":"IJscadCsgOptions IJscadScriptOptions Defined in core/openjscad-esm.ts:554","title":"Hierarchy (View Summary)"},{"location":"converted/api/interfaces/core_openjscad-esm.IJscadScriptOptions/#index","text":"","title":"Index"},{"location":"converted/api/interfaces/core_openjscad-esm.IJscadScriptOptions/#properties","text":"accuracy? byLayers? extrude? functionName? indent? layerOptions? maxArcFacet? pointMatchingDistance? statusCallback? units? z?","title":"Properties"},{"location":"converted/api/interfaces/core_openjscad-esm.IJscadScriptOptions/#properties_1","text":"","title":"Properties"},{"location":"converted/api/interfaces/core_openjscad-esm.IJscadScriptOptions/#optionalaccuracy","text":"accuracy?: number Optional exemplar of number of decimal places. Inherited from IJscadCsgOptions . accuracy Defined in core/exporter.ts:14","title":"Optionalaccuracy"},{"location":"converted/api/interfaces/core_openjscad-esm.IJscadScriptOptions/#optionalbylayers","text":"byLayers?: boolean Flag to separate chains by layers. Inherited from IJscadCsgOptions . byLayers Defined in core/openjscad-esm.ts:513","title":"OptionalbyLayers"},{"location":"converted/api/interfaces/core_openjscad-esm.IJscadScriptOptions/#optionalextrude","text":"extrude?: number Optional depth of 3D extrusion. Inherited from IJscadCsgOptions . extrude Defined in core/openjscad-esm.ts:533","title":"Optionalextrude"},{"location":"converted/api/interfaces/core_openjscad-esm.IJscadScriptOptions/#optionalfunctionname","text":"functionName?: string Optional override of function name, default is \"main\". Defined in core/openjscad-esm.ts:558","title":"OptionalfunctionName"},{"location":"converted/api/interfaces/core_openjscad-esm.IJscadScriptOptions/#optionalindent","text":"indent?: number Optional number of spaces to indent. Defined in core/openjscad-esm.ts:563","title":"Optionalindent"},{"location":"converted/api/interfaces/core_openjscad-esm.IJscadScriptOptions/#optionallayeroptions","text":"layerOptions?: { [layerId: string]: IJscadExtrudeOptions } SVG options per layer. Inherited from IJscadCsgOptions . layerOptions Defined in core/openjscad-esm.ts:548","title":"OptionallayerOptions"},{"location":"converted/api/interfaces/core_openjscad-esm.IJscadScriptOptions/#optionalmaxarcfacet","text":"maxArcFacet?: number The maximum length between points on an arc or circle. Inherited from IJscadCsgOptions . maxArcFacet Defined in core/openjscad-esm.ts:518","title":"OptionalmaxArcFacet"},{"location":"converted/api/interfaces/core_openjscad-esm.IJscadScriptOptions/#optionalpointmatchingdistance","text":"pointMatchingDistance?: number Max distance to consider two points as the same. Inherited from IJscadCsgOptions . pointMatchingDistance Defined in core/maker.ts:282","title":"OptionalpointMatchingDistance"},{"location":"converted/api/interfaces/core_openjscad-esm.IJscadScriptOptions/#optionalstatuscallback","text":"statusCallback?: IStatusCallback Optional callback to get status during the export. Inherited from IJscadCsgOptions . statusCallback Defined in core/openjscad-esm.ts:523","title":"OptionalstatusCallback"},{"location":"converted/api/interfaces/core_openjscad-esm.IJscadScriptOptions/#optionalunits","text":"units?: string Optional unit system to embed in exported file, if the export format allows alternate unit systems. Inherited from IJscadCsgOptions . units Defined in core/exporter.ts:19","title":"Optionalunits"},{"location":"converted/api/interfaces/core_openjscad-esm.IJscadScriptOptions/#optionalz","text":"z?: number Optional depth of 3D extrusion. Inherited from IJscadCsgOptions . z Defined in core/openjscad-esm.ts:538","title":"Optionalz"},{"location":"converted/api/interfaces/core_openjscad-esm.IJscadScriptOptions/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/interfaces/core_openjscad-esm.IJscadScriptOptions/#on-this-page","text":"Properties accuracy byLayers extrude functionName indent layerOptions maxArcFacet pointMatchingDistance statusCallback units z Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/interfaces/core_openjscad-esm.IOpenJsCadOptions/","text":"IOpenJsCadOptions | Photon Photon Preparing search index... core/openjscad-esm IOpenJsCadOptions Interface IOpenJsCadOptions OpenJsCad export options. interface IOpenJsCadOptions { accuracy ?: number; extrusion ?: number; facetSize ?: number; functionName ?: string; modelMap ?: IOpenJsCadOptionsMap ; pointMatchingDistance ?: number; removeFromOriginal ?: boolean; units ?: string; } Hierarchy ( View Summary ) IFindLoopsOptions IOpenJsCadOptions Defined in core/openjscad-esm.ts:477 Index Properties accuracy? extrusion? facetSize? functionName? modelMap? pointMatchingDistance? removeFromOriginal? units? Properties Optional accuracy accuracy?: number Optional exemplar of number of decimal places. Inherited from IExportOptions.accuracy Defined in core/exporter.ts:14 Optional extrusion extrusion?: number Optional depth of 3D extrusion. Defined in core/openjscad-esm.ts:481 Optional facetSize facetSize?: number Optional size of curve facets. Defined in core/openjscad-esm.ts:486 Optional functionName functionName?: string Optional override of function name, default is \"main\". Defined in core/openjscad-esm.ts:491 Optional modelMap modelMap?: IOpenJsCadOptionsMap Optional options applied to specific first-child models by model id. Defined in core/openjscad-esm.ts:496 Optional pointMatchingDistance pointMatchingDistance?: number Max distance to consider two points as the same. Inherited from IFindLoopsOptions . pointMatchingDistance Defined in core/maker.ts:282 Optional removeFromOriginal removeFromOriginal?: boolean Flag to remove looped paths from the original model. Inherited from IFindLoopsOptions . removeFromOriginal Defined in core/maker.ts:336 Optional units units?: string Optional unit system to embed in exported file, if the export format allows alternate unit systems. Inherited from IExportOptions.units Defined in core/exporter.ts:19 Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Properties accuracy extrusion facetSize functionName modelMap pointMatchingDistance removeFromOriginal units Photon Loading... Generated using TypeDoc","title":"IOpenJsCadOptions | Photon"},{"location":"converted/api/interfaces/core_openjscad-esm.IOpenJsCadOptions/#interface-iopenjscadoptions","text":"OpenJsCad export options. interface IOpenJsCadOptions { accuracy ?: number; extrusion ?: number; facetSize ?: number; functionName ?: string; modelMap ?: IOpenJsCadOptionsMap ; pointMatchingDistance ?: number; removeFromOriginal ?: boolean; units ?: string; }","title":"Interface IOpenJsCadOptions"},{"location":"converted/api/interfaces/core_openjscad-esm.IOpenJsCadOptions/#hierarchy-view-summary","text":"IFindLoopsOptions IOpenJsCadOptions Defined in core/openjscad-esm.ts:477","title":"Hierarchy (View Summary)"},{"location":"converted/api/interfaces/core_openjscad-esm.IOpenJsCadOptions/#index","text":"","title":"Index"},{"location":"converted/api/interfaces/core_openjscad-esm.IOpenJsCadOptions/#properties","text":"accuracy? extrusion? facetSize? functionName? modelMap? pointMatchingDistance? removeFromOriginal? units?","title":"Properties"},{"location":"converted/api/interfaces/core_openjscad-esm.IOpenJsCadOptions/#properties_1","text":"","title":"Properties"},{"location":"converted/api/interfaces/core_openjscad-esm.IOpenJsCadOptions/#optionalaccuracy","text":"accuracy?: number Optional exemplar of number of decimal places. Inherited from IExportOptions.accuracy Defined in core/exporter.ts:14","title":"Optionalaccuracy"},{"location":"converted/api/interfaces/core_openjscad-esm.IOpenJsCadOptions/#optionalextrusion","text":"extrusion?: number Optional depth of 3D extrusion. Defined in core/openjscad-esm.ts:481","title":"Optionalextrusion"},{"location":"converted/api/interfaces/core_openjscad-esm.IOpenJsCadOptions/#optionalfacetsize","text":"facetSize?: number Optional size of curve facets. Defined in core/openjscad-esm.ts:486","title":"OptionalfacetSize"},{"location":"converted/api/interfaces/core_openjscad-esm.IOpenJsCadOptions/#optionalfunctionname","text":"functionName?: string Optional override of function name, default is \"main\". Defined in core/openjscad-esm.ts:491","title":"OptionalfunctionName"},{"location":"converted/api/interfaces/core_openjscad-esm.IOpenJsCadOptions/#optionalmodelmap","text":"modelMap?: IOpenJsCadOptionsMap Optional options applied to specific first-child models by model id. Defined in core/openjscad-esm.ts:496","title":"OptionalmodelMap"},{"location":"converted/api/interfaces/core_openjscad-esm.IOpenJsCadOptions/#optionalpointmatchingdistance","text":"pointMatchingDistance?: number Max distance to consider two points as the same. Inherited from IFindLoopsOptions . pointMatchingDistance Defined in core/maker.ts:282","title":"OptionalpointMatchingDistance"},{"location":"converted/api/interfaces/core_openjscad-esm.IOpenJsCadOptions/#optionalremovefromoriginal","text":"removeFromOriginal?: boolean Flag to remove looped paths from the original model. Inherited from IFindLoopsOptions . removeFromOriginal Defined in core/maker.ts:336","title":"OptionalremoveFromOriginal"},{"location":"converted/api/interfaces/core_openjscad-esm.IOpenJsCadOptions/#optionalunits","text":"units?: string Optional unit system to embed in exported file, if the export format allows alternate unit systems. Inherited from IExportOptions.units Defined in core/exporter.ts:19","title":"Optionalunits"},{"location":"converted/api/interfaces/core_openjscad-esm.IOpenJsCadOptions/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/interfaces/core_openjscad-esm.IOpenJsCadOptions/#on-this-page","text":"Properties accuracy extrusion facetSize functionName modelMap pointMatchingDistance removeFromOriginal units Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/interfaces/core_openjscad-esm.IOpenJsCadOptionsMap/","text":"IOpenJsCadOptionsMap | Photon Photon Preparing search index... core/openjscad-esm IOpenJsCadOptionsMap Interface IOpenJsCadOptionsMap Map of OpenJsCad export options. Indexable Defined in core/openjscad-esm.ts:502 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"IOpenJsCadOptionsMap | Photon"},{"location":"converted/api/interfaces/core_openjscad-esm.IOpenJsCadOptionsMap/#interface-iopenjscadoptionsmap","text":"Map of OpenJsCad export options.","title":"Interface IOpenJsCadOptionsMap"},{"location":"converted/api/interfaces/core_openjscad-esm.IOpenJsCadOptionsMap/#indexable","text":"Defined in core/openjscad-esm.ts:502","title":"Indexable"},{"location":"converted/api/interfaces/core_openjscad-esm.IOpenJsCadOptionsMap/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/interfaces/core_openjscad-esm.IStatusCallback/","text":"IStatusCallback | Photon Photon Preparing search index... core/openjscad-esm IStatusCallback Interface IStatusCallback IStatusCallback(status: { progress: number }): void #### Parameters status: { progress: number } #### Returns void Defined in core/openjscad-esm.ts:14 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"IStatusCallback | Photon"},{"location":"converted/api/interfaces/core_openjscad-esm.IStatusCallback/#interface-istatuscallback","text":"IStatusCallback(status: { progress: number }): void #### Parameters status: { progress: number } #### Returns void Defined in core/openjscad-esm.ts:14","title":"Interface IStatusCallback"},{"location":"converted/api/interfaces/core_openjscad-esm.IStatusCallback/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/interfaces/core_path.IChain/","text":"IChain | Photon Photon Preparing search index... core/path IChain Interface IChain interface IChain { links : { walkedPath: { pathContext: IPath ; pathId: string } }[]; } Defined in core/path.ts:16 Index Properties links Properties links links: { walkedPath: { pathContext: IPath ; pathId: string } }[] Defined in core/path.ts:17 Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Properties links Photon Loading... Generated using TypeDoc","title":"IChain | Photon"},{"location":"converted/api/interfaces/core_path.IChain/#interface-ichain","text":"interface IChain { links : { walkedPath: { pathContext: IPath ; pathId: string } }[]; } Defined in core/path.ts:16","title":"Interface IChain"},{"location":"converted/api/interfaces/core_path.IChain/#index","text":"","title":"Index"},{"location":"converted/api/interfaces/core_path.IChain/#properties","text":"links","title":"Properties"},{"location":"converted/api/interfaces/core_path.IChain/#properties_1","text":"","title":"Properties"},{"location":"converted/api/interfaces/core_path.IChain/#links","text":"links: { walkedPath: { pathContext: IPath ; pathId: string } }[] Defined in core/path.ts:17","title":"links"},{"location":"converted/api/interfaces/core_path.IChain/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/interfaces/core_path.IChain/#on-this-page","text":"Properties links Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/interfaces/core_path.IWalkPath/","text":"IWalkPath | Photon Photon Preparing search index... core/path IWalkPath Interface IWalkPath interface IWalkPath { pathContext : IPath ; } Defined in core/path.ts:19 Index Properties pathContext Properties pathContext pathContext: IPath Defined in core/path.ts:20 Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Properties pathContext Photon Loading... Generated using TypeDoc","title":"IWalkPath | Photon"},{"location":"converted/api/interfaces/core_path.IWalkPath/#interface-iwalkpath","text":"interface IWalkPath { pathContext : IPath ; } Defined in core/path.ts:19","title":"Interface IWalkPath"},{"location":"converted/api/interfaces/core_path.IWalkPath/#index","text":"","title":"Index"},{"location":"converted/api/interfaces/core_path.IWalkPath/#properties","text":"pathContext","title":"Properties"},{"location":"converted/api/interfaces/core_path.IWalkPath/#properties_1","text":"","title":"Properties"},{"location":"converted/api/interfaces/core_path.IWalkPath/#pathcontext","text":"pathContext: IPath Defined in core/path.ts:20","title":"pathContext"},{"location":"converted/api/interfaces/core_path.IWalkPath/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/interfaces/core_path.IWalkPath/#on-this-page","text":"Properties pathContext Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/interfaces/core_pdf-esm.IPDFRenderOptions/","text":"IPDFRenderOptions | Photon Photon Preparing search index... core/pdf-esm IPDFRenderOptions Interface IPDFRenderOptions PDF rendering options. interface IPDFRenderOptions { accuracy ?: number; fontName ?: string; fontSize ?: number; origin ?: IPoint ; stroke ?: string; units ?: string; } Defined in core/pdf-esm.ts:17 Index Properties accuracy? fontName? fontSize? origin? stroke? units? Properties Optional accuracy accuracy?: number Optional exemplar of number of decimal places. Inherited from IExportOptions.accuracy Defined in core/exporter.ts:14 Optional fontName fontName?: string Font name, see list at https://github.com/foliojs/pdfkit/blob/master/docs/text.coffee.md#fonts Defined in core/pdf-esm.ts:21 Optional fontSize fontSize?: number Font size. Defined in core/pdf-esm.ts:26 Optional origin origin?: IPoint Rendered reference origin. Defined in core/pdf-esm.ts:31 Optional stroke stroke?: string SVG color of the rendered paths. Defined in core/pdf-esm.ts:36 Optional units units?: string Optional unit system to embed in exported file, if the export format allows alternate unit systems. Inherited from IExportOptions.units Defined in core/exporter.ts:19 Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Properties accuracy fontName fontSize origin stroke units Photon Loading... Generated using TypeDoc","title":"IPDFRenderOptions | Photon"},{"location":"converted/api/interfaces/core_pdf-esm.IPDFRenderOptions/#interface-ipdfrenderoptions","text":"PDF rendering options. interface IPDFRenderOptions { accuracy ?: number; fontName ?: string; fontSize ?: number; origin ?: IPoint ; stroke ?: string; units ?: string; } Defined in core/pdf-esm.ts:17","title":"Interface IPDFRenderOptions"},{"location":"converted/api/interfaces/core_pdf-esm.IPDFRenderOptions/#index","text":"","title":"Index"},{"location":"converted/api/interfaces/core_pdf-esm.IPDFRenderOptions/#properties","text":"accuracy? fontName? fontSize? origin? stroke? units?","title":"Properties"},{"location":"converted/api/interfaces/core_pdf-esm.IPDFRenderOptions/#properties_1","text":"","title":"Properties"},{"location":"converted/api/interfaces/core_pdf-esm.IPDFRenderOptions/#optionalaccuracy","text":"accuracy?: number Optional exemplar of number of decimal places. Inherited from IExportOptions.accuracy Defined in core/exporter.ts:14","title":"Optionalaccuracy"},{"location":"converted/api/interfaces/core_pdf-esm.IPDFRenderOptions/#optionalfontname","text":"fontName?: string Font name, see list at https://github.com/foliojs/pdfkit/blob/master/docs/text.coffee.md#fonts Defined in core/pdf-esm.ts:21","title":"OptionalfontName"},{"location":"converted/api/interfaces/core_pdf-esm.IPDFRenderOptions/#optionalfontsize","text":"fontSize?: number Font size. Defined in core/pdf-esm.ts:26","title":"OptionalfontSize"},{"location":"converted/api/interfaces/core_pdf-esm.IPDFRenderOptions/#optionalorigin","text":"origin?: IPoint Rendered reference origin. Defined in core/pdf-esm.ts:31","title":"Optionalorigin"},{"location":"converted/api/interfaces/core_pdf-esm.IPDFRenderOptions/#optionalstroke","text":"stroke?: string SVG color of the rendered paths. Defined in core/pdf-esm.ts:36","title":"Optionalstroke"},{"location":"converted/api/interfaces/core_pdf-esm.IPDFRenderOptions/#optionalunits","text":"units?: string Optional unit system to embed in exported file, if the export format allows alternate unit systems. Inherited from IExportOptions.units Defined in core/exporter.ts:19","title":"Optionalunits"},{"location":"converted/api/interfaces/core_pdf-esm.IPDFRenderOptions/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/interfaces/core_pdf-esm.IPDFRenderOptions/#on-this-page","text":"Properties accuracy fontName fontSize origin stroke units Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/interfaces/core_schema.IBezierRange/","text":"IBezierRange | Photon Photon Preparing search index... core/schema IBezierRange Interface IBezierRange Bezier t values for an arc path segment in a bezier curve. interface IBezierRange { endT : number; startT : number; } Defined in core/schema.ts:56 Index Properties endT startT Properties endT endT: number The bezier t-value at the end point. Defined in core/schema.ts:60 startT startT: number The bezier t-value at the starting point. Defined in core/schema.ts:58 Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Properties endT startT Photon Loading... Generated using TypeDoc","title":"IBezierRange | Photon"},{"location":"converted/api/interfaces/core_schema.IBezierRange/#interface-ibezierrange","text":"Bezier t values for an arc path segment in a bezier curve. interface IBezierRange { endT : number; startT : number; } Defined in core/schema.ts:56","title":"Interface IBezierRange"},{"location":"converted/api/interfaces/core_schema.IBezierRange/#index","text":"","title":"Index"},{"location":"converted/api/interfaces/core_schema.IBezierRange/#properties","text":"endT startT","title":"Properties"},{"location":"converted/api/interfaces/core_schema.IBezierRange/#properties_1","text":"","title":"Properties"},{"location":"converted/api/interfaces/core_schema.IBezierRange/#endt","text":"endT: number The bezier t-value at the end point. Defined in core/schema.ts:60","title":"endT"},{"location":"converted/api/interfaces/core_schema.IBezierRange/#startt","text":"startT: number The bezier t-value at the starting point. Defined in core/schema.ts:58","title":"startT"},{"location":"converted/api/interfaces/core_schema.IBezierRange/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/interfaces/core_schema.IBezierRange/#on-this-page","text":"Properties endT startT Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/interfaces/core_schema.ICaption/","text":"ICaption | Photon Photon Preparing search index... core/schema ICaption Interface ICaption Text annotation, diplayable natively to the output format. interface ICaption { anchor : IPathLine ; text : string; } Defined in core/schema.ts:71 Index Properties anchor text Properties anchor anchor: IPathLine Invisible line to which the text is aligned. Defined in core/schema.ts:75 text text: string Caption text. Defined in core/schema.ts:73 Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Properties anchor text Photon Loading... Generated using TypeDoc","title":"ICaption | Photon"},{"location":"converted/api/interfaces/core_schema.ICaption/#interface-icaption","text":"Text annotation, diplayable natively to the output format. interface ICaption { anchor : IPathLine ; text : string; } Defined in core/schema.ts:71","title":"Interface ICaption"},{"location":"converted/api/interfaces/core_schema.ICaption/#index","text":"","title":"Index"},{"location":"converted/api/interfaces/core_schema.ICaption/#properties","text":"anchor text","title":"Properties"},{"location":"converted/api/interfaces/core_schema.ICaption/#properties_1","text":"","title":"Properties"},{"location":"converted/api/interfaces/core_schema.ICaption/#anchor","text":"anchor: IPathLine Invisible line to which the text is aligned. Defined in core/schema.ts:75","title":"anchor"},{"location":"converted/api/interfaces/core_schema.ICaption/#text","text":"text: string Caption text. Defined in core/schema.ts:73","title":"text"},{"location":"converted/api/interfaces/core_schema.ICaption/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/interfaces/core_schema.ICaption/#on-this-page","text":"Properties anchor text Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/interfaces/core_schema.IModel/","text":"IModel | Photon Photon Preparing search index... core/schema IModel Interface IModel A model is a composite object which may contain a map of paths, or a map of models recursively. interface IModel { caption ?: ICaption ; exporterOptions ?: { [exporterName: string]: any }; layer ?: string; models ?: IModelMap ; notes ?: string; origin ?: IPoint ; paths ?: IPathMap ; type ?: string; units ?: string; } Hierarchy ( View Summary ) IModel IBoundingHex Implemented by Belt BezierCurve BoltCircle BoltRectangle ConnectTheDots Dogbone Dome Ellipse EllipticArc Holes Oval OvalArc Polygon Rectangle Ring RoundRectangle SCurve Slot Square Star Text Defined in core/schema.ts:91 Index Properties caption? exporterOptions? layer? models? notes? origin? paths? type? units? Properties Optional caption caption?: ICaption Optional Caption object. Defined in core/schema.ts:107 Optional exporterOptions exporterOptions?: { [exporterName: string]: any } Optional exporter options for this model. Defined in core/schema.ts:109 Optional layer layer?: string Optional layer of this model. Defined in core/schema.ts:105 Optional models models?: IModelMap Optional map of models within this model. Defined in core/schema.ts:99 Optional notes notes?: string An author may wish to add notes to this model instance. Defined in core/schema.ts:103 Optional origin origin?: IPoint Optional origin location of this model. Defined in core/schema.ts:93 Optional paths paths?: IPathMap Optional map of path objects in this model. Defined in core/schema.ts:97 Optional type type?: string A model may want to specify its type, but this value is not employed yet. Defined in core/schema.ts:95 Optional units units?: string Optional unit system of this model. See UnitType for possible values. Defined in core/schema.ts:101 Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Properties caption exporterOptions layer models notes origin paths type units Photon Loading... Generated using TypeDoc","title":"IModel | Photon"},{"location":"converted/api/interfaces/core_schema.IModel/#interface-imodel","text":"A model is a composite object which may contain a map of paths, or a map of models recursively. interface IModel { caption ?: ICaption ; exporterOptions ?: { [exporterName: string]: any }; layer ?: string; models ?: IModelMap ; notes ?: string; origin ?: IPoint ; paths ?: IPathMap ; type ?: string; units ?: string; }","title":"Interface IModel"},{"location":"converted/api/interfaces/core_schema.IModel/#hierarchy-view-summary","text":"IModel IBoundingHex","title":"Hierarchy (View Summary)"},{"location":"converted/api/interfaces/core_schema.IModel/#implemented-by","text":"Belt BezierCurve BoltCircle BoltRectangle ConnectTheDots Dogbone Dome Ellipse EllipticArc Holes Oval OvalArc Polygon Rectangle Ring RoundRectangle SCurve Slot Square Star Text Defined in core/schema.ts:91","title":"Implemented by"},{"location":"converted/api/interfaces/core_schema.IModel/#index","text":"","title":"Index"},{"location":"converted/api/interfaces/core_schema.IModel/#properties","text":"caption? exporterOptions? layer? models? notes? origin? paths? type? units?","title":"Properties"},{"location":"converted/api/interfaces/core_schema.IModel/#properties_1","text":"","title":"Properties"},{"location":"converted/api/interfaces/core_schema.IModel/#optionalcaption","text":"caption?: ICaption Optional Caption object. Defined in core/schema.ts:107","title":"Optionalcaption"},{"location":"converted/api/interfaces/core_schema.IModel/#optionalexporteroptions","text":"exporterOptions?: { [exporterName: string]: any } Optional exporter options for this model. Defined in core/schema.ts:109","title":"OptionalexporterOptions"},{"location":"converted/api/interfaces/core_schema.IModel/#optionallayer","text":"layer?: string Optional layer of this model. Defined in core/schema.ts:105","title":"Optionallayer"},{"location":"converted/api/interfaces/core_schema.IModel/#optionalmodels","text":"models?: IModelMap Optional map of models within this model. Defined in core/schema.ts:99","title":"Optionalmodels"},{"location":"converted/api/interfaces/core_schema.IModel/#optionalnotes","text":"notes?: string An author may wish to add notes to this model instance. Defined in core/schema.ts:103","title":"Optionalnotes"},{"location":"converted/api/interfaces/core_schema.IModel/#optionalorigin","text":"origin?: IPoint Optional origin location of this model. Defined in core/schema.ts:93","title":"Optionalorigin"},{"location":"converted/api/interfaces/core_schema.IModel/#optionalpaths","text":"paths?: IPathMap Optional map of path objects in this model. Defined in core/schema.ts:97","title":"Optionalpaths"},{"location":"converted/api/interfaces/core_schema.IModel/#optionaltype","text":"type?: string A model may want to specify its type, but this value is not employed yet. Defined in core/schema.ts:95","title":"Optionaltype"},{"location":"converted/api/interfaces/core_schema.IModel/#optionalunits","text":"units?: string Optional unit system of this model. See UnitType for possible values. Defined in core/schema.ts:101","title":"Optionalunits"},{"location":"converted/api/interfaces/core_schema.IModel/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/interfaces/core_schema.IModel/#on-this-page","text":"Properties caption exporterOptions layer models notes origin paths type units Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/interfaces/core_schema.IModelMap/","text":"IModelMap | Photon Photon Preparing search index... core/schema IModelMap Interface IModelMap Model objects by id. Indexable Defined in core/schema.ts:86 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"IModelMap | Photon"},{"location":"converted/api/interfaces/core_schema.IModelMap/#interface-imodelmap","text":"Model objects by id.","title":"Interface IModelMap"},{"location":"converted/api/interfaces/core_schema.IModelMap/#indexable","text":"Defined in core/schema.ts:86","title":"Indexable"},{"location":"converted/api/interfaces/core_schema.IModelMap/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/interfaces/core_schema.IPath/","text":"IPath | Photon Photon Preparing search index... core/schema IPath Interface IPath A line, curved line or other simple two dimensional shape. interface IPath { layer ?: string; origin : IPoint ; type : string; } Hierarchy ( View Summary ) IPath DeletedPathInfo IPathRemoved IPathDirectional IPathLine IPathCircle IPathArcInBezierCurve Defined in core/schema.ts:18 Index Properties layer? origin type Properties Optional layer layer?: string Optional layer of this path. Defined in core/schema.ts:24 origin origin: IPoint The main point of reference for this path. Defined in core/schema.ts:22 type type: string The type of the path, e.g. \"line\", \"circle\", or \"arc\". These strings are enumerated in pathType. Defined in core/schema.ts:20 Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Properties layer origin type Photon Loading... Generated using TypeDoc","title":"IPath | Photon"},{"location":"converted/api/interfaces/core_schema.IPath/#interface-ipath","text":"A line, curved line or other simple two dimensional shape. interface IPath { layer ?: string; origin : IPoint ; type : string; }","title":"Interface IPath"},{"location":"converted/api/interfaces/core_schema.IPath/#hierarchy-view-summary","text":"IPath DeletedPathInfo IPathRemoved IPathDirectional IPathLine IPathCircle IPathArcInBezierCurve Defined in core/schema.ts:18","title":"Hierarchy (View Summary)"},{"location":"converted/api/interfaces/core_schema.IPath/#index","text":"","title":"Index"},{"location":"converted/api/interfaces/core_schema.IPath/#properties","text":"layer? origin type","title":"Properties"},{"location":"converted/api/interfaces/core_schema.IPath/#properties_1","text":"","title":"Properties"},{"location":"converted/api/interfaces/core_schema.IPath/#optionallayer","text":"layer?: string Optional layer of this path. Defined in core/schema.ts:24","title":"Optionallayer"},{"location":"converted/api/interfaces/core_schema.IPath/#origin","text":"origin: IPoint The main point of reference for this path. Defined in core/schema.ts:22","title":"origin"},{"location":"converted/api/interfaces/core_schema.IPath/#type","text":"type: string The type of the path, e.g. \"line\", \"circle\", or \"arc\". These strings are enumerated in pathType. Defined in core/schema.ts:20","title":"type"},{"location":"converted/api/interfaces/core_schema.IPath/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/interfaces/core_schema.IPath/#on-this-page","text":"Properties layer origin type Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/interfaces/core_schema.IPathArc/","text":"IPathArc | Photon Photon Preparing search index... core/schema IPathArc Interface IPathArc An arc path. interface IPathArc { endAngle : number; layer ?: string; origin : IPoint ; radius : number; startAngle : number; type : string; } Hierarchy ( View Summary ) IPathCircle IPathArc Implemented by Arc Defined in core/schema.ts:40 Index Properties endAngle layer? origin radius startAngle type Properties endAngle endAngle: number The angle (in degrees) to end drawing the arc, in polar (counter-clockwise) direction. Defined in core/schema.ts:44 Optional layer layer?: string Optional layer of this path. Inherited from IPathCircle . layer Defined in core/schema.ts:24 origin origin: IPoint The main point of reference for this path. Inherited from IPathCircle . origin Defined in core/schema.ts:22 radius radius: number The radius of the circle. Inherited from IPathCircle . radius Defined in core/schema.ts:36 startAngle startAngle: number The angle (in degrees) to begin drawing the arc, in polar (counter-clockwise) direction. Defined in core/schema.ts:42 type type: string The type of the path, e.g. \"line\", \"circle\", or \"arc\". These strings are enumerated in pathType. Inherited from IPathCircle . type Defined in core/schema.ts:20 Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Properties endAngle layer origin radius startAngle type Photon Loading... Generated using TypeDoc","title":"IPathArc | Photon"},{"location":"converted/api/interfaces/core_schema.IPathArc/#interface-ipatharc","text":"An arc path. interface IPathArc { endAngle : number; layer ?: string; origin : IPoint ; radius : number; startAngle : number; type : string; }","title":"Interface IPathArc"},{"location":"converted/api/interfaces/core_schema.IPathArc/#hierarchy-view-summary","text":"IPathCircle IPathArc","title":"Hierarchy (View Summary)"},{"location":"converted/api/interfaces/core_schema.IPathArc/#implemented-by","text":"Arc Defined in core/schema.ts:40","title":"Implemented by"},{"location":"converted/api/interfaces/core_schema.IPathArc/#index","text":"","title":"Index"},{"location":"converted/api/interfaces/core_schema.IPathArc/#properties","text":"endAngle layer? origin radius startAngle type","title":"Properties"},{"location":"converted/api/interfaces/core_schema.IPathArc/#properties_1","text":"","title":"Properties"},{"location":"converted/api/interfaces/core_schema.IPathArc/#endangle","text":"endAngle: number The angle (in degrees) to end drawing the arc, in polar (counter-clockwise) direction. Defined in core/schema.ts:44","title":"endAngle"},{"location":"converted/api/interfaces/core_schema.IPathArc/#optionallayer","text":"layer?: string Optional layer of this path. Inherited from IPathCircle . layer Defined in core/schema.ts:24","title":"Optionallayer"},{"location":"converted/api/interfaces/core_schema.IPathArc/#origin","text":"origin: IPoint The main point of reference for this path. Inherited from IPathCircle . origin Defined in core/schema.ts:22","title":"origin"},{"location":"converted/api/interfaces/core_schema.IPathArc/#radius","text":"radius: number The radius of the circle. Inherited from IPathCircle . radius Defined in core/schema.ts:36","title":"radius"},{"location":"converted/api/interfaces/core_schema.IPathArc/#startangle","text":"startAngle: number The angle (in degrees) to begin drawing the arc, in polar (counter-clockwise) direction. Defined in core/schema.ts:42","title":"startAngle"},{"location":"converted/api/interfaces/core_schema.IPathArc/#type","text":"type: string The type of the path, e.g. \"line\", \"circle\", or \"arc\". These strings are enumerated in pathType. Inherited from IPathCircle . type Defined in core/schema.ts:20","title":"type"},{"location":"converted/api/interfaces/core_schema.IPathArc/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/interfaces/core_schema.IPathArc/#on-this-page","text":"Properties endAngle layer origin radius startAngle type Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/interfaces/core_schema.IPathArcInBezierCurve/","text":"IPathArcInBezierCurve | Photon Photon Preparing search index... core/schema IPathArcInBezierCurve Interface IPathArcInBezierCurve An arc path segment in a bezier curve. interface IPathArcInBezierCurve { bezierData : IBezierRange ; layer ?: string; origin : IPoint ; type : string; } Hierarchy ( View Summary ) IPath IPathArcInBezierCurve Defined in core/schema.ts:64 Index Properties bezierData layer? origin type Properties bezierData bezierData: IBezierRange Defined in core/schema.ts:65 Optional layer layer?: string Optional layer of this path. Inherited from IPath . layer Defined in core/schema.ts:24 origin origin: IPoint The main point of reference for this path. Inherited from IPath . origin Defined in core/schema.ts:22 type type: string The type of the path, e.g. \"line\", \"circle\", or \"arc\". These strings are enumerated in pathType. Inherited from IPath . type Defined in core/schema.ts:20 Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Properties bezierData layer origin type Photon Loading... Generated using TypeDoc","title":"IPathArcInBezierCurve | Photon"},{"location":"converted/api/interfaces/core_schema.IPathArcInBezierCurve/#interface-ipatharcinbeziercurve","text":"An arc path segment in a bezier curve. interface IPathArcInBezierCurve { bezierData : IBezierRange ; layer ?: string; origin : IPoint ; type : string; }","title":"Interface IPathArcInBezierCurve"},{"location":"converted/api/interfaces/core_schema.IPathArcInBezierCurve/#hierarchy-view-summary","text":"IPath IPathArcInBezierCurve Defined in core/schema.ts:64","title":"Hierarchy (View Summary)"},{"location":"converted/api/interfaces/core_schema.IPathArcInBezierCurve/#index","text":"","title":"Index"},{"location":"converted/api/interfaces/core_schema.IPathArcInBezierCurve/#properties","text":"bezierData layer? origin type","title":"Properties"},{"location":"converted/api/interfaces/core_schema.IPathArcInBezierCurve/#properties_1","text":"","title":"Properties"},{"location":"converted/api/interfaces/core_schema.IPathArcInBezierCurve/#bezierdata","text":"bezierData: IBezierRange Defined in core/schema.ts:65","title":"bezierData"},{"location":"converted/api/interfaces/core_schema.IPathArcInBezierCurve/#optionallayer","text":"layer?: string Optional layer of this path. Inherited from IPath . layer Defined in core/schema.ts:24","title":"Optionallayer"},{"location":"converted/api/interfaces/core_schema.IPathArcInBezierCurve/#origin","text":"origin: IPoint The main point of reference for this path. Inherited from IPath . origin Defined in core/schema.ts:22","title":"origin"},{"location":"converted/api/interfaces/core_schema.IPathArcInBezierCurve/#type","text":"type: string The type of the path, e.g. \"line\", \"circle\", or \"arc\". These strings are enumerated in pathType. Inherited from IPath . type Defined in core/schema.ts:20","title":"type"},{"location":"converted/api/interfaces/core_schema.IPathArcInBezierCurve/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/interfaces/core_schema.IPathArcInBezierCurve/#on-this-page","text":"Properties bezierData layer origin type Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/interfaces/core_schema.IPathBezierSeed/","text":"IPathBezierSeed | Photon Photon Preparing search index... core/schema IPathBezierSeed Interface IPathBezierSeed A bezier seed defines the endpoints and control points of a bezier curve. interface IPathBezierSeed { controls : IPoint []; end : IPoint ; layer ?: string; origin : IPoint ; parentRange ?: IBezierRange ; type : string; } Hierarchy ( View Summary ) IPathLine IPathBezierSeed Implemented by BezierSeed Defined in core/schema.ts:48 Index Properties controls end layer? origin parentRange? type Properties controls controls: IPoint [] The bezier control points. One point for quadratic, 2 points for cubic. Defined in core/schema.ts:50 end end: IPoint The end point defining the line. The start point is the origin. Inherited from IPathLine . end Defined in core/schema.ts:30 Optional layer layer?: string Optional layer of this path. Inherited from IPathLine . layer Defined in core/schema.ts:24 origin origin: IPoint The main point of reference for this path. Inherited from IPathLine . origin Defined in core/schema.ts:22 Optional parentRange parentRange?: IBezierRange T values of the parent if this is a child that represents a split. Defined in core/schema.ts:52 type type: string The type of the path, e.g. \"line\", \"circle\", or \"arc\". These strings are enumerated in pathType. Inherited from IPathLine . type Defined in core/schema.ts:20 Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Properties controls end layer origin parentRange type Photon Loading... Generated using TypeDoc","title":"IPathBezierSeed | Photon"},{"location":"converted/api/interfaces/core_schema.IPathBezierSeed/#interface-ipathbezierseed","text":"A bezier seed defines the endpoints and control points of a bezier curve. interface IPathBezierSeed { controls : IPoint []; end : IPoint ; layer ?: string; origin : IPoint ; parentRange ?: IBezierRange ; type : string; }","title":"Interface IPathBezierSeed"},{"location":"converted/api/interfaces/core_schema.IPathBezierSeed/#hierarchy-view-summary","text":"IPathLine IPathBezierSeed","title":"Hierarchy (View Summary)"},{"location":"converted/api/interfaces/core_schema.IPathBezierSeed/#implemented-by","text":"BezierSeed Defined in core/schema.ts:48","title":"Implemented by"},{"location":"converted/api/interfaces/core_schema.IPathBezierSeed/#index","text":"","title":"Index"},{"location":"converted/api/interfaces/core_schema.IPathBezierSeed/#properties","text":"controls end layer? origin parentRange? type","title":"Properties"},{"location":"converted/api/interfaces/core_schema.IPathBezierSeed/#properties_1","text":"","title":"Properties"},{"location":"converted/api/interfaces/core_schema.IPathBezierSeed/#controls","text":"controls: IPoint [] The bezier control points. One point for quadratic, 2 points for cubic. Defined in core/schema.ts:50","title":"controls"},{"location":"converted/api/interfaces/core_schema.IPathBezierSeed/#end","text":"end: IPoint The end point defining the line. The start point is the origin. Inherited from IPathLine . end Defined in core/schema.ts:30","title":"end"},{"location":"converted/api/interfaces/core_schema.IPathBezierSeed/#optionallayer","text":"layer?: string Optional layer of this path. Inherited from IPathLine . layer Defined in core/schema.ts:24","title":"Optionallayer"},{"location":"converted/api/interfaces/core_schema.IPathBezierSeed/#origin","text":"origin: IPoint The main point of reference for this path. Inherited from IPathLine . origin Defined in core/schema.ts:22","title":"origin"},{"location":"converted/api/interfaces/core_schema.IPathBezierSeed/#optionalparentrange","text":"parentRange?: IBezierRange T values of the parent if this is a child that represents a split. Defined in core/schema.ts:52","title":"OptionalparentRange"},{"location":"converted/api/interfaces/core_schema.IPathBezierSeed/#type","text":"type: string The type of the path, e.g. \"line\", \"circle\", or \"arc\". These strings are enumerated in pathType. Inherited from IPathLine . type Defined in core/schema.ts:20","title":"type"},{"location":"converted/api/interfaces/core_schema.IPathBezierSeed/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/interfaces/core_schema.IPathBezierSeed/#on-this-page","text":"Properties controls end layer origin parentRange type Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/interfaces/core_schema.IPathCircle/","text":"IPathCircle | Photon Photon Preparing search index... core/schema IPathCircle Interface IPathCircle A circle path. interface IPathCircle { layer ?: string; origin : IPoint ; radius : number; type : string; } Hierarchy ( View Summary ) IPath IPathCircle IPathArc Implemented by Circle Defined in core/schema.ts:34 Index Properties layer? origin radius type Properties Optional layer layer?: string Optional layer of this path. Inherited from IPath . layer Defined in core/schema.ts:24 origin origin: IPoint The main point of reference for this path. Inherited from IPath . origin Defined in core/schema.ts:22 radius radius: number The radius of the circle. Defined in core/schema.ts:36 type type: string The type of the path, e.g. \"line\", \"circle\", or \"arc\". These strings are enumerated in pathType. Inherited from IPath . type Defined in core/schema.ts:20 Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Properties layer origin radius type Photon Loading... Generated using TypeDoc","title":"IPathCircle | Photon"},{"location":"converted/api/interfaces/core_schema.IPathCircle/#interface-ipathcircle","text":"A circle path. interface IPathCircle { layer ?: string; origin : IPoint ; radius : number; type : string; }","title":"Interface IPathCircle"},{"location":"converted/api/interfaces/core_schema.IPathCircle/#hierarchy-view-summary","text":"IPath IPathCircle IPathArc","title":"Hierarchy (View Summary)"},{"location":"converted/api/interfaces/core_schema.IPathCircle/#implemented-by","text":"Circle Defined in core/schema.ts:34","title":"Implemented by"},{"location":"converted/api/interfaces/core_schema.IPathCircle/#index","text":"","title":"Index"},{"location":"converted/api/interfaces/core_schema.IPathCircle/#properties","text":"layer? origin radius type","title":"Properties"},{"location":"converted/api/interfaces/core_schema.IPathCircle/#properties_1","text":"","title":"Properties"},{"location":"converted/api/interfaces/core_schema.IPathCircle/#optionallayer","text":"layer?: string Optional layer of this path. Inherited from IPath . layer Defined in core/schema.ts:24","title":"Optionallayer"},{"location":"converted/api/interfaces/core_schema.IPathCircle/#origin","text":"origin: IPoint The main point of reference for this path. Inherited from IPath . origin Defined in core/schema.ts:22","title":"origin"},{"location":"converted/api/interfaces/core_schema.IPathCircle/#radius","text":"radius: number The radius of the circle. Defined in core/schema.ts:36","title":"radius"},{"location":"converted/api/interfaces/core_schema.IPathCircle/#type","text":"type: string The type of the path, e.g. \"line\", \"circle\", or \"arc\". These strings are enumerated in pathType. Inherited from IPath . type Defined in core/schema.ts:20","title":"type"},{"location":"converted/api/interfaces/core_schema.IPathCircle/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/interfaces/core_schema.IPathCircle/#on-this-page","text":"Properties layer origin radius type Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/interfaces/core_schema.IPathIntersection/","text":"IPathIntersection | Photon Photon Preparing search index... core/schema IPathIntersection Interface IPathIntersection An intersection of two paths. interface IPathIntersection { intersectionPoints : IPoint []; path1Angles ?: number[]; path2Angles ?: number[]; } Defined in core/schema.ts:115 Index Properties intersectionPoints path1Angles? path2Angles? Properties intersectionPoints intersectionPoints: IPoint [] The points of intersection. Defined in core/schema.ts:117 Optional path1Angles path1Angles?: number[] The angle of the first path at the point of intersection. Defined in core/schema.ts:119 Optional path2Angles path2Angles?: number[] The angle of the second path at the point of intersection. Defined in core/schema.ts:121 Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Properties intersectionPoints path1Angles path2Angles Photon Loading... Generated using TypeDoc","title":"IPathIntersection | Photon"},{"location":"converted/api/interfaces/core_schema.IPathIntersection/#interface-ipathintersection","text":"An intersection of two paths. interface IPathIntersection { intersectionPoints : IPoint []; path1Angles ?: number[]; path2Angles ?: number[]; } Defined in core/schema.ts:115","title":"Interface IPathIntersection"},{"location":"converted/api/interfaces/core_schema.IPathIntersection/#index","text":"","title":"Index"},{"location":"converted/api/interfaces/core_schema.IPathIntersection/#properties","text":"intersectionPoints path1Angles? path2Angles?","title":"Properties"},{"location":"converted/api/interfaces/core_schema.IPathIntersection/#properties_1","text":"","title":"Properties"},{"location":"converted/api/interfaces/core_schema.IPathIntersection/#intersectionpoints","text":"intersectionPoints: IPoint [] The points of intersection. Defined in core/schema.ts:117","title":"intersectionPoints"},{"location":"converted/api/interfaces/core_schema.IPathIntersection/#optionalpath1angles","text":"path1Angles?: number[] The angle of the first path at the point of intersection. Defined in core/schema.ts:119","title":"Optionalpath1Angles"},{"location":"converted/api/interfaces/core_schema.IPathIntersection/#optionalpath2angles","text":"path2Angles?: number[] The angle of the second path at the point of intersection. Defined in core/schema.ts:121","title":"Optionalpath2Angles"},{"location":"converted/api/interfaces/core_schema.IPathIntersection/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/interfaces/core_schema.IPathIntersection/#on-this-page","text":"Properties intersectionPoints path1Angles path2Angles Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/interfaces/core_schema.IPathIntersectionOptions/","text":"IPathIntersectionOptions | Photon Photon Preparing search index... core/schema IPathIntersectionOptions Interface IPathIntersectionOptions Options for path intersection. interface IPathIntersectionOptions { excludeTangents ?: boolean; out_AreOverlapped ?: boolean; path1Offset ?: IPoint ; path2Offset ?: IPoint ; } Defined in core/schema.ts:125 Index Properties excludeTangents? out_AreOverlapped? path1Offset? path2Offset? Properties Optional excludeTangents excludeTangents?: boolean Optional boolean to only return deep intersections, i.e. not tangent. Defined in core/schema.ts:127 Optional out_AreOverlapped out_AreOverlapped?: boolean Optional output variable which will be true if the paths are overlapped. Defined in core/schema.ts:129 Optional path1Offset path1Offset?: IPoint Optional offset of the first path. Defined in core/schema.ts:131 Optional path2Offset path2Offset?: IPoint Optional offset of the second path. Defined in core/schema.ts:133 Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Properties excludeTangents out_AreOverlapped path1Offset path2Offset Photon Loading... Generated using TypeDoc","title":"IPathIntersectionOptions | Photon"},{"location":"converted/api/interfaces/core_schema.IPathIntersectionOptions/#interface-ipathintersectionoptions","text":"Options for path intersection. interface IPathIntersectionOptions { excludeTangents ?: boolean; out_AreOverlapped ?: boolean; path1Offset ?: IPoint ; path2Offset ?: IPoint ; } Defined in core/schema.ts:125","title":"Interface IPathIntersectionOptions"},{"location":"converted/api/interfaces/core_schema.IPathIntersectionOptions/#index","text":"","title":"Index"},{"location":"converted/api/interfaces/core_schema.IPathIntersectionOptions/#properties","text":"excludeTangents? out_AreOverlapped? path1Offset? path2Offset?","title":"Properties"},{"location":"converted/api/interfaces/core_schema.IPathIntersectionOptions/#properties_1","text":"","title":"Properties"},{"location":"converted/api/interfaces/core_schema.IPathIntersectionOptions/#optionalexcludetangents","text":"excludeTangents?: boolean Optional boolean to only return deep intersections, i.e. not tangent. Defined in core/schema.ts:127","title":"OptionalexcludeTangents"},{"location":"converted/api/interfaces/core_schema.IPathIntersectionOptions/#optionalout_areoverlapped","text":"out_AreOverlapped?: boolean Optional output variable which will be true if the paths are overlapped. Defined in core/schema.ts:129","title":"Optionalout_AreOverlapped"},{"location":"converted/api/interfaces/core_schema.IPathIntersectionOptions/#optionalpath1offset","text":"path1Offset?: IPoint Optional offset of the first path. Defined in core/schema.ts:131","title":"Optionalpath1Offset"},{"location":"converted/api/interfaces/core_schema.IPathIntersectionOptions/#optionalpath2offset","text":"path2Offset?: IPoint Optional offset of the second path. Defined in core/schema.ts:133","title":"Optionalpath2Offset"},{"location":"converted/api/interfaces/core_schema.IPathIntersectionOptions/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/interfaces/core_schema.IPathIntersectionOptions/#on-this-page","text":"Properties excludeTangents out_AreOverlapped path1Offset path2Offset Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/interfaces/core_schema.IPathLine/","text":"IPathLine | Photon Photon Preparing search index... core/schema IPathLine Interface IPathLine A line path. interface IPathLine { end : IPoint ; layer ?: string; origin : IPoint ; type : string; } Hierarchy ( View Summary ) IPath IPathLine IPathBezierSeed Implemented by Chord Line Parallel Defined in core/schema.ts:28 Index Properties end layer? origin type Properties end end: IPoint The end point defining the line. The start point is the origin. Defined in core/schema.ts:30 Optional layer layer?: string Optional layer of this path. Inherited from IPath . layer Defined in core/schema.ts:24 origin origin: IPoint The main point of reference for this path. Inherited from IPath . origin Defined in core/schema.ts:22 type type: string The type of the path, e.g. \"line\", \"circle\", or \"arc\". These strings are enumerated in pathType. Inherited from IPath . type Defined in core/schema.ts:20 Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Properties end layer origin type Photon Loading... Generated using TypeDoc","title":"IPathLine | Photon"},{"location":"converted/api/interfaces/core_schema.IPathLine/#interface-ipathline","text":"A line path. interface IPathLine { end : IPoint ; layer ?: string; origin : IPoint ; type : string; }","title":"Interface IPathLine"},{"location":"converted/api/interfaces/core_schema.IPathLine/#hierarchy-view-summary","text":"IPath IPathLine IPathBezierSeed","title":"Hierarchy (View Summary)"},{"location":"converted/api/interfaces/core_schema.IPathLine/#implemented-by","text":"Chord Line Parallel Defined in core/schema.ts:28","title":"Implemented by"},{"location":"converted/api/interfaces/core_schema.IPathLine/#index","text":"","title":"Index"},{"location":"converted/api/interfaces/core_schema.IPathLine/#properties","text":"end layer? origin type","title":"Properties"},{"location":"converted/api/interfaces/core_schema.IPathLine/#properties_1","text":"","title":"Properties"},{"location":"converted/api/interfaces/core_schema.IPathLine/#end","text":"end: IPoint The end point defining the line. The start point is the origin. Defined in core/schema.ts:30","title":"end"},{"location":"converted/api/interfaces/core_schema.IPathLine/#optionallayer","text":"layer?: string Optional layer of this path. Inherited from IPath . layer Defined in core/schema.ts:24","title":"Optionallayer"},{"location":"converted/api/interfaces/core_schema.IPathLine/#origin","text":"origin: IPoint The main point of reference for this path. Inherited from IPath . origin Defined in core/schema.ts:22","title":"origin"},{"location":"converted/api/interfaces/core_schema.IPathLine/#type","text":"type: string The type of the path, e.g. \"line\", \"circle\", or \"arc\". These strings are enumerated in pathType. Inherited from IPath . type Defined in core/schema.ts:20","title":"type"},{"location":"converted/api/interfaces/core_schema.IPathLine/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/interfaces/core_schema.IPathLine/#on-this-page","text":"Properties end layer origin type Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/interfaces/core_schema.IPathMap/","text":"IPathMap | Photon Photon Preparing search index... core/schema IPathMap Interface IPathMap Path objects by id. Indexable Defined in core/schema.ts:81 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"IPathMap | Photon"},{"location":"converted/api/interfaces/core_schema.IPathMap/#interface-ipathmap","text":"Path objects by id.","title":"Interface IPathMap"},{"location":"converted/api/interfaces/core_schema.IPathMap/#indexable","text":"Defined in core/schema.ts:81","title":"Indexable"},{"location":"converted/api/interfaces/core_schema.IPathMap/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/interfaces/core_schema.IPoint/","text":"IPoint | Photon Photon Preparing search index... core/schema IPoint Interface IPoint An x-y point in a two-dimensional space. Implemented as an array with 2 elements. The first element is x, the second element is y. Indexable Defined in core/schema.ts:11 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"IPoint | Photon"},{"location":"converted/api/interfaces/core_schema.IPoint/#interface-ipoint","text":"An x-y point in a two-dimensional space. Implemented as an array with 2 elements. The first element is x, the second element is y.","title":"Interface IPoint"},{"location":"converted/api/interfaces/core_schema.IPoint/#indexable","text":"Defined in core/schema.ts:11","title":"Indexable"},{"location":"converted/api/interfaces/core_schema.IPoint/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/interfaces/core_svg-esm.IFlowAnnotation/","text":"IFlowAnnotation | Photon Photon Preparing search index... core/svg-esm IFlowAnnotation Interface IFlowAnnotation interface IFlowAnnotation { size : number; } Defined in core/svg-esm.ts:360 Index Properties size Properties size size: number Defined in core/svg-esm.ts:361 Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Properties size Photon Loading... Generated using TypeDoc","title":"IFlowAnnotation | Photon"},{"location":"converted/api/interfaces/core_svg-esm.IFlowAnnotation/#interface-iflowannotation","text":"interface IFlowAnnotation { size : number; } Defined in core/svg-esm.ts:360","title":"Interface IFlowAnnotation"},{"location":"converted/api/interfaces/core_svg-esm.IFlowAnnotation/#index","text":"","title":"Index"},{"location":"converted/api/interfaces/core_svg-esm.IFlowAnnotation/#properties","text":"size","title":"Properties"},{"location":"converted/api/interfaces/core_svg-esm.IFlowAnnotation/#properties_1","text":"","title":"Properties"},{"location":"converted/api/interfaces/core_svg-esm.IFlowAnnotation/#size","text":"size: number Defined in core/svg-esm.ts:361","title":"size"},{"location":"converted/api/interfaces/core_svg-esm.IFlowAnnotation/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/interfaces/core_svg-esm.IFlowAnnotation/#on-this-page","text":"Properties size Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/interfaces/core_svg-esm.IPathDataByLayerMap/","text":"IPathDataByLayerMap | Photon Photon Preparing search index... core/svg-esm IPathDataByLayerMap Interface IPathDataByLayerMap Indexable Defined in core/svg-esm.ts:31 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"IPathDataByLayerMap | Photon"},{"location":"converted/api/interfaces/core_svg-esm.IPathDataByLayerMap/#interface-ipathdatabylayermap","text":"","title":"Interface IPathDataByLayerMap"},{"location":"converted/api/interfaces/core_svg-esm.IPathDataByLayerMap/#indexable","text":"Defined in core/svg-esm.ts:31","title":"Indexable"},{"location":"converted/api/interfaces/core_svg-esm.IPathDataByLayerMap/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/interfaces/core_svg-esm.ISVGElementRenderOptions/","text":"ISVGElementRenderOptions | Photon Photon Preparing search index... core/svg-esm ISVGElementRenderOptions Interface ISVGElementRenderOptions interface ISVGElementRenderOptions { className ?: string; cssStyle ?: string; fill ?: string; stroke ?: string; strokeWidth ?: string; } Hierarchy ( View Summary ) ISVGElementRenderOptions ISVGRenderOptions Defined in core/svg-esm.ts:352 Index Properties className? cssStyle? fill? stroke? strokeWidth? Properties Optional className className?: string Defined in core/svg-esm.ts:357 Optional cssStyle cssStyle?: string Defined in core/svg-esm.ts:356 Optional fill fill?: string Defined in core/svg-esm.ts:353 Optional stroke stroke?: string Defined in core/svg-esm.ts:354 Optional strokeWidth strokeWidth?: string Defined in core/svg-esm.ts:355 Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Properties className cssStyle fill stroke strokeWidth Photon Loading... Generated using TypeDoc","title":"ISVGElementRenderOptions | Photon"},{"location":"converted/api/interfaces/core_svg-esm.ISVGElementRenderOptions/#interface-isvgelementrenderoptions","text":"interface ISVGElementRenderOptions { className ?: string; cssStyle ?: string; fill ?: string; stroke ?: string; strokeWidth ?: string; }","title":"Interface ISVGElementRenderOptions"},{"location":"converted/api/interfaces/core_svg-esm.ISVGElementRenderOptions/#hierarchy-view-summary","text":"ISVGElementRenderOptions ISVGRenderOptions Defined in core/svg-esm.ts:352","title":"Hierarchy (View Summary)"},{"location":"converted/api/interfaces/core_svg-esm.ISVGElementRenderOptions/#index","text":"","title":"Index"},{"location":"converted/api/interfaces/core_svg-esm.ISVGElementRenderOptions/#properties","text":"className? cssStyle? fill? stroke? strokeWidth?","title":"Properties"},{"location":"converted/api/interfaces/core_svg-esm.ISVGElementRenderOptions/#properties_1","text":"","title":"Properties"},{"location":"converted/api/interfaces/core_svg-esm.ISVGElementRenderOptions/#optionalclassname","text":"className?: string Defined in core/svg-esm.ts:357","title":"OptionalclassName"},{"location":"converted/api/interfaces/core_svg-esm.ISVGElementRenderOptions/#optionalcssstyle","text":"cssStyle?: string Defined in core/svg-esm.ts:356","title":"OptionalcssStyle"},{"location":"converted/api/interfaces/core_svg-esm.ISVGElementRenderOptions/#optionalfill","text":"fill?: string Defined in core/svg-esm.ts:353","title":"Optionalfill"},{"location":"converted/api/interfaces/core_svg-esm.ISVGElementRenderOptions/#optionalstroke","text":"stroke?: string Defined in core/svg-esm.ts:354","title":"Optionalstroke"},{"location":"converted/api/interfaces/core_svg-esm.ISVGElementRenderOptions/#optionalstrokewidth","text":"strokeWidth?: string Defined in core/svg-esm.ts:355","title":"OptionalstrokeWidth"},{"location":"converted/api/interfaces/core_svg-esm.ISVGElementRenderOptions/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/interfaces/core_svg-esm.ISVGElementRenderOptions/#on-this-page","text":"Properties className cssStyle fill stroke strokeWidth Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/interfaces/core_svg-esm.ISVGImportOptions/","text":"ISVGImportOptions | Photon Photon Preparing search index... core/svg-esm ISVGImportOptions Interface ISVGImportOptions interface ISVGImportOptions { bezierAccuracy ?: number; } Defined in core/svg-esm.ts:37 Index Properties bezierAccuracy? Properties Optional bezierAccuracy bezierAccuracy?: number Defined in core/svg-esm.ts:38 Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Properties bezierAccuracy Photon Loading... Generated using TypeDoc","title":"ISVGImportOptions | Photon"},{"location":"converted/api/interfaces/core_svg-esm.ISVGImportOptions/#interface-isvgimportoptions","text":"interface ISVGImportOptions { bezierAccuracy ?: number; } Defined in core/svg-esm.ts:37","title":"Interface ISVGImportOptions"},{"location":"converted/api/interfaces/core_svg-esm.ISVGImportOptions/#index","text":"","title":"Index"},{"location":"converted/api/interfaces/core_svg-esm.ISVGImportOptions/#properties","text":"bezierAccuracy?","title":"Properties"},{"location":"converted/api/interfaces/core_svg-esm.ISVGImportOptions/#properties_1","text":"","title":"Properties"},{"location":"converted/api/interfaces/core_svg-esm.ISVGImportOptions/#optionalbezieraccuracy","text":"bezierAccuracy?: number Defined in core/svg-esm.ts:38","title":"OptionalbezierAccuracy"},{"location":"converted/api/interfaces/core_svg-esm.ISVGImportOptions/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/interfaces/core_svg-esm.ISVGImportOptions/#on-this-page","text":"Properties bezierAccuracy Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/interfaces/core_svg-esm.ISVGPathDataRenderOptions/","text":"ISVGPathDataRenderOptions | Photon Photon Preparing search index... core/svg-esm ISVGPathDataRenderOptions Interface ISVGPathDataRenderOptions interface ISVGPathDataRenderOptions { accuracy ?: number; byLayers ?: boolean; fillRule ?: \"evenodd\" | \"nonzero\"; origin ?: IPoint ; } Defined in core/svg-esm.ts:267 Index Properties accuracy? byLayers? fillRule? origin? Properties Optional accuracy accuracy?: number Defined in core/svg-esm.ts:268 Optional byLayers byLayers?: boolean Defined in core/svg-esm.ts:269 Optional fillRule fillRule?: \"evenodd\" | \"nonzero\" Defined in core/svg-esm.ts:270 Optional origin origin?: IPoint Defined in core/svg-esm.ts:271 Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Properties accuracy byLayers fillRule origin Photon Loading... Generated using TypeDoc","title":"ISVGPathDataRenderOptions | Photon"},{"location":"converted/api/interfaces/core_svg-esm.ISVGPathDataRenderOptions/#interface-isvgpathdatarenderoptions","text":"interface ISVGPathDataRenderOptions { accuracy ?: number; byLayers ?: boolean; fillRule ?: \"evenodd\" | \"nonzero\"; origin ?: IPoint ; } Defined in core/svg-esm.ts:267","title":"Interface ISVGPathDataRenderOptions"},{"location":"converted/api/interfaces/core_svg-esm.ISVGPathDataRenderOptions/#index","text":"","title":"Index"},{"location":"converted/api/interfaces/core_svg-esm.ISVGPathDataRenderOptions/#properties","text":"accuracy? byLayers? fillRule? origin?","title":"Properties"},{"location":"converted/api/interfaces/core_svg-esm.ISVGPathDataRenderOptions/#properties_1","text":"","title":"Properties"},{"location":"converted/api/interfaces/core_svg-esm.ISVGPathDataRenderOptions/#optionalaccuracy","text":"accuracy?: number Defined in core/svg-esm.ts:268","title":"Optionalaccuracy"},{"location":"converted/api/interfaces/core_svg-esm.ISVGPathDataRenderOptions/#optionalbylayers","text":"byLayers?: boolean Defined in core/svg-esm.ts:269","title":"OptionalbyLayers"},{"location":"converted/api/interfaces/core_svg-esm.ISVGPathDataRenderOptions/#optionalfillrule","text":"fillRule?: \"evenodd\" | \"nonzero\" Defined in core/svg-esm.ts:270","title":"OptionalfillRule"},{"location":"converted/api/interfaces/core_svg-esm.ISVGPathDataRenderOptions/#optionalorigin","text":"origin?: IPoint Defined in core/svg-esm.ts:271","title":"Optionalorigin"},{"location":"converted/api/interfaces/core_svg-esm.ISVGPathDataRenderOptions/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/interfaces/core_svg-esm.ISVGPathDataRenderOptions/#on-this-page","text":"Properties accuracy byLayers fillRule origin Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/interfaces/core_svg-esm.ISVGRenderOptions/","text":"ISVGRenderOptions | Photon Photon Preparing search index... core/svg-esm ISVGRenderOptions Interface ISVGRenderOptions interface ISVGRenderOptions { accuracy ?: number; annotate ?: boolean; className ?: string; cssStyle ?: string; fill ?: string; fillRule ?: \"evenodd\" | \"nonzero\"; flow ?: IFlowAnnotation ; fontSize ?: string; layerOptions ?: Record ISVGElementRenderOptions >; origin ?: IPoint ; scale ?: number; scalingStroke ?: boolean; stroke ?: string; strokeWidth ?: string; svgAttrs ?: IXmlTagAttrs ; units ?: string; useSvgPathOnly ?: boolean; viewBox ?: boolean; } Hierarchy ( View Summary ) ISVGElementRenderOptions ISVGRenderOptions Defined in core/svg-esm.ts:364 Index Properties accuracy? annotate? className? cssStyle? fill? fillRule? flow? fontSize? layerOptions? origin? scale? scalingStroke? stroke? strokeWidth? svgAttrs? units? useSvgPathOnly? viewBox? Properties Optional accuracy accuracy?: number Optional exemplar of number of decimal places. Overrides IExportOptions.accuracy Defined in core/svg-esm.ts:365 Optional annotate annotate?: boolean Defined in core/svg-esm.ts:369 Optional className className?: string Inherited from ISVGElementRenderOptions . className Defined in core/svg-esm.ts:357 Optional cssStyle cssStyle?: string Inherited from ISVGElementRenderOptions . cssStyle Defined in core/svg-esm.ts:356 Optional fill fill?: string Inherited from ISVGElementRenderOptions . fill Defined in core/svg-esm.ts:353 Optional fillRule fillRule?: \"evenodd\" | \"nonzero\" Defined in core/svg-esm.ts:376 Optional flow flow?: IFlowAnnotation Defined in core/svg-esm.ts:370 Optional fontSize fontSize?: string Defined in core/svg-esm.ts:367 Optional layerOptions layerOptions?: Record ISVGElementRenderOptions > Defined in core/svg-esm.ts:375 Optional origin origin?: IPoint Defined in core/svg-esm.ts:371 Optional scale scale?: number Defined in core/svg-esm.ts:368 Optional scalingStroke scalingStroke?: boolean Defined in core/svg-esm.ts:374 Optional stroke stroke?: string Inherited from ISVGElementRenderOptions . stroke Defined in core/svg-esm.ts:354 Optional strokeWidth strokeWidth?: string Inherited from ISVGElementRenderOptions . strokeWidth Defined in core/svg-esm.ts:355 Optional svgAttrs svgAttrs?: IXmlTagAttrs Defined in core/svg-esm.ts:366 Optional units units?: string Optional unit system to embed in exported file, if the export format allows alternate unit systems. Inherited from IExportOptions.units Defined in core/exporter.ts:19 Optional useSvgPathOnly useSvgPathOnly?: boolean Defined in core/svg-esm.ts:372 Optional viewBox viewBox?: boolean Defined in core/svg-esm.ts:373 Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Properties accuracy annotate className cssStyle fill fillRule flow fontSize layerOptions origin scale scalingStroke stroke strokeWidth svgAttrs units useSvgPathOnly viewBox Photon Loading... Generated using TypeDoc","title":"ISVGRenderOptions | Photon"},{"location":"converted/api/interfaces/core_svg-esm.ISVGRenderOptions/#interface-isvgrenderoptions","text":"interface ISVGRenderOptions { accuracy ?: number; annotate ?: boolean; className ?: string; cssStyle ?: string; fill ?: string; fillRule ?: \"evenodd\" | \"nonzero\"; flow ?: IFlowAnnotation ; fontSize ?: string; layerOptions ?: Record ISVGElementRenderOptions >; origin ?: IPoint ; scale ?: number; scalingStroke ?: boolean; stroke ?: string; strokeWidth ?: string; svgAttrs ?: IXmlTagAttrs ; units ?: string; useSvgPathOnly ?: boolean; viewBox ?: boolean; }","title":"Interface ISVGRenderOptions"},{"location":"converted/api/interfaces/core_svg-esm.ISVGRenderOptions/#hierarchy-view-summary","text":"ISVGElementRenderOptions ISVGRenderOptions Defined in core/svg-esm.ts:364","title":"Hierarchy (View Summary)"},{"location":"converted/api/interfaces/core_svg-esm.ISVGRenderOptions/#index","text":"","title":"Index"},{"location":"converted/api/interfaces/core_svg-esm.ISVGRenderOptions/#properties","text":"accuracy? annotate? className? cssStyle? fill? fillRule? flow? fontSize? layerOptions? origin? scale? scalingStroke? stroke? strokeWidth? svgAttrs? units? useSvgPathOnly? viewBox?","title":"Properties"},{"location":"converted/api/interfaces/core_svg-esm.ISVGRenderOptions/#properties_1","text":"","title":"Properties"},{"location":"converted/api/interfaces/core_svg-esm.ISVGRenderOptions/#optionalaccuracy","text":"accuracy?: number Optional exemplar of number of decimal places. Overrides IExportOptions.accuracy Defined in core/svg-esm.ts:365","title":"Optionalaccuracy"},{"location":"converted/api/interfaces/core_svg-esm.ISVGRenderOptions/#optionalannotate","text":"annotate?: boolean Defined in core/svg-esm.ts:369","title":"Optionalannotate"},{"location":"converted/api/interfaces/core_svg-esm.ISVGRenderOptions/#optionalclassname","text":"className?: string Inherited from ISVGElementRenderOptions . className Defined in core/svg-esm.ts:357","title":"OptionalclassName"},{"location":"converted/api/interfaces/core_svg-esm.ISVGRenderOptions/#optionalcssstyle","text":"cssStyle?: string Inherited from ISVGElementRenderOptions . cssStyle Defined in core/svg-esm.ts:356","title":"OptionalcssStyle"},{"location":"converted/api/interfaces/core_svg-esm.ISVGRenderOptions/#optionalfill","text":"fill?: string Inherited from ISVGElementRenderOptions . fill Defined in core/svg-esm.ts:353","title":"Optionalfill"},{"location":"converted/api/interfaces/core_svg-esm.ISVGRenderOptions/#optionalfillrule","text":"fillRule?: \"evenodd\" | \"nonzero\" Defined in core/svg-esm.ts:376","title":"OptionalfillRule"},{"location":"converted/api/interfaces/core_svg-esm.ISVGRenderOptions/#optionalflow","text":"flow?: IFlowAnnotation Defined in core/svg-esm.ts:370","title":"Optionalflow"},{"location":"converted/api/interfaces/core_svg-esm.ISVGRenderOptions/#optionalfontsize","text":"fontSize?: string Defined in core/svg-esm.ts:367","title":"OptionalfontSize"},{"location":"converted/api/interfaces/core_svg-esm.ISVGRenderOptions/#optionallayeroptions","text":"layerOptions?: Record ISVGElementRenderOptions > Defined in core/svg-esm.ts:375","title":"OptionallayerOptions"},{"location":"converted/api/interfaces/core_svg-esm.ISVGRenderOptions/#optionalorigin","text":"origin?: IPoint Defined in core/svg-esm.ts:371","title":"Optionalorigin"},{"location":"converted/api/interfaces/core_svg-esm.ISVGRenderOptions/#optionalscale","text":"scale?: number Defined in core/svg-esm.ts:368","title":"Optionalscale"},{"location":"converted/api/interfaces/core_svg-esm.ISVGRenderOptions/#optionalscalingstroke","text":"scalingStroke?: boolean Defined in core/svg-esm.ts:374","title":"OptionalscalingStroke"},{"location":"converted/api/interfaces/core_svg-esm.ISVGRenderOptions/#optionalstroke","text":"stroke?: string Inherited from ISVGElementRenderOptions . stroke Defined in core/svg-esm.ts:354","title":"Optionalstroke"},{"location":"converted/api/interfaces/core_svg-esm.ISVGRenderOptions/#optionalstrokewidth","text":"strokeWidth?: string Inherited from ISVGElementRenderOptions . strokeWidth Defined in core/svg-esm.ts:355","title":"OptionalstrokeWidth"},{"location":"converted/api/interfaces/core_svg-esm.ISVGRenderOptions/#optionalsvgattrs","text":"svgAttrs?: IXmlTagAttrs Defined in core/svg-esm.ts:366","title":"OptionalsvgAttrs"},{"location":"converted/api/interfaces/core_svg-esm.ISVGRenderOptions/#optionalunits","text":"units?: string Optional unit system to embed in exported file, if the export format allows alternate unit systems. Inherited from IExportOptions.units Defined in core/exporter.ts:19","title":"Optionalunits"},{"location":"converted/api/interfaces/core_svg-esm.ISVGRenderOptions/#optionalusesvgpathonly","text":"useSvgPathOnly?: boolean Defined in core/svg-esm.ts:372","title":"OptionaluseSvgPathOnly"},{"location":"converted/api/interfaces/core_svg-esm.ISVGRenderOptions/#optionalviewbox","text":"viewBox?: boolean Defined in core/svg-esm.ts:373","title":"OptionalviewBox"},{"location":"converted/api/interfaces/core_svg-esm.ISVGRenderOptions/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/interfaces/core_svg-esm.ISVGRenderOptions/#on-this-page","text":"Properties accuracy annotate className cssStyle fill fillRule flow fontSize layerOptions origin scale scalingStroke stroke strokeWidth svgAttrs units useSvgPathOnly viewBox Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/interfaces/core_svg-esm.SvgUnitConversion/","text":"SvgUnitConversion | Photon Photon Preparing search index... core/svg-esm SvgUnitConversion Interface SvgUnitConversion Indexable [unit: string]: { scaleConversion: number; svgUnitType: string } Defined in core/svg-esm.ts:379 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"SvgUnitConversion | Photon"},{"location":"converted/api/interfaces/core_svg-esm.SvgUnitConversion/#interface-svgunitconversion","text":"","title":"Interface SvgUnitConversion"},{"location":"converted/api/interfaces/core_svg-esm.SvgUnitConversion/#indexable","text":"[unit: string]: { scaleConversion: number; svgUnitType: string } Defined in core/svg-esm.ts:379","title":"Indexable"},{"location":"converted/api/interfaces/core_svg-esm.SvgUnitConversion/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/interfaces/core_xml.IXmlTagAttrs/","text":"IXmlTagAttrs | Photon Photon Preparing search index... core/xml IXmlTagAttrs Interface IXmlTagAttrs Attributes for an XML tag. Indexable Defined in core/xml.ts:2 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"IXmlTagAttrs | Photon"},{"location":"converted/api/interfaces/core_xml.IXmlTagAttrs/#interface-ixmltagattrs","text":"Attributes for an XML tag.","title":"Interface IXmlTagAttrs"},{"location":"converted/api/interfaces/core_xml.IXmlTagAttrs/#indexable","text":"Defined in core/xml.ts:2","title":"Indexable"},{"location":"converted/api/interfaces/core_xml.IXmlTagAttrs/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/interfaces/types_jscad.StlSerializer/","text":"StlSerializer | Photon Photon Preparing search index... types/jscad StlSerializer Interface StlSerializer STL serializer interface interface StlSerializer { serialize ( csg: export= . CSG , options: { binary: boolean; statusCallback?: (status: { progress: number }) => void; }, ): string; } Defined in types/jscad.d.ts:96 Index Methods serialize Methods serialize serialize( csg: export= . CSG , options: { binary: boolean; statusCallback?: (status: { progress: number }) => void; }, ): string #### Parameters csg: export= . CSG options: { binary: boolean; statusCallback?: (status: { progress: number }) => void } #### Returns string Defined in types/jscad.d.ts:97 Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Methods serialize Photon Loading... Generated using TypeDoc","title":"StlSerializer | Photon"},{"location":"converted/api/interfaces/types_jscad.StlSerializer/#interface-stlserializer","text":"STL serializer interface interface StlSerializer { serialize ( csg: export= . CSG , options: { binary: boolean; statusCallback?: (status: { progress: number }) => void; }, ): string; } Defined in types/jscad.d.ts:96","title":"Interface StlSerializer"},{"location":"converted/api/interfaces/types_jscad.StlSerializer/#index","text":"","title":"Index"},{"location":"converted/api/interfaces/types_jscad.StlSerializer/#methods","text":"serialize","title":"Methods"},{"location":"converted/api/interfaces/types_jscad.StlSerializer/#methods_1","text":"","title":"Methods"},{"location":"converted/api/interfaces/types_jscad.StlSerializer/#serialize","text":"serialize( csg: export= . CSG , options: { binary: boolean; statusCallback?: (status: { progress: number }) => void; }, ): string #### Parameters csg: export= . CSG options: { binary: boolean; statusCallback?: (status: { progress: number }) => void } #### Returns string Defined in types/jscad.d.ts:97","title":"serialize"},{"location":"converted/api/interfaces/types_jscad.StlSerializer/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/interfaces/types_jscad.StlSerializer/#on-this-page","text":"Methods serialize Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/interfaces/types_jscad.export_.CSG.IArcOptions/","text":"IArcOptions | Photon Photon Preparing search index... types/jscad export= CSG IArcOptions Interface IArcOptions Options for creating an arc interface IArcOptions { center : number[]; endangle : number; radius : number; resolution ?: number; startangle : number; } Defined in types/jscad.d.ts:64 Index Properties center endangle radius resolution? startangle Properties center center: number[] Defined in types/jscad.d.ts:65 endangle endangle: number Defined in types/jscad.d.ts:68 radius radius: number Defined in types/jscad.d.ts:66 Optional resolution resolution?: number Defined in types/jscad.d.ts:69 startangle startangle: number Defined in types/jscad.d.ts:67 Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Properties center endangle radius resolution startangle Photon Loading... Generated using TypeDoc","title":"IArcOptions | Photon"},{"location":"converted/api/interfaces/types_jscad.export_.CSG.IArcOptions/#interface-iarcoptions","text":"Options for creating an arc interface IArcOptions { center : number[]; endangle : number; radius : number; resolution ?: number; startangle : number; } Defined in types/jscad.d.ts:64","title":"Interface IArcOptions"},{"location":"converted/api/interfaces/types_jscad.export_.CSG.IArcOptions/#index","text":"","title":"Index"},{"location":"converted/api/interfaces/types_jscad.export_.CSG.IArcOptions/#properties","text":"center endangle radius resolution? startangle","title":"Properties"},{"location":"converted/api/interfaces/types_jscad.export_.CSG.IArcOptions/#properties_1","text":"","title":"Properties"},{"location":"converted/api/interfaces/types_jscad.export_.CSG.IArcOptions/#center","text":"center: number[] Defined in types/jscad.d.ts:65","title":"center"},{"location":"converted/api/interfaces/types_jscad.export_.CSG.IArcOptions/#endangle","text":"endangle: number Defined in types/jscad.d.ts:68","title":"endangle"},{"location":"converted/api/interfaces/types_jscad.export_.CSG.IArcOptions/#radius","text":"radius: number Defined in types/jscad.d.ts:66","title":"radius"},{"location":"converted/api/interfaces/types_jscad.export_.CSG.IArcOptions/#optionalresolution","text":"resolution?: number Defined in types/jscad.d.ts:69","title":"Optionalresolution"},{"location":"converted/api/interfaces/types_jscad.export_.CSG.IArcOptions/#startangle","text":"startangle: number Defined in types/jscad.d.ts:67","title":"startangle"},{"location":"converted/api/interfaces/types_jscad.export_.CSG.IArcOptions/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/interfaces/types_jscad.export_.CSG.IArcOptions/#on-this-page","text":"Properties center endangle radius resolution startangle Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/interfaces/types_jscad.export_.CSG.ICircleOptions/","text":"ICircleOptions | Photon Photon Preparing search index... types/jscad export= CSG ICircleOptions Interface ICircleOptions Options for creating a circle interface ICircleOptions { center : number[]; radius : number; resolution ?: number; } Defined in types/jscad.d.ts:55 Index Properties center radius resolution? Properties center center: number[] Defined in types/jscad.d.ts:56 radius radius: number Defined in types/jscad.d.ts:57 Optional resolution resolution?: number Defined in types/jscad.d.ts:58 Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Properties center radius resolution Photon Loading... Generated using TypeDoc","title":"ICircleOptions | Photon"},{"location":"converted/api/interfaces/types_jscad.export_.CSG.ICircleOptions/#interface-icircleoptions","text":"Options for creating a circle interface ICircleOptions { center : number[]; radius : number; resolution ?: number; } Defined in types/jscad.d.ts:55","title":"Interface ICircleOptions"},{"location":"converted/api/interfaces/types_jscad.export_.CSG.ICircleOptions/#index","text":"","title":"Index"},{"location":"converted/api/interfaces/types_jscad.export_.CSG.ICircleOptions/#properties","text":"center radius resolution?","title":"Properties"},{"location":"converted/api/interfaces/types_jscad.export_.CSG.ICircleOptions/#properties_1","text":"","title":"Properties"},{"location":"converted/api/interfaces/types_jscad.export_.CSG.ICircleOptions/#center","text":"center: number[] Defined in types/jscad.d.ts:56","title":"center"},{"location":"converted/api/interfaces/types_jscad.export_.CSG.ICircleOptions/#radius","text":"radius: number Defined in types/jscad.d.ts:57","title":"radius"},{"location":"converted/api/interfaces/types_jscad.export_.CSG.ICircleOptions/#optionalresolution","text":"resolution?: number Defined in types/jscad.d.ts:58","title":"Optionalresolution"},{"location":"converted/api/interfaces/types_jscad.export_.CSG.ICircleOptions/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/interfaces/types_jscad.export_.CSG.ICircleOptions/#on-this-page","text":"Properties center radius resolution Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/interfaces/types_jscad.export_.CSG.IEllpiticalArcOptions/","text":"IEllpiticalArcOptions | Photon Photon Preparing search index... types/jscad export= CSG IEllpiticalArcOptions Interface IEllpiticalArcOptions Options for creating an elliptical arc interface IEllpiticalArcOptions { clockwise : boolean; large : boolean; radius : number; resolution ?: number; } Defined in types/jscad.d.ts:75 Index Properties clockwise large radius resolution? Properties clockwise clockwise: boolean Defined in types/jscad.d.ts:77 large large: boolean Defined in types/jscad.d.ts:78 radius radius: number Defined in types/jscad.d.ts:76 Optional resolution resolution?: number Defined in types/jscad.d.ts:79 Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Properties clockwise large radius resolution Photon Loading... Generated using TypeDoc","title":"IEllpiticalArcOptions | Photon"},{"location":"converted/api/interfaces/types_jscad.export_.CSG.IEllpiticalArcOptions/#interface-iellpiticalarcoptions","text":"Options for creating an elliptical arc interface IEllpiticalArcOptions { clockwise : boolean; large : boolean; radius : number; resolution ?: number; } Defined in types/jscad.d.ts:75","title":"Interface IEllpiticalArcOptions"},{"location":"converted/api/interfaces/types_jscad.export_.CSG.IEllpiticalArcOptions/#index","text":"","title":"Index"},{"location":"converted/api/interfaces/types_jscad.export_.CSG.IEllpiticalArcOptions/#properties","text":"clockwise large radius resolution?","title":"Properties"},{"location":"converted/api/interfaces/types_jscad.export_.CSG.IEllpiticalArcOptions/#properties_1","text":"","title":"Properties"},{"location":"converted/api/interfaces/types_jscad.export_.CSG.IEllpiticalArcOptions/#clockwise","text":"clockwise: boolean Defined in types/jscad.d.ts:77","title":"clockwise"},{"location":"converted/api/interfaces/types_jscad.export_.CSG.IEllpiticalArcOptions/#large","text":"large: boolean Defined in types/jscad.d.ts:78","title":"large"},{"location":"converted/api/interfaces/types_jscad.export_.CSG.IEllpiticalArcOptions/#radius","text":"radius: number Defined in types/jscad.d.ts:76","title":"radius"},{"location":"converted/api/interfaces/types_jscad.export_.CSG.IEllpiticalArcOptions/#optionalresolution","text":"resolution?: number Defined in types/jscad.d.ts:79","title":"Optionalresolution"},{"location":"converted/api/interfaces/types_jscad.export_.CSG.IEllpiticalArcOptions/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/interfaces/types_jscad.export_.CSG.IEllpiticalArcOptions/#on-this-page","text":"Properties clockwise large radius resolution Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/modules/","text":"index | Photon Photon Preparing search index... index Module index References angle \u2192 core/angle Belt \u2192 Belt BezierCurve \u2192 BezierCurve BezierSeed \u2192 BezierSeed BoltCircle \u2192 BoltCircle BoltRectangle \u2192 BoltRectangle chain \u2192 core/chain collect \u2192 core/collect ConnectTheDots \u2192 ConnectTheDots deadend \u2192 core/deadend Dogbone \u2192 Dogbone Dome \u2192 Dome dxf \u2192 core/dxf Ellipse \u2192 Ellipse EllipticArc \u2192 EllipticArc equal \u2192 core/equal exporter \u2192 core/exporter-index fillet \u2192 core/fillet-path filletChain \u2192 core/fillet-chain Holes \u2192 Holes importer \u2192 core/importer intersect \u2192 core/intersect IXmlTagAttrs \u2192 IXmlTagAttrs layout \u2192 core/layout maker \u2192 core/maker measure \u2192 core/measure model \u2192 core/model models \u2192 models openjscad \u2192 core/openjscad-esm Oval \u2192 Oval OvalArc \u2192 OvalArc path \u2192 core/path paths \u2192 core/paths pdf \u2192 core/pdf-esm point \u2192 core/point Polygon \u2192 Polygon Rectangle \u2192 Rectangle Ring \u2192 Ring RoundRectangle \u2192 RoundRectangle schema \u2192 core/schema SCurve \u2192 SCurve Slot \u2192 Slot Square \u2192 Square Star \u2192 Star svg \u2192 core/svg-esm Text \u2192 Text units \u2192 core/units XmlTag \u2192 XmlTag Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page References angle Belt BezierCurve BezierSeed BoltCircle BoltRectangle chain collect ConnectTheDots deadend Dogbone Dome dxf Ellipse EllipticArc equal exporter fillet filletChain Holes importer intersect IXmlTagAttrs layout maker measure model models openjscad Oval OvalArc path paths pdf point Polygon Rectangle Ring RoundRectangle schema SCurve Slot Square Star svg Text units XmlTag Photon Loading... Generated using TypeDoc","title":"index | Photon"},{"location":"converted/api/modules/#module-index","text":"","title":"Module index"},{"location":"converted/api/modules/#references","text":"angle \u2192 core/angle Belt \u2192 Belt BezierCurve \u2192 BezierCurve BezierSeed \u2192 BezierSeed BoltCircle \u2192 BoltCircle BoltRectangle \u2192 BoltRectangle chain \u2192 core/chain collect \u2192 core/collect ConnectTheDots \u2192 ConnectTheDots deadend \u2192 core/deadend Dogbone \u2192 Dogbone Dome \u2192 Dome dxf \u2192 core/dxf Ellipse \u2192 Ellipse EllipticArc \u2192 EllipticArc equal \u2192 core/equal exporter \u2192 core/exporter-index fillet \u2192 core/fillet-path filletChain \u2192 core/fillet-chain Holes \u2192 Holes importer \u2192 core/importer intersect \u2192 core/intersect IXmlTagAttrs \u2192 IXmlTagAttrs layout \u2192 core/layout maker \u2192 core/maker measure \u2192 core/measure model \u2192 core/model models \u2192 models openjscad \u2192 core/openjscad-esm Oval \u2192 Oval OvalArc \u2192 OvalArc path \u2192 core/path paths \u2192 core/paths pdf \u2192 core/pdf-esm point \u2192 core/point Polygon \u2192 Polygon Rectangle \u2192 Rectangle Ring \u2192 Ring RoundRectangle \u2192 RoundRectangle schema \u2192 core/schema SCurve \u2192 SCurve Slot \u2192 Slot Square \u2192 Square Star \u2192 Star svg \u2192 core/svg-esm Text \u2192 Text units \u2192 core/units XmlTag \u2192 XmlTag","title":"References"},{"location":"converted/api/modules/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/modules/#on-this-page","text":"References angle Belt BezierCurve BezierSeed BoltCircle BoltRectangle chain collect ConnectTheDots deadend Dogbone Dome dxf Ellipse EllipticArc equal exporter fillet filletChain Holes importer intersect IXmlTagAttrs layout maker measure model models openjscad Oval OvalArc path paths pdf point Polygon Rectangle Ring RoundRectangle schema SCurve Slot Square Star svg Text units XmlTag Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/modules/core_angle/","text":"core/angle | Photon Photon Preparing search index... core/angle Module core/angle Interfaces IChainLink Functions mirror noRevolutions ofArcEnd ofArcMiddle ofArcSpan ofChainLinkJoint ofLineInDegrees ofPointInDegrees ofPointInRadians toDegrees toRadians Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Interfaces IChainLink Functions mirror noRevolutions ofArcEnd ofArcMiddle ofArcSpan ofChainLinkJoint ofLineInDegrees ofPointInDegrees ofPointInRadians toDegrees toRadians Photon Loading... Generated using TypeDoc","title":"core/angle | Photon"},{"location":"converted/api/modules/core_angle/#module-coreangle","text":"","title":"Module core/angle"},{"location":"converted/api/modules/core_angle/#interfaces","text":"IChainLink","title":"Interfaces"},{"location":"converted/api/modules/core_angle/#functions","text":"mirror noRevolutions ofArcEnd ofArcMiddle ofArcSpan ofChainLinkJoint ofLineInDegrees ofPointInDegrees ofPointInRadians toDegrees toRadians","title":"Functions"},{"location":"converted/api/modules/core_angle/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/modules/core_angle/#on-this-page","text":"Interfaces IChainLink Functions mirror noRevolutions ofArcEnd ofArcMiddle ofArcSpan ofChainLinkJoint ofLineInDegrees ofPointInDegrees ofPointInRadians toDegrees toRadians Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/modules/core_base/","text":"core/base | Photon Photon Preparing search index... core/base Module core/base Variables environment environmentTypes pathType unitType version Functions cloneObject createRouteKey extendObject isFunction isNumber isObject isPoint round splitDecimal Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Variables environment environmentTypes pathType unitType version Functions cloneObject createRouteKey extendObject isFunction isNumber isObject isPoint round splitDecimal Photon Loading... Generated using TypeDoc","title":"core/base | Photon"},{"location":"converted/api/modules/core_base/#module-corebase","text":"","title":"Module core/base"},{"location":"converted/api/modules/core_base/#variables","text":"environment environmentTypes pathType unitType version","title":"Variables"},{"location":"converted/api/modules/core_base/#functions","text":"cloneObject createRouteKey extendObject isFunction isNumber isObject isPoint round splitDecimal","title":"Functions"},{"location":"converted/api/modules/core_base/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/modules/core_base/#on-this-page","text":"Variables environment environmentTypes pathType unitType version Functions cloneObject createRouteKey extendObject isFunction isNumber isObject isPoint round splitDecimal Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/modules/core_boolean-utils/","text":"core/boolean-utils | Photon Photon Preparing search index... core/boolean-utils Module core/boolean-utils Interfaces DeletedPathInfo SegmentClassification Type Aliases SegmentClassifier Variables DEFAULT_POINT_MATCHING_DISTANCE Functions addPathToModel ensurePathLayer findPointsOnPath isArcEnclosingAngle isBetween isBetweenArcAngles isBetweenPoints isCircleOrArc isZeroLength pathBoundingBox trackDeletedPath Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Interfaces DeletedPathInfo SegmentClassification Type Aliases SegmentClassifier Variables DEFAULT_POINT_MATCHING_DISTANCE Functions addPathToModel ensurePathLayer findPointsOnPath isArcEnclosingAngle isBetween isBetweenArcAngles isBetweenPoints isCircleOrArc isZeroLength pathBoundingBox trackDeletedPath Photon Loading... Generated using TypeDoc","title":"core/boolean-utils | Photon"},{"location":"converted/api/modules/core_boolean-utils/#module-coreboolean-utils","text":"","title":"Module core/boolean-utils"},{"location":"converted/api/modules/core_boolean-utils/#interfaces","text":"DeletedPathInfo SegmentClassification","title":"Interfaces"},{"location":"converted/api/modules/core_boolean-utils/#type-aliases","text":"SegmentClassifier","title":"Type Aliases"},{"location":"converted/api/modules/core_boolean-utils/#variables","text":"DEFAULT_POINT_MATCHING_DISTANCE","title":"Variables"},{"location":"converted/api/modules/core_boolean-utils/#functions","text":"addPathToModel ensurePathLayer findPointsOnPath isArcEnclosingAngle isBetween isBetweenArcAngles isBetweenPoints isCircleOrArc isZeroLength pathBoundingBox trackDeletedPath","title":"Functions"},{"location":"converted/api/modules/core_boolean-utils/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/modules/core_boolean-utils/#on-this-page","text":"Interfaces DeletedPathInfo SegmentClassification Type Aliases SegmentClassifier Variables DEFAULT_POINT_MATCHING_DISTANCE Functions addPathToModel ensurePathLayer findPointsOnPath isArcEnclosingAngle isBetween isBetweenArcAngles isBetweenPoints isCircleOrArc isZeroLength pathBoundingBox trackDeletedPath Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/modules/core_break/","text":"core/break | Photon Photon Preparing search index... core/break Module core/break Functions breakAtPoint Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Functions breakAtPoint Photon Loading... Generated using TypeDoc","title":"core/break | Photon"},{"location":"converted/api/modules/core_break/#module-corebreak","text":"","title":"Module core/break"},{"location":"converted/api/modules/core_break/#functions","text":"breakAtPoint","title":"Functions"},{"location":"converted/api/modules/core_break/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/modules/core_break/#on-this-page","text":"Functions breakAtPoint Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/modules/core_cascades.MakerJs/","text":"MakerJs | Photon Photon Preparing search index... core/cascades MakerJs Namespace MakerJs Interfaces ICascade ICascadeModel ICascadePath ICascadePoint Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Interfaces ICascade ICascadeModel ICascadePath ICascadePoint Photon Loading... Generated using TypeDoc","title":"MakerJs | Photon"},{"location":"converted/api/modules/core_cascades.MakerJs/#namespace-makerjs","text":"","title":"Namespace MakerJs"},{"location":"converted/api/modules/core_cascades.MakerJs/#interfaces","text":"ICascade ICascadeModel ICascadePath ICascadePoint","title":"Interfaces"},{"location":"converted/api/modules/core_cascades.MakerJs/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/modules/core_cascades.MakerJs/#on-this-page","text":"Interfaces ICascade ICascadeModel ICascadePath ICascadePoint Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/modules/core_cascades/","text":"core/cascades | Photon Photon Preparing search index... core/cascades Module core/cascades Namespaces MakerJs Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Namespaces MakerJs Photon Loading... Generated using TypeDoc","title":"core/cascades | Photon"},{"location":"converted/api/modules/core_cascades/#module-corecascades","text":"","title":"Module core/cascades"},{"location":"converted/api/modules/core_cascades/#namespaces","text":"MakerJs","title":"Namespaces"},{"location":"converted/api/modules/core_cascades/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/modules/core_cascades/#on-this-page","text":"Namespaces MakerJs Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/modules/core_chain/","text":"core/chain | Photon Photon Preparing search index... core/chain Module core/chain Functions cycle findChains findSingleChain reverse startAt toKeyPoints toNewModel toPoints Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Functions cycle findChains findSingleChain reverse startAt toKeyPoints toNewModel toPoints Photon Loading... Generated using TypeDoc","title":"core/chain | Photon"},{"location":"converted/api/modules/core_chain/#module-corechain","text":"","title":"Module core/chain"},{"location":"converted/api/modules/core_chain/#functions","text":"cycle findChains findSingleChain reverse startAt toKeyPoints toNewModel toPoints","title":"Functions"},{"location":"converted/api/modules/core_chain/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/modules/core_chain/#on-this-page","text":"Functions cycle findChains findSingleChain reverse startAt toKeyPoints toNewModel toPoints Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/modules/core_collect/","text":"core/collect | Photon Photon Preparing search index... core/collect Module core/collect Classes Collector PointGraph Interfaces ICollection ICollectionKeyComparer IPointGraphIndexElement Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Classes Collector PointGraph Interfaces ICollection ICollectionKeyComparer IPointGraphIndexElement Photon Loading... Generated using TypeDoc","title":"core/collect | Photon"},{"location":"converted/api/modules/core_collect/#module-corecollect","text":"","title":"Module core/collect"},{"location":"converted/api/modules/core_collect/#classes","text":"Collector PointGraph","title":"Classes"},{"location":"converted/api/modules/core_collect/#interfaces","text":"ICollection ICollectionKeyComparer IPointGraphIndexElement","title":"Interfaces"},{"location":"converted/api/modules/core_collect/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/modules/core_collect/#on-this-page","text":"Classes Collector PointGraph Interfaces ICollection ICollectionKeyComparer IPointGraphIndexElement Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/modules/core_combine/","text":"core/combine | Photon Photon Preparing search index... core/combine Module core/combine Functions breakPathsAtIntersections combine combineIntersection combineSubtraction combineUnion isPathInsideModel Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Functions breakPathsAtIntersections combine combineIntersection combineSubtraction combineUnion isPathInsideModel Photon Loading... Generated using TypeDoc","title":"core/combine | Photon"},{"location":"converted/api/modules/core_combine/#module-corecombine","text":"","title":"Module core/combine"},{"location":"converted/api/modules/core_combine/#functions","text":"breakPathsAtIntersections combine combineIntersection combineSubtraction combineUnion isPathInsideModel","title":"Functions"},{"location":"converted/api/modules/core_combine/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/modules/core_combine/#on-this-page","text":"Functions breakPathsAtIntersections combine combineIntersection combineSubtraction combineUnion isPathInsideModel Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/modules/core_deadend/","text":"core/deadend | Photon Photon Preparing search index... core/deadend Module core/deadend Functions removeDeadEnds Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Functions removeDeadEnds Photon Loading... Generated using TypeDoc","title":"core/deadend | Photon"},{"location":"converted/api/modules/core_deadend/#module-coredeadend","text":"","title":"Module core/deadend"},{"location":"converted/api/modules/core_deadend/#functions","text":"removeDeadEnds","title":"Functions"},{"location":"converted/api/modules/core_deadend/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/modules/core_deadend/#on-this-page","text":"Functions removeDeadEnds Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/modules/core_dxf/","text":"core/dxf | Photon Photon Preparing search index... core/dxf Module core/dxf Interfaces IDXFLayerOptions IDXFRenderOptions Functions toDXF Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Interfaces IDXFLayerOptions IDXFRenderOptions Functions toDXF Photon Loading... Generated using TypeDoc","title":"core/dxf | Photon"},{"location":"converted/api/modules/core_dxf/#module-coredxf","text":"","title":"Module core/dxf"},{"location":"converted/api/modules/core_dxf/#interfaces","text":"IDXFLayerOptions IDXFRenderOptions","title":"Interfaces"},{"location":"converted/api/modules/core_dxf/#functions","text":"toDXF","title":"Functions"},{"location":"converted/api/modules/core_dxf/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/modules/core_dxf/#on-this-page","text":"Interfaces IDXFLayerOptions IDXFRenderOptions Functions toDXF Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/modules/core_equal/","text":"core/equal | Photon Photon Preparing search index... core/equal Module core/equal Functions isAngleEqual isPathEqual isPointDistinct isPointEqual isPointOnCircle isPointOnPath isPointOnSlope isSlopeEqual isSlopeParallel Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Functions isAngleEqual isPathEqual isPointDistinct isPointEqual isPointOnCircle isPointOnPath isPointOnSlope isSlopeEqual isSlopeParallel Photon Loading... Generated using TypeDoc","title":"core/equal | Photon"},{"location":"converted/api/modules/core_equal/#module-coreequal","text":"","title":"Module core/equal"},{"location":"converted/api/modules/core_equal/#functions","text":"isAngleEqual isPathEqual isPointDistinct isPointEqual isPointOnCircle isPointOnPath isPointOnSlope isSlopeEqual isSlopeParallel","title":"Functions"},{"location":"converted/api/modules/core_equal/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/modules/core_equal/#on-this-page","text":"Functions isAngleEqual isPathEqual isPointDistinct isPointEqual isPointOnCircle isPointOnPath isPointOnSlope isSlopeEqual isSlopeParallel Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/modules/core_expand/","text":"core/expand | Photon Photon Preparing search index... core/expand Module core/expand Functions expand expandPaths outline straighten Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Functions expand expandPaths outline straighten Photon Loading... Generated using TypeDoc","title":"core/expand | Photon"},{"location":"converted/api/modules/core_expand/#module-coreexpand","text":"","title":"Module core/expand"},{"location":"converted/api/modules/core_expand/#functions","text":"expand expandPaths outline straighten","title":"Functions"},{"location":"converted/api/modules/core_expand/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/modules/core_expand/#on-this-page","text":"Functions expand expandPaths outline straighten Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/modules/core_exporter-index/","text":"core/exporter-index | Photon Photon Preparing search index... core/exporter-index Module core/exporter-index References colors \u2192 colors IJsonExportOptions \u2192 IJsonExportOptions IStatusCallback \u2192 IStatusCallback toJson \u2192 toJson toSVG \u2192 toSVG toSVGPathData \u2192 toSVGPathData Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page References colors IJsonExportOptions IStatusCallback toJson toSVG toSVGPathData Photon Loading... Generated using TypeDoc","title":"core/exporter-index | Photon"},{"location":"converted/api/modules/core_exporter-index/#module-coreexporter-index","text":"","title":"Module core/exporter-index"},{"location":"converted/api/modules/core_exporter-index/#references","text":"colors \u2192 colors IJsonExportOptions \u2192 IJsonExportOptions IStatusCallback \u2192 IStatusCallback toJson \u2192 toJson toSVG \u2192 toSVG toSVGPathData \u2192 toSVGPathData","title":"References"},{"location":"converted/api/modules/core_exporter-index/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/modules/core_exporter-index/#on-this-page","text":"References colors IJsonExportOptions IStatusCallback toJson toSVG toSVGPathData Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/modules/core_exporter/","text":"core/exporter | Photon Photon Preparing search index... core/exporter Module core/exporter Interfaces IJsonExportOptions IStatusCallback Variables colors Functions toJson Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Interfaces IJsonExportOptions IStatusCallback Variables colors Functions toJson Photon Loading... Generated using TypeDoc","title":"core/exporter | Photon"},{"location":"converted/api/modules/core_exporter/#module-coreexporter","text":"","title":"Module core/exporter"},{"location":"converted/api/modules/core_exporter/#interfaces","text":"IJsonExportOptions IStatusCallback","title":"Interfaces"},{"location":"converted/api/modules/core_exporter/#variables","text":"colors","title":"Variables"},{"location":"converted/api/modules/core_exporter/#functions","text":"toJson","title":"Functions"},{"location":"converted/api/modules/core_exporter/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/modules/core_exporter/#on-this-page","text":"Interfaces IJsonExportOptions IStatusCallback Variables colors Functions toJson Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/modules/core_fillet-chain/","text":"core/fillet-chain | Photon Photon Preparing search index... core/fillet-chain Module core/fillet-chain Functions chainDogbone chainFillet Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Functions chainDogbone chainFillet Photon Loading... Generated using TypeDoc","title":"core/fillet-chain | Photon"},{"location":"converted/api/modules/core_fillet-chain/#module-corefillet-chain","text":"","title":"Module core/fillet-chain"},{"location":"converted/api/modules/core_fillet-chain/#functions","text":"chainDogbone chainFillet","title":"Functions"},{"location":"converted/api/modules/core_fillet-chain/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/modules/core_fillet-chain/#on-this-page","text":"Functions chainDogbone chainFillet Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/modules/core_fillet-core/","text":"core/fillet-core | Photon Photon Preparing search index... core/fillet-core Module core/fillet-core Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"core/fillet-core | Photon"},{"location":"converted/api/modules/core_fillet-core/#module-corefillet-core","text":"","title":"Module core/fillet-core"},{"location":"converted/api/modules/core_fillet-core/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/modules/core_fillet-path/","text":"core/fillet-path | Photon Photon Preparing search index... core/fillet-path Module core/fillet-path Functions pathDogbone pathFillet Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Functions pathDogbone pathFillet Photon Loading... Generated using TypeDoc","title":"core/fillet-path | Photon"},{"location":"converted/api/modules/core_fillet-path/#module-corefillet-path","text":"","title":"Module core/fillet-path"},{"location":"converted/api/modules/core_fillet-path/#functions","text":"pathDogbone pathFillet","title":"Functions"},{"location":"converted/api/modules/core_fillet-path/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/modules/core_fillet-path/#on-this-page","text":"Functions pathDogbone pathFillet Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/modules/core_importer/","text":"core/importer | Photon Photon Preparing search index... core/importer Module core/importer Functions parseNumericList Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Functions parseNumericList Photon Loading... Generated using TypeDoc","title":"core/importer | Photon"},{"location":"converted/api/modules/core_importer/#module-coreimporter","text":"","title":"Module core/importer"},{"location":"converted/api/modules/core_importer/#functions","text":"parseNumericList","title":"Functions"},{"location":"converted/api/modules/core_importer/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/modules/core_importer/#on-this-page","text":"Functions parseNumericList Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/modules/core_intersect/","text":"core/intersect | Photon Photon Preparing search index... core/intersect Module core/intersect Functions intersection Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Functions intersection Photon Loading... Generated using TypeDoc","title":"core/intersect | Photon"},{"location":"converted/api/modules/core_intersect/#module-coreintersect","text":"","title":"Module core/intersect"},{"location":"converted/api/modules/core_intersect/#functions","text":"intersection","title":"Functions"},{"location":"converted/api/modules/core_intersect/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/modules/core_intersect/#on-this-page","text":"Functions intersection Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/modules/core_kit/","text":"core/kit | Photon Photon Preparing search index... core/kit Module core/kit Functions construct getParameterValues Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Functions construct getParameterValues Photon Loading... Generated using TypeDoc","title":"core/kit | Photon"},{"location":"converted/api/modules/core_kit/#module-corekit","text":"","title":"Module core/kit"},{"location":"converted/api/modules/core_kit/#functions","text":"construct getParameterValues","title":"Functions"},{"location":"converted/api/modules/core_kit/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/modules/core_kit/#on-this-page","text":"Functions construct getParameterValues Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/modules/core_layout/","text":"core/layout | Photon Photon Preparing search index... core/layout Module core/layout Functions childrenOnChain childrenOnPath cloneToBrick cloneToColumn cloneToGrid cloneToHoneycomb cloneToRadial cloneToRow Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Functions childrenOnChain childrenOnPath cloneToBrick cloneToColumn cloneToGrid cloneToHoneycomb cloneToRadial cloneToRow Photon Loading... Generated using TypeDoc","title":"core/layout | Photon"},{"location":"converted/api/modules/core_layout/#module-corelayout","text":"","title":"Module core/layout"},{"location":"converted/api/modules/core_layout/#functions","text":"childrenOnChain childrenOnPath cloneToBrick cloneToColumn cloneToGrid cloneToHoneycomb cloneToRadial cloneToRow","title":"Functions"},{"location":"converted/api/modules/core_layout/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/modules/core_layout/#on-this-page","text":"Functions childrenOnChain childrenOnPath cloneToBrick cloneToColumn cloneToGrid cloneToHoneycomb cloneToRadial cloneToRow Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/modules/core_maker/","text":"core/maker | Photon Photon Preparing search index... core/maker Module core/maker Interfaces IBoundingHex ICascade IChain IChainCallback IChainLink IChainsMap ICombineOptions IContainChainsOptions IFindChainsOptions IFindLoopsOptions IIsPointOnPathOptions IKit IMeasure IMeasureMap IMeasurePointInsideOptions IMeasureWithCenter IMetaParameter IModelPathCallback IPathDirectional IPathIntersection IPathIntersectionBaseOptions IPathIntersectionOptions IPathRemoved IPointMatchOptions IRefModelInModel IRefPathIdInModel IRouteOffset ISimplifyOptions ISlope IWalkModel IWalkModelCallback IWalkModelCancellableCallback IWalkOptions IWalkPath IWalkPathBooleanCallback IWalkPathCallback Variables environment environmentTypes pathType unitType version Functions cloneObject createRouteKey extendObject isChain isFunction isModel isNumber isObject isPath isPathArc isPathArcInBezierCurve isPathCircle isPathLine isPoint round splitDecimal travel Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Interfaces IBoundingHex ICascade IChain IChainCallback IChainLink IChainsMap ICombineOptions IContainChainsOptions IFindChainsOptions IFindLoopsOptions IIsPointOnPathOptions IKit IMeasure IMeasureMap IMeasurePointInsideOptions IMeasureWithCenter IMetaParameter IModelPathCallback IPathDirectional IPathIntersection IPathIntersectionBaseOptions IPathIntersectionOptions IPathRemoved IPointMatchOptions IRefModelInModel IRefPathIdInModel IRouteOffset ISimplifyOptions ISlope IWalkModel IWalkModelCallback IWalkModelCancellableCallback IWalkOptions IWalkPath IWalkPathBooleanCallback IWalkPathCallback Variables environment environmentTypes pathType unitType version Functions cloneObject createRouteKey extendObject isChain isFunction isModel isNumber isObject isPath isPathArc isPathArcInBezierCurve isPathCircle isPathLine isPoint round splitDecimal travel Photon Loading... Generated using TypeDoc","title":"core/maker | Photon"},{"location":"converted/api/modules/core_maker/#module-coremaker","text":"","title":"Module core/maker"},{"location":"converted/api/modules/core_maker/#interfaces","text":"IBoundingHex ICascade IChain IChainCallback IChainLink IChainsMap ICombineOptions IContainChainsOptions IFindChainsOptions IFindLoopsOptions IIsPointOnPathOptions IKit IMeasure IMeasureMap IMeasurePointInsideOptions IMeasureWithCenter IMetaParameter IModelPathCallback IPathDirectional IPathIntersection IPathIntersectionBaseOptions IPathIntersectionOptions IPathRemoved IPointMatchOptions IRefModelInModel IRefPathIdInModel IRouteOffset ISimplifyOptions ISlope IWalkModel IWalkModelCallback IWalkModelCancellableCallback IWalkOptions IWalkPath IWalkPathBooleanCallback IWalkPathCallback","title":"Interfaces"},{"location":"converted/api/modules/core_maker/#variables","text":"environment environmentTypes pathType unitType version","title":"Variables"},{"location":"converted/api/modules/core_maker/#functions","text":"cloneObject createRouteKey extendObject isChain isFunction isModel isNumber isObject isPath isPathArc isPathArcInBezierCurve isPathCircle isPathLine isPoint round splitDecimal travel","title":"Functions"},{"location":"converted/api/modules/core_maker/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/modules/core_maker/#on-this-page","text":"Interfaces IBoundingHex ICascade IChain IChainCallback IChainLink IChainsMap ICombineOptions IContainChainsOptions IFindChainsOptions IFindLoopsOptions IIsPointOnPathOptions IKit IMeasure IMeasureMap IMeasurePointInsideOptions IMeasureWithCenter IMetaParameter IModelPathCallback IPathDirectional IPathIntersection IPathIntersectionBaseOptions IPathIntersectionOptions IPathRemoved IPointMatchOptions IRefModelInModel IRefPathIdInModel IRouteOffset ISimplifyOptions ISlope IWalkModel IWalkModelCallback IWalkModelCancellableCallback IWalkOptions IWalkPath IWalkPathBooleanCallback IWalkPathCallback Variables environment environmentTypes pathType unitType version Functions cloneObject createRouteKey extendObject isChain isFunction isModel isNumber isObject isPath isPathArc isPathArcInBezierCurve isPathCircle isPathLine isPoint round splitDecimal travel Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/modules/core_measure-minimal/","text":"core/measure-minimal | Photon Photon Preparing search index... core/measure-minimal Module core/measure-minimal Functions augment isBezierSeedLinear lineSlope modelExtents pathExtents pathLength pointDistance References isPointEqual \u2192 isPointEqual Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Functions augment isBezierSeedLinear lineSlope modelExtents pathExtents pathLength pointDistance References isPointEqual Photon Loading... Generated using TypeDoc","title":"core/measure-minimal | Photon"},{"location":"converted/api/modules/core_measure-minimal/#module-coremeasure-minimal","text":"","title":"Module core/measure-minimal"},{"location":"converted/api/modules/core_measure-minimal/#functions","text":"augment isBezierSeedLinear lineSlope modelExtents pathExtents pathLength pointDistance","title":"Functions"},{"location":"converted/api/modules/core_measure-minimal/#references","text":"isPointEqual \u2192 isPointEqual","title":"References"},{"location":"converted/api/modules/core_measure-minimal/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/modules/core_measure-minimal/#on-this-page","text":"Functions augment isBezierSeedLinear lineSlope modelExtents pathExtents pathLength pointDistance References isPointEqual Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/modules/core_measure/","text":"core/measure | Photon Photon Preparing search index... core/measure Module core/measure Classes Atlas Functions augment boundingHexagon increase isArcConcaveTowardsPoint isArcOverlapping isArcSpanOverlapping isBetween isBetweenArcAngles isBetweenPoints isBezierSeedLinear isChainClockwise isLineOverlapping isMeasurementOverlapping isPointArrayClockwise isPointInsideModel lineSlope modelExtents modelPathLength pathExtents pathLength pointDistance Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Classes Atlas Functions augment boundingHexagon increase isArcConcaveTowardsPoint isArcOverlapping isArcSpanOverlapping isBetween isBetweenArcAngles isBetweenPoints isBezierSeedLinear isChainClockwise isLineOverlapping isMeasurementOverlapping isPointArrayClockwise isPointInsideModel lineSlope modelExtents modelPathLength pathExtents pathLength pointDistance Photon Loading... Generated using TypeDoc","title":"core/measure | Photon"},{"location":"converted/api/modules/core_measure/#module-coremeasure","text":"","title":"Module core/measure"},{"location":"converted/api/modules/core_measure/#classes","text":"Atlas","title":"Classes"},{"location":"converted/api/modules/core_measure/#functions","text":"augment boundingHexagon increase isArcConcaveTowardsPoint isArcOverlapping isArcSpanOverlapping isBetween isBetweenArcAngles isBetweenPoints isBezierSeedLinear isChainClockwise isLineOverlapping isMeasurementOverlapping isPointArrayClockwise isPointInsideModel lineSlope modelExtents modelPathLength pathExtents pathLength pointDistance","title":"Functions"},{"location":"converted/api/modules/core_measure/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/modules/core_measure/#on-this-page","text":"Classes Atlas Functions augment boundingHexagon increase isArcConcaveTowardsPoint isArcOverlapping isArcSpanOverlapping isBetween isBetweenArcAngles isBetweenPoints isBezierSeedLinear isChainClockwise isLineOverlapping isMeasurementOverlapping isPointArrayClockwise isPointInsideModel lineSlope modelExtents modelPathLength pathExtents pathLength pointDistance Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/modules/core_model/","text":"core/model | Photon Photon Preparing search index... core/model Module core/model Functions addCaption addModel addPath addTo center clone convertUnits countChildModels distort findChains findSingleChain getAllCaptionsOffset getSimilarModelId getSimilarPathId layer mirror move moveRelative originate prefixPathIds rotate scale walk walkPaths zero Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Functions addCaption addModel addPath addTo center clone convertUnits countChildModels distort findChains findSingleChain getAllCaptionsOffset getSimilarModelId getSimilarPathId layer mirror move moveRelative originate prefixPathIds rotate scale walk walkPaths zero Photon Loading... Generated using TypeDoc","title":"core/model | Photon"},{"location":"converted/api/modules/core_model/#module-coremodel","text":"","title":"Module core/model"},{"location":"converted/api/modules/core_model/#functions","text":"addCaption addModel addPath addTo center clone convertUnits countChildModels distort findChains findSingleChain getAllCaptionsOffset getSimilarModelId getSimilarPathId layer mirror move moveRelative originate prefixPathIds rotate scale walk walkPaths zero","title":"Functions"},{"location":"converted/api/modules/core_model/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/modules/core_model/#on-this-page","text":"Functions addCaption addModel addPath addTo center clone convertUnits countChildModels distort findChains findSingleChain getAllCaptionsOffset getSimilarModelId getSimilarPathId layer mirror move moveRelative originate prefixPathIds rotate scale walk walkPaths zero Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/modules/core_openjscad-esm/","text":"core/openjscad-esm | Photon Photon Preparing search index... core/openjscad-esm Module core/openjscad-esm Interfaces IJscadCagOptions IJscadCsgOptions IJscadExtrudeOptions IJscadScriptOptions IOpenJsCadOptions IOpenJsCadOptionsMap IStatusCallback Functions toJscadCAG toJscadCSG toJscadScript toJscadSTL Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Interfaces IJscadCagOptions IJscadCsgOptions IJscadExtrudeOptions IJscadScriptOptions IOpenJsCadOptions IOpenJsCadOptionsMap IStatusCallback Functions toJscadCAG toJscadCSG toJscadScript toJscadSTL Photon Loading... Generated using TypeDoc","title":"core/openjscad-esm | Photon"},{"location":"converted/api/modules/core_openjscad-esm/#module-coreopenjscad-esm","text":"","title":"Module core/openjscad-esm"},{"location":"converted/api/modules/core_openjscad-esm/#interfaces","text":"IJscadCagOptions IJscadCsgOptions IJscadExtrudeOptions IJscadScriptOptions IOpenJsCadOptions IOpenJsCadOptionsMap IStatusCallback","title":"Interfaces"},{"location":"converted/api/modules/core_openjscad-esm/#functions","text":"toJscadCAG toJscadCSG toJscadScript toJscadSTL","title":"Functions"},{"location":"converted/api/modules/core_openjscad-esm/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/modules/core_openjscad-esm/#on-this-page","text":"Interfaces IJscadCagOptions IJscadCsgOptions IJscadExtrudeOptions IJscadScriptOptions IOpenJsCadOptions IOpenJsCadOptionsMap IStatusCallback Functions toJscadCAG toJscadCSG toJscadScript toJscadSTL Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/modules/core_path/","text":"core/path | Photon Photon Preparing search index... core/path Module core/path Interfaces IChain IWalkPath Functions addTo alterLength center clone converge copyProps distort layer mirror move moveRelative moveTemporary rotate scale toKeyPoints toPoints zero Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Interfaces IChain IWalkPath Functions addTo alterLength center clone converge copyProps distort layer mirror move moveRelative moveTemporary rotate scale toKeyPoints toPoints zero Photon Loading... Generated using TypeDoc","title":"core/path | Photon"},{"location":"converted/api/modules/core_path/#module-corepath","text":"","title":"Module core/path"},{"location":"converted/api/modules/core_path/#interfaces","text":"IChain IWalkPath","title":"Interfaces"},{"location":"converted/api/modules/core_path/#functions","text":"addTo alterLength center clone converge copyProps distort layer mirror move moveRelative moveTemporary rotate scale toKeyPoints toPoints zero","title":"Functions"},{"location":"converted/api/modules/core_path/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/modules/core_path/#on-this-page","text":"Interfaces IChain IWalkPath Functions addTo alterLength center clone converge copyProps distort layer mirror move moveRelative moveTemporary rotate scale toKeyPoints toPoints zero Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/modules/core_paths/","text":"core/paths | Photon Photon Preparing search index... core/paths Module core/paths Classes Arc Chord Circle Line Parallel Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Classes Arc Chord Circle Line Parallel Photon Loading... Generated using TypeDoc","title":"core/paths | Photon"},{"location":"converted/api/modules/core_paths/#module-corepaths","text":"","title":"Module core/paths"},{"location":"converted/api/modules/core_paths/#classes","text":"Arc Chord Circle Line Parallel","title":"Classes"},{"location":"converted/api/modules/core_paths/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/modules/core_paths/#on-this-page","text":"Classes Arc Chord Circle Line Parallel Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/modules/core_pdf-esm/","text":"core/pdf-esm | Photon Photon Preparing search index... core/pdf-esm Module core/pdf-esm Interfaces IPDFRenderOptions Functions toPDF Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Interfaces IPDFRenderOptions Functions toPDF Photon Loading... Generated using TypeDoc","title":"core/pdf-esm | Photon"},{"location":"converted/api/modules/core_pdf-esm/#module-corepdf-esm","text":"","title":"Module core/pdf-esm"},{"location":"converted/api/modules/core_pdf-esm/#interfaces","text":"IPDFRenderOptions","title":"Interfaces"},{"location":"converted/api/modules/core_pdf-esm/#functions","text":"toPDF","title":"Functions"},{"location":"converted/api/modules/core_pdf-esm/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/modules/core_pdf-esm/#on-this-page","text":"Interfaces IPDFRenderOptions Functions toPDF Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/modules/core_point/","text":"core/point | Photon Photon Preparing search index... core/point Module core/point Functions add average clone closest distort fromAngleOnCircle fromArc fromPathEnds fromPolar fromSlopeIntersection middle mirror rotate rounded scale subtract zero Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Functions add average clone closest distort fromAngleOnCircle fromArc fromPathEnds fromPolar fromSlopeIntersection middle mirror rotate rounded scale subtract zero Photon Loading... Generated using TypeDoc","title":"core/point | Photon"},{"location":"converted/api/modules/core_point/#module-corepoint","text":"","title":"Module core/point"},{"location":"converted/api/modules/core_point/#functions","text":"add average clone closest distort fromAngleOnCircle fromArc fromPathEnds fromPolar fromSlopeIntersection middle mirror rotate rounded scale subtract zero","title":"Functions"},{"location":"converted/api/modules/core_point/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/modules/core_point/#on-this-page","text":"Functions add average clone closest distort fromAngleOnCircle fromArc fromPathEnds fromPolar fromSlopeIntersection middle mirror rotate rounded scale subtract zero Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/modules/core_schema/","text":"core/schema | Photon Photon Preparing search index... core/schema Module core/schema Interfaces IBezierRange ICaption IModel IModelMap IPath IPathArc IPathArcInBezierCurve IPathBezierSeed IPathCircle IPathIntersection IPathIntersectionOptions IPathLine IPathMap IPoint Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Interfaces IBezierRange ICaption IModel IModelMap IPath IPathArc IPathArcInBezierCurve IPathBezierSeed IPathCircle IPathIntersection IPathIntersectionOptions IPathLine IPathMap IPoint Photon Loading... Generated using TypeDoc","title":"core/schema | Photon"},{"location":"converted/api/modules/core_schema/#module-coreschema","text":"","title":"Module core/schema"},{"location":"converted/api/modules/core_schema/#interfaces","text":"IBezierRange ICaption IModel IModelMap IPath IPathArc IPathArcInBezierCurve IPathBezierSeed IPathCircle IPathIntersection IPathIntersectionOptions IPathLine IPathMap IPoint","title":"Interfaces"},{"location":"converted/api/modules/core_schema/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/modules/core_schema/#on-this-page","text":"Interfaces IBezierRange ICaption IModel IModelMap IPath IPathArc IPathArcInBezierCurve IPathBezierSeed IPathCircle IPathIntersection IPathIntersectionOptions IPathLine IPathMap IPoint Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/modules/core_simplify/","text":"core/simplify | Photon Photon Preparing search index... core/simplify Module core/simplify Functions simplify Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Functions simplify Photon Loading... Generated using TypeDoc","title":"core/simplify | Photon"},{"location":"converted/api/modules/core_simplify/#module-coresimplify","text":"","title":"Module core/simplify"},{"location":"converted/api/modules/core_simplify/#functions","text":"simplify","title":"Functions"},{"location":"converted/api/modules/core_simplify/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/modules/core_simplify/#on-this-page","text":"Functions simplify Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/modules/core_solvers/","text":"core/solvers | Photon Photon Preparing search index... core/solvers Module core/solvers Functions circleTangentAngles equilateralAltitude equilateralSide solveTriangleASA solveTriangleSSS Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Functions circleTangentAngles equilateralAltitude equilateralSide solveTriangleASA solveTriangleSSS Photon Loading... Generated using TypeDoc","title":"core/solvers | Photon"},{"location":"converted/api/modules/core_solvers/#module-coresolvers","text":"","title":"Module core/solvers"},{"location":"converted/api/modules/core_solvers/#functions","text":"circleTangentAngles equilateralAltitude equilateralSide solveTriangleASA solveTriangleSSS","title":"Functions"},{"location":"converted/api/modules/core_solvers/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/modules/core_solvers/#on-this-page","text":"Functions circleTangentAngles equilateralAltitude equilateralSide solveTriangleASA solveTriangleSSS Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/modules/core_svg-esm/","text":"core/svg-esm | Photon Photon Preparing search index... core/svg-esm Module core/svg-esm Interfaces IFlowAnnotation IPathDataByLayerMap ISVGElementRenderOptions ISVGImportOptions ISVGPathDataRenderOptions ISVGRenderOptions SvgUnitConversion Variables svgUnit Functions fromSVGPathData toSVG toSVGPathData Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Interfaces IFlowAnnotation IPathDataByLayerMap ISVGElementRenderOptions ISVGImportOptions ISVGPathDataRenderOptions ISVGRenderOptions SvgUnitConversion Variables svgUnit Functions fromSVGPathData toSVG toSVGPathData Photon Loading... Generated using TypeDoc","title":"core/svg-esm | Photon"},{"location":"converted/api/modules/core_svg-esm/#module-coresvg-esm","text":"","title":"Module core/svg-esm"},{"location":"converted/api/modules/core_svg-esm/#interfaces","text":"IFlowAnnotation IPathDataByLayerMap ISVGElementRenderOptions ISVGImportOptions ISVGPathDataRenderOptions ISVGRenderOptions SvgUnitConversion","title":"Interfaces"},{"location":"converted/api/modules/core_svg-esm/#variables","text":"svgUnit","title":"Variables"},{"location":"converted/api/modules/core_svg-esm/#functions","text":"fromSVGPathData toSVG toSVGPathData","title":"Functions"},{"location":"converted/api/modules/core_svg-esm/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/modules/core_svg-esm/#on-this-page","text":"Interfaces IFlowAnnotation IPathDataByLayerMap ISVGElementRenderOptions ISVGImportOptions ISVGPathDataRenderOptions ISVGRenderOptions SvgUnitConversion Variables svgUnit Functions fromSVGPathData toSVG toSVGPathData Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/modules/core_svg-helpers/","text":"core/svg-helpers | Photon Photon Preparing search index... core/svg-helpers Module core/svg-helpers Functions chainToSVGPathData pathToSVGPathData Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Functions chainToSVGPathData pathToSVGPathData Photon Loading... Generated using TypeDoc","title":"core/svg-helpers | Photon"},{"location":"converted/api/modules/core_svg-helpers/#module-coresvg-helpers","text":"","title":"Module core/svg-helpers"},{"location":"converted/api/modules/core_svg-helpers/#functions","text":"chainToSVGPathData pathToSVGPathData","title":"Functions"},{"location":"converted/api/modules/core_svg-helpers/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/modules/core_svg-helpers/#on-this-page","text":"Functions chainToSVGPathData pathToSVGPathData Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/modules/core_units/","text":"core/units | Photon Photon Preparing search index... core/units Module core/units Functions conversionScale isValidUnit Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Functions conversionScale isValidUnit Photon Loading... Generated using TypeDoc","title":"core/units | Photon"},{"location":"converted/api/modules/core_units/#module-coreunits","text":"","title":"Module core/units"},{"location":"converted/api/modules/core_units/#functions","text":"conversionScale isValidUnit","title":"Functions"},{"location":"converted/api/modules/core_units/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/modules/core_units/#on-this-page","text":"Functions conversionScale isValidUnit Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/modules/core_xml/","text":"core/xml | Photon Photon Preparing search index... core/xml Module core/xml Classes XmlTag Interfaces IXmlTagAttrs Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Classes XmlTag Interfaces IXmlTagAttrs Photon Loading... Generated using TypeDoc","title":"core/xml | Photon"},{"location":"converted/api/modules/core_xml/#module-corexml","text":"","title":"Module core/xml"},{"location":"converted/api/modules/core_xml/#classes","text":"XmlTag","title":"Classes"},{"location":"converted/api/modules/core_xml/#interfaces","text":"IXmlTagAttrs","title":"Interfaces"},{"location":"converted/api/modules/core_xml/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/modules/core_xml/#on-this-page","text":"Classes XmlTag Interfaces IXmlTagAttrs Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/modules/models/","text":"models | Photon Photon Preparing search index... models Module models References Belt \u2192 Belt BezierCurve \u2192 BezierCurve BezierSeed \u2192 BezierSeed BoltCircle \u2192 BoltCircle BoltRectangle \u2192 BoltRectangle ConnectTheDots \u2192 ConnectTheDots Dogbone \u2192 Dogbone Dome \u2192 Dome Ellipse \u2192 Ellipse EllipticArc \u2192 EllipticArc Holes \u2192 Holes Oval \u2192 Oval OvalArc \u2192 OvalArc Polygon \u2192 Polygon Rectangle \u2192 Rectangle Ring \u2192 Ring RoundRectangle \u2192 RoundRectangle SCurve \u2192 SCurve Slot \u2192 Slot Square \u2192 Square Star \u2192 Star Text \u2192 Text Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page References Belt BezierCurve BezierSeed BoltCircle BoltRectangle ConnectTheDots Dogbone Dome Ellipse EllipticArc Holes Oval OvalArc Polygon Rectangle Ring RoundRectangle SCurve Slot Square Star Text Photon Loading... Generated using TypeDoc","title":"models | Photon"},{"location":"converted/api/modules/models/#module-models","text":"","title":"Module models"},{"location":"converted/api/modules/models/#references","text":"Belt \u2192 Belt BezierCurve \u2192 BezierCurve BezierSeed \u2192 BezierSeed BoltCircle \u2192 BoltCircle BoltRectangle \u2192 BoltRectangle ConnectTheDots \u2192 ConnectTheDots Dogbone \u2192 Dogbone Dome \u2192 Dome Ellipse \u2192 Ellipse EllipticArc \u2192 EllipticArc Holes \u2192 Holes Oval \u2192 Oval OvalArc \u2192 OvalArc Polygon \u2192 Polygon Rectangle \u2192 Rectangle Ring \u2192 Ring RoundRectangle \u2192 RoundRectangle SCurve \u2192 SCurve Slot \u2192 Slot Square \u2192 Square Star \u2192 Star Text \u2192 Text","title":"References"},{"location":"converted/api/modules/models/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/modules/models/#on-this-page","text":"References Belt BezierCurve BezierSeed BoltCircle BoltRectangle ConnectTheDots Dogbone Dome Ellipse EllipticArc Holes Oval OvalArc Polygon Rectangle Ring RoundRectangle SCurve Slot Square Star Text Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/modules/models_Belt/","text":"models/Belt | Photon Photon Preparing search index... models/Belt Module models/Belt Classes Belt Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Classes Belt Photon Loading... Generated using TypeDoc","title":"models/Belt | Photon"},{"location":"converted/api/modules/models_Belt/#module-modelsbelt","text":"","title":"Module models/Belt"},{"location":"converted/api/modules/models_Belt/#classes","text":"Belt","title":"Classes"},{"location":"converted/api/modules/models_Belt/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/modules/models_Belt/#on-this-page","text":"Classes Belt Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/modules/models_BezierCurve-esm/","text":"models/BezierCurve-esm | Photon Photon Preparing search index... models/BezierCurve-esm Module models/BezierCurve-esm Classes BezierCurve BezierSeed Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Classes BezierCurve BezierSeed Photon Loading... Generated using TypeDoc","title":"models/BezierCurve-esm | Photon"},{"location":"converted/api/modules/models_BezierCurve-esm/#module-modelsbeziercurve-esm","text":"","title":"Module models/BezierCurve-esm"},{"location":"converted/api/modules/models_BezierCurve-esm/#classes","text":"BezierCurve BezierSeed","title":"Classes"},{"location":"converted/api/modules/models_BezierCurve-esm/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/modules/models_BezierCurve-esm/#on-this-page","text":"Classes BezierCurve BezierSeed Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/modules/models_BoltCircle/","text":"models/BoltCircle | Photon Photon Preparing search index... models/BoltCircle Module models/BoltCircle Classes BoltCircle Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Classes BoltCircle Photon Loading... Generated using TypeDoc","title":"models/BoltCircle | Photon"},{"location":"converted/api/modules/models_BoltCircle/#module-modelsboltcircle","text":"","title":"Module models/BoltCircle"},{"location":"converted/api/modules/models_BoltCircle/#classes","text":"BoltCircle","title":"Classes"},{"location":"converted/api/modules/models_BoltCircle/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/modules/models_BoltCircle/#on-this-page","text":"Classes BoltCircle Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/modules/models_BoltRectangle/","text":"models/BoltRectangle | Photon Photon Preparing search index... models/BoltRectangle Module models/BoltRectangle Classes BoltRectangle Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Classes BoltRectangle Photon Loading... Generated using TypeDoc","title":"models/BoltRectangle | Photon"},{"location":"converted/api/modules/models_BoltRectangle/#module-modelsboltrectangle","text":"","title":"Module models/BoltRectangle"},{"location":"converted/api/modules/models_BoltRectangle/#classes","text":"BoltRectangle","title":"Classes"},{"location":"converted/api/modules/models_BoltRectangle/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/modules/models_BoltRectangle/#on-this-page","text":"Classes BoltRectangle Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/modules/models_ConnectTheDots/","text":"models/ConnectTheDots | Photon Photon Preparing search index... models/ConnectTheDots Module models/ConnectTheDots Classes ConnectTheDots Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Classes ConnectTheDots Photon Loading... Generated using TypeDoc","title":"models/ConnectTheDots | Photon"},{"location":"converted/api/modules/models_ConnectTheDots/#module-modelsconnectthedots","text":"","title":"Module models/ConnectTheDots"},{"location":"converted/api/modules/models_ConnectTheDots/#classes","text":"ConnectTheDots","title":"Classes"},{"location":"converted/api/modules/models_ConnectTheDots/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/modules/models_ConnectTheDots/#on-this-page","text":"Classes ConnectTheDots Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/modules/models_Dogbone/","text":"models/Dogbone | Photon Photon Preparing search index... models/Dogbone Module models/Dogbone Classes Dogbone Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Classes Dogbone Photon Loading... Generated using TypeDoc","title":"models/Dogbone | Photon"},{"location":"converted/api/modules/models_Dogbone/#module-modelsdogbone","text":"","title":"Module models/Dogbone"},{"location":"converted/api/modules/models_Dogbone/#classes","text":"Dogbone","title":"Classes"},{"location":"converted/api/modules/models_Dogbone/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/modules/models_Dogbone/#on-this-page","text":"Classes Dogbone Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/modules/models_Dome/","text":"models/Dome | Photon Photon Preparing search index... models/Dome Module models/Dome Classes Dome Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Classes Dome Photon Loading... Generated using TypeDoc","title":"models/Dome | Photon"},{"location":"converted/api/modules/models_Dome/#module-modelsdome","text":"","title":"Module models/Dome"},{"location":"converted/api/modules/models_Dome/#classes","text":"Dome","title":"Classes"},{"location":"converted/api/modules/models_Dome/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/modules/models_Dome/#on-this-page","text":"Classes Dome Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/modules/models_Ellipse/","text":"models/Ellipse | Photon Photon Preparing search index... models/Ellipse Module models/Ellipse Classes Ellipse EllipticArc Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Classes Ellipse EllipticArc Photon Loading... Generated using TypeDoc","title":"models/Ellipse | Photon"},{"location":"converted/api/modules/models_Ellipse/#module-modelsellipse","text":"","title":"Module models/Ellipse"},{"location":"converted/api/modules/models_Ellipse/#classes","text":"Ellipse EllipticArc","title":"Classes"},{"location":"converted/api/modules/models_Ellipse/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/modules/models_Ellipse/#on-this-page","text":"Classes Ellipse EllipticArc Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/modules/models_Holes/","text":"models/Holes | Photon Photon Preparing search index... models/Holes Module models/Holes Classes Holes Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Classes Holes Photon Loading... Generated using TypeDoc","title":"models/Holes | Photon"},{"location":"converted/api/modules/models_Holes/#module-modelsholes","text":"","title":"Module models/Holes"},{"location":"converted/api/modules/models_Holes/#classes","text":"Holes","title":"Classes"},{"location":"converted/api/modules/models_Holes/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/modules/models_Holes/#on-this-page","text":"Classes Holes Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/modules/models_Oval/","text":"models/Oval | Photon Photon Preparing search index... models/Oval Module models/Oval Classes Oval Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Classes Oval Photon Loading... Generated using TypeDoc","title":"models/Oval | Photon"},{"location":"converted/api/modules/models_Oval/#module-modelsoval","text":"","title":"Module models/Oval"},{"location":"converted/api/modules/models_Oval/#classes","text":"Oval","title":"Classes"},{"location":"converted/api/modules/models_Oval/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/modules/models_Oval/#on-this-page","text":"Classes Oval Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/modules/models_OvalArc/","text":"models/OvalArc | Photon Photon Preparing search index... models/OvalArc Module models/OvalArc Classes OvalArc Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Classes OvalArc Photon Loading... Generated using TypeDoc","title":"models/OvalArc | Photon"},{"location":"converted/api/modules/models_OvalArc/#module-modelsovalarc","text":"","title":"Module models/OvalArc"},{"location":"converted/api/modules/models_OvalArc/#classes","text":"OvalArc","title":"Classes"},{"location":"converted/api/modules/models_OvalArc/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/modules/models_OvalArc/#on-this-page","text":"Classes OvalArc Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/modules/models_Polygon/","text":"models/Polygon | Photon Photon Preparing search index... models/Polygon Module models/Polygon Classes Polygon Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Classes Polygon Photon Loading... Generated using TypeDoc","title":"models/Polygon | Photon"},{"location":"converted/api/modules/models_Polygon/#module-modelspolygon","text":"","title":"Module models/Polygon"},{"location":"converted/api/modules/models_Polygon/#classes","text":"Polygon","title":"Classes"},{"location":"converted/api/modules/models_Polygon/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/modules/models_Polygon/#on-this-page","text":"Classes Polygon Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/modules/models_Rectangle/","text":"models/Rectangle | Photon Photon Preparing search index... models/Rectangle Module models/Rectangle Classes Rectangle Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Classes Rectangle Photon Loading... Generated using TypeDoc","title":"models/Rectangle | Photon"},{"location":"converted/api/modules/models_Rectangle/#module-modelsrectangle","text":"","title":"Module models/Rectangle"},{"location":"converted/api/modules/models_Rectangle/#classes","text":"Rectangle","title":"Classes"},{"location":"converted/api/modules/models_Rectangle/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/modules/models_Rectangle/#on-this-page","text":"Classes Rectangle Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/modules/models_Ring/","text":"models/Ring | Photon Photon Preparing search index... models/Ring Module models/Ring Classes Ring Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Classes Ring Photon Loading... Generated using TypeDoc","title":"models/Ring | Photon"},{"location":"converted/api/modules/models_Ring/#module-modelsring","text":"","title":"Module models/Ring"},{"location":"converted/api/modules/models_Ring/#classes","text":"Ring","title":"Classes"},{"location":"converted/api/modules/models_Ring/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/modules/models_Ring/#on-this-page","text":"Classes Ring Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/modules/models_RoundRectangle/","text":"models/RoundRectangle | Photon Photon Preparing search index... models/RoundRectangle Module models/RoundRectangle Classes RoundRectangle Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Classes RoundRectangle Photon Loading... Generated using TypeDoc","title":"models/RoundRectangle | Photon"},{"location":"converted/api/modules/models_RoundRectangle/#module-modelsroundrectangle","text":"","title":"Module models/RoundRectangle"},{"location":"converted/api/modules/models_RoundRectangle/#classes","text":"RoundRectangle","title":"Classes"},{"location":"converted/api/modules/models_RoundRectangle/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/modules/models_RoundRectangle/#on-this-page","text":"Classes RoundRectangle Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/modules/models_SCurve/","text":"models/SCurve | Photon Photon Preparing search index... models/SCurve Module models/SCurve Classes SCurve Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Classes SCurve Photon Loading... Generated using TypeDoc","title":"models/SCurve | Photon"},{"location":"converted/api/modules/models_SCurve/#module-modelsscurve","text":"","title":"Module models/SCurve"},{"location":"converted/api/modules/models_SCurve/#classes","text":"SCurve","title":"Classes"},{"location":"converted/api/modules/models_SCurve/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/modules/models_SCurve/#on-this-page","text":"Classes SCurve Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/modules/models_Slot/","text":"models/Slot | Photon Photon Preparing search index... models/Slot Module models/Slot Classes Slot Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Classes Slot Photon Loading... Generated using TypeDoc","title":"models/Slot | Photon"},{"location":"converted/api/modules/models_Slot/#module-modelsslot","text":"","title":"Module models/Slot"},{"location":"converted/api/modules/models_Slot/#classes","text":"Slot","title":"Classes"},{"location":"converted/api/modules/models_Slot/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/modules/models_Slot/#on-this-page","text":"Classes Slot Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/modules/models_Square/","text":"models/Square | Photon Photon Preparing search index... models/Square Module models/Square Classes Square Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Classes Square Photon Loading... Generated using TypeDoc","title":"models/Square | Photon"},{"location":"converted/api/modules/models_Square/#module-modelssquare","text":"","title":"Module models/Square"},{"location":"converted/api/modules/models_Square/#classes","text":"Square","title":"Classes"},{"location":"converted/api/modules/models_Square/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/modules/models_Square/#on-this-page","text":"Classes Square Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/modules/models_Star/","text":"models/Star | Photon Photon Preparing search index... models/Star Module models/Star Classes Star Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Classes Star Photon Loading... Generated using TypeDoc","title":"models/Star | Photon"},{"location":"converted/api/modules/models_Star/#module-modelsstar","text":"","title":"Module models/Star"},{"location":"converted/api/modules/models_Star/#classes","text":"Star","title":"Classes"},{"location":"converted/api/modules/models_Star/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/modules/models_Star/#on-this-page","text":"Classes Star Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/modules/models_Text/","text":"models/Text | Photon Photon Preparing search index... models/Text Module models/Text Classes Text Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Classes Text Photon Loading... Generated using TypeDoc","title":"models/Text | Photon"},{"location":"converted/api/modules/models_Text/#module-modelstext","text":"","title":"Module models/Text"},{"location":"converted/api/modules/models_Text/#classes","text":"Text","title":"Classes"},{"location":"converted/api/modules/models_Text/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/modules/models_Text/#on-this-page","text":"Classes Text Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/modules/types_jscad.export_.CSG.Path2D/","text":"Path2D | Photon Photon Preparing search index... types/jscad export= CSG Path2D Namespace Path2D Path2D utilities for creating 2D paths Functions arc Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Functions arc Photon Loading... Generated using TypeDoc","title":"Path2D | Photon"},{"location":"converted/api/modules/types_jscad.export_.CSG.Path2D/#namespace-path2d","text":"Path2D utilities for creating 2D paths","title":"Namespace Path2D"},{"location":"converted/api/modules/types_jscad.export_.CSG.Path2D/#functions","text":"arc","title":"Functions"},{"location":"converted/api/modules/types_jscad.export_.CSG.Path2D/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/modules/types_jscad.export_.CSG.Path2D/#on-this-page","text":"Functions arc Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/modules/types_jscad.export_.CSG/","text":"CSG | Photon Photon Preparing search index... types/jscad export= CSG Namespace CSG CSG namespace containing nested types and utilities Namespaces Path2D Interfaces IArcOptions ICircleOptions IEllpiticalArcOptions Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Namespaces Path2D Interfaces IArcOptions ICircleOptions IEllpiticalArcOptions Photon Loading... Generated using TypeDoc","title":"CSG | Photon"},{"location":"converted/api/modules/types_jscad.export_.CSG/#namespace-csg","text":"CSG namespace containing nested types and utilities","title":"Namespace CSG"},{"location":"converted/api/modules/types_jscad.export_.CSG/#namespaces","text":"Path2D","title":"Namespaces"},{"location":"converted/api/modules/types_jscad.export_.CSG/#interfaces","text":"IArcOptions ICircleOptions IEllpiticalArcOptions","title":"Interfaces"},{"location":"converted/api/modules/types_jscad.export_.CSG/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/modules/types_jscad.export_.CSG/#on-this-page","text":"Namespaces Path2D Interfaces IArcOptions ICircleOptions IEllpiticalArcOptions Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/modules/types_jscad.export_/","text":"export= | Photon Photon Preparing search index... types/jscad export= Namespace export= Type definitions for @jscad/csg library These ambient declarations allow TypeScript to understand the JSCAD API without requiring the actual library at compile time. Namespaces CSG Classes CAG CSG References StlSerializer \u2192 StlSerializer Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Namespaces CSG Classes CAG CSG References StlSerializer Photon Loading... Generated using TypeDoc","title":"export= | Photon"},{"location":"converted/api/modules/types_jscad.export_/#namespace-export","text":"Type definitions for @jscad/csg library These ambient declarations allow TypeScript to understand the JSCAD API without requiring the actual library at compile time.","title":"Namespace export="},{"location":"converted/api/modules/types_jscad.export_/#namespaces","text":"CSG","title":"Namespaces"},{"location":"converted/api/modules/types_jscad.export_/#classes","text":"CAG CSG","title":"Classes"},{"location":"converted/api/modules/types_jscad.export_/#references","text":"StlSerializer \u2192 StlSerializer","title":"References"},{"location":"converted/api/modules/types_jscad.export_/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/modules/types_jscad.export_/#on-this-page","text":"Namespaces CSG Classes CAG CSG References StlSerializer Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/modules/types_jscad/","text":"types/jscad | Photon Photon Preparing search index... types/jscad Module types/jscad Namespaces export= Interfaces StlSerializer Settings Member Visibility Protected Inherited ThemeOSLightDark On This Page Namespaces export= Interfaces StlSerializer Photon Loading... Generated using TypeDoc","title":"types/jscad | Photon"},{"location":"converted/api/modules/types_jscad/#module-typesjscad","text":"","title":"Module types/jscad"},{"location":"converted/api/modules/types_jscad/#namespaces","text":"export=","title":"Namespaces"},{"location":"converted/api/modules/types_jscad/#interfaces","text":"StlSerializer","title":"Interfaces"},{"location":"converted/api/modules/types_jscad/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark","title":"Settings"},{"location":"converted/api/modules/types_jscad/#on-this-page","text":"Namespaces export= Interfaces StlSerializer Photon Loading... Generated using TypeDoc","title":"On This Page"},{"location":"converted/api/types/core_boolean-utils.SegmentClassifier/","text":"SegmentClassifier | Photon Photon Preparing search index... core/boolean-utils SegmentClassifier Type Alias SegmentClassifier SegmentClassifier: (segmentPath: IPath ) => SegmentClassification Type Declaration (segmentPath: IPath ): SegmentClassification Parameters segmentPath: IPath Returns SegmentClassification Defined in core/boolean-utils.ts:16 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"SegmentClassifier | Photon"},{"location":"converted/api/types/core_boolean-utils.SegmentClassifier/#type-alias-segmentclassifier","text":"SegmentClassifier: (segmentPath: IPath ) => SegmentClassification","title":"Type Alias SegmentClassifier"},{"location":"converted/api/types/core_boolean-utils.SegmentClassifier/#type-declaration","text":"(segmentPath: IPath ): SegmentClassification","title":"Type Declaration"},{"location":"converted/api/types/core_boolean-utils.SegmentClassifier/#parameters","text":"segmentPath: IPath","title":"Parameters"},{"location":"converted/api/types/core_boolean-utils.SegmentClassifier/#returns-segmentclassification","text":"Defined in core/boolean-utils.ts:16","title":"Returns SegmentClassification"},{"location":"converted/api/types/core_boolean-utils.SegmentClassifier/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/variables/core_base.environment/","text":"environment | Photon Photon Preparing search index... core/base environment Variable environment Const environment: \"browser\" | \"node\" | \"worker\" | \"unknown\" = ... Defined in core/base.ts:31 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"environment | Photon"},{"location":"converted/api/variables/core_base.environment/#variable-environmentconst","text":"environment: \"browser\" | \"node\" | \"worker\" | \"unknown\" = ... Defined in core/base.ts:31","title":"Variable environmentConst"},{"location":"converted/api/variables/core_base.environment/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/variables/core_base.environmentTypes/","text":"environmentTypes | Photon Photon Preparing search index... core/base environmentTypes Variable environmentTypes Const environmentTypes: { BrowserUI: \"browser\"; NodeJs: \"node\"; Unknown: \"unknown\"; WebWorker: \"worker\"; } = ... Type Declaration Readonly BrowserUI: \"browser\" Readonly NodeJs: \"node\" Readonly Unknown: \"unknown\" Readonly WebWorker: \"worker\" Defined in core/base.ts:5 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"environmentTypes | Photon"},{"location":"converted/api/variables/core_base.environmentTypes/#variable-environmenttypesconst","text":"environmentTypes: { BrowserUI: \"browser\"; NodeJs: \"node\"; Unknown: \"unknown\"; WebWorker: \"worker\"; } = ...","title":"Variable environmentTypesConst"},{"location":"converted/api/variables/core_base.environmentTypes/#type-declaration","text":"","title":"Type Declaration"},{"location":"converted/api/variables/core_base.environmentTypes/#readonlybrowserui-browser","text":"","title":"ReadonlyBrowserUI: \"browser\""},{"location":"converted/api/variables/core_base.environmentTypes/#readonlynodejs-node","text":"","title":"ReadonlyNodeJs: \"node\""},{"location":"converted/api/variables/core_base.environmentTypes/#readonlyunknown-unknown","text":"","title":"ReadonlyUnknown: \"unknown\""},{"location":"converted/api/variables/core_base.environmentTypes/#readonlywebworker-worker","text":"Defined in core/base.ts:5","title":"ReadonlyWebWorker: \"worker\""},{"location":"converted/api/variables/core_base.environmentTypes/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/variables/core_base.pathType/","text":"pathType | Photon Photon Preparing search index... core/base pathType Variable pathType Const pathType: { Arc: \"arc\"; BezierSeed: \"bezier-seed\"; Circle: \"circle\"; Line: \"line\"; } = ... Type Declaration Readonly Arc: \"arc\" Readonly BezierSeed: \"bezier-seed\" Readonly Circle: \"circle\" Readonly Line: \"line\" Defined in core/base.ts:42 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"pathType | Photon"},{"location":"converted/api/variables/core_base.pathType/#variable-pathtypeconst","text":"pathType: { Arc: \"arc\"; BezierSeed: \"bezier-seed\"; Circle: \"circle\"; Line: \"line\"; } = ...","title":"Variable pathTypeConst"},{"location":"converted/api/variables/core_base.pathType/#type-declaration","text":"","title":"Type Declaration"},{"location":"converted/api/variables/core_base.pathType/#readonlyarc-arc","text":"","title":"ReadonlyArc: \"arc\""},{"location":"converted/api/variables/core_base.pathType/#readonlybezierseed-bezier-seed","text":"","title":"ReadonlyBezierSeed: \"bezier-seed\""},{"location":"converted/api/variables/core_base.pathType/#readonlycircle-circle","text":"","title":"ReadonlyCircle: \"circle\""},{"location":"converted/api/variables/core_base.pathType/#readonlyline-line","text":"Defined in core/base.ts:42","title":"ReadonlyLine: \"line\""},{"location":"converted/api/variables/core_base.pathType/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/variables/core_base.unitType/","text":"unitType | Photon Photon Preparing search index... core/base unitType Variable unitType Const unitType: { Centimeter: \"cm\"; Foot: \"foot\"; Inch: \"inch\"; Meter: \"m\"; Millimeter: \"mm\"; } = ... Type Declaration Readonly Centimeter: \"cm\" Readonly Foot: \"foot\" Readonly Inch: \"inch\" Readonly Meter: \"m\" Readonly Millimeter: \"mm\" Defined in core/base.ts:33 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"unitType | Photon"},{"location":"converted/api/variables/core_base.unitType/#variable-unittypeconst","text":"unitType: { Centimeter: \"cm\"; Foot: \"foot\"; Inch: \"inch\"; Meter: \"m\"; Millimeter: \"mm\"; } = ...","title":"Variable unitTypeConst"},{"location":"converted/api/variables/core_base.unitType/#type-declaration","text":"","title":"Type Declaration"},{"location":"converted/api/variables/core_base.unitType/#readonlycentimeter-cm","text":"","title":"ReadonlyCentimeter: \"cm\""},{"location":"converted/api/variables/core_base.unitType/#readonlyfoot-foot","text":"","title":"ReadonlyFoot: \"foot\""},{"location":"converted/api/variables/core_base.unitType/#readonlyinch-inch","text":"","title":"ReadonlyInch: \"inch\""},{"location":"converted/api/variables/core_base.unitType/#readonlymeter-m","text":"","title":"ReadonlyMeter: \"m\""},{"location":"converted/api/variables/core_base.unitType/#readonlymillimeter-mm","text":"Defined in core/base.ts:33","title":"ReadonlyMillimeter: \"mm\""},{"location":"converted/api/variables/core_base.unitType/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/variables/core_base.version/","text":"version | Photon Photon Preparing search index... core/base version Variable version Const version: \"debug\" = 'debug' Defined in core/base.ts:3 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"version | Photon"},{"location":"converted/api/variables/core_base.version/#variable-versionconst","text":"version: \"debug\" = 'debug' Defined in core/base.ts:3","title":"Variable versionConst"},{"location":"converted/api/variables/core_base.version/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/variables/core_boolean-utils.DEFAULT_POINT_MATCHING_DISTANCE/","text":"DEFAULT_POINT_MATCHING_DISTANCE | Photon Photon Preparing search index... core/boolean-utils DEFAULT_POINT_MATCHING_DISTANCE Variable DEFAULT_POINT_MATCHING_DISTANCE Const DEFAULT_POINT_MATCHING_DISTANCE: 0.005 Defined in core/boolean-utils.ts:9 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"DEFAULT_POINT_MATCHING_DISTANCE | Photon"},{"location":"converted/api/variables/core_boolean-utils.DEFAULT_POINT_MATCHING_DISTANCE/#variable-default_point_matching_distanceconst","text":"DEFAULT_POINT_MATCHING_DISTANCE: 0.005 Defined in core/boolean-utils.ts:9","title":"Variable DEFAULT_POINT_MATCHING_DISTANCEConst"},{"location":"converted/api/variables/core_boolean-utils.DEFAULT_POINT_MATCHING_DISTANCE/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/variables/core_exporter.colors/","text":"colors | Photon Photon Preparing search index... core/exporter colors Variable colors Const colors: { aqua: number; black: number; blue: number; fuchsia: number; gray: number; green: number; lime: number; maroon: number; navy: number; olive: number; orange: number; purple: number; red: number; silver: number; teal: number; white: number; yellow: number; } = ... Named colors, safe for CSS and DXF 17 colors from https://www.w3.org/TR/CSS21/syndata.html#value-def-color mapped to DXF equivalent AutoDesk Color Index Type Declaration aqua: number black: number blue: number fuchsia: number gray: number green: number lime: number maroon: number navy: number olive: number orange: number purple: number red: number silver: number teal: number white: number yellow: number Defined in core/exporter.ts:71 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"colors | Photon"},{"location":"converted/api/variables/core_exporter.colors/#variable-colorsconst","text":"colors: { aqua: number; black: number; blue: number; fuchsia: number; gray: number; green: number; lime: number; maroon: number; navy: number; olive: number; orange: number; purple: number; red: number; silver: number; teal: number; white: number; yellow: number; } = ... Named colors, safe for CSS and DXF 17 colors from https://www.w3.org/TR/CSS21/syndata.html#value-def-color mapped to DXF equivalent AutoDesk Color Index","title":"Variable colorsConst"},{"location":"converted/api/variables/core_exporter.colors/#type-declaration","text":"","title":"Type Declaration"},{"location":"converted/api/variables/core_exporter.colors/#aqua-number","text":"","title":"aqua: number"},{"location":"converted/api/variables/core_exporter.colors/#black-number","text":"","title":"black: number"},{"location":"converted/api/variables/core_exporter.colors/#blue-number","text":"","title":"blue: number"},{"location":"converted/api/variables/core_exporter.colors/#fuchsia-number","text":"","title":"fuchsia: number"},{"location":"converted/api/variables/core_exporter.colors/#gray-number","text":"","title":"gray: number"},{"location":"converted/api/variables/core_exporter.colors/#green-number","text":"","title":"green: number"},{"location":"converted/api/variables/core_exporter.colors/#lime-number","text":"","title":"lime: number"},{"location":"converted/api/variables/core_exporter.colors/#maroon-number","text":"","title":"maroon: number"},{"location":"converted/api/variables/core_exporter.colors/#navy-number","text":"","title":"navy: number"},{"location":"converted/api/variables/core_exporter.colors/#olive-number","text":"","title":"olive: number"},{"location":"converted/api/variables/core_exporter.colors/#orange-number","text":"","title":"orange: number"},{"location":"converted/api/variables/core_exporter.colors/#purple-number","text":"","title":"purple: number"},{"location":"converted/api/variables/core_exporter.colors/#red-number","text":"","title":"red: number"},{"location":"converted/api/variables/core_exporter.colors/#silver-number","text":"","title":"silver: number"},{"location":"converted/api/variables/core_exporter.colors/#teal-number","text":"","title":"teal: number"},{"location":"converted/api/variables/core_exporter.colors/#white-number","text":"","title":"white: number"},{"location":"converted/api/variables/core_exporter.colors/#yellow-number","text":"Defined in core/exporter.ts:71","title":"yellow: number"},{"location":"converted/api/variables/core_exporter.colors/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/variables/core_maker.environment/","text":"environment | Photon Photon Preparing search index... core/maker environment Variable environment Const environment: \"browser\" | \"node\" | \"worker\" | \"unknown\" = ... Current execution environment type, should be one of environmentTypes. Defined in core/maker.ts:43 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"environment | Photon"},{"location":"converted/api/variables/core_maker.environment/#variable-environmentconst","text":"environment: \"browser\" | \"node\" | \"worker\" | \"unknown\" = ... Current execution environment type, should be one of environmentTypes. Defined in core/maker.ts:43","title":"Variable environmentConst"},{"location":"converted/api/variables/core_maker.environment/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/variables/core_maker.environmentTypes/","text":"environmentTypes | Photon Photon Preparing search index... core/maker environmentTypes Variable environmentTypes Const environmentTypes: { BrowserUI: \"browser\"; NodeJs: \"node\"; Unknown: \"unknown\"; WebWorker: \"worker\"; } = ... Enumeration of environment types. Type Declaration Readonly BrowserUI: \"browser\" Readonly NodeJs: \"node\" Readonly Unknown: \"unknown\" Readonly WebWorker: \"worker\" Defined in core/maker.ts:10 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"environmentTypes | Photon"},{"location":"converted/api/variables/core_maker.environmentTypes/#variable-environmenttypesconst","text":"environmentTypes: { BrowserUI: \"browser\"; NodeJs: \"node\"; Unknown: \"unknown\"; WebWorker: \"worker\"; } = ... Enumeration of environment types.","title":"Variable environmentTypesConst"},{"location":"converted/api/variables/core_maker.environmentTypes/#type-declaration","text":"","title":"Type Declaration"},{"location":"converted/api/variables/core_maker.environmentTypes/#readonlybrowserui-browser","text":"","title":"ReadonlyBrowserUI: \"browser\""},{"location":"converted/api/variables/core_maker.environmentTypes/#readonlynodejs-node","text":"","title":"ReadonlyNodeJs: \"node\""},{"location":"converted/api/variables/core_maker.environmentTypes/#readonlyunknown-unknown","text":"","title":"ReadonlyUnknown: \"unknown\""},{"location":"converted/api/variables/core_maker.environmentTypes/#readonlywebworker-worker","text":"Defined in core/maker.ts:10","title":"ReadonlyWebWorker: \"worker\""},{"location":"converted/api/variables/core_maker.environmentTypes/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/variables/core_maker.pathType/","text":"pathType | Photon Photon Preparing search index... core/maker pathType Variable pathType Const pathType: { Arc: \"arc\"; BezierSeed: \"bezier-seed\"; Circle: \"circle\"; Line: \"line\"; } = ... String-based enumeration of all paths types. Type Declaration Readonly Arc: \"arc\" Readonly BezierSeed: \"bezier-seed\" Readonly Circle: \"circle\" Readonly Line: \"line\" Defined in core/maker.ts:212 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"pathType | Photon"},{"location":"converted/api/variables/core_maker.pathType/#variable-pathtypeconst","text":"pathType: { Arc: \"arc\"; BezierSeed: \"bezier-seed\"; Circle: \"circle\"; Line: \"line\"; } = ... String-based enumeration of all paths types.","title":"Variable pathTypeConst"},{"location":"converted/api/variables/core_maker.pathType/#type-declaration","text":"","title":"Type Declaration"},{"location":"converted/api/variables/core_maker.pathType/#readonlyarc-arc","text":"","title":"ReadonlyArc: \"arc\""},{"location":"converted/api/variables/core_maker.pathType/#readonlybezierseed-bezier-seed","text":"","title":"ReadonlyBezierSeed: \"bezier-seed\""},{"location":"converted/api/variables/core_maker.pathType/#readonlycircle-circle","text":"","title":"ReadonlyCircle: \"circle\""},{"location":"converted/api/variables/core_maker.pathType/#readonlyline-line","text":"Defined in core/maker.ts:212","title":"ReadonlyLine: \"line\""},{"location":"converted/api/variables/core_maker.pathType/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/variables/core_maker.unitType/","text":"unitType | Photon Photon Preparing search index... core/maker unitType Variable unitType Const unitType: { Centimeter: \"cm\"; Foot: \"foot\"; Inch: \"inch\"; Meter: \"m\"; Millimeter: \"mm\"; } = ... String-based enumeration of unit types. Type Declaration Readonly Centimeter: \"cm\" Readonly Foot: \"foot\" Readonly Inch: \"inch\" Readonly Meter: \"m\" Readonly Millimeter: \"mm\" Defined in core/maker.ts:46 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"unitType | Photon"},{"location":"converted/api/variables/core_maker.unitType/#variable-unittypeconst","text":"unitType: { Centimeter: \"cm\"; Foot: \"foot\"; Inch: \"inch\"; Meter: \"m\"; Millimeter: \"mm\"; } = ... String-based enumeration of unit types.","title":"Variable unitTypeConst"},{"location":"converted/api/variables/core_maker.unitType/#type-declaration","text":"","title":"Type Declaration"},{"location":"converted/api/variables/core_maker.unitType/#readonlycentimeter-cm","text":"","title":"ReadonlyCentimeter: \"cm\""},{"location":"converted/api/variables/core_maker.unitType/#readonlyfoot-foot","text":"","title":"ReadonlyFoot: \"foot\""},{"location":"converted/api/variables/core_maker.unitType/#readonlyinch-inch","text":"","title":"ReadonlyInch: \"inch\""},{"location":"converted/api/variables/core_maker.unitType/#readonlymeter-m","text":"","title":"ReadonlyMeter: \"m\""},{"location":"converted/api/variables/core_maker.unitType/#readonlymillimeter-mm","text":"Defined in core/maker.ts:46","title":"ReadonlyMillimeter: \"mm\""},{"location":"converted/api/variables/core_maker.unitType/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/variables/core_maker.version/","text":"version | Photon Photon Preparing search index... core/maker version Variable version Const version: \"debug\" = 'debug' Version info Defined in core/maker.ts:7 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"version | Photon"},{"location":"converted/api/variables/core_maker.version/#variable-versionconst","text":"version: \"debug\" = 'debug' Version info Defined in core/maker.ts:7","title":"Variable versionConst"},{"location":"converted/api/variables/core_maker.version/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/api/variables/core_svg-esm.svgUnit/","text":"svgUnit | Photon Photon Preparing search index... core/svg-esm svgUnit Variable svgUnit Const svgUnit: SvgUnitConversion = ... Defined in core/svg-esm.ts:383 Settings Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"svgUnit | Photon"},{"location":"converted/api/variables/core_svg-esm.svgUnit/#variable-svgunitconst","text":"svgUnit: SvgUnitConversion = ... Defined in core/svg-esm.ts:383","title":"Variable svgUnitConst"},{"location":"converted/api/variables/core_svg-esm.svgUnit/#settings","text":"Member Visibility Protected Inherited ThemeOSLightDark Photon Loading... Generated using TypeDoc","title":"Settings"},{"location":"converted/basic-drawing/","text":"","title":"Index"},{"location":"converted/browser-apps/embed/","text":"embed in page tutorial for adding to page tutorial for download buttons","title":"embed in page"},{"location":"converted/browser-apps/embed/#embed-in-page","text":"","title":"embed in page"},{"location":"converted/browser-apps/embed/#tutorial-for-adding-to-page","text":"","title":"tutorial for adding to page"},{"location":"converted/browser-apps/embed/#tutorial-for-download-buttons","text":"","title":"tutorial for download buttons"},{"location":"converted/exporting/","text":"","title":"Index"},{"location":"converted/getting-started/","text":"","title":"Index"},{"location":"converted/importing/","text":"","title":"Index"},{"location":"converted/intermediate-drawing/","text":"","title":"Index"},{"location":"converted/model-trees/","text":"","title":"Index"},{"location":"converted/node-apps/node%20server/","text":"command line to download","title":"command line to download"},{"location":"converted/node-apps/node%20server/#command-line-to-download","text":"","title":"command line to download"},{"location":"converted/publishing/packaging/","text":"create a github repo named makerjs-DRAWING a. initialize with a README b. Add .gitignore: Node c. License copy the repo url git clone the repo cd makerjs-DRAWING npm init copy-paste the github description test command: node test.js makerjs keyword npm install --save makerjs add .gitignore file, add node_modules add test.js, with console.log('success') npm test add index.js import { exporter, paths } from 'photon/core'; function DRAWING() { this.paths = [ new paths.Circle('circle1', [0, 0], 7) ]; } module.exports = DRAWING; edit test.js import { exporter, paths } from 'photon/core'; const DRAWING = require('./index.js'); console.log(exporter.toSVG(new DRAWING())); npm test * git add .gitignore, package.json, index.js, test.js git commit -m \"initial checkin\" git push npm publish npm install browserify tutorial for browserifying requires scenarios","title":"npm install browserify"},{"location":"converted/publishing/packaging/#npm-install-browserify","text":"","title":"npm install browserify"},{"location":"converted/publishing/packaging/#tutorial-for-browserifying-requires","text":"scenarios","title":"tutorial for browserifying requires"},{"location":"converted/publishing/publishing/","text":"get node npm install makerjs write code index.js npm init npm publish","title":"get node"},{"location":"converted/publishing/publishing/#get-node","text":"","title":"get node"},{"location":"converted/publishing/publishing/#npm-install-makerjs","text":"","title":"npm install makerjs"},{"location":"converted/publishing/publishing/#write-code-indexjs","text":"","title":"write code index.js"},{"location":"converted/publishing/publishing/#npm-init","text":"","title":"npm init"},{"location":"converted/publishing/publishing/#npm-publish","text":"","title":"npm publish"},{"location":"converted/working-with-chains/","text":"","title":"Index"},{"location":"demos/node_modules/%40danmarshall/jscad-typings/","text":"TypeScript typings for Jscad","title":"Index"},{"location":"demos/node_modules/%40danmarshall/makerjs-wrap-text/","text":"Text wrapping for Maker.js","title":"Index"},{"location":"demos/node_modules/%40types/acorn/","text":"npm install --save @types/acorn Summary This package contains type definitions for Acorn (https://github.com/acornjs/acorn). Details Files were exported from https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/acorn. Additional Details Last updated: Tue, 06 Jul 2021 18:05:30 GMT Dependencies: @types/estree Global values: acorn Credits These definitions were written by RReverser , and e-cloud .","title":"Index"},{"location":"demos/node_modules/%40types/acorn/#summary","text":"This package contains type definitions for Acorn (https://github.com/acornjs/acorn).","title":"Summary"},{"location":"demos/node_modules/%40types/acorn/#details","text":"Files were exported from https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/acorn.","title":"Details"},{"location":"demos/node_modules/%40types/acorn/#additional-details","text":"Last updated: Tue, 06 Jul 2021 18:05:30 GMT Dependencies: @types/estree Global values: acorn","title":"Additional Details"},{"location":"demos/node_modules/%40types/acorn/#credits","text":"These definitions were written by RReverser , and e-cloud .","title":"Credits"},{"location":"demos/node_modules/%40types/bezier-js/","text":"npm install --save @types/bezier-js Summary This package contains type definitions for Bezier.js (https://github.com/Pomax/bezierjs). Details Files were exported from https://www.github.com/DefinitelyTyped/DefinitelyTyped/tree/master/bezier-js Additional Details * Last updated: Mon, 13 Feb 2017 18:51:08 GMT * Dependencies: none * Global values: BezierJs Credits These definitions were written by Dan Marshall https://github.com/danmarshall .","title":"Index"},{"location":"demos/node_modules/%40types/bezier-js/#summary","text":"This package contains type definitions for Bezier.js (https://github.com/Pomax/bezierjs).","title":"Summary"},{"location":"demos/node_modules/%40types/bezier-js/#details","text":"Files were exported from https://www.github.com/DefinitelyTyped/DefinitelyTyped/tree/master/bezier-js Additional Details * Last updated: Mon, 13 Feb 2017 18:51:08 GMT * Dependencies: none * Global values: BezierJs","title":"Details"},{"location":"demos/node_modules/%40types/bezier-js/#credits","text":"These definitions were written by Dan Marshall https://github.com/danmarshall .","title":"Credits"},{"location":"demos/node_modules/%40types/detective/","text":"npm install --save @types/detective Summary This package contains type definitions for detective (https://github.com/browserify/detective). Details Files were exported from https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/detective. Additional Details Last updated: Thu, 08 Jul 2021 09:08:40 GMT Dependencies: @types/acorn Global values: none Credits These definitions were written by TeamworkGuy2 .","title":"Index"},{"location":"demos/node_modules/%40types/detective/#summary","text":"This package contains type definitions for detective (https://github.com/browserify/detective).","title":"Summary"},{"location":"demos/node_modules/%40types/detective/#details","text":"Files were exported from https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/detective.","title":"Details"},{"location":"demos/node_modules/%40types/detective/#additional-details","text":"Last updated: Thu, 08 Jul 2021 09:08:40 GMT Dependencies: @types/acorn Global values: none","title":"Additional Details"},{"location":"demos/node_modules/%40types/detective/#credits","text":"These definitions were written by TeamworkGuy2 .","title":"Credits"},{"location":"demos/node_modules/%40types/marked/","text":"npm install --save @types/marked Summary This package contains type definitions for Marked (https://github.com/markedjs/marked). Details Files were exported from https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/marked. Additional Details Last updated: Mon, 21 Mar 2022 11:01:43 GMT Dependencies: none Global values: none Credits These definitions were written by William Orr , BendingBender , CrossR , Mike Wickett , Hitomi Hatsukaze , Ezra Celli , Romain LE BARO , Sarun Intaralawan , Tony Brix , Anatolii Titov , Jean-Francois Cere , and Mykhaylo Stolyarchuk .","title":"Index"},{"location":"demos/node_modules/%40types/marked/#summary","text":"This package contains type definitions for Marked (https://github.com/markedjs/marked).","title":"Summary"},{"location":"demos/node_modules/%40types/marked/#details","text":"Files were exported from https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/marked.","title":"Details"},{"location":"demos/node_modules/%40types/marked/#additional-details","text":"Last updated: Mon, 21 Mar 2022 11:01:43 GMT Dependencies: none Global values: none","title":"Additional Details"},{"location":"demos/node_modules/%40types/marked/#credits","text":"These definitions were written by William Orr , BendingBender , CrossR , Mike Wickett , Hitomi Hatsukaze , Ezra Celli , Romain LE BARO , Sarun Intaralawan , Tony Brix , Anatolii Titov , Jean-Francois Cere , and Mykhaylo Stolyarchuk .","title":"Credits"},{"location":"demos/node_modules/%40types/node/","text":"npm install --save @types/node Summary This package contains type definitions for node (https://nodejs.org/). Details Files were exported from https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/node/v20. Additional Details Last updated: Sat, 11 Oct 2025 14:02:18 GMT Dependencies: undici-types Credits These definitions were written by Microsoft TypeScript , Alberto Schiabel , Andrew Makarov , Benjamin Toueg , David Junger , Mohsen Azimi , Nikita Galkin , Sebastian Silbermann , Wilco Bakker , Marcin Kopacz , Trivikram Kamat , Junxiao Shi , Ilia Baryshnikov , ExE Boss , Piotr B\u0142a\u017cejewicz , Anna Henningsen , Victor Perin , NodeJS Contributors , Linus Unneb\u00e4ck , wafuwafu13 , Matteo Collina , and Dmitry Semigradsky .","title":"Index"},{"location":"demos/node_modules/%40types/node/#summary","text":"This package contains type definitions for node (https://nodejs.org/).","title":"Summary"},{"location":"demos/node_modules/%40types/node/#details","text":"Files were exported from https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/node/v20.","title":"Details"},{"location":"demos/node_modules/%40types/node/#additional-details","text":"Last updated: Sat, 11 Oct 2025 14:02:18 GMT Dependencies: undici-types","title":"Additional Details"},{"location":"demos/node_modules/%40types/node/#credits","text":"These definitions were written by Microsoft TypeScript , Alberto Schiabel , Andrew Makarov , Benjamin Toueg , David Junger , Mohsen Azimi , Nikita Galkin , Sebastian Silbermann , Wilco Bakker , Marcin Kopacz , Trivikram Kamat , Junxiao Shi , Ilia Baryshnikov , ExE Boss , Piotr B\u0142a\u017cejewicz , Anna Henningsen , Victor Perin , NodeJS Contributors , Linus Unneb\u00e4ck , wafuwafu13 , Matteo Collina , and Dmitry Semigradsky .","title":"Credits"},{"location":"demos/node_modules/%40types/opentype.js/","text":"npm install --save @types/opentype.js Summary This package contains type definitions for opentype.js ( https://github.com/opentypejs/opentype.js ). Details Files were exported from https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/opentype.js Additional Details * Last updated: Wed, 13 Feb 2019 21:04:42 GMT * Dependencies: none * Global values: opentype Credits These definitions were written by Dan Marshall https://github.com/danmarshall , Edgar Simson https://github.com/edzis .","title":"Index"},{"location":"demos/node_modules/%40types/opentype.js/#summary","text":"This package contains type definitions for opentype.js ( https://github.com/opentypejs/opentype.js ).","title":"Summary"},{"location":"demos/node_modules/%40types/opentype.js/#details","text":"Files were exported from https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/opentype.js Additional Details * Last updated: Wed, 13 Feb 2019 21:04:42 GMT * Dependencies: none * Global values: opentype","title":"Details"},{"location":"demos/node_modules/%40types/opentype.js/#credits","text":"These definitions were written by Dan Marshall https://github.com/danmarshall , Edgar Simson https://github.com/edzis .","title":"Credits"},{"location":"demos/node_modules/%40types/pdfkit/","text":"npm install --save @types/pdfkit Summary This package contains type definitions for Pdfkit (http://pdfkit.org). Details Files were exported from https://www.github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/pdfkit Additional Details * Last updated: Tue, 03 Oct 2017 13:52:13 GMT * Dependencies: node * Global values: PDFKit Credits These definitions were written by Eric Hillah https://github.com/erichillah .","title":"Index"},{"location":"demos/node_modules/%40types/pdfkit/#summary","text":"This package contains type definitions for Pdfkit (http://pdfkit.org).","title":"Summary"},{"location":"demos/node_modules/%40types/pdfkit/#details","text":"Files were exported from https://www.github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/pdfkit Additional Details * Last updated: Tue, 03 Oct 2017 13:52:13 GMT * Dependencies: node * Global values: PDFKit","title":"Details"},{"location":"demos/node_modules/%40types/pdfkit/#credits","text":"These definitions were written by Eric Hillah https://github.com/erichillah .","title":"Credits"},{"location":"demos/node_modules/graham_scan/readme/","text":"JavaScript Graham's Scan Convex Hull Algorithm I required a simple implementation to calculate a convex hull from a given array of x, y coordinates, the convex hull's in js I found either were a little buggy, or required dependencies on other libraries. This implementation just takes the x,y coordinates, no other libraries are needed. These four examples show how to utilise with Google Maps: Example 1 Example 2 Example 3 Example 4 View GitHub pages Building This produces graham_scan.min.js : npm install grunt build Testing The source is tested with qUnit, tests executed with Google's JS Test Driver. Usage //Create a new instance. var convexHull = new ConvexHullGrahamScan(); //add points (needs to be done for each point, a foreach loop on the input array can be used.) convexHull.addPoint(x, y); //getHull() returns the array of points that make up the convex hull. var hullPoints = convexHull.getHull(); Algorithm GRAHAM_SCAN(Q) Find p0 in Q with minimum y-coordinate (and minimum x-coordinate if there are ties). Sort the remaining points of Q (that is, Q \u2212 {p0}) by polar angle in counterclockwise order with respect to p0. TOP [S] = 0 \u25b7 Lines 3-6 initialize the stack to contain, from bottom to top, first three points. PUSH (p0, S) PUSH (p1, S) PUSH (p2, S) for i = 3 to m \u25b7 Perform test for each point p3, ..., pm. do while the angle between NEXT_TO_TOP[S], TOP[S], and pi makes a non-left turn \u25b7 remove if not a vertex do POP(S) PUSH (S, pi) return S References http://www.personal.kent.edu/~rmuhamma/Compgeometry/MyCG/ConvexHull/GrahamScan/grahamScan.htm http://en.wikipedia.org/wiki/Graham_scan License MIT License","title":"Readme"},{"location":"demos/node_modules/graham_scan/readme/#javascript-grahams-scan-convex-hull-algorithm","text":"I required a simple implementation to calculate a convex hull from a given array of x, y coordinates, the convex hull's in js I found either were a little buggy, or required dependencies on other libraries. This implementation just takes the x,y coordinates, no other libraries are needed. These four examples show how to utilise with Google Maps: Example 1 Example 2 Example 3 Example 4 View GitHub pages","title":"JavaScript Graham's Scan Convex Hull Algorithm"},{"location":"demos/node_modules/graham_scan/readme/#building","text":"This produces graham_scan.min.js : npm install grunt build","title":"Building"},{"location":"demos/node_modules/graham_scan/readme/#testing","text":"The source is tested with qUnit, tests executed with Google's JS Test Driver.","title":"Testing"},{"location":"demos/node_modules/graham_scan/readme/#usage","text":"//Create a new instance. var convexHull = new ConvexHullGrahamScan(); //add points (needs to be done for each point, a foreach loop on the input array can be used.) convexHull.addPoint(x, y); //getHull() returns the array of points that make up the convex hull. var hullPoints = convexHull.getHull();","title":"Usage"},{"location":"demos/node_modules/graham_scan/readme/#algorithm","text":"GRAHAM_SCAN(Q) Find p0 in Q with minimum y-coordinate (and minimum x-coordinate if there are ties). Sort the remaining points of Q (that is, Q \u2212 {p0}) by polar angle in counterclockwise order with respect to p0. TOP [S] = 0 \u25b7 Lines 3-6 initialize the stack to contain, from bottom to top, first three points. PUSH (p0, S) PUSH (p1, S) PUSH (p2, S) for i = 3 to m \u25b7 Perform test for each point p3, ..., pm. do while the angle between NEXT_TO_TOP[S], TOP[S], and pi makes a non-left turn \u25b7 remove if not a vertex do POP(S) PUSH (S, pi) return S","title":"Algorithm"},{"location":"demos/node_modules/graham_scan/readme/#references","text":"http://www.personal.kent.edu/~rmuhamma/Compgeometry/MyCG/ConvexHull/GrahamScan/grahamScan.htm http://en.wikipedia.org/wiki/Graham_scan","title":"References"},{"location":"demos/node_modules/graham_scan/readme/#license","text":"MIT License","title":"License"},{"location":"demos/node_modules/highlight.js/","text":"Highlight.js is a syntax highlighter written in JavaScript. It works in the browser as well as on the server. It can work with pretty much any markup, doesn\u2019t depend on any other frameworks, and has automatic language detection. Contents Basic Usage In the Browser Plaintext Code Blocks Ignoring a Code Block Node.js on the Server Supported Languages Custom Usage Using custom HTML Using with Vue.js Using Web Workers Importing the Library Node.js / require ES6 Modules / import Getting the Library Fetch via CDN cdnjs (link) jsdelivr (link) unpkg (link) Download prebuilt CDN assets Download from our website Install via NPM package Build from Source Requirements License Links Upgrading to Version 11 As always, major releases do contain breaking changes which may require action from users. Please read VERSION_11_UPGRADE.md for a detailed summary of breaking changes and any actions you may need to take. Support for older versions Please see SECURITY.md for long-term support information. Basic Usage In the Browser The bare minimum for using highlight.js on a web page is linking to the library along with one of the themes and calling highlightAll : < link rel = \"stylesheet\" href = \"/path/to/styles/default.min.css\" > < script src = \"/path/to/highlight.min.js\" ></ script > < script > hljs . highlightAll ();</ script > This will find and highlight code inside of <pre><code> tags; it tries to detect the language automatically. If automatic detection doesn\u2019t work for you, or you simply prefer to be explicit, you can specify the language manually in the using the class attribute: < pre >< code class = \"language-html\" > ... </ code ></ pre > Plaintext Code Blocks To apply the Highlight.js styling to plaintext without actually highlighting it, use the plaintext language: < pre >< code class = \"language-plaintext\" > ... </ code ></ pre > Ignoring a Code Block To skip highlighting of a code block completely, use the nohighlight class: < pre >< code class = \"nohighlight\" > ... </ code ></ pre > Node.js on the Server The bare minimum to auto-detect the language and highlight some code. // load the library and ALL languages hljs = require ( 'highlight.js' ); html = hljs . highlightAuto ( '<h1>Hello World!</h1>' ). value To load only a \"common\" subset of popular languages: hljs = require ( 'highlight.js/lib/common' ); To highlight code with a specific language, use highlight : html = hljs . highlight ( '<h1>Hello World!</h1>' , { language : 'xml' }). value See Importing the Library for more examples of require vs import usage, etc. For more information about the result object returned by highlight or highlightAuto refer to the api docs . Supported Languages Highlight.js supports over 180 languages in the core library. There are also 3rd party language definitions available to support even more languages. You can find the full list of supported languages in SUPPORTED_LANGUAGES.md . Custom Usage If you need a bit more control over the initialization of Highlight.js, you can use the highlightElement and configure functions. This allows you to better control what to highlight and when . For example, here\u2019s the rough equivalent of calling highlightAll but doing the work manually instead: document . addEventListener ( 'DOMContentLoaded' , ( event ) => { document . querySelectorAll ( 'pre code' ). forEach (( el ) => { hljs . highlightElement ( el ); }); }); Please refer to the documentation for configure options. Using custom HTML We strongly recommend <pre><code> wrapping for code blocks. It's quite semantic and \"just works\" out of the box with zero fiddling. It is possible to use other HTML elements (or combos), but you may need to pay special attention to preserving linebreaks. Let's say your markup for code blocks uses divs: < div class = 'code' > ... </ div > To highlight such blocks manually: // first, find all the div.code blocks document . querySelectorAll ( 'div.code' ). forEach ( el => { // then highlight each hljs . highlightElement ( el ); }); Without using a tag that preserves linebreaks (like pre ) you'll need some additional CSS to help preserve them. You could also pre and post-process line breaks with a plug-in , but we recommend using CSS . To preserve linebreaks inside a div using CSS: div . code { white-space : pre ; } Using with Vue.js See highlightjs/vue-plugin for a simple Vue plugin that works great with Highlight.js. An example of vue-plugin in action: < div id = \"app\" > <!-- bind to a data property named `code` --> < highlightjs autodetect :code = \"code\" /> <!-- or literal code works as well --> < highlightjs language = 'javascript' code = \"var x = 5;\" /> </ div > Using Web Workers You can run highlighting inside a web worker to avoid freezing the browser window while dealing with very big chunks of code. In your main script: addEventListener ( 'load' , () => { const code = document . querySelector ( '#code' ); const worker = new Worker ( 'worker.js' ); worker . onmessage = ( event ) => { code . innerHTML = event . data ; } worker . postMessage ( code . textContent ); }); In worker.js: onmessage = ( event ) => { importScripts ( '<path>/highlight.min.js' ); const result = self . hljs . highlightAuto ( event . data ); postMessage ( result . value ); }; Importing the Library First, you'll likely be installing the library via npm or yarn -- see Getting the Library . Node.js / require Requiring the top-level library will load all languages: // require the highlight.js library, including all languages const hljs = require ( './highlight.js' ); const highlightedCode = hljs . highlightAuto ( '<span>Hello World!</span>' ). value For a smaller footprint, load our common subset of languages (the same set used for our default web build). const hljs = require ( 'highlight.js/lib/common' ); For the smallest footprint, load only the languages you need: const hljs = require ( 'highlight.js/lib/core' ); hljs . registerLanguage ( 'xml' , require ( 'highlight.js/lib/languages/xml' )); const highlightedCode = hljs . highlight ( '<span>Hello World!</span>' , { language : 'xml' }). value ES6 Modules / import Note: You can also import directly from fully static URLs, such as our very own pre-built ES6 Module CDN resources. See Fetch via CDN for specific examples. The default import will register all languages: import hljs from 'highlight.js' ; It is more efficient to import only the library and register the languages you need: import hljs from 'highlight.js/lib/core' ; import javascript from 'highlight.js/lib/languages/javascript' ; hljs . registerLanguage ( 'javascript' , javascript ); If your build tool processes CSS imports, you can also import the theme directly as a module: import hljs from 'highlight.js' ; import 'highlight.js/styles/github.css' ; Getting the Library You can get highlight.js as a hosted, or custom-build, browser script or as a server module. Right out of the box the browser script supports both AMD and CommonJS, so if you wish you can use RequireJS or Browserify without having to build from source. The server module also works perfectly fine with Browserify, but there is the option to use a build specific to browsers rather than something meant for a server. Do not link to GitHub directly. The library is not supposed to work straight from the source, it requires building. If none of the pre-packaged options work for you refer to the building documentation . On Almond. You need to use the optimizer to give the module a name. For example: r.js -o name = hljs paths.hljs = /path/to/highlight out = highlight.js Fetch via CDN A prebuilt version of Highlight.js bundled with many common languages is hosted by several popular CDNs. When using Highlight.js via CDN you can use Subresource Integrity for additional security. For details see DIGESTS.md . cdnjs ( link ) Common JS < link rel = \"stylesheet\" href = \"https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.5.1/styles/default.min.css\" > < script src = \"https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.5.1/highlight.min.js\" ></ script > <!-- and it's easy to individually load additional languages --> < script src = \"https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.5.1/languages/go.min.js\" ></ script > ES6 Modules < link rel = \"stylesheet\" href = \"https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.5.1/styles/dark.min.css\" > < script type = \"module\" > import hljs from 'https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.5.1/es/highlight.min.js' ; // and it's easy to individually load additional languages import go from 'https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.5.1/es/languages/go.min.js' ; hljs . registerLanguage ( 'go' , go ); </ script > jsdelivr ( link ) Common JS < link rel = \"stylesheet\" href = \"https://cdn.jsdelivr.net/gh/highlightjs/cdn-release@11.5.1/build/styles/default.min.css\" > < script src = \"https://cdn.jsdelivr.net/gh/highlightjs/cdn-release@11.5.1/build/highlight.min.js\" ></ script > <!-- and it's easy to individually load additional languages --> < script src = \"https://cdn.jsdelivr.net/gh/highlightjs/cdn-release@11.5.1/build/languages/go.min.js\" ></ script > ES6 Modules < link rel = \"stylesheet\" href = \"https://cdn.jsdelivr.net/gh/highlightjs/cdn-release@11.5.1/build/styles/default.min.css\" > < script type = \"module\" > import hljs from 'https://cdn.jsdelivr.net/gh/highlightjs/cdn-release@11.5.1/build/es/highlight.min.js' ; // and it's easy to individually load additional languages import go from 'https://cdn.jsdelivr.net/gh/highlightjs/cdn-release@11.5.1/build/es/languages/go.min.js' ; hljs . registerLanguage ( 'go' , go ); </ script > unpkg ( link ) Common JS < link rel = \"stylesheet\" href = \"https://unpkg.com/@highlightjs/cdn-assets@11.5.1/styles/default.min.css\" > < script src = \"https://unpkg.com/@highlightjs/cdn-assets@11.5.1/highlight.min.js\" ></ script > <!-- and it's easy to individually load additional languages --> < script src = \"https://unpkg.com/@highlightjs/cdn-assets@11.5.1/languages/go.min.js\" ></ script > ES6 Modules < link rel = \"stylesheet\" href = \"https://unpkg.com/@highlightjs/cdn-assets@11.5.1/styles/default.min.css\" > < script type = \"module\" > import hljs from 'https://unpkg.com/@highlightjs/cdn-assets@11.5.1/es/highlight.min.js' ; // and it's easy to individually load & register additional languages import go from 'https://unpkg.com/@highlightjs/cdn-assets@11.5.1/es/languages/go.min.js' ; hljs . registerLanguage ( 'go' , go ); </ script > Note: The CDN-hosted highlight.min.js package doesn't bundle every language. It would be very large. You can find our list of \"common\" languages that we bundle by default on our download page . Download prebuilt CDN assets You can also download and self-host the same assets we serve up via our own CDNs. We publish those builds to the cdn-release GitHub repository. You can easily pull individual files off the CDN endpoints with curl , etc; if say you only needed highlight.min.js and a single CSS file. There is also an npm package @highlightjs/cdn-assets if pulling the assets in via npm or yarn would be easier for your build process. Download from our website The download page can quickly generate a custom single-file minified bundle including only the languages you desire. Note: Building from source can produce slightly smaller builds than the website download. Install via NPM package Our NPM package including all supported languages can be installed with NPM or Yarn: npm install highlight.js # or yarn add highlight.js Alternatively, you can build the NPM package from source. Build from Source The current source code is always available on GitHub. node tools/build.js -t node node tools/build.js -t browser :common node tools/build.js -t cdn :common See our building documentation for more information. Requirements Highlight.js works on all modern browsers and currently supported Node.js versions. You'll need the following software to contribute to the core library: Node.js >= 12.x npm >= 6.x License Highlight.js is released under the BSD License. See our LICENSE file for details. Links The official website for the library is https://highlightjs.org/ . Further in-depth documentation for the API and other topics is at http://highlightjs.readthedocs.io/ . A list of the Core Team and contributors can be found in the CONTRIBUTORS.md file.","title":"Index"},{"location":"demos/node_modules/highlight.js/#upgrading-to-version-11","text":"As always, major releases do contain breaking changes which may require action from users. Please read VERSION_11_UPGRADE.md for a detailed summary of breaking changes and any actions you may need to take.","title":"Upgrading to Version 11"},{"location":"demos/node_modules/highlight.js/#support-for-older-versions","text":"Please see SECURITY.md for long-term support information.","title":"Support for older versions"},{"location":"demos/node_modules/highlight.js/#basic-usage","text":"","title":"Basic Usage"},{"location":"demos/node_modules/highlight.js/#in-the-browser","text":"The bare minimum for using highlight.js on a web page is linking to the library along with one of the themes and calling highlightAll : < link rel = \"stylesheet\" href = \"/path/to/styles/default.min.css\" > < script src = \"/path/to/highlight.min.js\" ></ script > < script > hljs . highlightAll ();</ script > This will find and highlight code inside of <pre><code> tags; it tries to detect the language automatically. If automatic detection doesn\u2019t work for you, or you simply prefer to be explicit, you can specify the language manually in the using the class attribute: < pre >< code class = \"language-html\" > ... </ code ></ pre >","title":"In the Browser"},{"location":"demos/node_modules/highlight.js/#plaintext-code-blocks","text":"To apply the Highlight.js styling to plaintext without actually highlighting it, use the plaintext language: < pre >< code class = \"language-plaintext\" > ... </ code ></ pre >","title":"Plaintext Code Blocks"},{"location":"demos/node_modules/highlight.js/#ignoring-a-code-block","text":"To skip highlighting of a code block completely, use the nohighlight class: < pre >< code class = \"nohighlight\" > ... </ code ></ pre >","title":"Ignoring a Code Block"},{"location":"demos/node_modules/highlight.js/#nodejs-on-the-server","text":"The bare minimum to auto-detect the language and highlight some code. // load the library and ALL languages hljs = require ( 'highlight.js' ); html = hljs . highlightAuto ( '<h1>Hello World!</h1>' ). value To load only a \"common\" subset of popular languages: hljs = require ( 'highlight.js/lib/common' ); To highlight code with a specific language, use highlight : html = hljs . highlight ( '<h1>Hello World!</h1>' , { language : 'xml' }). value See Importing the Library for more examples of require vs import usage, etc. For more information about the result object returned by highlight or highlightAuto refer to the api docs .","title":"Node.js on the Server"},{"location":"demos/node_modules/highlight.js/#supported-languages","text":"Highlight.js supports over 180 languages in the core library. There are also 3rd party language definitions available to support even more languages. You can find the full list of supported languages in SUPPORTED_LANGUAGES.md .","title":"Supported Languages"},{"location":"demos/node_modules/highlight.js/#custom-usage","text":"If you need a bit more control over the initialization of Highlight.js, you can use the highlightElement and configure functions. This allows you to better control what to highlight and when . For example, here\u2019s the rough equivalent of calling highlightAll but doing the work manually instead: document . addEventListener ( 'DOMContentLoaded' , ( event ) => { document . querySelectorAll ( 'pre code' ). forEach (( el ) => { hljs . highlightElement ( el ); }); }); Please refer to the documentation for configure options.","title":"Custom Usage"},{"location":"demos/node_modules/highlight.js/#using-custom-html","text":"We strongly recommend <pre><code> wrapping for code blocks. It's quite semantic and \"just works\" out of the box with zero fiddling. It is possible to use other HTML elements (or combos), but you may need to pay special attention to preserving linebreaks. Let's say your markup for code blocks uses divs: < div class = 'code' > ... </ div > To highlight such blocks manually: // first, find all the div.code blocks document . querySelectorAll ( 'div.code' ). forEach ( el => { // then highlight each hljs . highlightElement ( el ); }); Without using a tag that preserves linebreaks (like pre ) you'll need some additional CSS to help preserve them. You could also pre and post-process line breaks with a plug-in , but we recommend using CSS . To preserve linebreaks inside a div using CSS: div . code { white-space : pre ; }","title":"Using custom HTML"},{"location":"demos/node_modules/highlight.js/#using-with-vuejs","text":"See highlightjs/vue-plugin for a simple Vue plugin that works great with Highlight.js. An example of vue-plugin in action: < div id = \"app\" > <!-- bind to a data property named `code` --> < highlightjs autodetect :code = \"code\" /> <!-- or literal code works as well --> < highlightjs language = 'javascript' code = \"var x = 5;\" /> </ div >","title":"Using with Vue.js"},{"location":"demos/node_modules/highlight.js/#using-web-workers","text":"You can run highlighting inside a web worker to avoid freezing the browser window while dealing with very big chunks of code. In your main script: addEventListener ( 'load' , () => { const code = document . querySelector ( '#code' ); const worker = new Worker ( 'worker.js' ); worker . onmessage = ( event ) => { code . innerHTML = event . data ; } worker . postMessage ( code . textContent ); }); In worker.js: onmessage = ( event ) => { importScripts ( '<path>/highlight.min.js' ); const result = self . hljs . highlightAuto ( event . data ); postMessage ( result . value ); };","title":"Using Web Workers"},{"location":"demos/node_modules/highlight.js/#importing-the-library","text":"First, you'll likely be installing the library via npm or yarn -- see Getting the Library .","title":"Importing the Library"},{"location":"demos/node_modules/highlight.js/#nodejs-require","text":"Requiring the top-level library will load all languages: // require the highlight.js library, including all languages const hljs = require ( './highlight.js' ); const highlightedCode = hljs . highlightAuto ( '<span>Hello World!</span>' ). value For a smaller footprint, load our common subset of languages (the same set used for our default web build). const hljs = require ( 'highlight.js/lib/common' ); For the smallest footprint, load only the languages you need: const hljs = require ( 'highlight.js/lib/core' ); hljs . registerLanguage ( 'xml' , require ( 'highlight.js/lib/languages/xml' )); const highlightedCode = hljs . highlight ( '<span>Hello World!</span>' , { language : 'xml' }). value","title":"Node.js / require"},{"location":"demos/node_modules/highlight.js/#es6-modules-import","text":"Note: You can also import directly from fully static URLs, such as our very own pre-built ES6 Module CDN resources. See Fetch via CDN for specific examples. The default import will register all languages: import hljs from 'highlight.js' ; It is more efficient to import only the library and register the languages you need: import hljs from 'highlight.js/lib/core' ; import javascript from 'highlight.js/lib/languages/javascript' ; hljs . registerLanguage ( 'javascript' , javascript ); If your build tool processes CSS imports, you can also import the theme directly as a module: import hljs from 'highlight.js' ; import 'highlight.js/styles/github.css' ;","title":"ES6 Modules / import"},{"location":"demos/node_modules/highlight.js/#getting-the-library","text":"You can get highlight.js as a hosted, or custom-build, browser script or as a server module. Right out of the box the browser script supports both AMD and CommonJS, so if you wish you can use RequireJS or Browserify without having to build from source. The server module also works perfectly fine with Browserify, but there is the option to use a build specific to browsers rather than something meant for a server. Do not link to GitHub directly. The library is not supposed to work straight from the source, it requires building. If none of the pre-packaged options work for you refer to the building documentation . On Almond. You need to use the optimizer to give the module a name. For example: r.js -o name = hljs paths.hljs = /path/to/highlight out = highlight.js","title":"Getting the Library"},{"location":"demos/node_modules/highlight.js/#fetch-via-cdn","text":"A prebuilt version of Highlight.js bundled with many common languages is hosted by several popular CDNs. When using Highlight.js via CDN you can use Subresource Integrity for additional security. For details see DIGESTS.md .","title":"Fetch via CDN"},{"location":"demos/node_modules/highlight.js/#cdnjs-link","text":"","title":"cdnjs (link)"},{"location":"demos/node_modules/highlight.js/#common-js","text":"< link rel = \"stylesheet\" href = \"https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.5.1/styles/default.min.css\" > < script src = \"https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.5.1/highlight.min.js\" ></ script > <!-- and it's easy to individually load additional languages --> < script src = \"https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.5.1/languages/go.min.js\" ></ script >","title":"Common JS"},{"location":"demos/node_modules/highlight.js/#es6-modules","text":"< link rel = \"stylesheet\" href = \"https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.5.1/styles/dark.min.css\" > < script type = \"module\" > import hljs from 'https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.5.1/es/highlight.min.js' ; // and it's easy to individually load additional languages import go from 'https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.5.1/es/languages/go.min.js' ; hljs . registerLanguage ( 'go' , go ); </ script >","title":"ES6 Modules"},{"location":"demos/node_modules/highlight.js/#jsdelivr-link","text":"","title":"jsdelivr (link)"},{"location":"demos/node_modules/highlight.js/#common-js_1","text":"< link rel = \"stylesheet\" href = \"https://cdn.jsdelivr.net/gh/highlightjs/cdn-release@11.5.1/build/styles/default.min.css\" > < script src = \"https://cdn.jsdelivr.net/gh/highlightjs/cdn-release@11.5.1/build/highlight.min.js\" ></ script > <!-- and it's easy to individually load additional languages --> < script src = \"https://cdn.jsdelivr.net/gh/highlightjs/cdn-release@11.5.1/build/languages/go.min.js\" ></ script >","title":"Common JS"},{"location":"demos/node_modules/highlight.js/#es6-modules_1","text":"< link rel = \"stylesheet\" href = \"https://cdn.jsdelivr.net/gh/highlightjs/cdn-release@11.5.1/build/styles/default.min.css\" > < script type = \"module\" > import hljs from 'https://cdn.jsdelivr.net/gh/highlightjs/cdn-release@11.5.1/build/es/highlight.min.js' ; // and it's easy to individually load additional languages import go from 'https://cdn.jsdelivr.net/gh/highlightjs/cdn-release@11.5.1/build/es/languages/go.min.js' ; hljs . registerLanguage ( 'go' , go ); </ script >","title":"ES6 Modules"},{"location":"demos/node_modules/highlight.js/#unpkg-link","text":"","title":"unpkg (link)"},{"location":"demos/node_modules/highlight.js/#common-js_2","text":"< link rel = \"stylesheet\" href = \"https://unpkg.com/@highlightjs/cdn-assets@11.5.1/styles/default.min.css\" > < script src = \"https://unpkg.com/@highlightjs/cdn-assets@11.5.1/highlight.min.js\" ></ script > <!-- and it's easy to individually load additional languages --> < script src = \"https://unpkg.com/@highlightjs/cdn-assets@11.5.1/languages/go.min.js\" ></ script >","title":"Common JS"},{"location":"demos/node_modules/highlight.js/#es6-modules_2","text":"< link rel = \"stylesheet\" href = \"https://unpkg.com/@highlightjs/cdn-assets@11.5.1/styles/default.min.css\" > < script type = \"module\" > import hljs from 'https://unpkg.com/@highlightjs/cdn-assets@11.5.1/es/highlight.min.js' ; // and it's easy to individually load & register additional languages import go from 'https://unpkg.com/@highlightjs/cdn-assets@11.5.1/es/languages/go.min.js' ; hljs . registerLanguage ( 'go' , go ); </ script > Note: The CDN-hosted highlight.min.js package doesn't bundle every language. It would be very large. You can find our list of \"common\" languages that we bundle by default on our download page .","title":"ES6 Modules"},{"location":"demos/node_modules/highlight.js/#download-prebuilt-cdn-assets","text":"You can also download and self-host the same assets we serve up via our own CDNs. We publish those builds to the cdn-release GitHub repository. You can easily pull individual files off the CDN endpoints with curl , etc; if say you only needed highlight.min.js and a single CSS file. There is also an npm package @highlightjs/cdn-assets if pulling the assets in via npm or yarn would be easier for your build process.","title":"Download prebuilt CDN assets"},{"location":"demos/node_modules/highlight.js/#download-from-our-website","text":"The download page can quickly generate a custom single-file minified bundle including only the languages you desire. Note: Building from source can produce slightly smaller builds than the website download.","title":"Download from our website"},{"location":"demos/node_modules/highlight.js/#install-via-npm-package","text":"Our NPM package including all supported languages can be installed with NPM or Yarn: npm install highlight.js # or yarn add highlight.js Alternatively, you can build the NPM package from source.","title":"Install via NPM package"},{"location":"demos/node_modules/highlight.js/#build-from-source","text":"The current source code is always available on GitHub. node tools/build.js -t node node tools/build.js -t browser :common node tools/build.js -t cdn :common See our building documentation for more information.","title":"Build from Source"},{"location":"demos/node_modules/highlight.js/#requirements","text":"Highlight.js works on all modern browsers and currently supported Node.js versions. You'll need the following software to contribute to the core library: Node.js >= 12.x npm >= 6.x","title":"Requirements"},{"location":"demos/node_modules/highlight.js/#license","text":"Highlight.js is released under the BSD License. See our LICENSE file for details.","title":"License"},{"location":"demos/node_modules/highlight.js/#links","text":"The official website for the library is https://highlightjs.org/ . Further in-depth documentation for the API and other topics is at http://highlightjs.readthedocs.io/ . A list of the Core Team and contributors can be found in the CONTRIBUTORS.md file.","title":"Links"},{"location":"demos/node_modules/highlight.js/CHANGES/","text":"Version 11.5.1 Packaging: (chore) explicitly set sideEffect for css and scss files, fixes #3504 Version 11.5.0 Themes: - Added Tokyo-Night-dark theme Henri Vandersleyen - Added Tokyo-Night-light theme Henri Vandersleyen New Grammars: Added GraphQL to SUPPORTED_LANGUAGES John Foster Added Macaulay2 to SUPPORTED_LANGUAGES Doug Torrance Grammars: enh(ruby) lots of small Ruby cleanups/improvements Josh Goebel enh(objectivec) add type and variable.language scopes Josh Goebel enh(xml) support processing instructions (#3492) Josh Goebel enh(ruby ) better support multi-line IRB prompts enh(bash) improved keyword $pattern (numbers allowed in command names) Martin Mattel add meta.prompt scope for REPL prompts, etc Josh Goebel fix(markdown) Handle ***Hello world*** without breaking Josh Goebel enh(php) add support for PHP Attributes Wojciech Kania fix(java) prevent false positive variable init on else Josh Goebel enh(php) named arguments Wojciech Kania fix(php) PHP constants Wojciech Kania fix(angelscript) incomplete int8, int16, int32, int64 highlighting Melissa Geels enh(ts) modify TypeScript-specific keywords and types list anydonym fix(brainfuck) fix highlighting of initial ++/-- Christina Hanson fix(llvm) escaping in strings and number formats Flakebi enh(elixir) recognize references to modules Mark Ericksen enh(css): add support for more properties Nicolaos Skimas Version 11.4.0 New Language: Added 3rd party Pine Script grammar to SUPPORTED_LANGUAGES Jeylani B Added 3rd party cURL grammar to SUPPORTED_LANGUAGES highlightjs-curl Themes: Default is now much closer WCAG AA (contrast) (#3402) Josh Goebel Dark now meets WCAG AA (contrast) (#3402) Josh Goebel Added intellij-light theme Pegasis Added felipec theme Felipe Contreras These changes should be for the better and should not be super noticeable but if you're super picky about your colors you may want to intervene here or copy over the older themes from 11.3 or prior. Grammars: enh(twig) update keywords list for symfony (#3453) Matthieu Lempereur enh(arcade) updated to ArcGIS Arcade version 1.16 John Foster enh(php) Left and right-side of double colon Wojciech Kania enh(php) add PHP constants Wojciech Kania enh(php) add PHP 8.1 keywords Wojciech Kania fix(cpp) fix vector<< template false positive (#3437) Josh Goebel enh(php) support First-class Callable Syntax (#3427) Wojciech Kania enh(php) support class constructor call (#3427) Wojciech Kania enh(php) support function invoke (#3427) Wojciech Kania enh(php) Switch highlighter to partially case-insensitive (#3427) Wojciech Kania enh(php) improve namespace and use highlighting (#3427) Josh Goebel enh(php) $this is a variable.language now (#3427) Josh Goebel enh(php) add __COMPILER_HALT_OFFSET__ (#3427) Josh Goebel enh(js/ts) fix => async function title highlights (#3405) Josh Goebel enh(twig) update keywords list (#3415) Matthieu Lempereur fix(python) def, class keywords detected mid-identifier (#3381) Josh Goebel fix(python) Fix recognition of numeric literals followed by keywords without whitespace (#2985) Richard Gibson enh(swift) add SE-0290 unavailability condition (#3382) Bradley Mackey fix(fsharp) Highlight operators, match type names only in type annotations, support quoted identifiers, and other smaller fixes. Melvyn La\u00efly enh(java) add sealed and non-sealed keywords (#3386) Bradley Mackey enh(js/ts) improve CLASS_REFERENCE (#3411) Josh Goebel enh(nsis) Update defines pattern to allow ! (#3417) idleberg enh(nsis) Update language strings pattern to allow ! (#3420) idleberg fix(stan) Updated for Stan 2.28 and other misc. improvements (#3410) enh(nsis) Update variables pattern (#3416) idleberg fix(clojure) Several issues with Clojure highlighting (#3397) Bj\u00f6rn Ebbinghaus fix(clojure) comment macro catches more than it should (#3395) fix(clojure) $ in symbol breaks highlighting fix(clojure) Add complete regex for number detection enh(clojure) Add character mode for character literals fix(clojure) Inconsistent namespaced map highlighting enh(clojure) Add regex mode to regex literal fix(clojure) Remove inconsistent/broken highlighting for metadata enh(clojure) Add punctuation mode for commas. fix(julia) Enable the jldoctest alias (#3432) Fons van der Plas Developer Tools: (chore) add gzip size compression report (#3400) Bradley Mackey Themes: Modified background color in css for Gradient Light and Gradient Dark themes Samia Ali Version 11.3.1 Build: (fix) Grammar CDN modules not generated correctly. (#3363) Josh Goebel Version 11.3.0 Build: add HighlightJS named export (#3295) Josh Goebel add .default named export to CJS builds (#3333) Josh Goebel Parser: add first rough performance testing script (#3280) Austin Schick add throwUnescapedHTML to warn against potential HTML injection Josh Goebel expose regex helper functions via hljs injection Josh Goebel concat lookahead either optional anyNumberOfTimes Grammars: fix(ts) some complex types would classify as JSX (#3278) Josh Goebel fix(js/ts) less false positives for class X extends Y (#3278) Josh Goebel enh(css): add properties from several W3C (Candidate) Recommendations (#3308) fix(js/ts) Float32Array highlighted incorrectly (#3353) Josh Goebel fix(css) single-colon psuedo-elements no longer break highlighting (#3240) Josh Goebel fix(scss) single-colon psuedo-elements no longer break highlighting (#3240) Josh Goebel enh(fsharp) rewrite most of the grammar, with many improvements Melvyn La\u00efly enh(go) better type highlighting, add error type Josh Goebel fix(js/ts) regex inside SUBST is no longer highlighted Josh Goebel fix(python) added support for unicode identifiers (#3280) Austin Schick enh(css/less/stylus/scss) improve consistency of function dispatch (#3301) Josh Goebel enh(css/less/stylus/scss) detect block comments more fully (#3301) Josh Goebel fix(cpp) switch is a keyword (#3312) Josh Goebel fix(cpp) fix xor_eq keyword highlighting. Denis Kovalchuk enh(c,cpp) highlight type modifiers as type (#3316) Josh Goebel enh(css/less/stylus/scss) add support for CSS Grid properties monochromer enh(java) add support for Java Text Block (#3322) Teletha enh(scala) add missing do and then keyword (#3323) Nicolas Stucki enh(scala) add missing enum , export and given keywords (#3328) Nicolas Stucki enh(scala) remove symbol syntax and fix quoted code syntax (#3324) Nicolas Stucki enh(scala) add Scala 3 extension soft keyword (#3326) Nicolas Stucki enh(scala) add Scala 3 end soft keyword (#3327) Nicolas Stucki enh(scala) add inline soft keyword (#3329) Nicolas Stucki enh(scala) add using soft keyword (#3330) Nicolas Stucki enh(fsharp) added f# alias (#3337) Bahnschrift enh(bash) added gnu core utilities (#3342) katzeprior enh(nsis) add new NSIS commands (#3351) idleberg fix(nsis) set case_insensitive to true (#3351) idleberg fix(css/less/stylus/scss) highlight single-colon psuedo-elements properly (#3240) zsoltlengyelit fix(css) add css hex color alpha support (#3360) ierehon1905 Version 11.2.0 Build: fix: run Node build CSS files thru CSS processor also (#3284) Josh Goebel Parser: fix(csharp) Fix assignments flagging as functions Josh Goebel fix(types) Fix some type definition issues (#3274) Josh Goebel fix(verilog) Fix directive handling (#3283) Josh Goebel fix(verilog) Fix binary number false positives on _ (#3283) Josh Goebel enh(verilog) __FILE__ and __LINE__ constants (#3283) Josh Goebel enh(verilog) tighten keyword regex (#3283) Josh Goebel Grammars: enh(swift) Add isolated / nonisolated keywords (#3296) Bradley Mackey New Languages: Added 3rd party X# grammar to SUPPORTED_LANGUAGES Patrick Kruselburger Added 3rd party MKB grammar to SUPPORTED_LANGUAGES (#3297) Dereavy Version 11.1.0 Grammars: fix(csharp) add missing catch keyword (#3251) Konrad Rudolph add additional keywords to csp.js (#3244) Elijah Conners feat(css) handle css variables syntax (#3239) Thanos Karagiannis fix(markdown) Images with empty alt or links with empty text (#3233) Josh Goebel enh(powershell) added pwsh alias (#3236) tebeco fix(r) fix bug highlighting examples in doc comments Konrad Rudolph fix(python) identifiers starting with underscore not highlighted (#3221) Antoine Lambert enh(clojure) added edn alias (#3213) Stel Abrego enh(elixir) much improved regular expression sigil support (#3207) Josh Goebel enh(elixir) updated list of keywords (#3212) Angelika Tyborska fix(elixir) fixed number detection when numbers start with a zero (#3212) Angelika Tyborska fix(ps1) Flag highlighted incorrectly (#3167) Pankaj Patil fix(latex) Allow wider syntax for magic comments (#3243) Benedikt Wilde fix(js/ts) Constants may include numbers Josh Goebel Version 11.0.0 This is a major release. As such it contains breaking changes which may require action from users. Please read VERSION_11_UPGRADE.md for a detailed summary of all breaking changes. Potentially breaking changes Unless otherwise attributed items below are thanks to Josh Goebel (ref: #2558 ). The below list should only be considered to be a high-level summary. Deprecations / Removals / API Changes: initHighlighting() and initHighlightingOnLoad() deprecated. Use highlightAll() . highlightBlock(el) deprecated. Use highlightElement(el) before:highlightBlock & after:highlightBlock callbacks deprecated. Use equivalent highlightElement callbacks. highlight(languageName, code, ignoreIllegals, continuation) signature deprecated. Use highlight(code, {language, ignoreIllegals}) . Deprecated highlight() signature no longer supports continuation argument. tabReplace option removed. Consider a plugin. useBR option removed. Consider a plugin or CSS. requireLanguage() removed. Use getLanguage() . endSameAsBegin mode key removed. Use hljs.END_SAME_AS_BEGIN . lexemes mode key removed. Use keywords.$pattern . The return values/keys of some APIs have changed slightly. Security: HTML auto-passthru has been removed. Consider a plugin. Unescaped HTML is now stripped (for security). A warning is logged to the console. (#3057) Josh Goebel Themes: The default padding of all themes increases (0.5em => 1em). schoolbook has been updated to remove the lined background. github updated to better match modern GitHub (#1616) Jan Pilzer github-gist has been removed in favor of github Jan Pilzer Base16 named themes have been updated to their \"canonical\" versions nnfx updated for v11 xml styles and improved css support Language Grammars: Default CDN build drops support for several languages. Some language grammar files have been removed. Some redundant language aliases have been removed. Other changes Parser: enh(vala) improve language detection for Vala (#3195) Konrad Rudolph enh(r) add support for operators, fix number highlighting bug (#3194, #3195) Konrad Rudolph enh(parser) add beginScope and endScope to allow separate scoping begin and end (#3159) Josh Goebel enh(parsed) endScope now supports multi-class matchers as well (#3159) Josh Goebel enh(parser) highlightElement now always tags blocks with a consistent language-[name] class Josh Goebel subLanguage span tags now also always have the language- prefix added enh(parser) support multi-class matchers (#3081) Josh Goebel enh(parser) Detect comments based on english like text, rather than keyword list Josh Goebel adds title.class.inherited sub-scope support Josh Goebel adds title.class sub-scope support (#3078) Josh Goebel adds title.function sub-scope support (#3078) Josh Goebel adds beforeMatch compiler extension (#3078) Josh Goebel adds cssSelector configuration option (#3180) James Edington Grammars: enh(all) .meta-keyword => .meta .keyword (nested scopes) (#3167) Josh Goebel enh(all) .meta-string => .meta .string (nested scopes) (#3167) Josh Goebel enh(swift) add actor keyword (#3171) Bradley Mackey enh(crystal) highlight variables (#3154) Josh Goebel fix(ruby) Heredoc without interpolation (#3154) Josh Goebel enh(swift) add @resultBuilder attribute (#3151) Bradley Mackey enh(processing) added pde alias (#3142) Dylan McBean enh(thrift) Use proper scope for types Josh Goebel enh(java) Simplified class-like matcher (#3078) Josh Goebel enh(cpp) Simplified class-like matcher (#3078) Josh Goebel enh(rust) Simplified class-like matcher (#3078) Josh Goebel enh(actionscript) Simplified class-like matcher (#3078) Josh Goebel enh(arcade) function.title => title.function (#3078) Josh Goebel enh(autoit) function.title => title.function (#3078) Josh Goebel enh(c) function.title => title.function (#3078) Josh Goebel enh(rust) support function invoke and impl (#3078) Josh Goebel chore(properties) disable auto-detection #3102 Josh Goebel fix(properties) fix incorrect handling of non-alphanumeric keys #3102 Egor Rogov enh(java) support functions with nested template types (#2641) Josh Goebel enh(java) highlight types and literals separate from keywords (#3074) Josh Goebel enh(shell) add alias ShellSession Ryan Mulligan enh(shell) consider one space after prompt as part of prompt Ryan Mulligan fix(nginx) fix bug with $ and @ variables Josh Goebel enh(nginx) improving highlighting of some sections Josh Goebel fix(vim) variable names may not be zero length Josh Goebel enh(sqf) Updated keywords to Arma 3 v2.02 (#3084) R3voA3 enh(sqf) Refactored function regex to match CBA component func naming scheme (#3181) JonBons enh(nim) highlight types properly (not as built-ins) Josh Goebel (chore) throttle deprecation messages (#3092) [Mihkel Eidast][] enh(c) Update keyword list for C11/C18 (#3010) Josh Goebel enh(parser) highlight object properties (#3072) Josh Goebel enh(javascript/typescript) highlight object properties (#3072) Josh Goebel enh(haskell) add support for BinaryLiterals (#3150) Martijn Bastiaan enh(haskell) add support for NumericUnderscores (#3150) Martijn Bastiaan enh(haskell) add support for HexFloatLiterals (#3150) Martijn Bastiaan fix(c,cpp) allow declaring multiple functions and (for C++) parenthetical initializers (#3155) Erik Demaine enh(rust) highlight raw byte string literals correctly (#3173) Nico Abram fix(cpp) fix detection of common functions that are function templates (#3178) Kris van Rens enh(cpp) add various keywords and commonly used types for hinting (#3178) Kris van Rens enh(cpp) cleanup reserved keywords and type lists (#3178) Kris van Rens New Languages: Added 3rd party Glimmer grammar to SUPPORTED_LANGUAGES(#3123) NullVoxPopuli Added Wren support Josh Goebel Added NestedText support Josh Goebel Added WebAssembly language grammar Josh Goebel Added 3rd party Splunk search processing language grammar to SUPPORTED_LANGUAGES (#3090) Wei Su Added 3rd party ZenScript grammar to SUPPORTED_LANGUAGES(#3106) Jared Luboff Added 3rd party Papyrus grammar to SUPPORTED_LANGUAGES(#3125) Mike Watling Theme Improvements: Added all official Base16 themes (over 150 new themes) Josh Goebel chore(themes) remove builtin-name CSS class (#3119) Josh Goebel chore(theme) Update GitHub theme css to match GitHub's current styling (#1616) Jan Pilzer chore(theme) Update Srcery theme css to match its Emacs implementation Chen Bin New Themes: DeviBeans Dark by Farzad Sadeghi GitHub Dark and GitHub Dark Dimmed Jan Pilzer Dev Improvements: (chore) greatly improve match scope visualization in dev tool (#3126) NullVoxPopuli (fix) CSS used for devtool needed an adjustment to fix too wide of content (#3133) NullVoxPopuli Version 10.7.1 fix(parser) Resolves issues with TypeScript types Josh Goebel Version 10.7.0 Parser: keywords now have a maximum # of times they provide relevance (#3129) Josh Goebel enh(api) add unregisterLanguage method (#3009) Antoine du Hamel enh: Make alias registration case insensitive (#3026) David Ostrovsky fix(parser) highlightAll() now works if the library is lazy loaded Josh Goebel New Languages: Added 3rd party RiScript grammar to SUPPORTED_LANGUAGES (#2988) [John C][] Added 3rd party HLSL grammar to SUPPORTED_LANGUAGES (#3002) Stef Levesque Added 3rd party Q# grammar to SUPPORTED_LANGUAGES(#3006) Vyron Vasileiadis Language grammar improvements: enh(js/ts) class references (CamelCase) are highlighted (#3169) Josh Goebel enh(js/ts) constants (ALL_CAPS) are highlighted (#3169) Josh Goebel enh(js/ts) highlights function invokation (#3169) Josh Goebel enh(js/ts) functions assigned to variables are now highlighted title.function (#3169) Josh Goebel enh(parser) smarter detection of comments (#2827) Josh Goebel fix(python) allow keywords immediately following numbers (#2985) Josh Goebel fix(xml) char immediately following tag close mis-highlighted (#3044) Josh Goebel fix(ruby) fix defined?() mis-highlighted as def (#3025) Josh Goebel fix(c) comments after #include <str> blocks (#3041) Josh Goebel fix(cpp) comments after #include <str> blocks (#3041) Josh Goebel enh(cpp) Highlight all function dispatches (#3005) Josh Goebel enh(python) support type hints and better type support (#2972) Josh Goebel enh(gml) Add additional GML 2.3 keywords (#2984) xDGameStudios fix(cpp) constructor support for initializers (#3001) Josh Goebel enh(php) Add trait to class-like naming patterns (#2997) Ayesh enh(php) Add Stringable , UnhandledMatchError , and WeakMap classes/interfaces (#2997) Ayesh enh(php) Add mixed to list of keywords (#2997) Ayesh enh(php) Add support binary, octal, hex and scientific numerals with underscore separator support (#2997) Ayesh enh(php) Add support for Enums (#3004) Ayesh enh(ecmascript) Add built-in types Vaibhav Chanana enh(kotlin) Add kts as an alias for Kotlin (#3021) Vaibhav Chanana enh(css) Add font-smoothing to attributes list for CSS (#3027) AndyKIron fix(python) Highlight print and exec as a builtin (#1468) Samuel Colvin fix(csharp) Fix unit being highlighted instead of uint (#3046) [Spacehamster][] enh(swift) add async/await keywords (#3048) Bradley Mackey Deprecations: highlight(languageName, code, ignoreIllegals, continuation) deprecated as of 10.7 Please use the newer API which takes code and then accepts options as an object IE: highlight(code, {language, ignoreIllegals}) continuation is for internal use only and no longer supported highlightBlock(el) deprecated as of 10.7. Please use highlightElement(el) instead. Plugin callbacks renamed before/after:highlightBlock => before/after:highlightElement Plugin callback now takes el vs block attribute The old API and callbacks will be supported until v12. Version 10.6.0 New Languages: Added 3rd party Laravel Blade grammar to SUPPORTED_LANGUAGES (#2944) Michael Newton Language grammar improvements: enh(scala) fix triple quoted strings (#2987) Josh Goebel enh(perl) Much improved regex detection (#2960) Josh Goebel enh(swift) Improved highlighting for operator and precedencegroup declarations. (#2938) Steven Van Impe fix(xml) Support single-character namespaces. (#2957) Jan Pilzer enh(ruby) Support for character literals (#2950) Vaibhav Chanana enh(powershell) Add three VALID_VERBS and update the reference link (#2981) davidhcefx fix(php) Highlighting of anonymous functions without {} block Vaibhav Chanana Grammar Deprecations: Deprecate c-like , though you should not be using it directly anyways. will be removed in v11. c and cpp are now wholly unique grammars that will diverge over time Parser: new simpler highlightAll() API (#2962) Josh Goebel this should be a drop-in replacement for both initHighlighting() and initHighlightingOnLoad() note: it does not prevent itself from being called multiple times (as the previous API did) beginKeyword no longer bestows double relevance (#2953) Josh Goebel allow keywords to be an array of strings Josh Goebel add modes.MATCH_NOTHING_RE that will never match This can be used with end to hold a mode open (it must then be ended with endsParent in one of it's children modes) Josh Goebel Deprecations: initHighlighting() and initHighlightingOnLoad() deprecated. Please use the new highlightAll() API instead. Deprecated as of 10.6. These will both be aliases to highlightAll in v11. Version 10.5.0 Build: Add Subresource Integrity digest lists to cdn-assets Josh Goebel R and VB.net grammars now ship in our default build ( :common ) Josh Goebel Parser: add match as sugar for simple begin only matches (#2834) Josh Goebel allow illegal to also be an array of regex (#2834) Josh Goebel add compilerExtensions allows grammers to influence mode compilation (#2834) Josh Goebel some internal pieces are now simple compiler extensions New Languages: Added 3rd party Red & Rebol grammar to SUPPORTED_LANGUAGES (#2872) Oldes Huhuman Language grammar improvements: enh: CSS grammars now share common foundation, keywords, etc. (#2937) Josh Goebel enh(css): many consistency improvements enh(scss): many consistency improvements enh(stylus): many consistency improvements enh(less): many consistency improvements enh(cpp): Support C++ pack expansion in function arguments Martin D\u00f8rum enh(makefile): Add make as an alias (#2883) tripleee enh(swift) Improved grammar for strings (#2819) Steven Van Impe enh(swift) Grammar improvements (#2908) Steven Van Impe New grammar for keywords and built-ins Added support for operator highlighting New grammar for attributes Added support for quoted identifiers, implicit parameters, and property wrapper projections Support for more complex expressions in string interpolation enh(swift) Improved highlighting for types and generic arguments (#2920) Steven Van Impe enh(swift) Improved highlighting for functions, initializers, and subscripts (#2930) Steven Van Impe fix(http) avoid recursive sublanguage and tighten rules (#2893) Josh Goebel fix(asciidoc): Handle section titles level 5 (#2868) Vaibhav Chanana fix(asciidoc): Support unconstrained emphasis syntax (#2869) Guillaume Grossetie enh(scheme) Allow [] for argument lists (#2913) Josh Goebel enh(vb) Large rework of VB.net grammar (#2808) Jan Pilzer Adds support for Date data types, see (#2775) Adds support for REM comments and fixes ''' doctags (#2875) (#2851) Custom number mode to support VB.net specific number flags Hex (&H), Oct (&O), and binary (&B) prefixes Separating digits with underscores: 90_946 Type suffixes: 123UI (unsigned integer) Improves directives detection and adds support for Enable , Disable , and Then keywords Adds more markup tests fix(javascript) Empty block-comments break highlighting (#2896) Jan Pilzer enh(dart) Fix empty block-comments from breaking highlighting (#2898) Jan Pilzer enh(dart) Fix empty doc-comment eating next line Jan Pilzer enh(asciidoc) Adds support for unconstrained bold syntax (#2869) Guillaume Grossetie enh(c-like) Incorrect highlighting for interger suffix (#2919) Vaibhav Chanana enh(properties) Correctly handle trailing backslash (#2922) Vaibhav Chanana Recent Deprecations: HTML \"merging\" is deprecated. (#2873) Josh Goebel HTML inside <pre> blocks will no longer be magically merged back into the highlighted code's HTML result - it will instead be silently removed. Consider using a plugin if you truly need this functionality Deprecated as of 10.5.0 - will be removed in v11. tabReplace option deprecated. (#2873) Josh Goebel Consider: Use the CSS tab-size property, or simply pre-process the text yourself before rendering the initial HTML otherwise, use a plugin Deprecated as of 10.5.0 - will be removed in v11. useBR option deprecated. (#2559) Josh Goebel Recommended: You really should just use the HTML <pre> tag or perhaps try CSS white-space: pre; otherwise, use a plugin Deprecated as of 10.3.0 - will be removed in v11. requireLanguage API is deprecated, will be removed in v11.0. Consider: Use getLanguage (with custom error handling) or built-time dependencies. See Library API for more information. Deprecated as of 10.4.0 - will be removed in v11. Version 10.4.1 (tentative) Security (fix) Exponential backtracking fixes for: Josh Goebel cpp handlebars gams perl jboss-cli r erlang-repl powershell routeros (fix) Polynomial backtracking fixes for: Josh Goebel asciidoc reasonml latex kotlin gcode d aspectj moonscript coffeescript/livescript csharp scilab crystal elixir basic ebnf ruby fortran/irpf90 livecodeserver yaml x86asm dsconfig markdown ruleslanguage xquery sqf Very grateful to Michael Schmidt for all the help. Version 10.4.0 A largish release with many improvements and fixes from quite a few different contributors. Enjoy! Deprecations: (chore) requireLanguage is deprecated. Prefer getLanguage (with custom error handling) or built-time dependencies. See Library API for more information. Parser: enh(parser) use negative look-ahead for beginKeywords support (#2813) Josh Goebel enh(grammars) allow classNameAliases for more complex grammars Josh Goebel fix(vue): Language name now appears in CSS class (#2807) Michael Rush (chore) Clean up all regexs to be UTF-8 compliant/ready (#2759) Josh Goebel enh(grammars) allow classNameAliases for more complex grammars Josh Goebel New Languages: Added 3rd party Chapel grammar to SUPPORTED_LANGUAGES (#2806) Brad Chamberlain Added BBCode grammar to SUPPORTED_LANGUAGES (#2867) Paul Reid enh(javascript) Added node-repl for Node.js REPL sessions (#2792) Marat Nagayev Language Improvements: enh(shell) Recognize prompts which contain tilde ~ (#2859) Guillaume Grossetie enh(shell) Add support for multiline commands with line continuation \\ (#2861) Guillaume Grossetie enh(autodetect) Over 30+ improvements to auto-detect (#2745) Josh Goebel 4-5% improvement in auto-detect against large sample set properties, angelscript, lsl, javascript, n1ql, ocaml, ruby protobuf, hy, scheme, crystal, yaml, r, vbscript, groovy python, java, php, lisp, matlab, clojure, csharp, css fix(r) fixed keywords not properly spaced (#2852) Josh Goebel fix(javascript) fix potential catastrophic backtracking (#2852) Josh Goebel fix(livescript) fix potential catastrophic backtracking (#2852) Josh Goebel bug(xml) XML grammar was far too imprecise/fuzzy Josh Goebel enh(xml) Improve precision to prevent false auto-detect positives Josh Goebel fix(js/ts) Prevent for/while/if/switch from falsly matching as functions (#2803) Josh Goebel enh(julia) Update keyword lists for Julia 1.x (#2781) Fredrik Ekre enh(python) Match numeric literals per the language reference Richard Gibson enh(ruby) Match numeric literals per language documentation Richard Gibson enh(javascript) Match numeric literals per ECMA-262 spec Richard Gibson enh(java) Match numeric literals per Java Language Specification Richard Gibson enh(swift) Match numeric literals per language reference Richard Gibson enh(php) highlight variables (#2785) Taufik Nurrohman fix(python) Handle comments on decorators (#2804) Jonathan Sharpe enh(diff) improve highlighting of diff for git patches [Florian Bezdeka][] fix(llvm) lots of small improvements and fixes (#2830) Josh Goebel enh(mathematica) Rework entire implementation Patrick Scheibe Correct matching of the many variations of Mathematica's numbers Matching of named-characters aka special symbols like \\[Gamma] Updated list of version 12.1 built-in symbols Matching of patterns, slots, message-names and braces fix(swift) Handle keywords that start with # Marcus Ortiz enh(swift) Match some keyword Marcus Ortiz enh(swift) Match @main attribute Marcus Ortiz Dev Improvements: chore(dev) add theme picker to the tools/developer tool (#2770) Josh Goebel fix(dev) the Vue.js plugin no longer throws an exception when hljs is not in the global namespace Kyle Brown New themes: StackOverflow Dark by Jan Pilzer StackOverflow Light by Jan Pilzer Version 10.3.1 Prior version let some look-behind regex sneak in, which does not work yet on Safari. This release removes those incompatible regexes. Fix: fix(Safari) Remove currently unsupported look-behind regex ( fix ) Josh Goebel Version 10.3.0 Language Improvements: enh(latex) Complete ground up rewrite of LaTex grammar schtandard fix(cpp) implement backslash line continuation in comments (#2757) Konrad Rudolph fix(cpp) improve parsing issues with templates (#2752) Josh Goebel enh(cpp) add support for enum (struct|class) and union (#2752) Josh Goebel fix(js/ts) Fix nesting of {} inside template literals SUBST expression (#2748) Josh Goebel enh(js/ts) Highlight class methods as functions (#2727) Josh Goebel fix(js/ts) constructor is now highlighted as a function title (not keyword) (#2727) Josh Goebel fix(c-like) preprocessor directives not detected after else (#2738) Josh Goebel enh(javascript) allow # for private class fields (#2701) Chris Krycho fix(js) prevent runaway regex (#2746) Josh Goebel fix(bash) enh(bash) allow nested params (#2731) Josh Goebel fix(python) Fix highlighting of keywords and strings (#2713, #2715) Konrad Rudolph fix(fsharp) Prevent (*) from being detected as a multi-line comment Josh Goebel enh(bash) add support for heredocs (#2684) Josh Goebel enh(r) major overhaul of the R language grammar (and fix a few bugs) (#2680) Konrad Rudolph enh(csharp) Add all C# 9 keywords, and other missing keywords (#2679) David Pine enh(objectivec) Add objective-c++ and obj-c++ aliases for Objective-C Josh Goebel enh(java) Add support for record (#2685) Josh Goebel fix(csharp) prevent modifier keywords wrongly flagged as title (#2683) Josh Goebel enh(axapta) Update keyword list for Axapta (X++) (#2686) Ryan Jonasson fix(fortran) FORTRAN 77-style comments (#2677) Philipp Engel fix(javascript) Comments inside params should be highlighted (#2702) Josh Goebel fix(scala) Comments inside class header should be highlighted (#1559) Josh Goebel fix(c-like) Correctly highlight modifiers ( final ) in class declaration (#2696) Josh Goebel enh(angelscript) Improve heredocs, numbers, metadata blocks (#2724) Melissa Geels enh(javascript) Implement Numeric Separators (#2617) Antoine du Hamel enh(typescript) TypeScript also gains support for numeric separators (#2617) Antoine du Hamel enh(php) Add support for PHP 8 match keyword and add php8 as an alias (#2733) Ayesh Karunaratne fix(handlebars) Support if else keyboards (#2659) Tom Wallace Deprecations: useBR option deprecated and will be removed in v11.0. (#2559) Josh Goebel Version 10.2.1 Parser Engine: fix(parser) complete fix for resuming matches from same index (#2678) Josh Goebel Version 10.2.0 Parser Engine: (fix) When ignoring a potential match highlighting can terminate early (#2649) Josh Goebel New themes: Gradient Light by Samia Ali Deprecations: fixMarkup is now deprecated and will be removed in v11.0. (#2534) Josh Goebel Big picture: Add simple Vue plugin for basic use cases (#2544) Josh Goebel Language Improvements: fix(bash) Fewer false positives for keywords in arguments (#2669) sirosen fix(js) Prevent long series of /////// from causing freezes (#2656) Josh Goebel enh(csharp) Add init and record keywords for C# 9.0 (#2660) Youssef Victor enh(matlab) Add new R2019b arguments keyword and fix enumeration keyword (#2619) Andrew Janke fix(kotlin) Remove very old keywords and update example code (#2623) kageru fix(night) Prevent object prototypes method values from being returned in getLanguage (#2636) night enh(java) Add support for enum , which will identify as a class now (#2643) ezksd enh(nsis) Add support for NSIS 3.06 commands (#2653) idleberg enh(php) detect newer more flexible HEREdoc syntax (#2658) eytienne Version 10.1.1 Fixes: Resolve issue on Node 6 due to dangling comma (#2608) Edwin Hoogerbeets Resolve index.d.ts is not a module error (#2603) Josh Goebel Version 10.1.0 New themes: NNFX and NNFX-dark by Jim Mason lioshi by lioshi Parser Engine: (parser) Now escapes quotes in text content when escaping HTML (#2564) Josh Goebel (parser) Adds keywords.$pattern key to grammar definitions (#2519) Josh Goebel (parser) Adds SHEBANG utility mode Josh Goebel (parser) Adds registerAliases method (#2540) Taufik Nurrohman (enh) Added on:begin callback for modes (#2261) Josh Goebel (enh) Added on:end callback for modes (#2261) Josh Goebel (enh) Added ability to programatically ignore begin and end matches (#2261) Josh Goebel (enh) Added END_SAME_AS_BEGIN mode to replace endSameAsBegin parser attribute (#2261) Josh Goebel (fix) fixMarkup would rarely destroy markup when useBR was enabled (#2532) Josh Goebel Deprecations: htmlbars grammar is now deprecated. Use handlebars instead. (#2344) Nils Knappmeier when using highlightBlock result.re deprecated. Use result.relevance instead. (#2552) Josh Goebel ditto for result.second_best.re => result.second_best.relevance (#2552) lexemes is now deprecated in favor of keywords.$pattern key (#2519) Josh Goebel endSameAsBegin is now deprecated. (#2261) Josh Goebel Language Improvements: fix(groovy) strings are not allowed inside ternary clauses (#2217) Josh Goebel fix(typescript) add readonly keyword (#2562) Martin (Lhoerion) fix(javascript) fix regex inside parens after a non-regex (#2530) Josh Goebel enh(typescript) use identifier to match potential keywords, preventing false positivites (#2519) Josh Goebel enh(javascript) use identifier to match potential keywords, preventing false positivites (#2519) Josh Goebel [enh] Add OPTIMIZE: and HACK: to the labels highlighted inside comments Josh Goebel enh(typescript/javascript/coffeescript/livescript) derive ECMAscript keywords from a common foudation (#2518) Josh Goebel enh(typescript) add setInterval, setTimeout, clearInterval, clearTimeout (#2514) Josh Goebel enh(javascript) add setInterval, setTimeout, clearInterval, clearTimeout (#2514) Vania Kucher enh(cpp) add pair , make_pair , priority_queue as built-ins (#2538) Hankun Lin enh(cpp) recognize priority_queue pair as cpp containers (#2541) Hankun Lin fix(javascript) prevent set keyword conflicting with setTimeout, etc. (#2514) Vania Kucher fix(cpp) Fix highlighting of unterminated raw strings (#2261) David Benjamin fix(javascript) => function with nested () in params now works (#2502) Josh Goebel fix(typescript) => function with nested () in params now works (#2502) Josh Goebel fix(yaml) Fix tags to include non-word characters (#2486) Peter Plantinga fix(swift) @objcMembers was being partially highlighted (#2543) Nick Randall enh(dart) Add late and required keywords, the Never built-in type, and nullable built-in types (#2550) Sam Rawlins enh(erlang) Add underscore separators to numeric literals (#2554) Sergey Prokhorov enh(handlebars) Support for sub-expressions, path-expressions, hashes, block-parameters and literals (#2344) Nils Knappmeier enh(protobuf) Support multiline comments (#2597) Pavel Evstigneev fix(toml) Improve key parsing (#2595) Antoine du Hamel Version 10.0.2 Brower build: Issue (bug) Fix: Version 10 fails to load as CommonJS module. (#2511) Josh Goebel Issue (removal) AMD module loading support has been removed. (#2511) Josh Goebel Parser Engine Changes: Issue fix(parser) Fix freez issue with illegal 0 width matches (#2524) Josh Goebel Version 10.0.1 Parser Engine Changes: (bug) Fix sublanguage with no relevance score (#2506) Josh Goebel Version 10.0.0 New languages: add(php-template) Explicit language to detect PHP templates (vs xml) Josh Goebel enh(python) Added python-repl for Python REPL sessions add(never) Added 3rd party Never language support New themes: Srcery by Chen Bin Parser Engine Changes: (bug) Fix beginKeywords to ignore . matches (#2434) Josh Goebel (enh) add before:highlight plugin API callback (#2395) Josh Goebel (enh) add after:highlight plugin API callback (#2395) Josh Goebel (enh) split out parse tree generation and HTML rendering concerns (#2404) Josh Goebel (enh) every language can have a name attribute now (#2400) Josh Goebel (enh) improve regular expression detect (less false-positives) (#2380) Josh Goebel (enh) make noHighlightRe and languagePrefixRe configurable (#2374) Josh Goebel Language Improvements: enh(python) Exclude parens from functions params (#2490) \u00c1lvaro Mond\u00e9jar enh(swift) Add compactMap to keywords as built_in (#2478) Omid Golparvar enh(nim) adds func keyword (#2468) Adnan Yaqoob enh(xml) deprecate ActionScript inside script tags (#2444) Josh Goebel fix(javascript) prevent get/set variables conflicting with keywords (#2440) Josh Goebel bug(clojure) Now highlights defn- properly (#2438) Josh Goebel enh(bash) default value is another variable (#2439) Josh Goebel enh(bash) string nested within string (#2439) Josh Goebel enh(bash) Add arithmetic expression support (#2439) Josh Goebel enh(clojure) Add support for global definitions name (#2347) Alexandre Grison enh(fortran) Support Fortran 77 style comments (#2416) Josh Goebel (csharp) add support for @identifier style identifiers (#2414) Josh Goebel fix(elixir) Support function names with a slash (#2406) Josh Goebel fix(javascript) comma is allowed in a \"value container\" (#2403) Josh Goebel enh(apache) add deny and allow keywords Josh Goebel enh(apache) highlight numeric attributes values Josh Goebel enh(apache) highlight IP addresses, ports, and strings in sections Josh Goebel enh(php) added more keywords and include <?= syntax to meta Taufik Nurrohman fix(protobuf) Fix rpc when followed by a block (#) Josh Goebel enh(zephir) almost complete rework of the zephir grammar (#2387) Josh Goebel (markdown) much improved code block support (#2382) Josh Goebel (markdown) improve bold/italic nesting (#2382) Josh Goebel enh(csharp) Support where keyword as class constraint (#2378) Josh Goebel enh(csharp) Allow reference path in class inheritance lists (#2378) Josh Goebel enh(csharp) Add generic modifiers (in, out) (#2378) Josh Goebel (fortran) enh(fortran) support intrinsic data types (#2379) Josh Goebel enh(java) annotations can include numbers (#2377) Josh Goebel enh(java) annotations can take params (#2377) Josh Goebel enh(java) allow annotations inside function call params (#2377) Josh Goebel enh(parser) pre/post-highlightBlock callbacks via plugin (#2285) Josh Goebel (fortran) Add Fortran 2018 keywords and coarray intrinsics (#2361) Sam Miller (delphi) highlight hexadecimal, octal, and binary numbers (#2370) Robert Riebisch enh(plaintext) added text and txt as alias (#2360) Taufik Nurrohman enh(powershell) added PowerShell v5.1/v7 default aliases as \"built_in\"s (#2423) Sean Williams enh(yaml) added support for timestamps (#2475) Peter Plantinga Developer Tools: added Dockerfile for optionally developing with a container Version 9.18.1 Grammar Improvements: bug(coffeescript) fix freezing bug due to badly behaved regex (#2376) Josh Goebel Version 9.18.0 New languages: none. New themes: none. Core Changes: none. Language Improvements: (javascript) fix JSX self-closing tag issues (#2322) Josh Goebel (fortran) added block and endblock keywords (#2343) Philipp Engel (javascript) support jsx fragments (#2333) Josh Goebel (ini) support TOML arrays, clean up grammar (#2335) Josh Goebel (vbnet) add nameof operator to the keywords (#2329) Youssef Victor (stan) updated with improved coverage of language keywords and patterns. (#1829) Jeffrey Arnold enh(cpp) Detect namespaced function types ( A::typeName func(...) ) (#2332) Josh Goebel enh(cpp) Detect namespaced functions also ( A::functionName ) (#2332) Josh Goebel enh(cpp) Properly detect decltype(auto) (#2332) Josh Goebel enh(cpp) recognize primitive types ( int8_t , etc.) as function types (#2332) Josh Goebel Developer Tools: feat(developer): add button to show parsed structure (#2345) Nils Knappmeier Version 9.17.1 Fixes: fix(parser): resolve IE 11 issue with Object.freeze() (#2319) Josh Goebel Version 9.17.0 New languages: none. New themes: Gradient Dark by Samia Ali Core Improvements: chore(parser): switch from createElementNS to createElement (#2314) Josh Goebel enh(parser): add better error when a language requirement is missing (#2311) Josh Goebel fix(parser/docs): disallow self mode at the top-level of a language (#2294) Josh Goebel enh(parser) add safe & debug modes. Better error handling for crash conditions. (#2286) Josh Goebel fix(parser): Fix merger HTML attribute quoting (#2235) Josh Goebel fix(parser): Look-ahead regex now work for end matches also (#2237) Josh Goebel fix(parser): Better errors when a language is missing (#2236) Josh Goebel fix(parser): freeze built-in modes to prevent grammars altering them (#2271) Josh Goebel fix(themes): fix inconsistencies between some themes padding/spacing (#2300) Josh Goebel ehh(build) Add CI check for building a \"use strict\" safe rollup package from NPM builds (#2247) Josh Goebel fix(pkg): Prefix global addEventListener with window to be able to minify with closure compiler (#2305) Kirill Saksin Language Improvements: fix(sql): backslash is not used to escape in strings in standard SQL (#1748) Mike Schall enh(ebnf) add backticks as additional string variant (#2290) Chris Marchesi chore(javascript): add esm related extensions to aliases (#2298) Rongjian Zhang fix(kotlin): fix termination of \"\"\" string literals (#2295) Josh Goebel fix(mercury): don't change global STRING modes (#2271) Josh Goebel enh(xml) expand and improve document type highlighting (#2287) w3suli enh(ebnf) add underscore as allowed meta identifier character, and dot as terminator (#2281) Chris Marchesi fix(makefile) fix double relevance for assigns, improves auto-detection (#2278) Josh Goebel enh(xml) support for highlighting entities (#2260) w3suli enh(gml) fix naming of keyword class (consistency fix) (#2254) Liam Nobel enh(javascript): Add support for jsdoc comments (#2245) Milutin Kristofic fix(python) fix if getting confused as an f-string (#2200) Josh Goebel and Carl Baxter enh(powershell) major overhaul, huge improvements (#2224) enh(css) Improve @rule highlighting, including properties (#2241) Josh Goebel enh(css) Improve highlighting of numbers inside expr/func calc(2px+3px) (#2241) enh(scss) Pull some of the CSS improvements back into SCSS (#2241) fix(go): Fix escaped character literals (#2266) David Benjamin fix(objectivec): Fix various preprocessor highlighting issues (#2265) David Benjamin fix(objectivec): Handle multibyte character literals (#2268) David Benjamin enh(cpp): Add additional keywords (#2289) Adrian Ostrowski Version 9.16.2 New languages: none. New styles: none. Improvements: - fix(arduino) Resolves issue with arduino.js not being \"use strict\" safe (#2247) Version 9.16.1 New languages: none. New styles: - Night Owl by Carl Baxter Improvements: - Add CLI tool to quickly check for relevance conflicts Mark Ellis (#1554) - enhance(twig) update list of filter and tags (#2090) - fix(crystal): correctly highlight !~ method definition (#2222) - fix dropping characters if we choke up on a 0-width match (#2219) - (accesslog) improve accesslog relevancy scoring (#2172) - fix(shell): fix parsing of prompts with forward slash (#2218) - improve parser to properly support look-ahead regex in begin matchers (#2135) - blacklist super-common keywords from having relevance (#2179) - fix(swift): support for @dynamicMemberLookup and @propertyWrapper (#2202) - fix: endWithParent inside starts now always works (#2201) - fix(typescript): constructor in declaration doesn't break highlighting - fix(typescript): only match function keyword as a separate identifier (#2191) - feature(arduino) make arduino a super-set of cpp grammar - fix(javascript): fix object attributes immediately following line comments - fix(xml): remove vbscript as potential script tag subLanguage - fix(Elixir): improve regex for numbers - fix(YAML): improve matching for keys, blocks and numbers - fix(Pony): improve regex for numbers - fix(handlebars): add support for raw-blocks, and triple-mustaches(#2175) - fix(handlebars): fix parsing of block-comments containing closing mustaches (#2175) - fix(handlebars): add support for segment-literal notation, and escaped mustaches (#2184) - JSON: support for comments in JSON (#2016) - fix(cpp): improve string literal matching - fix(highlight.js): omit empty span-tags in the output (#2182) - fix(Go): improve function declaration matching - fix(python): added support for f-string literal curly braces (#2195) - fix(cpp): add future built-in (#1610) - fix(python): support comments within function parameters (#2214) Version 9.15.10 New languages: none. New styles: none. Improvements: - support for ruby's squiggly heredoc (#2049) - support css custom properties (#2082) - fix(PureBASIC): update to 5.60 (#1508) - fix(Kotlin): parenthesized types in function declaration (#2107) - fix(Kotlin): nested comment (#2104) - fix(isbl): contains key typo (#2103) - fix(github-gist.css): match Github styles (#2100) - fix(elm): update to latest elm syntax (#2088) - fix: Support highlighting inline HTML and CSS tagged template strings in JS and TS (#2105) - feat(YAML): add YAML to common languages (#1952) - feat(xml): Add support for Windows Script File (.wsf), inline VBScript in XML script tags (#1690) Version 9.15.9 Improvements: - fix(AutoHotkey): order and extended highlighting (#1579) - fix(Go): correctly highlight hex numbers, rather than stopping at last 'd' or 'f'. (#2060) - fix(Mathematica): Improvements to language (#2065) - fix(Node): Adds SCSS build (#2079) - fix(Rust): update keywords (#2052) - fix(Stata): Added keywords for the meta-analysis suite introduced in Stata 16 (#2081) - fix(Bash): escape double quotes (#2048) Version 9.15.8 New languages: none. New styles: none. Improvements: - fix(bash): revert escaped double quotes - broke Firefox/Safari. Version 9.15.7 New languages: none. New styles: none. Improvements: - fix(powershell): Add cmdlets (#2022) - fix(Bash): escaped double quotes (#2041) - fix(c++): add aliases 'hh', 'hxx', 'cxx' (#2017) - fix(ini/toml): Support comments on the same line. (#2039) - fix(JSX): not rendering well in a function without parentheses. (#2024) - fix(LiveCode): language definition update (#2021) - fix(markdown): indented lists (#2004) - fix(styles/school-book): don't style all the pre, use .hljs instead (#2034) - fix(JSX): Modify JSX tag detection to use XML language regex in place of simplistic \\w+ Version 9.15.6 New languages: none. New styles: none. Improvements: - Move dependencies to be devDependencies. - Fixed security issues in dev dependencies. Version 9.15.5 New languages: none. New styles: none. Improvements: \ud83d\udd25 Hot fix: updated build tool. Version 9.15.4 New languages: none. New styles: none. Improvements: \ud83d\udd25 Hot fix: reverted hljs cli build tool, as it was causing issues with install. Version 9.15.3 New languages: none. New styles: none. Improvements: \ud83d\udd25 Hot fix: reverted hljs cli build tool, as it was causing issues with install. Version 9.15.2 New languages: none. New styles: none. Improvements: \ud83d\udd25 Hot fix that was preventing highlight.js from installing. Version 9.15.1 New languages: none. New styles: none. Improvements: Pony: Fixed keywords without spaces at line ends, highlighting of iso in class definitions, and function heads without bodies in traits and interfaces. Removed FUNCTION and CLASS modes until they are found to be needed and to provide some of the fixes. Support external language files in minified version of highlight.js (#1888) Version 9.15 New languages: none. New styles: none. Improvements: - new cli tool hljs - allows easier building from command line . - cpp: Fully support C++11 raw strings. (#1897) - Python: Treat False None and True as literals (#1920) Version 9.14.2 New languages: none. New styles: none. Improvements: - Gauss fixed to stop global namespace pollution Scott Hyndman . - fix(Tcl): removed apostrophe string delimiters (don't exist) Version 9.14.1 New languages: none. New styles: none. Improvements: - Pony: language improvements (#1958) Version 9.14.0 New languages: none. New styles: none. Improvements: - Pony: add missing \"object\" highlighting (#1932) - Added XQuery built-in functions, prolog declarations, as well as parsing of function bodies, computed and direct constructors, by Duncan Paterson - fix(dart): Corrects highlighting with string interpolation. (#1946) - fix(swift): be eager on optional-using types (!/?) (#1919) - fix(tex): Changed cyrillic to unicode (IE11 throw SCRIPT5021) (#1601) - fix(JavaScript): Recognize get/set accessor keywords (#1940) - Fixed Dockerfile definition when using highlight continuation parameter, by Laurent Voullemier - Added tests & new annotation and verbatim keywords to Crystal , by Benoit de Chezelles - Added missing dockerfile markup tests, by Laurent Voullemier Allow empty prompt text in clojure-repl, by Egor Rogov - Fixed several issues with Crystal language definition, by Johannes M\u00fcller - Added C# as an alias for CSharp language, by Ahmed Atito - Added generic user-defined proc support, new compiler define, refactor to re-use rules, and add tests to GAUSS , by Matthew Evans - Improve Crystal language to highlight regexes after some keywords, by Tsuyusato Kitsune - Fix filterByQualifiers: fileInfo can be null - Fixed String interpolation in Dart, by Scott Hyndman . Version 9.13.1 Improvements: C# function declarations no longer include trailing whitespace, by JeremyTCD Added new and missing keywords to AngelScript , by Melissa Geels TypeScript decorator factories highlighting fix, by Antoine Boisier-Michaud Added support for multiline strings to Swift , by Alejandro Isaza Fixed issue that was causing some minifiers to fail. Fixed autoDetection to accept language aliases. Version 9.13.0 New languages: ArcGIS Arcade by John Foster AngelScript by Melissa Geels GML by meseta isbl built-in language DIRECTUM and Conterra by Dmitriy Tarasov . PostgreSQL SQL dialect and PL/pgSQL language by Egor Rogov . ReasonML by Gidi Meir Morris SAS by Mauricio Caceres Bravo Plaintext by Egor Rogov .properties by bostko and Egor Rogov New styles: a11y-dark theme by Eric Bailey a11y-light theme by Eric Bailey An Old Hope by Gustavo Costa Atom One Dark Reasonable by Gidi Meir Morris isbl editor dark by Dmitriy Tarasov isbl editor light by Dmitriy Tarasov Lightfair by Tristian Kelly Nord by Arctic Ice Studio \ud83e\udd84 Shades of Purple by Ahmad Awais Improvements: New attribute endSameAsBegin for nested constructs with variable names by Egor Rogov . Python highlighting of escaped quotes fixed by Harmon PHP : Added alias for php7, by Vijaya Chandran Mani C++ string handling, by David Benjamin Swift Add @objcMembers to @attributes , by Berk \u00c7ebi Infrastructural changes by Marcos C\u00e1ceres Fixed metachars highighting for NSIS by Jan T. Sott Yaml highlight local tags as types by L\u00e9o Lam Improved highlighting for Elixir by Piotr Kaminski New attribute disableAutodetect for preventing autodetection by Egor Rogov Matlab : transpose operators and double quote strings, by JohnC32 and Egor Rogov Various documentation typos and improvemets by Jimmy W\u00e4rting , Lutz B\u00fcch , bcleland Cmake updated with new keywords and commands by Deniz Bahadir Version 9.12.0 New language: MikroTik RouterOS Scripting language by Ivan Dementev . New style: VisualStudio 2015 Dark by Nicolas LLOBERA Improvements: - Crystal updated with new keywords and syntaxes by Tsuyusato Kitsune . - Julia updated to the modern definitions by Alex Arslan . - julia-repl added by Morten Piibeleht . - Stanislav Belov wrote a new definition for 1C , replacing the one that has not been updated for more than 8 years. The new version supports syntax for versions 7.7 and 8. - Nicolas LLOBERA improved C# definition fixing edge cases with function titles detection and added highlighting of [Attributes] . - nnnik provided a few correctness fixes for Autohotkey . - Martin Clausen made annotation collections in Clojure to look consistently with other kinds. - Alejandro Alonso updated Swift keywords. Version 9.11.0 New languages: Shell by Tsuyusato Kitsune jboss-cli by Rapha\u00ebl Parr\u00ebe Improvements: [Jo\u00ebl Porquet] has greatly improved the definition of makefile . C++ class titles are now highlighted as in other languages with classes. Jordi Petit added rarely used or , and and not keywords to C++ . Pieter Vantorre fixed highlighting of negative floating point values. Version 9.10.0 Apologies for missing the previous release cycle. Some thing just can't be automated\u2026 Anyway, we're back! New languages: Hy by Sergey Sobko Leaf by Hale Chan N1QL by Andres T\u00e4ht and Rene Saarsoo Improvements: Rust got updated with new keywords by Kasper Andersen and then significantly modernized even more by Eduard-Mihai Burtescu (yes, @eddyb, Rust core team member!) Python updated with f-literals by Philipp A . YAML updated with unquoted strings support. Gauss updated with new keywords by Matt Evans . Lua updated with new keywords by Joe Blow . Kotlin updated with new keywords by Philipp Hauer . TypeScript got highlighting of function params and updated keywords by Ike Ku . Scheme now correctly handles `-quoted lists thanks to Guannan Wei . Sam Wu fixed handling of << in C++ defines. Version 9.9.0 New languages LLVM by Michael Rodler Improvements: TypeScript updated with annotations and param lists inside constructors, by Raphael Parree . CoffeeScript updated with new keywords and fixed to recognize JavaScript in ```, thanks to thanks to Geoffrey Booth . Compiler directives in Delphi are now correctly highlighted as \"meta\". Version 9.8.0 \"New York\" This version is the second one that deserved a name. Because I'm in New York, and the release isn't missing the deadline only because it's still Tuesday on West Coast. New languages: Clean by Camil Staps Flix by Magnus Madsen Improvements: Kenton Hamaluik did a comprehensive update for Haxe . New commands for PowerShell from Nicolas Le Gall . Jan T. Sott updated NSIS . Java and Swift support unicode characters in identifiers thanks to Alexander Lichter . Version 9.7.0 A comprehensive bugfix release. This is one of the best things about highlight.js: even boring things keep getting better (even if slow). VHDL updated with PSL keywords and uses more consistent styling. Nested C-style comments no longer break highlighting in many languages. JavaScript updated with => functions, highlighted object attributes and parsing within template string substitution blocks ( ${...} ). Fixed another corner case with self-closing <tag/> in JSX. Added HEALTHCHECK directive in Docker. Delphi updated with new Free Pascal keywords. Fixed digit separator parsing in C++. C# updated with new keywords and fixed to allow multiple identifiers within generics <...> . Fixed another slow regex in Less. Version 9.6.0 New languages: ABNF and EBNF by Alex McKibben Awk by Matthew Daly SubUnit by Sergey Bronnikov New styles: Atom One in both Dark and Light variants by Daniel Gamage Plus, a few smaller updates for Lasso , Elixir , C++ and SQL . Version 9.5.0 New languages: Excel by Victor Zhou Linden Scripting Language by Builder's Brewery TAP (Test Anything Protocol) by Sergey Bronnikov Pony by Joe Eli McIlvain Coq by Stephan Boyer dsconfig and LDIF by Jacob Childress New styles: Ocean Dark by Gavin Siu Notable changes: Minh Nguy\u1ec5n added more built-ins to Objective C. Jeremy Hull fixed corner cases in C++ preprocessor directives and Diff comments. Victor Zhou added support for digit separators in C++ numbers. Version 9.4.0 New languages: PureBASIC by Tristano Ajmone BNF by Oleg Efimov Ada by Lars Schulna New styles: PureBASIC by Tristano Ajmone Improvements to existing languages and styles: We now highlight function declarations in Go. Taisuke Fujimoto contributed very convoluted rules for raw and interpolated strings in C#. Boone Severson updated Verilog to comply with IEEE 1800-2012 SystemVerilog. Victor Zhou improved rules for comments and strings in PowerShell files. Janis Voigtl\u00e4nder updated the definition of Elm to version 0.17 of the languages. Elm is now featured on the front page of https://highlightjs.org . Special variable $this is highlighted as a keyword in PHP. usize and isize are now highlighted in Rust. Fixed labels and directives in x86 assembler. Version 9.3.0 New languages: Tagger Script by Philipp Wolfer MoonScript by Billy Quith New styles: xt256 by Herbert Shin Improvements to existing languages and styles: More robust handling of unquoted HTML tag attributes Relevance tuning for QML which was unnecessary eager at seizing other languages' code Improve GAMS language parsing Fixed a bunch of bugs around selectors in Less Kotlin's got a new definition for annotations, updated keywords and other minor improvements Added move to Rust keywords Markdown now recognizes ```-fenced code blocks Improved detection of function declarations in C++ and C# Version 9.2.0 New languages: QML by John Foster HTMLBars by Michael Johnston CSP by Taras Maxima by Robert Dodier New styles: Gruvbox by Qeole Dracula by Denis Ciccale Improvements to existing languages and styles: We now correctly handle JSX with arbitrary node tree depth. Argument list for (lambda) in Scheme is no longer highlighted as a function call. Stylus syntax doesn't break on valid CSS. More correct handling of comments and strings and other improvements for VimScript. More subtle work on the default style. We now use anonymous modules for AMD. macro_rules! is now recognized as a built-in in Rust. Version 9.1.0 New languages: Stan by Brendan Rocks BASIC by Rapha\u00ebl Ass\u00e9nat GAUSS by Matt Evans DTS by Martin Braun Arduino by Stefania Mellai New Styles: Arduino Light by Stefania Mellai Improvements to existing languages and styles: Handle return type annotations in Python Allow shebang headers in Javascript Support strings in Rust meta Recognize struct as a class-level definition in Rust Recognize b-prefixed chars and strings in Rust Better numbers handling in Verilog Version 9.0.0 The new major version brings a reworked styling system. Highlight.js now defines a limited set of highlightable classes giving a consistent result across all the styles and languages. You can read a more detailed explanation and background in the tracking issue that started this long process back in May. This change is backwards incompatible for those who uses highlight.js with a custom stylesheet. The new style guide explains how to write styles in this new world. Bundled themes have also suffered a significant amount of improvements and may look different in places, but all the things now consistent and make more sense. Among others, the Default style has got a refresh and will probably be tweaked some more in next releases. Please do give your feedback in our issue tracker . New languages in this release: Cach\u00e9 Object Script by Nikita Savchenko YAML by Stefan Wienert MIPS Assembler by Nebuleon Fumika HSP by prince Improvements to existing languages and styles: ECMAScript 6 modules import now do not require closing semicolon. ECMAScript 6 classes constructors now highlighted. Template string support for Typescript, as for ECMAScript 6. Scala case classes params highlight fixed. Built-in names introduced in Julia v0.4 added by Kenta Sato . Refreshed Default style. Other notable changes: Web workers support added bu Jan K\u00fchle . We now have tests for compressed browser builds as well. The building tool chain has been switched to node.js 4.x. and is now shamelessly uses ES6 features all over the place, courtesy of Jeremy Hull . License added to non-compressed browser build. Version 8.9.1 Some last-minute changes reverted due to strange bug with minified browser build: Scala case classes params highlight fixed ECMAScript 6 modules import now do not require closing semicolon ECMAScript 6 classes constructors now highlighted Template string support for Typescript, as for ECMAScript 6 License added to not minified browser build Version 8.9.0 New languages: crmsh by Kristoffer Gronlund SQF by Soren Enevoldsen Notable fixes and improvements to existing languages: Added abstract and namespace keywords to TypeScript by Daniel Rosenwasser Added label support to Dockerfile by Ladislav Prskavec Crystal highlighting improved by Tsuyusato Kitsune Missing Swift keywords added by Nate Cook Improve detection of C block comments Scala case classes params highlight fixed ECMAScript 6 modules import now do not require closing semicolon ECMAScript 6 classes constructors now highlighted Template string support for Typescript, as for ECMAScript 6 Other notable changes: License added to not minified browser build Version 8.8.0 New languages: Golo by Philippe Charri\u00e8re GAMS by Stefan Bechert IRPF90 by Anthony Scemama Access logs by Oleg Efimov Crystal by Tsuyusato Kitsune Notable fixes and improvements to existing languages: JavaScript highlighting no longer fails with ES6 default parameters Added keywords async and await to Python PHP heredoc support improved Allow preprocessor directives within C++ functions Other notable changes: Change versions to X.Y.Z SemVer-compatible format Added ability to build all targets at once Version 8.7 New languages: Zephir by Oleg Efimov Elm by Janis Voigtl\u00e4nder XQuery by Dirk Kirsten Mojolicious by Dotan Dimet AutoIt by Manh Tuan from J2TeaM Toml (ini extension) by Guillaume Gomez New styles: Hopscotch by Jan T. Sott Grayscale by MY Sun Notable fixes and improvements to existing languages: Fix encoding of images when copied over in certain builds Fix incorrect highlighting of the word \"bug\" in comments Treat decorators different from matrix multiplication in Python Fix traits inheritance highlighting in Rust Fix incorrect document Oracle keywords added to SQL language definition by Vadimtro Postgres keywords added to SQL language definition by Benjamin Auder Fix registers in x86asm being highlighted as a hex number Fix highlighting for numbers with a leading decimal point Correctly highlight numbers and strings inside of C/C++ macros C/C++ functions now support pointer, reference, and move returns Version 8.6 New languages: C/AL by Kenneth Fuglsang DNS zone file by Tim Schumacher Ceylon by Lucas Werkmeister OpenSCAD by Dan Panzarella Inform7 by Bruno Dias armasm by Dan Panzarella TP by Jay Strybis New styles: Atelier Cave , Atelier Estuary , Atelier Plateau and Atelier Savanna by Bram de Haan Github Gist by Louis Barranqueiro Notable fixes and improvements to existing languages: Multi-line raw strings from C++11 are now supported Fix class names with dashes in HAML The async keyword from ES6/7 is now supported TypeScript functions handle type and parameter complexity better We unified phpdoc/javadoc/yardoc etc modes across all languages CSS .class selectors relevance was dropped to prevent wrong language detection Images is now included to CDN build Release process is now automated Version 8.5 New languages: pf.conf by Peter Piwowarski Julia by Kenta Sato Prolog by Raivo Laanemets Docker by Alexis H\u00e9naut Fortran by Anthony Scemama and Thomas Applencourt Kotlin by Sergey Mashkov New styles: Agate by Taufik Nurrohman Darcula by [JetBrains][] Atelier Sulphurpool by Bram de Haan Android Studio by Pedro Oliveira Notable fixes and improvements to existing languages: ES6 features in JavaScript are better supported now by Gu Yiling . Swift now recognizes body-less method definitions. Single expression functions def foo, do: ... now work in Elixir. More uniform detection of built-in classes in Objective C. Fixes for number literals and processor directives in Rust. HTML <script> tag now allows any language, not just JavaScript. Multi-line comments are supported now in MatLab. Version 8.4 We've got the new demo page ! The obvious new feature is the new look, but apart from that it's got smarter: by presenting languages in groups it avoids running 10000 highlighting attempts after first load which was slowing it down and giving bad overall impression. It is now also being generated from test code snippets so the authors of new languages don't have to update both tests and the demo page with the same thing. Other notable changes: The template_comment class is gone in favor of the more general comment . Number parsing unified and improved across languages. C++, Java and C# now use unified grammar to highlight titles in function/method definitions. The browser build is now usable as an AMD module, there's no separate build target for that anymore. OCaml has got a comprehensive overhaul by Micka\u00ebl Delahaye . Clojure's data structures and literals are now highlighted outside of lists and we can now highlight Clojure's REPL sessions. New languages: AspectJ by Hakan \u00d6zler STEP Part 21 by Adam Joseph Cook SML derived by Edwin Dalorzo from OCaml definition Mercury by mucaho Smali by Dennis Titze Verilog by Jon Evans Stata by Brian Quistorff Version 8.3 We streamlined our tool chain, it is now based entirely on node.js instead of being a mix of node.js, Python and Java. The build script options and arguments remained the same, and we've noted all the changes in the documentation . Apart from reducing complexity, the new build script is also faster from not having to start Java machine repeatedly. The credits for the work go to Jeremy Hull . Some notable fixes: PHP and JavaScript mixed in HTML now live happily with each other. JavaScript regexes now understand ES6 flags \"u\" and \"y\". throw keyword is no longer detected as a method name in Java. Fixed parsing of numbers and symbols in Clojure thanks to input from Ivan Kleshnin . New languages in this release: Less by Max Mikhailov Stylus by Bryant Williams Tcl by Radek Liska Puppet by Jose Molina Colmenero Processing by Erik Paluka Twig templates by Luke Holder PowerShell by David Mohundro , based on the work of Nicholas Blumhardt XL by Christophe de Dinechin LiveScript by Taneli Vatanen and Jen Evers-Corvina ERB (Ruby in HTML) by Lucas Mazza Roboconf by Vincent Zurczak Version 8.2 We've finally got real tests and continuous testing on Travis thanks to Jeremy Hull and Chris Eidhof . The tests designed to cover everything: language detection, correct parsing of individual language features and various special cases. This is a very important change that gives us confidence in extending language definitions and refactoring library core. We're going to redesign the old demo/test suite into an interactive demo web app. If you're confident front-end developer or designer and want to help us with it, drop a comment into the issue on GitHub. As usually there's a handful of new languages in this release: Groovy by Guillaume Laforge Dart by Maxim Dikun Dust by Michael Allen Scheme by JP Verkamp G-Code by Adam Joseph Cook Q from Kx Systems by Sergey Vidyuk Other improvements: Erik Osheim heavily reworked Scala definitions making it richer. Lucas Mazza fixed Ruby hashes highlighting Lisp variants (Lisp, Clojure and Scheme) are unified in regard to naming the first symbol in parentheses: it's \"keyword\" in general case and also \"built_in\" for built-in functions in Clojure and Scheme. Version 8.1 New languages: Gherkin by Sam Pikesley Elixir by Josh Adams NSIS by Jan T. Sott VIM script by Jun Yang Protocol Buffers by Dan Tao Nix by Domen Ko\u017ear x86asm by innocenat Cap'n Proto and Thrift by Oleg Efimov Monkey by Arthur Bikmullin TypeScript by Panu Horsmalahti Nimrod by Flaviu Tamas Gradle by Damian Mee Haxe by Christopher Kaster Swift by Chris Eidhof and Nate Cook New styles: Kimbie , light and dark variants by Jan T. Sott Color brewer by Fabr\u00edcio Tavares de Oliveira Codepen.io embed by Justin Perry Hybrid by Nic West Other improvements: The README is heavily reworked and brought up to date by Jeremy Hull . Added listLanguages() method in the API. Improved C/C++/C# detection. Added a bunch of new language aliases, documented the existing ones. Thanks to Sindre Sorhus for background research. Added phrasal English words to boost relevance in comments. Many improvements to SQL definition made by Heiko August , Nikolay Lisienko and Travis Odom . The shorter lang- prefix for language names in HTML classes supported alongside language- . Thanks to Jeff Escalante . Ruby's got support for interactive console sessions. Thanks to Pascal Hurni . Added built-in functions for R language. Thanks to Artem A. Klevtsov . Rust's got definition for lifetime parameters and improved string syntax. Thanks to Roman Shmatov . Various improvements to Objective-C definition by Matt Diephouse . Fixed highlighting of generics in Java. Version 8.0 This new major release is quite a big overhaul bringing both new features and some backwards incompatible changes. However, chances are that the majority of users won't be affected by the latter: the basic scenario described in the README is left intact. Here's what did change in an incompatible way: We're now prefixing all classes located in CSS classes reference with hljs- , by default, because some class names would collide with other people's stylesheets. If you were using an older version, you might still want the previous behavior, but still want to upgrade. To suppress this new behavior, you would initialize like so: < script type = \"text/javascript\" > hljs . configure ({ classPrefix : '' }); hljs . initHighlightingOnLoad (); </ script > tabReplace and useBR that were used in different places are also unified into the global options object and are to be set using configure(options) . This function is documented in our API docs . Also note that these parameters are gone from highlightBlock and fixMarkup which are now also rely on configure . We removed public-facing (though undocumented) object hljs.LANGUAGES which was used to register languages with the library in favor of two new methods: registerLanguage and getLanguage . Both are documented in our API docs . Result returned from highlight and highlightAuto no longer contains two separate attributes contributing to relevance score, relevance and keyword_count . They are now unified in relevance . Another technically compatible change that nonetheless might need attention: The structure of the NPM package was refactored, so if you had installed it locally, you'll have to update your paths. The usual require('highlight.js') works as before. This is contributed by Dmitry Smolin . New features: Languages now can be recognized by multiple names like \"js\" for JavaScript or \"html\" for, well, HTML (which earlier insisted on calling it \"xml\"). These aliases can be specified in the class attribute of the code container in your HTML as well as in various API calls. For now there are only a few very common aliases but we'll expand it in the future. All of them are listed in the class reference . Language detection can now be restricted to a subset of languages relevant in a given context \u2014 a web page or even a single highlighting call. This is especially useful for node.js build that includes all the known languages. Another example is a StackOverflow-style site where users specify languages as tags rather than in the markdown-formatted code snippets. This is documented in the API reference (see methods highlightAuto and configure ). Language definition syntax streamlined with variants and beginKeywords . New languages and styles: Oxygene by Carlo Kok Mathematica by Daniel Kvasni\u010dka Autohotkey by Seongwon Lee Atelier family of styles in 10 variants by Bram de Haan Para\u00edso styles by Jan T. Sott Miscellaneous improvements: Highlighting => prompts in Clojure. Jeremy Hull fixed a lot of styles for consistency. Finally, highlighting PHP and HTML mixed in peculiar ways . Objective C and C# now properly highlight titles in method definition. Big overhaul of relevance counting for a number of languages. Please do report bugs about mis-detection of non-trivial code snippets! Version 7.5 A catch-up release dealing with some of the accumulated contributions. This one is probably will be the last before the 8.0 which will be slightly backwards incompatible regarding some advanced use-cases. One outstanding change in this version is the addition of 6 languages to the hosted script : Markdown, ObjectiveC, CoffeeScript, Apache, Nginx and Makefile. It now weighs about 6K more but we're going to keep it under 30K. New languages: OCaml by Mehdi Dogguy and Nicolas Braud-Santoni LiveCode Server by Ralf Bitter Scilab by Sylvestre Ledru basic support for Makefile by Ivan Sagalaev Improvements: Ruby's got support for characters like ?A , ?1 , ?\\012 etc. and %r{..} regexps. Clojure now allows a function call in the beginning of s-expressions (($filter \"myCount\") (arr 1 2 3 4 5)) . Haskell's got new keywords and now recognizes more things like pragmas, preprocessors, modules, containers, FFIs etc. Thanks to Zena Treep for the implementation and to Jeremy Hull for guiding it. Miscellaneous fixes in PHP, Brainfuck, SCSS, Asciidoc, CMake, Python and F#. New core developers The latest long period of almost complete inactivity in the project coincided with growing interest to it led to a decision that now seems completely obvious: we need more core developers. So without further ado let me welcome to the core team two long-time contributors: Jeremy Hull and Oleg Efimov . Hope now we'll be able to work through stuff faster! P.S. The historical commit is here for the record. Version 7.4 This long overdue version is a snapshot of the current source tree with all the changes that happened during the past year. Sorry for taking so long! Along with the changes in code highlight.js has finally got its new home at http://highlightjs.org/ , moving from its cradle on Software Maniacs which it outgrew a long time ago. Be sure to report any bugs about the site to info@highlightjs.org . On to what's new\u2026 New languages: Handlebars templates by Robin Ward Oracle Rules Language by Jason Jacobson F# by Joans Folles\u00f8 AsciiDoc and Haml by Dan Allen Lasso by Eric Knibbe SCSS by Kurt Emch VB.NET by Poren Chiang Mizar by Kelley van Evert New style themes: Monokai Sublime by noformnocontent Railscasts by Damien White Obsidian by Alexander Marenin Docco by Simon Madine Mono Blue by Ivan Sagalaev (uses a single color hue for everything) Foundation by Dan Allen Other notable changes: Corrected many corner cases in CSS. Dropped Python 2 version of the build tool. Implemented building for the AMD format. Updated Rust keywords (thanks to Dmitry Medvinsky ). Literal regexes can now be used in language definitions. CoffeeScript highlighting is now significantly more robust and rich due to input from C\u00e9dric N\u00e9h\u00e9mie . Version 7.3 Since this version highlight.js no longer works in IE version 8 and older. It's made it possible to reduce the library size and dramatically improve code readability and made it easier to maintain. Time to go forward! New languages: AppleScript (by Nathan Grigg and Dr. Drang ) and Brainfuck (by Evgeny Stepanischev ). Improvements to existing languages: interpreter prompt in Python ( >>> and ... ) @-properties and classes in CoffeeScript E4X in JavaScript (by Oleg Efimov ) new keywords in Perl (by Kirk Kimmel ) big Ruby syntax update (by Vasily Polovnyov ) small fixes in Bash Also Oleg Efimov did a great job of moving all the docs for language and style developers and contributors from the old wiki under the source code in the \"docs\" directory. Now these docs are nicely presented at http://highlightjs.readthedocs.org/ . Version 7.2 A regular bug-fix release without any significant new features. Enjoy! Version 7.1 A Summer crop: Marc Fornos made the definition for Clojure along with the matching style Rainbow (which, of course, works for other languages too). CoffeeScript support continues to improve getting support for regular expressions. Yoshihide Jimbo ported to highlight.js five Tomorrow styles from the project by Chris Kempson . Thanks to Casey Duncun the library can now be built in the popular AMD format . And last but not least, we've got a fair number of correctness and consistency fixes, including a pretty significant refactoring of Ruby. Version 7.0 The reason for the new major version update is a global change of keyword syntax which resulted in the library getting smaller once again. For example, the hosted build is 2K less than at the previous version while supporting two new languages. Notable changes: The library now works not only in a browser but also with node.js . It is installable with npm install highlight.js . API docs are available on our wiki. The new unique feature (apparently) among syntax highlighters is highlighting HTTP headers and an arbitrary language in the request body. The most useful languages here are XML and JSON both of which highlight.js does support. Here's the detailed post about the feature. Two new style themes: a dark \"south\" Pojoaque by Jason Tate and an emulation of XCode IDE by Angel Olloqui . Three new languages: D by Aleksandar Ru\u017ei\u010di\u0107 , R by Joe Cheng and GLSL by Sergey Tikhomirov . Nginx syntax has become a million times smaller and more universal thanks to remaking it in a more generic manner that doesn't require listing all the directives in the known universe. Function titles are now highlighted in PHP . Haskell and VHDL were significantly reworked to be more rich and correct by their respective maintainers Jeremy Hull and Igor Kalnitsky . And last but not least, many bugs have been fixed around correctness and language detection. Overall highlight.js currently supports 51 languages and 20 style themes. Version 6.2 A lot of things happened in highlight.js since the last version! We've got nine new contributors, the discussion group came alive, and the main branch on GitHub now counts more than 350 followers. Here are most significant results coming from all this activity: 5 (five!) new languages: Rust, ActionScript, CoffeeScript, MatLab and experimental support for markdown. Thanks go to Andrey Vlasovskikh , Alexander Myadzel , Dmytrii Nagirniak , Oleg Efimov , Denis Bardadym and John Crepezzi . 2 new style themes: Monokai by Luigi Maselli and stylistic imitation of another well-known highlighter Google Code Prettify by Aahan Krish . A vast number of correctness fixes and code refactorings , mostly made by Oleg Efimov and Evgeny Stepanischev . Version 6.1 \u2014 Solarized Jeremy Hull has implemented my dream feature \u2014 a port of Solarized style theme famous for being based on the intricate color theory to achieve correct contrast and color perception. It is now available for highlight.js in both variants \u2014 light and dark. This version also adds a new original style Arta. Its author pumbur maintains a heavily modified fork of highlight.js on GitHub. Version 6.0 New major version of the highlighter has been built on a significantly refactored syntax. Due to this it's even smaller than the previous one while supporting more languages! New languages are: Haskell by Jeremy Hull Erlang in two varieties \u2014 module and REPL \u2014 made collectively by Nikolay Zakharov , Dmitry Kovega and Sergey Ignatov Objective C by Valerii Hiora Vala by Antono Vasiljev Go by Stephan Kountso Also this version is marginally faster and fixes a number of small long-standing bugs. Developer overview of the new language syntax is available in a blog post about recent beta release . P.S. New version is not yet available on a Yandex CDN, so for now you have to download your own copy . Version 5.14 Fixed bugs in HTML/XML detection and relevance introduced in previous refactoring. Also test.html now shows the second best result of language detection by relevance. Version 5.13 Past weekend began with a couple of simple additions for existing languages but ended up in a big code refactoring bringing along nice improvements for language developers. For users Description of C++ has got new keywords from the upcoming C++ 0x standard. Description of HTML has got new tags from HTML 5 . CSS-styles have been unified to use consistent padding and also have lost pop-outs with names of detected languages. Igor Kalnitsky has sent two new language descriptions: CMake & VHDL. This makes total number of languages supported by highlight.js to reach 35. Bug fixes: Custom classes on <pre> tags are not being overridden anymore More correct highlighting of code blocks inside non- <pre> containers: highlighter now doesn't insist on replacing them with its own container and just replaces the contents. Small fixes in browser compatibility and heuristics. For developers The most significant change is the ability to include language submodes right under contains instead of defining explicit named submodes in the main array: contains: [ 'string', 'number', {begin: '\\\\n', end: hljs.IMMEDIATE_RE} ] This is useful for auxiliary modes needed only in one place to define parsing. Note that such modes often don't have className and hence won't generate a separate <span> in the resulting markup. This is similar in effect to noMarkup: true . All existing languages have been refactored accordingly. Test file test.html has at last become a real test. Now it not only puts the detected language name under the code snippet but also tests if it matches the expected one. Test summary is displayed right above all language snippets. CDN Fine people at Yandex agreed to host highlight.js on their big fast servers. Link up ! Version 5.10 \u2014 \"Paris\". Though I'm on a vacation in Paris, I decided to release a new version with a couple of small fixes: Tomas Vitvar discovered that TAB replacement doesn't always work when used with custom markup in code SQL parsing is even more rigid now and doesn't step over SmallTalk in tests Version 5.9 A long-awaited version is finally released. New languages: Andrew Fedorov made a definition for Lua a long-time highlight.js contributor Peter Leonov made a definition for Nginx config Vladimir Moskva made a definition for TeX Fixes for existing languages: Loren Segal reworked the Ruby definition and added highlighting for YARD inline documentation the definition of SQL has become more solid and now it shouldn't be overly greedy when it comes to language detection The highlighter has become more usable as a library allowing to do highlighting from initialization code of JS frameworks and in ajax methods (see. readme.eng.txt). Also this version drops support for the WordPress plugin. Everyone is welcome to pick up its maintenance if needed. Version 5.8 Jan Berkel has contributed a definition for Scala. +1 to hotness! All CSS-styles are rewritten to work only inside <pre> tags to avoid conflicts with host site styles. Version 5.7. Fixed escaping of quotes in VBScript strings. Version 5.5 This version brings a small change: now .ini-files allow digits, underscores and square brackets in key names. Version 5.4 Fixed small but upsetting bug in the packer which caused incorrect highlighting of explicitly specified languages. Thanks to Andrew Fedorov for precise diagnostics! Version 5.3 The version to fulfil old promises. The most significant change is that highlight.js now preserves custom user markup in code along with its own highlighting markup. This means that now it's possible to use, say, links in code. Thanks to Vladimir Dolzhenko for the initial proposal and for making a proof-of-concept patch. Also in this version: Vasily Polovnyov has sent a GitHub-like style and has implemented support for CSS @-rules and Ruby symbols. Yura Zaripov has sent two styles: Brown Paper and School Book. Oleg Volchkov has sent a definition for Parser 3 . Version 5.2 at last it's possible to replace indentation TABs with something sensible (e.g. 2 or 4 spaces) new keywords and built-ins for 1C by Sergey Baranov a couple of small fixes to Apache highlighting Version 5.1 This is one of those nice version consisting entirely of new and shiny contributions! Vladimir Ermakov created highlighting for AVR Assembler Ruslan Keba created highlighting for Apache config file. Also his original visual style for it is now available for all highlight.js languages under the name \"Magula\". Shuen-Huei Guan (aka Drake) sent new keywords for RenderMan languages. Also thanks go to Konstantin Evdokimenko for his advice on the matter. Version 5.0 The main change in the new major version of highlight.js is a mechanism for packing several languages along with the library itself into a single compressed file. Now sites using several languages will load considerably faster because the library won't dynamically include additional files while loading. Also this version fixes a long-standing bug with Javascript highlighting that couldn't distinguish between regular expressions and division operations. And as usually there were a couple of minor correctness fixes. Great thanks to all contributors! Keep using highlight.js. Version 4.3 This version comes with two contributions from Jason Diamond : language definition for C# (yes! it was a long-missed thing!) Visual Studio-like highlighting style Plus there are a couple of minor bug fixes for parsing HTML and XML attributes. Version 4.2 The biggest news is highlighting for Lisp, courtesy of Vasily Polovnyov. It's somewhat experimental meaning that for highlighting \"keywords\" it doesn't use any pre-defined set of a Lisp dialect. Instead it tries to highlight first word in parentheses wherever it makes sense. I'd like to ask people programming in Lisp to confirm if it's a good idea and send feedback to the forum . Other changes: Smalltalk was excluded from DEFAULT_LANGUAGES to save traffic Vladimir Epifanov has implemented javascript style switcher for test.html comments now allowed inside Ruby function definition MEL language from Shuen-Huei Guan whitespace now allowed between <pre> and <code> better auto-detection of C++ and PHP HTML allows embedded VBScript ( <% .. %> ) Version 4.1 Languages: Bash from Vah DOS bat-files from Alexander Makarov (Sam) Diff files from Vasily Polovnyov Ini files from myself though initial idea was from Sam Styles: Zenburn from Vladimir Epifanov, this is an imitation of a well-known theme for Vim . Ascetic from myself, as a realization of ideals of non-flashy highlighting: just one color in only three gradations :-) In other news. One small bug was fixed, built-in keywords were added for Python and C++ which improved auto-detection for the latter (it was shame that my wife's blog had issues with it from time to time). And lastly thanks go to Sam for getting rid of my stylistic comments in code that were getting in the way of JSMin . Version 4.0 New major version is a result of vast refactoring and of many contributions. Visible new features: Highlighting of embedded languages. Currently is implemented highlighting of Javascript and CSS inside HTML. Bundled 5 ready-made style themes! Invisible new features: Highlight.js no longer pollutes global namespace. Only one object and one function for backward compatibility. Performance is further increased by about 15%. Changing of a major version number caused by a new format of language definition files. If you use some third-party language files they should be updated. Version 3.5 A very nice version in my opinion fixing a number of small bugs and slightly increased speed in a couple of corner cases. Thanks to everybody who reports bugs in he forum and by email! There is also a new language \u2014 XML. A custom XML formerly was detected as HTML and didn't highlight custom tags. In this version I tried to make custom XML to be detected and highlighted by its own rules. Which by the way include such things as CDATA sections and processing instructions ( <? ... ?> ). Version 3.3 Vladimir Gubarkov has provided an interesting and useful addition. File export.html contains a little program that shows and allows to copy and paste an HTML code generated by the highlighter for any code snippet. This can be useful in situations when one can't use the script itself on a site. Version 3.2 consists completely of contributions: Vladimir Gubarkov has described SmallTalk Yuri Ivanov has described 1C Peter Leonov has packaged the highlighter as a Firefox extension Vladimir Ermakov has compiled a mod for phpBB Many thanks to you all! Version 3.1 Three new languages are available: Django templates, SQL and Axapta. The latter two are sent by Dmitri Roudakov . However I've almost entirely rewrote an SQL definition but I'd never started it be it from the ground up :-) The engine itself has got a long awaited feature of grouping keywords (\"keyword\", \"built-in function\", \"literal\"). No more hacks! Version 3.0 It is major mainly because now highlight.js has grown large and has become modular. Now when you pass it a list of languages to highlight it will dynamically load into a browser only those languages. Also: Konstantin Evdokimenko of RibKit project has created a highlighting for RenderMan Shading Language and RenderMan Interface Bytestream. Yay for more languages! Heuristics for C++ and HTML got better. I've implemented (at last) a correct handling of backslash escapes in C-like languages. There is also a small backwards incompatible change in the new version. The function initHighlighting that was used to initialize highlighting instead of initHighlightingOnLoad a long time ago no longer works. If you by chance still use it \u2014 replace it with the new one. Version 2.9 Highlight.js is a parser, not just a couple of regular expressions. That said I'm glad to announce that in the new version 2.9 has support for: in-string substitutions for Ruby -- #{...} strings from from numeric symbol codes (like #XX) for Delphi Version 2.8 A maintenance release with more tuned heuristics. Fully backwards compatible. Version 2.7 Nikita Ledyaev presents highlighting for VBScript, yay! A couple of bugs with escaping in strings were fixed thanks to Mickle Ongoing tuning of heuristics Fixed bugs were rather unpleasant so I encourage everyone to upgrade! Version 2.4 Peter Leonov provides another improved highlighting for Perl Javascript gets a new kind of keywords \u2014 \"literals\". These are the words \"true\", \"false\" and \"null\" Also highlight.js homepage now lists sites that use the library. Feel free to add your site by dropping me a message until I find the time to build a submit form. Version 2.3 This version fixes IE breakage in previous version. My apologies to all who have already downloaded that one! Version 2.2 added highlighting for Javascript at last fixed parsing of Delphi's escaped apostrophes in strings in Ruby fixed highlighting of keywords 'def' and 'class', same for 'sub' in Perl Version 2.0 Ruby support by Anton Kovalyov speed increased by orders of magnitude due to new way of parsing this same way allows now correct highlighting of keywords in some tricky places (like keyword \"End\" at the end of Delphi classes) Version 1.0 Version 1.0 of javascript syntax highlighter is released! It's the first version available with English description. Feel free to post your comments and question to highlight.js forum . And don't be afraid if you find there some fancy Cyrillic letters -- it's for Russian users too :-)","title":"CHANGES"},{"location":"demos/node_modules/highlight.js/CHANGES/#version-1151","text":"Packaging: (chore) explicitly set sideEffect for css and scss files, fixes #3504","title":"Version 11.5.1"},{"location":"demos/node_modules/highlight.js/CHANGES/#version-1150","text":"Themes: - Added Tokyo-Night-dark theme Henri Vandersleyen - Added Tokyo-Night-light theme Henri Vandersleyen New Grammars: Added GraphQL to SUPPORTED_LANGUAGES John Foster Added Macaulay2 to SUPPORTED_LANGUAGES Doug Torrance Grammars: enh(ruby) lots of small Ruby cleanups/improvements Josh Goebel enh(objectivec) add type and variable.language scopes Josh Goebel enh(xml) support processing instructions (#3492) Josh Goebel enh(ruby ) better support multi-line IRB prompts enh(bash) improved keyword $pattern (numbers allowed in command names) Martin Mattel add meta.prompt scope for REPL prompts, etc Josh Goebel fix(markdown) Handle ***Hello world*** without breaking Josh Goebel enh(php) add support for PHP Attributes Wojciech Kania fix(java) prevent false positive variable init on else Josh Goebel enh(php) named arguments Wojciech Kania fix(php) PHP constants Wojciech Kania fix(angelscript) incomplete int8, int16, int32, int64 highlighting Melissa Geels enh(ts) modify TypeScript-specific keywords and types list anydonym fix(brainfuck) fix highlighting of initial ++/-- Christina Hanson fix(llvm) escaping in strings and number formats Flakebi enh(elixir) recognize references to modules Mark Ericksen enh(css): add support for more properties Nicolaos Skimas","title":"Version 11.5.0"},{"location":"demos/node_modules/highlight.js/CHANGES/#version-1140","text":"New Language: Added 3rd party Pine Script grammar to SUPPORTED_LANGUAGES Jeylani B Added 3rd party cURL grammar to SUPPORTED_LANGUAGES highlightjs-curl Themes: Default is now much closer WCAG AA (contrast) (#3402) Josh Goebel Dark now meets WCAG AA (contrast) (#3402) Josh Goebel Added intellij-light theme Pegasis Added felipec theme Felipe Contreras These changes should be for the better and should not be super noticeable but if you're super picky about your colors you may want to intervene here or copy over the older themes from 11.3 or prior. Grammars: enh(twig) update keywords list for symfony (#3453) Matthieu Lempereur enh(arcade) updated to ArcGIS Arcade version 1.16 John Foster enh(php) Left and right-side of double colon Wojciech Kania enh(php) add PHP constants Wojciech Kania enh(php) add PHP 8.1 keywords Wojciech Kania fix(cpp) fix vector<< template false positive (#3437) Josh Goebel enh(php) support First-class Callable Syntax (#3427) Wojciech Kania enh(php) support class constructor call (#3427) Wojciech Kania enh(php) support function invoke (#3427) Wojciech Kania enh(php) Switch highlighter to partially case-insensitive (#3427) Wojciech Kania enh(php) improve namespace and use highlighting (#3427) Josh Goebel enh(php) $this is a variable.language now (#3427) Josh Goebel enh(php) add __COMPILER_HALT_OFFSET__ (#3427) Josh Goebel enh(js/ts) fix => async function title highlights (#3405) Josh Goebel enh(twig) update keywords list (#3415) Matthieu Lempereur fix(python) def, class keywords detected mid-identifier (#3381) Josh Goebel fix(python) Fix recognition of numeric literals followed by keywords without whitespace (#2985) Richard Gibson enh(swift) add SE-0290 unavailability condition (#3382) Bradley Mackey fix(fsharp) Highlight operators, match type names only in type annotations, support quoted identifiers, and other smaller fixes. Melvyn La\u00efly enh(java) add sealed and non-sealed keywords (#3386) Bradley Mackey enh(js/ts) improve CLASS_REFERENCE (#3411) Josh Goebel enh(nsis) Update defines pattern to allow ! (#3417) idleberg enh(nsis) Update language strings pattern to allow ! (#3420) idleberg fix(stan) Updated for Stan 2.28 and other misc. improvements (#3410) enh(nsis) Update variables pattern (#3416) idleberg fix(clojure) Several issues with Clojure highlighting (#3397) Bj\u00f6rn Ebbinghaus fix(clojure) comment macro catches more than it should (#3395) fix(clojure) $ in symbol breaks highlighting fix(clojure) Add complete regex for number detection enh(clojure) Add character mode for character literals fix(clojure) Inconsistent namespaced map highlighting enh(clojure) Add regex mode to regex literal fix(clojure) Remove inconsistent/broken highlighting for metadata enh(clojure) Add punctuation mode for commas. fix(julia) Enable the jldoctest alias (#3432) Fons van der Plas Developer Tools: (chore) add gzip size compression report (#3400) Bradley Mackey Themes: Modified background color in css for Gradient Light and Gradient Dark themes Samia Ali","title":"Version 11.4.0"},{"location":"demos/node_modules/highlight.js/CHANGES/#version-1131","text":"Build: (fix) Grammar CDN modules not generated correctly. (#3363) Josh Goebel","title":"Version 11.3.1"},{"location":"demos/node_modules/highlight.js/CHANGES/#version-1130","text":"Build: add HighlightJS named export (#3295) Josh Goebel add .default named export to CJS builds (#3333) Josh Goebel Parser: add first rough performance testing script (#3280) Austin Schick add throwUnescapedHTML to warn against potential HTML injection Josh Goebel expose regex helper functions via hljs injection Josh Goebel concat lookahead either optional anyNumberOfTimes Grammars: fix(ts) some complex types would classify as JSX (#3278) Josh Goebel fix(js/ts) less false positives for class X extends Y (#3278) Josh Goebel enh(css): add properties from several W3C (Candidate) Recommendations (#3308) fix(js/ts) Float32Array highlighted incorrectly (#3353) Josh Goebel fix(css) single-colon psuedo-elements no longer break highlighting (#3240) Josh Goebel fix(scss) single-colon psuedo-elements no longer break highlighting (#3240) Josh Goebel enh(fsharp) rewrite most of the grammar, with many improvements Melvyn La\u00efly enh(go) better type highlighting, add error type Josh Goebel fix(js/ts) regex inside SUBST is no longer highlighted Josh Goebel fix(python) added support for unicode identifiers (#3280) Austin Schick enh(css/less/stylus/scss) improve consistency of function dispatch (#3301) Josh Goebel enh(css/less/stylus/scss) detect block comments more fully (#3301) Josh Goebel fix(cpp) switch is a keyword (#3312) Josh Goebel fix(cpp) fix xor_eq keyword highlighting. Denis Kovalchuk enh(c,cpp) highlight type modifiers as type (#3316) Josh Goebel enh(css/less/stylus/scss) add support for CSS Grid properties monochromer enh(java) add support for Java Text Block (#3322) Teletha enh(scala) add missing do and then keyword (#3323) Nicolas Stucki enh(scala) add missing enum , export and given keywords (#3328) Nicolas Stucki enh(scala) remove symbol syntax and fix quoted code syntax (#3324) Nicolas Stucki enh(scala) add Scala 3 extension soft keyword (#3326) Nicolas Stucki enh(scala) add Scala 3 end soft keyword (#3327) Nicolas Stucki enh(scala) add inline soft keyword (#3329) Nicolas Stucki enh(scala) add using soft keyword (#3330) Nicolas Stucki enh(fsharp) added f# alias (#3337) Bahnschrift enh(bash) added gnu core utilities (#3342) katzeprior enh(nsis) add new NSIS commands (#3351) idleberg fix(nsis) set case_insensitive to true (#3351) idleberg fix(css/less/stylus/scss) highlight single-colon psuedo-elements properly (#3240) zsoltlengyelit fix(css) add css hex color alpha support (#3360) ierehon1905","title":"Version 11.3.0"},{"location":"demos/node_modules/highlight.js/CHANGES/#version-1120","text":"Build: fix: run Node build CSS files thru CSS processor also (#3284) Josh Goebel Parser: fix(csharp) Fix assignments flagging as functions Josh Goebel fix(types) Fix some type definition issues (#3274) Josh Goebel fix(verilog) Fix directive handling (#3283) Josh Goebel fix(verilog) Fix binary number false positives on _ (#3283) Josh Goebel enh(verilog) __FILE__ and __LINE__ constants (#3283) Josh Goebel enh(verilog) tighten keyword regex (#3283) Josh Goebel Grammars: enh(swift) Add isolated / nonisolated keywords (#3296) Bradley Mackey New Languages: Added 3rd party X# grammar to SUPPORTED_LANGUAGES Patrick Kruselburger Added 3rd party MKB grammar to SUPPORTED_LANGUAGES (#3297) Dereavy","title":"Version 11.2.0"},{"location":"demos/node_modules/highlight.js/CHANGES/#version-1110","text":"Grammars: fix(csharp) add missing catch keyword (#3251) Konrad Rudolph add additional keywords to csp.js (#3244) Elijah Conners feat(css) handle css variables syntax (#3239) Thanos Karagiannis fix(markdown) Images with empty alt or links with empty text (#3233) Josh Goebel enh(powershell) added pwsh alias (#3236) tebeco fix(r) fix bug highlighting examples in doc comments Konrad Rudolph fix(python) identifiers starting with underscore not highlighted (#3221) Antoine Lambert enh(clojure) added edn alias (#3213) Stel Abrego enh(elixir) much improved regular expression sigil support (#3207) Josh Goebel enh(elixir) updated list of keywords (#3212) Angelika Tyborska fix(elixir) fixed number detection when numbers start with a zero (#3212) Angelika Tyborska fix(ps1) Flag highlighted incorrectly (#3167) Pankaj Patil fix(latex) Allow wider syntax for magic comments (#3243) Benedikt Wilde fix(js/ts) Constants may include numbers Josh Goebel","title":"Version 11.1.0"},{"location":"demos/node_modules/highlight.js/CHANGES/#version-1100","text":"This is a major release. As such it contains breaking changes which may require action from users. Please read VERSION_11_UPGRADE.md for a detailed summary of all breaking changes.","title":"Version 11.0.0"},{"location":"demos/node_modules/highlight.js/CHANGES/#potentially-breaking-changes","text":"Unless otherwise attributed items below are thanks to Josh Goebel (ref: #2558 ). The below list should only be considered to be a high-level summary. Deprecations / Removals / API Changes: initHighlighting() and initHighlightingOnLoad() deprecated. Use highlightAll() . highlightBlock(el) deprecated. Use highlightElement(el) before:highlightBlock & after:highlightBlock callbacks deprecated. Use equivalent highlightElement callbacks. highlight(languageName, code, ignoreIllegals, continuation) signature deprecated. Use highlight(code, {language, ignoreIllegals}) . Deprecated highlight() signature no longer supports continuation argument. tabReplace option removed. Consider a plugin. useBR option removed. Consider a plugin or CSS. requireLanguage() removed. Use getLanguage() . endSameAsBegin mode key removed. Use hljs.END_SAME_AS_BEGIN . lexemes mode key removed. Use keywords.$pattern . The return values/keys of some APIs have changed slightly. Security: HTML auto-passthru has been removed. Consider a plugin. Unescaped HTML is now stripped (for security). A warning is logged to the console. (#3057) Josh Goebel Themes: The default padding of all themes increases (0.5em => 1em). schoolbook has been updated to remove the lined background. github updated to better match modern GitHub (#1616) Jan Pilzer github-gist has been removed in favor of github Jan Pilzer Base16 named themes have been updated to their \"canonical\" versions nnfx updated for v11 xml styles and improved css support Language Grammars: Default CDN build drops support for several languages. Some language grammar files have been removed. Some redundant language aliases have been removed.","title":"Potentially breaking changes"},{"location":"demos/node_modules/highlight.js/CHANGES/#other-changes","text":"Parser: enh(vala) improve language detection for Vala (#3195) Konrad Rudolph enh(r) add support for operators, fix number highlighting bug (#3194, #3195) Konrad Rudolph enh(parser) add beginScope and endScope to allow separate scoping begin and end (#3159) Josh Goebel enh(parsed) endScope now supports multi-class matchers as well (#3159) Josh Goebel enh(parser) highlightElement now always tags blocks with a consistent language-[name] class Josh Goebel subLanguage span tags now also always have the language- prefix added enh(parser) support multi-class matchers (#3081) Josh Goebel enh(parser) Detect comments based on english like text, rather than keyword list Josh Goebel adds title.class.inherited sub-scope support Josh Goebel adds title.class sub-scope support (#3078) Josh Goebel adds title.function sub-scope support (#3078) Josh Goebel adds beforeMatch compiler extension (#3078) Josh Goebel adds cssSelector configuration option (#3180) James Edington Grammars: enh(all) .meta-keyword => .meta .keyword (nested scopes) (#3167) Josh Goebel enh(all) .meta-string => .meta .string (nested scopes) (#3167) Josh Goebel enh(swift) add actor keyword (#3171) Bradley Mackey enh(crystal) highlight variables (#3154) Josh Goebel fix(ruby) Heredoc without interpolation (#3154) Josh Goebel enh(swift) add @resultBuilder attribute (#3151) Bradley Mackey enh(processing) added pde alias (#3142) Dylan McBean enh(thrift) Use proper scope for types Josh Goebel enh(java) Simplified class-like matcher (#3078) Josh Goebel enh(cpp) Simplified class-like matcher (#3078) Josh Goebel enh(rust) Simplified class-like matcher (#3078) Josh Goebel enh(actionscript) Simplified class-like matcher (#3078) Josh Goebel enh(arcade) function.title => title.function (#3078) Josh Goebel enh(autoit) function.title => title.function (#3078) Josh Goebel enh(c) function.title => title.function (#3078) Josh Goebel enh(rust) support function invoke and impl (#3078) Josh Goebel chore(properties) disable auto-detection #3102 Josh Goebel fix(properties) fix incorrect handling of non-alphanumeric keys #3102 Egor Rogov enh(java) support functions with nested template types (#2641) Josh Goebel enh(java) highlight types and literals separate from keywords (#3074) Josh Goebel enh(shell) add alias ShellSession Ryan Mulligan enh(shell) consider one space after prompt as part of prompt Ryan Mulligan fix(nginx) fix bug with $ and @ variables Josh Goebel enh(nginx) improving highlighting of some sections Josh Goebel fix(vim) variable names may not be zero length Josh Goebel enh(sqf) Updated keywords to Arma 3 v2.02 (#3084) R3voA3 enh(sqf) Refactored function regex to match CBA component func naming scheme (#3181) JonBons enh(nim) highlight types properly (not as built-ins) Josh Goebel (chore) throttle deprecation messages (#3092) [Mihkel Eidast][] enh(c) Update keyword list for C11/C18 (#3010) Josh Goebel enh(parser) highlight object properties (#3072) Josh Goebel enh(javascript/typescript) highlight object properties (#3072) Josh Goebel enh(haskell) add support for BinaryLiterals (#3150) Martijn Bastiaan enh(haskell) add support for NumericUnderscores (#3150) Martijn Bastiaan enh(haskell) add support for HexFloatLiterals (#3150) Martijn Bastiaan fix(c,cpp) allow declaring multiple functions and (for C++) parenthetical initializers (#3155) Erik Demaine enh(rust) highlight raw byte string literals correctly (#3173) Nico Abram fix(cpp) fix detection of common functions that are function templates (#3178) Kris van Rens enh(cpp) add various keywords and commonly used types for hinting (#3178) Kris van Rens enh(cpp) cleanup reserved keywords and type lists (#3178) Kris van Rens New Languages: Added 3rd party Glimmer grammar to SUPPORTED_LANGUAGES(#3123) NullVoxPopuli Added Wren support Josh Goebel Added NestedText support Josh Goebel Added WebAssembly language grammar Josh Goebel Added 3rd party Splunk search processing language grammar to SUPPORTED_LANGUAGES (#3090) Wei Su Added 3rd party ZenScript grammar to SUPPORTED_LANGUAGES(#3106) Jared Luboff Added 3rd party Papyrus grammar to SUPPORTED_LANGUAGES(#3125) Mike Watling Theme Improvements: Added all official Base16 themes (over 150 new themes) Josh Goebel chore(themes) remove builtin-name CSS class (#3119) Josh Goebel chore(theme) Update GitHub theme css to match GitHub's current styling (#1616) Jan Pilzer chore(theme) Update Srcery theme css to match its Emacs implementation Chen Bin New Themes: DeviBeans Dark by Farzad Sadeghi GitHub Dark and GitHub Dark Dimmed Jan Pilzer Dev Improvements: (chore) greatly improve match scope visualization in dev tool (#3126) NullVoxPopuli (fix) CSS used for devtool needed an adjustment to fix too wide of content (#3133) NullVoxPopuli","title":"Other changes"},{"location":"demos/node_modules/highlight.js/CHANGES/#version-1071","text":"fix(parser) Resolves issues with TypeScript types Josh Goebel","title":"Version 10.7.1"},{"location":"demos/node_modules/highlight.js/CHANGES/#version-1070","text":"Parser: keywords now have a maximum # of times they provide relevance (#3129) Josh Goebel enh(api) add unregisterLanguage method (#3009) Antoine du Hamel enh: Make alias registration case insensitive (#3026) David Ostrovsky fix(parser) highlightAll() now works if the library is lazy loaded Josh Goebel New Languages: Added 3rd party RiScript grammar to SUPPORTED_LANGUAGES (#2988) [John C][] Added 3rd party HLSL grammar to SUPPORTED_LANGUAGES (#3002) Stef Levesque Added 3rd party Q# grammar to SUPPORTED_LANGUAGES(#3006) Vyron Vasileiadis Language grammar improvements: enh(js/ts) class references (CamelCase) are highlighted (#3169) Josh Goebel enh(js/ts) constants (ALL_CAPS) are highlighted (#3169) Josh Goebel enh(js/ts) highlights function invokation (#3169) Josh Goebel enh(js/ts) functions assigned to variables are now highlighted title.function (#3169) Josh Goebel enh(parser) smarter detection of comments (#2827) Josh Goebel fix(python) allow keywords immediately following numbers (#2985) Josh Goebel fix(xml) char immediately following tag close mis-highlighted (#3044) Josh Goebel fix(ruby) fix defined?() mis-highlighted as def (#3025) Josh Goebel fix(c) comments after #include <str> blocks (#3041) Josh Goebel fix(cpp) comments after #include <str> blocks (#3041) Josh Goebel enh(cpp) Highlight all function dispatches (#3005) Josh Goebel enh(python) support type hints and better type support (#2972) Josh Goebel enh(gml) Add additional GML 2.3 keywords (#2984) xDGameStudios fix(cpp) constructor support for initializers (#3001) Josh Goebel enh(php) Add trait to class-like naming patterns (#2997) Ayesh enh(php) Add Stringable , UnhandledMatchError , and WeakMap classes/interfaces (#2997) Ayesh enh(php) Add mixed to list of keywords (#2997) Ayesh enh(php) Add support binary, octal, hex and scientific numerals with underscore separator support (#2997) Ayesh enh(php) Add support for Enums (#3004) Ayesh enh(ecmascript) Add built-in types Vaibhav Chanana enh(kotlin) Add kts as an alias for Kotlin (#3021) Vaibhav Chanana enh(css) Add font-smoothing to attributes list for CSS (#3027) AndyKIron fix(python) Highlight print and exec as a builtin (#1468) Samuel Colvin fix(csharp) Fix unit being highlighted instead of uint (#3046) [Spacehamster][] enh(swift) add async/await keywords (#3048) Bradley Mackey Deprecations: highlight(languageName, code, ignoreIllegals, continuation) deprecated as of 10.7 Please use the newer API which takes code and then accepts options as an object IE: highlight(code, {language, ignoreIllegals}) continuation is for internal use only and no longer supported highlightBlock(el) deprecated as of 10.7. Please use highlightElement(el) instead. Plugin callbacks renamed before/after:highlightBlock => before/after:highlightElement Plugin callback now takes el vs block attribute The old API and callbacks will be supported until v12.","title":"Version 10.7.0"},{"location":"demos/node_modules/highlight.js/CHANGES/#version-1060","text":"New Languages: Added 3rd party Laravel Blade grammar to SUPPORTED_LANGUAGES (#2944) Michael Newton Language grammar improvements: enh(scala) fix triple quoted strings (#2987) Josh Goebel enh(perl) Much improved regex detection (#2960) Josh Goebel enh(swift) Improved highlighting for operator and precedencegroup declarations. (#2938) Steven Van Impe fix(xml) Support single-character namespaces. (#2957) Jan Pilzer enh(ruby) Support for character literals (#2950) Vaibhav Chanana enh(powershell) Add three VALID_VERBS and update the reference link (#2981) davidhcefx fix(php) Highlighting of anonymous functions without {} block Vaibhav Chanana Grammar Deprecations: Deprecate c-like , though you should not be using it directly anyways. will be removed in v11. c and cpp are now wholly unique grammars that will diverge over time Parser: new simpler highlightAll() API (#2962) Josh Goebel this should be a drop-in replacement for both initHighlighting() and initHighlightingOnLoad() note: it does not prevent itself from being called multiple times (as the previous API did) beginKeyword no longer bestows double relevance (#2953) Josh Goebel allow keywords to be an array of strings Josh Goebel add modes.MATCH_NOTHING_RE that will never match This can be used with end to hold a mode open (it must then be ended with endsParent in one of it's children modes) Josh Goebel Deprecations: initHighlighting() and initHighlightingOnLoad() deprecated. Please use the new highlightAll() API instead. Deprecated as of 10.6. These will both be aliases to highlightAll in v11.","title":"Version 10.6.0"},{"location":"demos/node_modules/highlight.js/CHANGES/#version-1050","text":"Build: Add Subresource Integrity digest lists to cdn-assets Josh Goebel R and VB.net grammars now ship in our default build ( :common ) Josh Goebel Parser: add match as sugar for simple begin only matches (#2834) Josh Goebel allow illegal to also be an array of regex (#2834) Josh Goebel add compilerExtensions allows grammers to influence mode compilation (#2834) Josh Goebel some internal pieces are now simple compiler extensions New Languages: Added 3rd party Red & Rebol grammar to SUPPORTED_LANGUAGES (#2872) Oldes Huhuman Language grammar improvements: enh: CSS grammars now share common foundation, keywords, etc. (#2937) Josh Goebel enh(css): many consistency improvements enh(scss): many consistency improvements enh(stylus): many consistency improvements enh(less): many consistency improvements enh(cpp): Support C++ pack expansion in function arguments Martin D\u00f8rum enh(makefile): Add make as an alias (#2883) tripleee enh(swift) Improved grammar for strings (#2819) Steven Van Impe enh(swift) Grammar improvements (#2908) Steven Van Impe New grammar for keywords and built-ins Added support for operator highlighting New grammar for attributes Added support for quoted identifiers, implicit parameters, and property wrapper projections Support for more complex expressions in string interpolation enh(swift) Improved highlighting for types and generic arguments (#2920) Steven Van Impe enh(swift) Improved highlighting for functions, initializers, and subscripts (#2930) Steven Van Impe fix(http) avoid recursive sublanguage and tighten rules (#2893) Josh Goebel fix(asciidoc): Handle section titles level 5 (#2868) Vaibhav Chanana fix(asciidoc): Support unconstrained emphasis syntax (#2869) Guillaume Grossetie enh(scheme) Allow [] for argument lists (#2913) Josh Goebel enh(vb) Large rework of VB.net grammar (#2808) Jan Pilzer Adds support for Date data types, see (#2775) Adds support for REM comments and fixes ''' doctags (#2875) (#2851) Custom number mode to support VB.net specific number flags Hex (&H), Oct (&O), and binary (&B) prefixes Separating digits with underscores: 90_946 Type suffixes: 123UI (unsigned integer) Improves directives detection and adds support for Enable , Disable , and Then keywords Adds more markup tests fix(javascript) Empty block-comments break highlighting (#2896) Jan Pilzer enh(dart) Fix empty block-comments from breaking highlighting (#2898) Jan Pilzer enh(dart) Fix empty doc-comment eating next line Jan Pilzer enh(asciidoc) Adds support for unconstrained bold syntax (#2869) Guillaume Grossetie enh(c-like) Incorrect highlighting for interger suffix (#2919) Vaibhav Chanana enh(properties) Correctly handle trailing backslash (#2922) Vaibhav Chanana Recent Deprecations: HTML \"merging\" is deprecated. (#2873) Josh Goebel HTML inside <pre> blocks will no longer be magically merged back into the highlighted code's HTML result - it will instead be silently removed. Consider using a plugin if you truly need this functionality Deprecated as of 10.5.0 - will be removed in v11. tabReplace option deprecated. (#2873) Josh Goebel Consider: Use the CSS tab-size property, or simply pre-process the text yourself before rendering the initial HTML otherwise, use a plugin Deprecated as of 10.5.0 - will be removed in v11. useBR option deprecated. (#2559) Josh Goebel Recommended: You really should just use the HTML <pre> tag or perhaps try CSS white-space: pre; otherwise, use a plugin Deprecated as of 10.3.0 - will be removed in v11. requireLanguage API is deprecated, will be removed in v11.0. Consider: Use getLanguage (with custom error handling) or built-time dependencies. See Library API for more information. Deprecated as of 10.4.0 - will be removed in v11.","title":"Version 10.5.0"},{"location":"demos/node_modules/highlight.js/CHANGES/#version-1041-tentative","text":"Security (fix) Exponential backtracking fixes for: Josh Goebel cpp handlebars gams perl jboss-cli r erlang-repl powershell routeros (fix) Polynomial backtracking fixes for: Josh Goebel asciidoc reasonml latex kotlin gcode d aspectj moonscript coffeescript/livescript csharp scilab crystal elixir basic ebnf ruby fortran/irpf90 livecodeserver yaml x86asm dsconfig markdown ruleslanguage xquery sqf Very grateful to Michael Schmidt for all the help.","title":"Version 10.4.1 (tentative)"},{"location":"demos/node_modules/highlight.js/CHANGES/#version-1040","text":"A largish release with many improvements and fixes from quite a few different contributors. Enjoy! Deprecations: (chore) requireLanguage is deprecated. Prefer getLanguage (with custom error handling) or built-time dependencies. See Library API for more information. Parser: enh(parser) use negative look-ahead for beginKeywords support (#2813) Josh Goebel enh(grammars) allow classNameAliases for more complex grammars Josh Goebel fix(vue): Language name now appears in CSS class (#2807) Michael Rush (chore) Clean up all regexs to be UTF-8 compliant/ready (#2759) Josh Goebel enh(grammars) allow classNameAliases for more complex grammars Josh Goebel New Languages: Added 3rd party Chapel grammar to SUPPORTED_LANGUAGES (#2806) Brad Chamberlain Added BBCode grammar to SUPPORTED_LANGUAGES (#2867) Paul Reid enh(javascript) Added node-repl for Node.js REPL sessions (#2792) Marat Nagayev Language Improvements: enh(shell) Recognize prompts which contain tilde ~ (#2859) Guillaume Grossetie enh(shell) Add support for multiline commands with line continuation \\ (#2861) Guillaume Grossetie enh(autodetect) Over 30+ improvements to auto-detect (#2745) Josh Goebel 4-5% improvement in auto-detect against large sample set properties, angelscript, lsl, javascript, n1ql, ocaml, ruby protobuf, hy, scheme, crystal, yaml, r, vbscript, groovy python, java, php, lisp, matlab, clojure, csharp, css fix(r) fixed keywords not properly spaced (#2852) Josh Goebel fix(javascript) fix potential catastrophic backtracking (#2852) Josh Goebel fix(livescript) fix potential catastrophic backtracking (#2852) Josh Goebel bug(xml) XML grammar was far too imprecise/fuzzy Josh Goebel enh(xml) Improve precision to prevent false auto-detect positives Josh Goebel fix(js/ts) Prevent for/while/if/switch from falsly matching as functions (#2803) Josh Goebel enh(julia) Update keyword lists for Julia 1.x (#2781) Fredrik Ekre enh(python) Match numeric literals per the language reference Richard Gibson enh(ruby) Match numeric literals per language documentation Richard Gibson enh(javascript) Match numeric literals per ECMA-262 spec Richard Gibson enh(java) Match numeric literals per Java Language Specification Richard Gibson enh(swift) Match numeric literals per language reference Richard Gibson enh(php) highlight variables (#2785) Taufik Nurrohman fix(python) Handle comments on decorators (#2804) Jonathan Sharpe enh(diff) improve highlighting of diff for git patches [Florian Bezdeka][] fix(llvm) lots of small improvements and fixes (#2830) Josh Goebel enh(mathematica) Rework entire implementation Patrick Scheibe Correct matching of the many variations of Mathematica's numbers Matching of named-characters aka special symbols like \\[Gamma] Updated list of version 12.1 built-in symbols Matching of patterns, slots, message-names and braces fix(swift) Handle keywords that start with # Marcus Ortiz enh(swift) Match some keyword Marcus Ortiz enh(swift) Match @main attribute Marcus Ortiz Dev Improvements: chore(dev) add theme picker to the tools/developer tool (#2770) Josh Goebel fix(dev) the Vue.js plugin no longer throws an exception when hljs is not in the global namespace Kyle Brown New themes: StackOverflow Dark by Jan Pilzer StackOverflow Light by Jan Pilzer","title":"Version 10.4.0"},{"location":"demos/node_modules/highlight.js/CHANGES/#version-1031","text":"Prior version let some look-behind regex sneak in, which does not work yet on Safari. This release removes those incompatible regexes. Fix: fix(Safari) Remove currently unsupported look-behind regex ( fix ) Josh Goebel","title":"Version 10.3.1"},{"location":"demos/node_modules/highlight.js/CHANGES/#version-1030","text":"Language Improvements: enh(latex) Complete ground up rewrite of LaTex grammar schtandard fix(cpp) implement backslash line continuation in comments (#2757) Konrad Rudolph fix(cpp) improve parsing issues with templates (#2752) Josh Goebel enh(cpp) add support for enum (struct|class) and union (#2752) Josh Goebel fix(js/ts) Fix nesting of {} inside template literals SUBST expression (#2748) Josh Goebel enh(js/ts) Highlight class methods as functions (#2727) Josh Goebel fix(js/ts) constructor is now highlighted as a function title (not keyword) (#2727) Josh Goebel fix(c-like) preprocessor directives not detected after else (#2738) Josh Goebel enh(javascript) allow # for private class fields (#2701) Chris Krycho fix(js) prevent runaway regex (#2746) Josh Goebel fix(bash) enh(bash) allow nested params (#2731) Josh Goebel fix(python) Fix highlighting of keywords and strings (#2713, #2715) Konrad Rudolph fix(fsharp) Prevent (*) from being detected as a multi-line comment Josh Goebel enh(bash) add support for heredocs (#2684) Josh Goebel enh(r) major overhaul of the R language grammar (and fix a few bugs) (#2680) Konrad Rudolph enh(csharp) Add all C# 9 keywords, and other missing keywords (#2679) David Pine enh(objectivec) Add objective-c++ and obj-c++ aliases for Objective-C Josh Goebel enh(java) Add support for record (#2685) Josh Goebel fix(csharp) prevent modifier keywords wrongly flagged as title (#2683) Josh Goebel enh(axapta) Update keyword list for Axapta (X++) (#2686) Ryan Jonasson fix(fortran) FORTRAN 77-style comments (#2677) Philipp Engel fix(javascript) Comments inside params should be highlighted (#2702) Josh Goebel fix(scala) Comments inside class header should be highlighted (#1559) Josh Goebel fix(c-like) Correctly highlight modifiers ( final ) in class declaration (#2696) Josh Goebel enh(angelscript) Improve heredocs, numbers, metadata blocks (#2724) Melissa Geels enh(javascript) Implement Numeric Separators (#2617) Antoine du Hamel enh(typescript) TypeScript also gains support for numeric separators (#2617) Antoine du Hamel enh(php) Add support for PHP 8 match keyword and add php8 as an alias (#2733) Ayesh Karunaratne fix(handlebars) Support if else keyboards (#2659) Tom Wallace Deprecations: useBR option deprecated and will be removed in v11.0. (#2559) Josh Goebel","title":"Version 10.3.0"},{"location":"demos/node_modules/highlight.js/CHANGES/#version-1021","text":"Parser Engine: fix(parser) complete fix for resuming matches from same index (#2678) Josh Goebel","title":"Version 10.2.1"},{"location":"demos/node_modules/highlight.js/CHANGES/#version-1020","text":"Parser Engine: (fix) When ignoring a potential match highlighting can terminate early (#2649) Josh Goebel New themes: Gradient Light by Samia Ali Deprecations: fixMarkup is now deprecated and will be removed in v11.0. (#2534) Josh Goebel Big picture: Add simple Vue plugin for basic use cases (#2544) Josh Goebel Language Improvements: fix(bash) Fewer false positives for keywords in arguments (#2669) sirosen fix(js) Prevent long series of /////// from causing freezes (#2656) Josh Goebel enh(csharp) Add init and record keywords for C# 9.0 (#2660) Youssef Victor enh(matlab) Add new R2019b arguments keyword and fix enumeration keyword (#2619) Andrew Janke fix(kotlin) Remove very old keywords and update example code (#2623) kageru fix(night) Prevent object prototypes method values from being returned in getLanguage (#2636) night enh(java) Add support for enum , which will identify as a class now (#2643) ezksd enh(nsis) Add support for NSIS 3.06 commands (#2653) idleberg enh(php) detect newer more flexible HEREdoc syntax (#2658) eytienne","title":"Version 10.2.0"},{"location":"demos/node_modules/highlight.js/CHANGES/#version-1011","text":"Fixes: Resolve issue on Node 6 due to dangling comma (#2608) Edwin Hoogerbeets Resolve index.d.ts is not a module error (#2603) Josh Goebel","title":"Version 10.1.1"},{"location":"demos/node_modules/highlight.js/CHANGES/#version-1010","text":"New themes: NNFX and NNFX-dark by Jim Mason lioshi by lioshi Parser Engine: (parser) Now escapes quotes in text content when escaping HTML (#2564) Josh Goebel (parser) Adds keywords.$pattern key to grammar definitions (#2519) Josh Goebel (parser) Adds SHEBANG utility mode Josh Goebel (parser) Adds registerAliases method (#2540) Taufik Nurrohman (enh) Added on:begin callback for modes (#2261) Josh Goebel (enh) Added on:end callback for modes (#2261) Josh Goebel (enh) Added ability to programatically ignore begin and end matches (#2261) Josh Goebel (enh) Added END_SAME_AS_BEGIN mode to replace endSameAsBegin parser attribute (#2261) Josh Goebel (fix) fixMarkup would rarely destroy markup when useBR was enabled (#2532) Josh Goebel Deprecations: htmlbars grammar is now deprecated. Use handlebars instead. (#2344) Nils Knappmeier when using highlightBlock result.re deprecated. Use result.relevance instead. (#2552) Josh Goebel ditto for result.second_best.re => result.second_best.relevance (#2552) lexemes is now deprecated in favor of keywords.$pattern key (#2519) Josh Goebel endSameAsBegin is now deprecated. (#2261) Josh Goebel Language Improvements: fix(groovy) strings are not allowed inside ternary clauses (#2217) Josh Goebel fix(typescript) add readonly keyword (#2562) Martin (Lhoerion) fix(javascript) fix regex inside parens after a non-regex (#2530) Josh Goebel enh(typescript) use identifier to match potential keywords, preventing false positivites (#2519) Josh Goebel enh(javascript) use identifier to match potential keywords, preventing false positivites (#2519) Josh Goebel [enh] Add OPTIMIZE: and HACK: to the labels highlighted inside comments Josh Goebel enh(typescript/javascript/coffeescript/livescript) derive ECMAscript keywords from a common foudation (#2518) Josh Goebel enh(typescript) add setInterval, setTimeout, clearInterval, clearTimeout (#2514) Josh Goebel enh(javascript) add setInterval, setTimeout, clearInterval, clearTimeout (#2514) Vania Kucher enh(cpp) add pair , make_pair , priority_queue as built-ins (#2538) Hankun Lin enh(cpp) recognize priority_queue pair as cpp containers (#2541) Hankun Lin fix(javascript) prevent set keyword conflicting with setTimeout, etc. (#2514) Vania Kucher fix(cpp) Fix highlighting of unterminated raw strings (#2261) David Benjamin fix(javascript) => function with nested () in params now works (#2502) Josh Goebel fix(typescript) => function with nested () in params now works (#2502) Josh Goebel fix(yaml) Fix tags to include non-word characters (#2486) Peter Plantinga fix(swift) @objcMembers was being partially highlighted (#2543) Nick Randall enh(dart) Add late and required keywords, the Never built-in type, and nullable built-in types (#2550) Sam Rawlins enh(erlang) Add underscore separators to numeric literals (#2554) Sergey Prokhorov enh(handlebars) Support for sub-expressions, path-expressions, hashes, block-parameters and literals (#2344) Nils Knappmeier enh(protobuf) Support multiline comments (#2597) Pavel Evstigneev fix(toml) Improve key parsing (#2595) Antoine du Hamel","title":"Version 10.1.0"},{"location":"demos/node_modules/highlight.js/CHANGES/#version-1002","text":"Brower build: Issue (bug) Fix: Version 10 fails to load as CommonJS module. (#2511) Josh Goebel Issue (removal) AMD module loading support has been removed. (#2511) Josh Goebel Parser Engine Changes: Issue fix(parser) Fix freez issue with illegal 0 width matches (#2524) Josh Goebel","title":"Version 10.0.2"},{"location":"demos/node_modules/highlight.js/CHANGES/#version-1001","text":"Parser Engine Changes: (bug) Fix sublanguage with no relevance score (#2506) Josh Goebel","title":"Version 10.0.1"},{"location":"demos/node_modules/highlight.js/CHANGES/#version-1000","text":"New languages: add(php-template) Explicit language to detect PHP templates (vs xml) Josh Goebel enh(python) Added python-repl for Python REPL sessions add(never) Added 3rd party Never language support New themes: Srcery by Chen Bin Parser Engine Changes: (bug) Fix beginKeywords to ignore . matches (#2434) Josh Goebel (enh) add before:highlight plugin API callback (#2395) Josh Goebel (enh) add after:highlight plugin API callback (#2395) Josh Goebel (enh) split out parse tree generation and HTML rendering concerns (#2404) Josh Goebel (enh) every language can have a name attribute now (#2400) Josh Goebel (enh) improve regular expression detect (less false-positives) (#2380) Josh Goebel (enh) make noHighlightRe and languagePrefixRe configurable (#2374) Josh Goebel Language Improvements: enh(python) Exclude parens from functions params (#2490) \u00c1lvaro Mond\u00e9jar enh(swift) Add compactMap to keywords as built_in (#2478) Omid Golparvar enh(nim) adds func keyword (#2468) Adnan Yaqoob enh(xml) deprecate ActionScript inside script tags (#2444) Josh Goebel fix(javascript) prevent get/set variables conflicting with keywords (#2440) Josh Goebel bug(clojure) Now highlights defn- properly (#2438) Josh Goebel enh(bash) default value is another variable (#2439) Josh Goebel enh(bash) string nested within string (#2439) Josh Goebel enh(bash) Add arithmetic expression support (#2439) Josh Goebel enh(clojure) Add support for global definitions name (#2347) Alexandre Grison enh(fortran) Support Fortran 77 style comments (#2416) Josh Goebel (csharp) add support for @identifier style identifiers (#2414) Josh Goebel fix(elixir) Support function names with a slash (#2406) Josh Goebel fix(javascript) comma is allowed in a \"value container\" (#2403) Josh Goebel enh(apache) add deny and allow keywords Josh Goebel enh(apache) highlight numeric attributes values Josh Goebel enh(apache) highlight IP addresses, ports, and strings in sections Josh Goebel enh(php) added more keywords and include <?= syntax to meta Taufik Nurrohman fix(protobuf) Fix rpc when followed by a block (#) Josh Goebel enh(zephir) almost complete rework of the zephir grammar (#2387) Josh Goebel (markdown) much improved code block support (#2382) Josh Goebel (markdown) improve bold/italic nesting (#2382) Josh Goebel enh(csharp) Support where keyword as class constraint (#2378) Josh Goebel enh(csharp) Allow reference path in class inheritance lists (#2378) Josh Goebel enh(csharp) Add generic modifiers (in, out) (#2378) Josh Goebel (fortran) enh(fortran) support intrinsic data types (#2379) Josh Goebel enh(java) annotations can include numbers (#2377) Josh Goebel enh(java) annotations can take params (#2377) Josh Goebel enh(java) allow annotations inside function call params (#2377) Josh Goebel enh(parser) pre/post-highlightBlock callbacks via plugin (#2285) Josh Goebel (fortran) Add Fortran 2018 keywords and coarray intrinsics (#2361) Sam Miller (delphi) highlight hexadecimal, octal, and binary numbers (#2370) Robert Riebisch enh(plaintext) added text and txt as alias (#2360) Taufik Nurrohman enh(powershell) added PowerShell v5.1/v7 default aliases as \"built_in\"s (#2423) Sean Williams enh(yaml) added support for timestamps (#2475) Peter Plantinga Developer Tools: added Dockerfile for optionally developing with a container","title":"Version 10.0.0"},{"location":"demos/node_modules/highlight.js/CHANGES/#version-9181","text":"Grammar Improvements: bug(coffeescript) fix freezing bug due to badly behaved regex (#2376) Josh Goebel","title":"Version 9.18.1"},{"location":"demos/node_modules/highlight.js/CHANGES/#version-9180","text":"New languages: none. New themes: none. Core Changes: none. Language Improvements: (javascript) fix JSX self-closing tag issues (#2322) Josh Goebel (fortran) added block and endblock keywords (#2343) Philipp Engel (javascript) support jsx fragments (#2333) Josh Goebel (ini) support TOML arrays, clean up grammar (#2335) Josh Goebel (vbnet) add nameof operator to the keywords (#2329) Youssef Victor (stan) updated with improved coverage of language keywords and patterns. (#1829) Jeffrey Arnold enh(cpp) Detect namespaced function types ( A::typeName func(...) ) (#2332) Josh Goebel enh(cpp) Detect namespaced functions also ( A::functionName ) (#2332) Josh Goebel enh(cpp) Properly detect decltype(auto) (#2332) Josh Goebel enh(cpp) recognize primitive types ( int8_t , etc.) as function types (#2332) Josh Goebel Developer Tools: feat(developer): add button to show parsed structure (#2345) Nils Knappmeier","title":"Version 9.18.0"},{"location":"demos/node_modules/highlight.js/CHANGES/#version-9171","text":"Fixes: fix(parser): resolve IE 11 issue with Object.freeze() (#2319) Josh Goebel","title":"Version 9.17.1"},{"location":"demos/node_modules/highlight.js/CHANGES/#version-9170","text":"New languages: none. New themes: Gradient Dark by Samia Ali Core Improvements: chore(parser): switch from createElementNS to createElement (#2314) Josh Goebel enh(parser): add better error when a language requirement is missing (#2311) Josh Goebel fix(parser/docs): disallow self mode at the top-level of a language (#2294) Josh Goebel enh(parser) add safe & debug modes. Better error handling for crash conditions. (#2286) Josh Goebel fix(parser): Fix merger HTML attribute quoting (#2235) Josh Goebel fix(parser): Look-ahead regex now work for end matches also (#2237) Josh Goebel fix(parser): Better errors when a language is missing (#2236) Josh Goebel fix(parser): freeze built-in modes to prevent grammars altering them (#2271) Josh Goebel fix(themes): fix inconsistencies between some themes padding/spacing (#2300) Josh Goebel ehh(build) Add CI check for building a \"use strict\" safe rollup package from NPM builds (#2247) Josh Goebel fix(pkg): Prefix global addEventListener with window to be able to minify with closure compiler (#2305) Kirill Saksin Language Improvements: fix(sql): backslash is not used to escape in strings in standard SQL (#1748) Mike Schall enh(ebnf) add backticks as additional string variant (#2290) Chris Marchesi chore(javascript): add esm related extensions to aliases (#2298) Rongjian Zhang fix(kotlin): fix termination of \"\"\" string literals (#2295) Josh Goebel fix(mercury): don't change global STRING modes (#2271) Josh Goebel enh(xml) expand and improve document type highlighting (#2287) w3suli enh(ebnf) add underscore as allowed meta identifier character, and dot as terminator (#2281) Chris Marchesi fix(makefile) fix double relevance for assigns, improves auto-detection (#2278) Josh Goebel enh(xml) support for highlighting entities (#2260) w3suli enh(gml) fix naming of keyword class (consistency fix) (#2254) Liam Nobel enh(javascript): Add support for jsdoc comments (#2245) Milutin Kristofic fix(python) fix if getting confused as an f-string (#2200) Josh Goebel and Carl Baxter enh(powershell) major overhaul, huge improvements (#2224) enh(css) Improve @rule highlighting, including properties (#2241) Josh Goebel enh(css) Improve highlighting of numbers inside expr/func calc(2px+3px) (#2241) enh(scss) Pull some of the CSS improvements back into SCSS (#2241) fix(go): Fix escaped character literals (#2266) David Benjamin fix(objectivec): Fix various preprocessor highlighting issues (#2265) David Benjamin fix(objectivec): Handle multibyte character literals (#2268) David Benjamin enh(cpp): Add additional keywords (#2289) Adrian Ostrowski","title":"Version 9.17.0"},{"location":"demos/node_modules/highlight.js/CHANGES/#version-9162","text":"New languages: none. New styles: none. Improvements: - fix(arduino) Resolves issue with arduino.js not being \"use strict\" safe (#2247)","title":"Version 9.16.2"},{"location":"demos/node_modules/highlight.js/CHANGES/#version-9161","text":"New languages: none. New styles: - Night Owl by Carl Baxter Improvements: - Add CLI tool to quickly check for relevance conflicts Mark Ellis (#1554) - enhance(twig) update list of filter and tags (#2090) - fix(crystal): correctly highlight !~ method definition (#2222) - fix dropping characters if we choke up on a 0-width match (#2219) - (accesslog) improve accesslog relevancy scoring (#2172) - fix(shell): fix parsing of prompts with forward slash (#2218) - improve parser to properly support look-ahead regex in begin matchers (#2135) - blacklist super-common keywords from having relevance (#2179) - fix(swift): support for @dynamicMemberLookup and @propertyWrapper (#2202) - fix: endWithParent inside starts now always works (#2201) - fix(typescript): constructor in declaration doesn't break highlighting - fix(typescript): only match function keyword as a separate identifier (#2191) - feature(arduino) make arduino a super-set of cpp grammar - fix(javascript): fix object attributes immediately following line comments - fix(xml): remove vbscript as potential script tag subLanguage - fix(Elixir): improve regex for numbers - fix(YAML): improve matching for keys, blocks and numbers - fix(Pony): improve regex for numbers - fix(handlebars): add support for raw-blocks, and triple-mustaches(#2175) - fix(handlebars): fix parsing of block-comments containing closing mustaches (#2175) - fix(handlebars): add support for segment-literal notation, and escaped mustaches (#2184) - JSON: support for comments in JSON (#2016) - fix(cpp): improve string literal matching - fix(highlight.js): omit empty span-tags in the output (#2182) - fix(Go): improve function declaration matching - fix(python): added support for f-string literal curly braces (#2195) - fix(cpp): add future built-in (#1610) - fix(python): support comments within function parameters (#2214)","title":"Version 9.16.1"},{"location":"demos/node_modules/highlight.js/CHANGES/#version-91510","text":"New languages: none. New styles: none. Improvements: - support for ruby's squiggly heredoc (#2049) - support css custom properties (#2082) - fix(PureBASIC): update to 5.60 (#1508) - fix(Kotlin): parenthesized types in function declaration (#2107) - fix(Kotlin): nested comment (#2104) - fix(isbl): contains key typo (#2103) - fix(github-gist.css): match Github styles (#2100) - fix(elm): update to latest elm syntax (#2088) - fix: Support highlighting inline HTML and CSS tagged template strings in JS and TS (#2105) - feat(YAML): add YAML to common languages (#1952) - feat(xml): Add support for Windows Script File (.wsf), inline VBScript in XML script tags (#1690)","title":"Version 9.15.10"},{"location":"demos/node_modules/highlight.js/CHANGES/#version-9159","text":"Improvements: - fix(AutoHotkey): order and extended highlighting (#1579) - fix(Go): correctly highlight hex numbers, rather than stopping at last 'd' or 'f'. (#2060) - fix(Mathematica): Improvements to language (#2065) - fix(Node): Adds SCSS build (#2079) - fix(Rust): update keywords (#2052) - fix(Stata): Added keywords for the meta-analysis suite introduced in Stata 16 (#2081) - fix(Bash): escape double quotes (#2048)","title":"Version 9.15.9"},{"location":"demos/node_modules/highlight.js/CHANGES/#version-9158","text":"New languages: none. New styles: none. Improvements: - fix(bash): revert escaped double quotes - broke Firefox/Safari.","title":"Version 9.15.8"},{"location":"demos/node_modules/highlight.js/CHANGES/#version-9157","text":"New languages: none. New styles: none. Improvements: - fix(powershell): Add cmdlets (#2022) - fix(Bash): escaped double quotes (#2041) - fix(c++): add aliases 'hh', 'hxx', 'cxx' (#2017) - fix(ini/toml): Support comments on the same line. (#2039) - fix(JSX): not rendering well in a function without parentheses. (#2024) - fix(LiveCode): language definition update (#2021) - fix(markdown): indented lists (#2004) - fix(styles/school-book): don't style all the pre, use .hljs instead (#2034) - fix(JSX): Modify JSX tag detection to use XML language regex in place of simplistic \\w+","title":"Version 9.15.7"},{"location":"demos/node_modules/highlight.js/CHANGES/#version-9156","text":"New languages: none. New styles: none. Improvements: - Move dependencies to be devDependencies. - Fixed security issues in dev dependencies.","title":"Version 9.15.6"},{"location":"demos/node_modules/highlight.js/CHANGES/#version-9155","text":"New languages: none. New styles: none. Improvements: \ud83d\udd25 Hot fix: updated build tool.","title":"Version 9.15.5"},{"location":"demos/node_modules/highlight.js/CHANGES/#version-9154","text":"New languages: none. New styles: none. Improvements: \ud83d\udd25 Hot fix: reverted hljs cli build tool, as it was causing issues with install.","title":"Version 9.15.4"},{"location":"demos/node_modules/highlight.js/CHANGES/#version-9153","text":"New languages: none. New styles: none. Improvements: \ud83d\udd25 Hot fix: reverted hljs cli build tool, as it was causing issues with install.","title":"Version 9.15.3"},{"location":"demos/node_modules/highlight.js/CHANGES/#version-9152","text":"New languages: none. New styles: none. Improvements: \ud83d\udd25 Hot fix that was preventing highlight.js from installing.","title":"Version 9.15.2"},{"location":"demos/node_modules/highlight.js/CHANGES/#version-9151","text":"New languages: none. New styles: none. Improvements: Pony: Fixed keywords without spaces at line ends, highlighting of iso in class definitions, and function heads without bodies in traits and interfaces. Removed FUNCTION and CLASS modes until they are found to be needed and to provide some of the fixes. Support external language files in minified version of highlight.js (#1888)","title":"Version 9.15.1"},{"location":"demos/node_modules/highlight.js/CHANGES/#version-915","text":"New languages: none. New styles: none. Improvements: - new cli tool hljs - allows easier building from command line . - cpp: Fully support C++11 raw strings. (#1897) - Python: Treat False None and True as literals (#1920)","title":"Version 9.15"},{"location":"demos/node_modules/highlight.js/CHANGES/#version-9142","text":"New languages: none. New styles: none. Improvements: - Gauss fixed to stop global namespace pollution Scott Hyndman . - fix(Tcl): removed apostrophe string delimiters (don't exist)","title":"Version 9.14.2"},{"location":"demos/node_modules/highlight.js/CHANGES/#version-9141","text":"New languages: none. New styles: none. Improvements: - Pony: language improvements (#1958)","title":"Version 9.14.1"},{"location":"demos/node_modules/highlight.js/CHANGES/#version-9140","text":"New languages: none. New styles: none. Improvements: - Pony: add missing \"object\" highlighting (#1932) - Added XQuery built-in functions, prolog declarations, as well as parsing of function bodies, computed and direct constructors, by Duncan Paterson - fix(dart): Corrects highlighting with string interpolation. (#1946) - fix(swift): be eager on optional-using types (!/?) (#1919) - fix(tex): Changed cyrillic to unicode (IE11 throw SCRIPT5021) (#1601) - fix(JavaScript): Recognize get/set accessor keywords (#1940) - Fixed Dockerfile definition when using highlight continuation parameter, by Laurent Voullemier - Added tests & new annotation and verbatim keywords to Crystal , by Benoit de Chezelles - Added missing dockerfile markup tests, by Laurent Voullemier Allow empty prompt text in clojure-repl, by Egor Rogov - Fixed several issues with Crystal language definition, by Johannes M\u00fcller - Added C# as an alias for CSharp language, by Ahmed Atito - Added generic user-defined proc support, new compiler define, refactor to re-use rules, and add tests to GAUSS , by Matthew Evans - Improve Crystal language to highlight regexes after some keywords, by Tsuyusato Kitsune - Fix filterByQualifiers: fileInfo can be null - Fixed String interpolation in Dart, by Scott Hyndman .","title":"Version 9.14.0"},{"location":"demos/node_modules/highlight.js/CHANGES/#version-9131","text":"Improvements: C# function declarations no longer include trailing whitespace, by JeremyTCD Added new and missing keywords to AngelScript , by Melissa Geels TypeScript decorator factories highlighting fix, by Antoine Boisier-Michaud Added support for multiline strings to Swift , by Alejandro Isaza Fixed issue that was causing some minifiers to fail. Fixed autoDetection to accept language aliases.","title":"Version 9.13.1"},{"location":"demos/node_modules/highlight.js/CHANGES/#version-9130","text":"New languages: ArcGIS Arcade by John Foster AngelScript by Melissa Geels GML by meseta isbl built-in language DIRECTUM and Conterra by Dmitriy Tarasov . PostgreSQL SQL dialect and PL/pgSQL language by Egor Rogov . ReasonML by Gidi Meir Morris SAS by Mauricio Caceres Bravo Plaintext by Egor Rogov .properties by bostko and Egor Rogov New styles: a11y-dark theme by Eric Bailey a11y-light theme by Eric Bailey An Old Hope by Gustavo Costa Atom One Dark Reasonable by Gidi Meir Morris isbl editor dark by Dmitriy Tarasov isbl editor light by Dmitriy Tarasov Lightfair by Tristian Kelly Nord by Arctic Ice Studio \ud83e\udd84 Shades of Purple by Ahmad Awais Improvements: New attribute endSameAsBegin for nested constructs with variable names by Egor Rogov . Python highlighting of escaped quotes fixed by Harmon PHP : Added alias for php7, by Vijaya Chandran Mani C++ string handling, by David Benjamin Swift Add @objcMembers to @attributes , by Berk \u00c7ebi Infrastructural changes by Marcos C\u00e1ceres Fixed metachars highighting for NSIS by Jan T. Sott Yaml highlight local tags as types by L\u00e9o Lam Improved highlighting for Elixir by Piotr Kaminski New attribute disableAutodetect for preventing autodetection by Egor Rogov Matlab : transpose operators and double quote strings, by JohnC32 and Egor Rogov Various documentation typos and improvemets by Jimmy W\u00e4rting , Lutz B\u00fcch , bcleland Cmake updated with new keywords and commands by Deniz Bahadir","title":"Version 9.13.0"},{"location":"demos/node_modules/highlight.js/CHANGES/#version-9120","text":"New language: MikroTik RouterOS Scripting language by Ivan Dementev . New style: VisualStudio 2015 Dark by Nicolas LLOBERA Improvements: - Crystal updated with new keywords and syntaxes by Tsuyusato Kitsune . - Julia updated to the modern definitions by Alex Arslan . - julia-repl added by Morten Piibeleht . - Stanislav Belov wrote a new definition for 1C , replacing the one that has not been updated for more than 8 years. The new version supports syntax for versions 7.7 and 8. - Nicolas LLOBERA improved C# definition fixing edge cases with function titles detection and added highlighting of [Attributes] . - nnnik provided a few correctness fixes for Autohotkey . - Martin Clausen made annotation collections in Clojure to look consistently with other kinds. - Alejandro Alonso updated Swift keywords.","title":"Version 9.12.0"},{"location":"demos/node_modules/highlight.js/CHANGES/#version-9110","text":"New languages: Shell by Tsuyusato Kitsune jboss-cli by Rapha\u00ebl Parr\u00ebe Improvements: [Jo\u00ebl Porquet] has greatly improved the definition of makefile . C++ class titles are now highlighted as in other languages with classes. Jordi Petit added rarely used or , and and not keywords to C++ . Pieter Vantorre fixed highlighting of negative floating point values.","title":"Version 9.11.0"},{"location":"demos/node_modules/highlight.js/CHANGES/#version-9100","text":"Apologies for missing the previous release cycle. Some thing just can't be automated\u2026 Anyway, we're back! New languages: Hy by Sergey Sobko Leaf by Hale Chan N1QL by Andres T\u00e4ht and Rene Saarsoo Improvements: Rust got updated with new keywords by Kasper Andersen and then significantly modernized even more by Eduard-Mihai Burtescu (yes, @eddyb, Rust core team member!) Python updated with f-literals by Philipp A . YAML updated with unquoted strings support. Gauss updated with new keywords by Matt Evans . Lua updated with new keywords by Joe Blow . Kotlin updated with new keywords by Philipp Hauer . TypeScript got highlighting of function params and updated keywords by Ike Ku . Scheme now correctly handles `-quoted lists thanks to Guannan Wei . Sam Wu fixed handling of << in C++ defines.","title":"Version 9.10.0"},{"location":"demos/node_modules/highlight.js/CHANGES/#version-990","text":"New languages LLVM by Michael Rodler Improvements: TypeScript updated with annotations and param lists inside constructors, by Raphael Parree . CoffeeScript updated with new keywords and fixed to recognize JavaScript in ```, thanks to thanks to Geoffrey Booth . Compiler directives in Delphi are now correctly highlighted as \"meta\".","title":"Version 9.9.0"},{"location":"demos/node_modules/highlight.js/CHANGES/#version-980-new-york","text":"This version is the second one that deserved a name. Because I'm in New York, and the release isn't missing the deadline only because it's still Tuesday on West Coast. New languages: Clean by Camil Staps Flix by Magnus Madsen Improvements: Kenton Hamaluik did a comprehensive update for Haxe . New commands for PowerShell from Nicolas Le Gall . Jan T. Sott updated NSIS . Java and Swift support unicode characters in identifiers thanks to Alexander Lichter .","title":"Version 9.8.0 \"New York\""},{"location":"demos/node_modules/highlight.js/CHANGES/#version-970","text":"A comprehensive bugfix release. This is one of the best things about highlight.js: even boring things keep getting better (even if slow). VHDL updated with PSL keywords and uses more consistent styling. Nested C-style comments no longer break highlighting in many languages. JavaScript updated with => functions, highlighted object attributes and parsing within template string substitution blocks ( ${...} ). Fixed another corner case with self-closing <tag/> in JSX. Added HEALTHCHECK directive in Docker. Delphi updated with new Free Pascal keywords. Fixed digit separator parsing in C++. C# updated with new keywords and fixed to allow multiple identifiers within generics <...> . Fixed another slow regex in Less.","title":"Version 9.7.0"},{"location":"demos/node_modules/highlight.js/CHANGES/#version-960","text":"New languages: ABNF and EBNF by Alex McKibben Awk by Matthew Daly SubUnit by Sergey Bronnikov New styles: Atom One in both Dark and Light variants by Daniel Gamage Plus, a few smaller updates for Lasso , Elixir , C++ and SQL .","title":"Version 9.6.0"},{"location":"demos/node_modules/highlight.js/CHANGES/#version-950","text":"New languages: Excel by Victor Zhou Linden Scripting Language by Builder's Brewery TAP (Test Anything Protocol) by Sergey Bronnikov Pony by Joe Eli McIlvain Coq by Stephan Boyer dsconfig and LDIF by Jacob Childress New styles: Ocean Dark by Gavin Siu Notable changes: Minh Nguy\u1ec5n added more built-ins to Objective C. Jeremy Hull fixed corner cases in C++ preprocessor directives and Diff comments. Victor Zhou added support for digit separators in C++ numbers.","title":"Version 9.5.0"},{"location":"demos/node_modules/highlight.js/CHANGES/#version-940","text":"New languages: PureBASIC by Tristano Ajmone BNF by Oleg Efimov Ada by Lars Schulna New styles: PureBASIC by Tristano Ajmone Improvements to existing languages and styles: We now highlight function declarations in Go. Taisuke Fujimoto contributed very convoluted rules for raw and interpolated strings in C#. Boone Severson updated Verilog to comply with IEEE 1800-2012 SystemVerilog. Victor Zhou improved rules for comments and strings in PowerShell files. Janis Voigtl\u00e4nder updated the definition of Elm to version 0.17 of the languages. Elm is now featured on the front page of https://highlightjs.org . Special variable $this is highlighted as a keyword in PHP. usize and isize are now highlighted in Rust. Fixed labels and directives in x86 assembler.","title":"Version 9.4.0"},{"location":"demos/node_modules/highlight.js/CHANGES/#version-930","text":"New languages: Tagger Script by Philipp Wolfer MoonScript by Billy Quith New styles: xt256 by Herbert Shin Improvements to existing languages and styles: More robust handling of unquoted HTML tag attributes Relevance tuning for QML which was unnecessary eager at seizing other languages' code Improve GAMS language parsing Fixed a bunch of bugs around selectors in Less Kotlin's got a new definition for annotations, updated keywords and other minor improvements Added move to Rust keywords Markdown now recognizes ```-fenced code blocks Improved detection of function declarations in C++ and C#","title":"Version 9.3.0"},{"location":"demos/node_modules/highlight.js/CHANGES/#version-920","text":"New languages: QML by John Foster HTMLBars by Michael Johnston CSP by Taras Maxima by Robert Dodier New styles: Gruvbox by Qeole Dracula by Denis Ciccale Improvements to existing languages and styles: We now correctly handle JSX with arbitrary node tree depth. Argument list for (lambda) in Scheme is no longer highlighted as a function call. Stylus syntax doesn't break on valid CSS. More correct handling of comments and strings and other improvements for VimScript. More subtle work on the default style. We now use anonymous modules for AMD. macro_rules! is now recognized as a built-in in Rust.","title":"Version 9.2.0"},{"location":"demos/node_modules/highlight.js/CHANGES/#version-910","text":"New languages: Stan by Brendan Rocks BASIC by Rapha\u00ebl Ass\u00e9nat GAUSS by Matt Evans DTS by Martin Braun Arduino by Stefania Mellai New Styles: Arduino Light by Stefania Mellai Improvements to existing languages and styles: Handle return type annotations in Python Allow shebang headers in Javascript Support strings in Rust meta Recognize struct as a class-level definition in Rust Recognize b-prefixed chars and strings in Rust Better numbers handling in Verilog","title":"Version 9.1.0"},{"location":"demos/node_modules/highlight.js/CHANGES/#version-900","text":"The new major version brings a reworked styling system. Highlight.js now defines a limited set of highlightable classes giving a consistent result across all the styles and languages. You can read a more detailed explanation and background in the tracking issue that started this long process back in May. This change is backwards incompatible for those who uses highlight.js with a custom stylesheet. The new style guide explains how to write styles in this new world. Bundled themes have also suffered a significant amount of improvements and may look different in places, but all the things now consistent and make more sense. Among others, the Default style has got a refresh and will probably be tweaked some more in next releases. Please do give your feedback in our issue tracker . New languages in this release: Cach\u00e9 Object Script by Nikita Savchenko YAML by Stefan Wienert MIPS Assembler by Nebuleon Fumika HSP by prince Improvements to existing languages and styles: ECMAScript 6 modules import now do not require closing semicolon. ECMAScript 6 classes constructors now highlighted. Template string support for Typescript, as for ECMAScript 6. Scala case classes params highlight fixed. Built-in names introduced in Julia v0.4 added by Kenta Sato . Refreshed Default style. Other notable changes: Web workers support added bu Jan K\u00fchle . We now have tests for compressed browser builds as well. The building tool chain has been switched to node.js 4.x. and is now shamelessly uses ES6 features all over the place, courtesy of Jeremy Hull . License added to non-compressed browser build.","title":"Version 9.0.0"},{"location":"demos/node_modules/highlight.js/CHANGES/#version-891","text":"Some last-minute changes reverted due to strange bug with minified browser build: Scala case classes params highlight fixed ECMAScript 6 modules import now do not require closing semicolon ECMAScript 6 classes constructors now highlighted Template string support for Typescript, as for ECMAScript 6 License added to not minified browser build","title":"Version 8.9.1"},{"location":"demos/node_modules/highlight.js/CHANGES/#version-890","text":"New languages: crmsh by Kristoffer Gronlund SQF by Soren Enevoldsen Notable fixes and improvements to existing languages: Added abstract and namespace keywords to TypeScript by Daniel Rosenwasser Added label support to Dockerfile by Ladislav Prskavec Crystal highlighting improved by Tsuyusato Kitsune Missing Swift keywords added by Nate Cook Improve detection of C block comments Scala case classes params highlight fixed ECMAScript 6 modules import now do not require closing semicolon ECMAScript 6 classes constructors now highlighted Template string support for Typescript, as for ECMAScript 6 Other notable changes: License added to not minified browser build","title":"Version 8.9.0"},{"location":"demos/node_modules/highlight.js/CHANGES/#version-880","text":"New languages: Golo by Philippe Charri\u00e8re GAMS by Stefan Bechert IRPF90 by Anthony Scemama Access logs by Oleg Efimov Crystal by Tsuyusato Kitsune Notable fixes and improvements to existing languages: JavaScript highlighting no longer fails with ES6 default parameters Added keywords async and await to Python PHP heredoc support improved Allow preprocessor directives within C++ functions Other notable changes: Change versions to X.Y.Z SemVer-compatible format Added ability to build all targets at once","title":"Version 8.8.0"},{"location":"demos/node_modules/highlight.js/CHANGES/#version-87","text":"New languages: Zephir by Oleg Efimov Elm by Janis Voigtl\u00e4nder XQuery by Dirk Kirsten Mojolicious by Dotan Dimet AutoIt by Manh Tuan from J2TeaM Toml (ini extension) by Guillaume Gomez New styles: Hopscotch by Jan T. Sott Grayscale by MY Sun Notable fixes and improvements to existing languages: Fix encoding of images when copied over in certain builds Fix incorrect highlighting of the word \"bug\" in comments Treat decorators different from matrix multiplication in Python Fix traits inheritance highlighting in Rust Fix incorrect document Oracle keywords added to SQL language definition by Vadimtro Postgres keywords added to SQL language definition by Benjamin Auder Fix registers in x86asm being highlighted as a hex number Fix highlighting for numbers with a leading decimal point Correctly highlight numbers and strings inside of C/C++ macros C/C++ functions now support pointer, reference, and move returns","title":"Version 8.7"},{"location":"demos/node_modules/highlight.js/CHANGES/#version-86","text":"New languages: C/AL by Kenneth Fuglsang DNS zone file by Tim Schumacher Ceylon by Lucas Werkmeister OpenSCAD by Dan Panzarella Inform7 by Bruno Dias armasm by Dan Panzarella TP by Jay Strybis New styles: Atelier Cave , Atelier Estuary , Atelier Plateau and Atelier Savanna by Bram de Haan Github Gist by Louis Barranqueiro Notable fixes and improvements to existing languages: Multi-line raw strings from C++11 are now supported Fix class names with dashes in HAML The async keyword from ES6/7 is now supported TypeScript functions handle type and parameter complexity better We unified phpdoc/javadoc/yardoc etc modes across all languages CSS .class selectors relevance was dropped to prevent wrong language detection Images is now included to CDN build Release process is now automated","title":"Version 8.6"},{"location":"demos/node_modules/highlight.js/CHANGES/#version-85","text":"New languages: pf.conf by Peter Piwowarski Julia by Kenta Sato Prolog by Raivo Laanemets Docker by Alexis H\u00e9naut Fortran by Anthony Scemama and Thomas Applencourt Kotlin by Sergey Mashkov New styles: Agate by Taufik Nurrohman Darcula by [JetBrains][] Atelier Sulphurpool by Bram de Haan Android Studio by Pedro Oliveira Notable fixes and improvements to existing languages: ES6 features in JavaScript are better supported now by Gu Yiling . Swift now recognizes body-less method definitions. Single expression functions def foo, do: ... now work in Elixir. More uniform detection of built-in classes in Objective C. Fixes for number literals and processor directives in Rust. HTML <script> tag now allows any language, not just JavaScript. Multi-line comments are supported now in MatLab.","title":"Version 8.5"},{"location":"demos/node_modules/highlight.js/CHANGES/#version-84","text":"We've got the new demo page ! The obvious new feature is the new look, but apart from that it's got smarter: by presenting languages in groups it avoids running 10000 highlighting attempts after first load which was slowing it down and giving bad overall impression. It is now also being generated from test code snippets so the authors of new languages don't have to update both tests and the demo page with the same thing. Other notable changes: The template_comment class is gone in favor of the more general comment . Number parsing unified and improved across languages. C++, Java and C# now use unified grammar to highlight titles in function/method definitions. The browser build is now usable as an AMD module, there's no separate build target for that anymore. OCaml has got a comprehensive overhaul by Micka\u00ebl Delahaye . Clojure's data structures and literals are now highlighted outside of lists and we can now highlight Clojure's REPL sessions. New languages: AspectJ by Hakan \u00d6zler STEP Part 21 by Adam Joseph Cook SML derived by Edwin Dalorzo from OCaml definition Mercury by mucaho Smali by Dennis Titze Verilog by Jon Evans Stata by Brian Quistorff","title":"Version 8.4"},{"location":"demos/node_modules/highlight.js/CHANGES/#version-83","text":"We streamlined our tool chain, it is now based entirely on node.js instead of being a mix of node.js, Python and Java. The build script options and arguments remained the same, and we've noted all the changes in the documentation . Apart from reducing complexity, the new build script is also faster from not having to start Java machine repeatedly. The credits for the work go to Jeremy Hull . Some notable fixes: PHP and JavaScript mixed in HTML now live happily with each other. JavaScript regexes now understand ES6 flags \"u\" and \"y\". throw keyword is no longer detected as a method name in Java. Fixed parsing of numbers and symbols in Clojure thanks to input from Ivan Kleshnin . New languages in this release: Less by Max Mikhailov Stylus by Bryant Williams Tcl by Radek Liska Puppet by Jose Molina Colmenero Processing by Erik Paluka Twig templates by Luke Holder PowerShell by David Mohundro , based on the work of Nicholas Blumhardt XL by Christophe de Dinechin LiveScript by Taneli Vatanen and Jen Evers-Corvina ERB (Ruby in HTML) by Lucas Mazza Roboconf by Vincent Zurczak","title":"Version 8.3"},{"location":"demos/node_modules/highlight.js/CHANGES/#version-82","text":"We've finally got real tests and continuous testing on Travis thanks to Jeremy Hull and Chris Eidhof . The tests designed to cover everything: language detection, correct parsing of individual language features and various special cases. This is a very important change that gives us confidence in extending language definitions and refactoring library core. We're going to redesign the old demo/test suite into an interactive demo web app. If you're confident front-end developer or designer and want to help us with it, drop a comment into the issue on GitHub. As usually there's a handful of new languages in this release: Groovy by Guillaume Laforge Dart by Maxim Dikun Dust by Michael Allen Scheme by JP Verkamp G-Code by Adam Joseph Cook Q from Kx Systems by Sergey Vidyuk Other improvements: Erik Osheim heavily reworked Scala definitions making it richer. Lucas Mazza fixed Ruby hashes highlighting Lisp variants (Lisp, Clojure and Scheme) are unified in regard to naming the first symbol in parentheses: it's \"keyword\" in general case and also \"built_in\" for built-in functions in Clojure and Scheme.","title":"Version 8.2"},{"location":"demos/node_modules/highlight.js/CHANGES/#version-81","text":"New languages: Gherkin by Sam Pikesley Elixir by Josh Adams NSIS by Jan T. Sott VIM script by Jun Yang Protocol Buffers by Dan Tao Nix by Domen Ko\u017ear x86asm by innocenat Cap'n Proto and Thrift by Oleg Efimov Monkey by Arthur Bikmullin TypeScript by Panu Horsmalahti Nimrod by Flaviu Tamas Gradle by Damian Mee Haxe by Christopher Kaster Swift by Chris Eidhof and Nate Cook New styles: Kimbie , light and dark variants by Jan T. Sott Color brewer by Fabr\u00edcio Tavares de Oliveira Codepen.io embed by Justin Perry Hybrid by Nic West Other improvements: The README is heavily reworked and brought up to date by Jeremy Hull . Added listLanguages() method in the API. Improved C/C++/C# detection. Added a bunch of new language aliases, documented the existing ones. Thanks to Sindre Sorhus for background research. Added phrasal English words to boost relevance in comments. Many improvements to SQL definition made by Heiko August , Nikolay Lisienko and Travis Odom . The shorter lang- prefix for language names in HTML classes supported alongside language- . Thanks to Jeff Escalante . Ruby's got support for interactive console sessions. Thanks to Pascal Hurni . Added built-in functions for R language. Thanks to Artem A. Klevtsov . Rust's got definition for lifetime parameters and improved string syntax. Thanks to Roman Shmatov . Various improvements to Objective-C definition by Matt Diephouse . Fixed highlighting of generics in Java.","title":"Version 8.1"},{"location":"demos/node_modules/highlight.js/CHANGES/#version-80","text":"This new major release is quite a big overhaul bringing both new features and some backwards incompatible changes. However, chances are that the majority of users won't be affected by the latter: the basic scenario described in the README is left intact. Here's what did change in an incompatible way: We're now prefixing all classes located in CSS classes reference with hljs- , by default, because some class names would collide with other people's stylesheets. If you were using an older version, you might still want the previous behavior, but still want to upgrade. To suppress this new behavior, you would initialize like so: < script type = \"text/javascript\" > hljs . configure ({ classPrefix : '' }); hljs . initHighlightingOnLoad (); </ script > tabReplace and useBR that were used in different places are also unified into the global options object and are to be set using configure(options) . This function is documented in our API docs . Also note that these parameters are gone from highlightBlock and fixMarkup which are now also rely on configure . We removed public-facing (though undocumented) object hljs.LANGUAGES which was used to register languages with the library in favor of two new methods: registerLanguage and getLanguage . Both are documented in our API docs . Result returned from highlight and highlightAuto no longer contains two separate attributes contributing to relevance score, relevance and keyword_count . They are now unified in relevance . Another technically compatible change that nonetheless might need attention: The structure of the NPM package was refactored, so if you had installed it locally, you'll have to update your paths. The usual require('highlight.js') works as before. This is contributed by Dmitry Smolin . New features: Languages now can be recognized by multiple names like \"js\" for JavaScript or \"html\" for, well, HTML (which earlier insisted on calling it \"xml\"). These aliases can be specified in the class attribute of the code container in your HTML as well as in various API calls. For now there are only a few very common aliases but we'll expand it in the future. All of them are listed in the class reference . Language detection can now be restricted to a subset of languages relevant in a given context \u2014 a web page or even a single highlighting call. This is especially useful for node.js build that includes all the known languages. Another example is a StackOverflow-style site where users specify languages as tags rather than in the markdown-formatted code snippets. This is documented in the API reference (see methods highlightAuto and configure ). Language definition syntax streamlined with variants and beginKeywords . New languages and styles: Oxygene by Carlo Kok Mathematica by Daniel Kvasni\u010dka Autohotkey by Seongwon Lee Atelier family of styles in 10 variants by Bram de Haan Para\u00edso styles by Jan T. Sott Miscellaneous improvements: Highlighting => prompts in Clojure. Jeremy Hull fixed a lot of styles for consistency. Finally, highlighting PHP and HTML mixed in peculiar ways . Objective C and C# now properly highlight titles in method definition. Big overhaul of relevance counting for a number of languages. Please do report bugs about mis-detection of non-trivial code snippets!","title":"Version 8.0"},{"location":"demos/node_modules/highlight.js/CHANGES/#version-75","text":"A catch-up release dealing with some of the accumulated contributions. This one is probably will be the last before the 8.0 which will be slightly backwards incompatible regarding some advanced use-cases. One outstanding change in this version is the addition of 6 languages to the hosted script : Markdown, ObjectiveC, CoffeeScript, Apache, Nginx and Makefile. It now weighs about 6K more but we're going to keep it under 30K. New languages: OCaml by Mehdi Dogguy and Nicolas Braud-Santoni LiveCode Server by Ralf Bitter Scilab by Sylvestre Ledru basic support for Makefile by Ivan Sagalaev Improvements: Ruby's got support for characters like ?A , ?1 , ?\\012 etc. and %r{..} regexps. Clojure now allows a function call in the beginning of s-expressions (($filter \"myCount\") (arr 1 2 3 4 5)) . Haskell's got new keywords and now recognizes more things like pragmas, preprocessors, modules, containers, FFIs etc. Thanks to Zena Treep for the implementation and to Jeremy Hull for guiding it. Miscellaneous fixes in PHP, Brainfuck, SCSS, Asciidoc, CMake, Python and F#.","title":"Version 7.5"},{"location":"demos/node_modules/highlight.js/CHANGES/#new-core-developers","text":"The latest long period of almost complete inactivity in the project coincided with growing interest to it led to a decision that now seems completely obvious: we need more core developers. So without further ado let me welcome to the core team two long-time contributors: Jeremy Hull and Oleg Efimov . Hope now we'll be able to work through stuff faster! P.S. The historical commit is here for the record.","title":"New core developers"},{"location":"demos/node_modules/highlight.js/CHANGES/#version-74","text":"This long overdue version is a snapshot of the current source tree with all the changes that happened during the past year. Sorry for taking so long! Along with the changes in code highlight.js has finally got its new home at http://highlightjs.org/ , moving from its cradle on Software Maniacs which it outgrew a long time ago. Be sure to report any bugs about the site to info@highlightjs.org . On to what's new\u2026 New languages: Handlebars templates by Robin Ward Oracle Rules Language by Jason Jacobson F# by Joans Folles\u00f8 AsciiDoc and Haml by Dan Allen Lasso by Eric Knibbe SCSS by Kurt Emch VB.NET by Poren Chiang Mizar by Kelley van Evert New style themes: Monokai Sublime by noformnocontent Railscasts by Damien White Obsidian by Alexander Marenin Docco by Simon Madine Mono Blue by Ivan Sagalaev (uses a single color hue for everything) Foundation by Dan Allen Other notable changes: Corrected many corner cases in CSS. Dropped Python 2 version of the build tool. Implemented building for the AMD format. Updated Rust keywords (thanks to Dmitry Medvinsky ). Literal regexes can now be used in language definitions. CoffeeScript highlighting is now significantly more robust and rich due to input from C\u00e9dric N\u00e9h\u00e9mie .","title":"Version 7.4"},{"location":"demos/node_modules/highlight.js/CHANGES/#version-73","text":"Since this version highlight.js no longer works in IE version 8 and older. It's made it possible to reduce the library size and dramatically improve code readability and made it easier to maintain. Time to go forward! New languages: AppleScript (by Nathan Grigg and Dr. Drang ) and Brainfuck (by Evgeny Stepanischev ). Improvements to existing languages: interpreter prompt in Python ( >>> and ... ) @-properties and classes in CoffeeScript E4X in JavaScript (by Oleg Efimov ) new keywords in Perl (by Kirk Kimmel ) big Ruby syntax update (by Vasily Polovnyov ) small fixes in Bash Also Oleg Efimov did a great job of moving all the docs for language and style developers and contributors from the old wiki under the source code in the \"docs\" directory. Now these docs are nicely presented at http://highlightjs.readthedocs.org/ .","title":"Version 7.3"},{"location":"demos/node_modules/highlight.js/CHANGES/#version-72","text":"A regular bug-fix release without any significant new features. Enjoy!","title":"Version 7.2"},{"location":"demos/node_modules/highlight.js/CHANGES/#version-71","text":"A Summer crop: Marc Fornos made the definition for Clojure along with the matching style Rainbow (which, of course, works for other languages too). CoffeeScript support continues to improve getting support for regular expressions. Yoshihide Jimbo ported to highlight.js five Tomorrow styles from the project by Chris Kempson . Thanks to Casey Duncun the library can now be built in the popular AMD format . And last but not least, we've got a fair number of correctness and consistency fixes, including a pretty significant refactoring of Ruby.","title":"Version 7.1"},{"location":"demos/node_modules/highlight.js/CHANGES/#version-70","text":"The reason for the new major version update is a global change of keyword syntax which resulted in the library getting smaller once again. For example, the hosted build is 2K less than at the previous version while supporting two new languages. Notable changes: The library now works not only in a browser but also with node.js . It is installable with npm install highlight.js . API docs are available on our wiki. The new unique feature (apparently) among syntax highlighters is highlighting HTTP headers and an arbitrary language in the request body. The most useful languages here are XML and JSON both of which highlight.js does support. Here's the detailed post about the feature. Two new style themes: a dark \"south\" Pojoaque by Jason Tate and an emulation of XCode IDE by Angel Olloqui . Three new languages: D by Aleksandar Ru\u017ei\u010di\u0107 , R by Joe Cheng and GLSL by Sergey Tikhomirov . Nginx syntax has become a million times smaller and more universal thanks to remaking it in a more generic manner that doesn't require listing all the directives in the known universe. Function titles are now highlighted in PHP . Haskell and VHDL were significantly reworked to be more rich and correct by their respective maintainers Jeremy Hull and Igor Kalnitsky . And last but not least, many bugs have been fixed around correctness and language detection. Overall highlight.js currently supports 51 languages and 20 style themes.","title":"Version 7.0"},{"location":"demos/node_modules/highlight.js/CHANGES/#version-62","text":"A lot of things happened in highlight.js since the last version! We've got nine new contributors, the discussion group came alive, and the main branch on GitHub now counts more than 350 followers. Here are most significant results coming from all this activity: 5 (five!) new languages: Rust, ActionScript, CoffeeScript, MatLab and experimental support for markdown. Thanks go to Andrey Vlasovskikh , Alexander Myadzel , Dmytrii Nagirniak , Oleg Efimov , Denis Bardadym and John Crepezzi . 2 new style themes: Monokai by Luigi Maselli and stylistic imitation of another well-known highlighter Google Code Prettify by Aahan Krish . A vast number of correctness fixes and code refactorings , mostly made by Oleg Efimov and Evgeny Stepanischev .","title":"Version 6.2"},{"location":"demos/node_modules/highlight.js/CHANGES/#version-61-solarized","text":"Jeremy Hull has implemented my dream feature \u2014 a port of Solarized style theme famous for being based on the intricate color theory to achieve correct contrast and color perception. It is now available for highlight.js in both variants \u2014 light and dark. This version also adds a new original style Arta. Its author pumbur maintains a heavily modified fork of highlight.js on GitHub.","title":"Version 6.1 \u2014 Solarized"},{"location":"demos/node_modules/highlight.js/CHANGES/#version-60","text":"New major version of the highlighter has been built on a significantly refactored syntax. Due to this it's even smaller than the previous one while supporting more languages! New languages are: Haskell by Jeremy Hull Erlang in two varieties \u2014 module and REPL \u2014 made collectively by Nikolay Zakharov , Dmitry Kovega and Sergey Ignatov Objective C by Valerii Hiora Vala by Antono Vasiljev Go by Stephan Kountso Also this version is marginally faster and fixes a number of small long-standing bugs. Developer overview of the new language syntax is available in a blog post about recent beta release . P.S. New version is not yet available on a Yandex CDN, so for now you have to download your own copy .","title":"Version 6.0"},{"location":"demos/node_modules/highlight.js/CHANGES/#version-514","text":"Fixed bugs in HTML/XML detection and relevance introduced in previous refactoring. Also test.html now shows the second best result of language detection by relevance.","title":"Version 5.14"},{"location":"demos/node_modules/highlight.js/CHANGES/#version-513","text":"Past weekend began with a couple of simple additions for existing languages but ended up in a big code refactoring bringing along nice improvements for language developers.","title":"Version 5.13"},{"location":"demos/node_modules/highlight.js/CHANGES/#for-users","text":"Description of C++ has got new keywords from the upcoming C++ 0x standard. Description of HTML has got new tags from HTML 5 . CSS-styles have been unified to use consistent padding and also have lost pop-outs with names of detected languages. Igor Kalnitsky has sent two new language descriptions: CMake & VHDL. This makes total number of languages supported by highlight.js to reach 35. Bug fixes: Custom classes on <pre> tags are not being overridden anymore More correct highlighting of code blocks inside non- <pre> containers: highlighter now doesn't insist on replacing them with its own container and just replaces the contents. Small fixes in browser compatibility and heuristics.","title":"For users"},{"location":"demos/node_modules/highlight.js/CHANGES/#for-developers","text":"The most significant change is the ability to include language submodes right under contains instead of defining explicit named submodes in the main array: contains: [ 'string', 'number', {begin: '\\\\n', end: hljs.IMMEDIATE_RE} ] This is useful for auxiliary modes needed only in one place to define parsing. Note that such modes often don't have className and hence won't generate a separate <span> in the resulting markup. This is similar in effect to noMarkup: true . All existing languages have been refactored accordingly. Test file test.html has at last become a real test. Now it not only puts the detected language name under the code snippet but also tests if it matches the expected one. Test summary is displayed right above all language snippets.","title":"For developers"},{"location":"demos/node_modules/highlight.js/CHANGES/#cdn","text":"Fine people at Yandex agreed to host highlight.js on their big fast servers. Link up !","title":"CDN"},{"location":"demos/node_modules/highlight.js/CHANGES/#version-510-paris","text":"Though I'm on a vacation in Paris, I decided to release a new version with a couple of small fixes: Tomas Vitvar discovered that TAB replacement doesn't always work when used with custom markup in code SQL parsing is even more rigid now and doesn't step over SmallTalk in tests","title":"Version 5.10 \u2014 \"Paris\"."},{"location":"demos/node_modules/highlight.js/CHANGES/#version-59","text":"A long-awaited version is finally released. New languages: Andrew Fedorov made a definition for Lua a long-time highlight.js contributor Peter Leonov made a definition for Nginx config Vladimir Moskva made a definition for TeX Fixes for existing languages: Loren Segal reworked the Ruby definition and added highlighting for YARD inline documentation the definition of SQL has become more solid and now it shouldn't be overly greedy when it comes to language detection The highlighter has become more usable as a library allowing to do highlighting from initialization code of JS frameworks and in ajax methods (see. readme.eng.txt). Also this version drops support for the WordPress plugin. Everyone is welcome to pick up its maintenance if needed.","title":"Version 5.9"},{"location":"demos/node_modules/highlight.js/CHANGES/#version-58","text":"Jan Berkel has contributed a definition for Scala. +1 to hotness! All CSS-styles are rewritten to work only inside <pre> tags to avoid conflicts with host site styles.","title":"Version 5.8"},{"location":"demos/node_modules/highlight.js/CHANGES/#version-57","text":"Fixed escaping of quotes in VBScript strings.","title":"Version 5.7."},{"location":"demos/node_modules/highlight.js/CHANGES/#version-55","text":"This version brings a small change: now .ini-files allow digits, underscores and square brackets in key names.","title":"Version 5.5"},{"location":"demos/node_modules/highlight.js/CHANGES/#version-54","text":"Fixed small but upsetting bug in the packer which caused incorrect highlighting of explicitly specified languages. Thanks to Andrew Fedorov for precise diagnostics!","title":"Version 5.4"},{"location":"demos/node_modules/highlight.js/CHANGES/#version-53","text":"The version to fulfil old promises. The most significant change is that highlight.js now preserves custom user markup in code along with its own highlighting markup. This means that now it's possible to use, say, links in code. Thanks to Vladimir Dolzhenko for the initial proposal and for making a proof-of-concept patch. Also in this version: Vasily Polovnyov has sent a GitHub-like style and has implemented support for CSS @-rules and Ruby symbols. Yura Zaripov has sent two styles: Brown Paper and School Book. Oleg Volchkov has sent a definition for Parser 3 .","title":"Version 5.3"},{"location":"demos/node_modules/highlight.js/CHANGES/#version-52","text":"at last it's possible to replace indentation TABs with something sensible (e.g. 2 or 4 spaces) new keywords and built-ins for 1C by Sergey Baranov a couple of small fixes to Apache highlighting","title":"Version 5.2"},{"location":"demos/node_modules/highlight.js/CHANGES/#version-51","text":"This is one of those nice version consisting entirely of new and shiny contributions! Vladimir Ermakov created highlighting for AVR Assembler Ruslan Keba created highlighting for Apache config file. Also his original visual style for it is now available for all highlight.js languages under the name \"Magula\". Shuen-Huei Guan (aka Drake) sent new keywords for RenderMan languages. Also thanks go to Konstantin Evdokimenko for his advice on the matter.","title":"Version 5.1"},{"location":"demos/node_modules/highlight.js/CHANGES/#version-50","text":"The main change in the new major version of highlight.js is a mechanism for packing several languages along with the library itself into a single compressed file. Now sites using several languages will load considerably faster because the library won't dynamically include additional files while loading. Also this version fixes a long-standing bug with Javascript highlighting that couldn't distinguish between regular expressions and division operations. And as usually there were a couple of minor correctness fixes. Great thanks to all contributors! Keep using highlight.js.","title":"Version 5.0"},{"location":"demos/node_modules/highlight.js/CHANGES/#version-43","text":"This version comes with two contributions from Jason Diamond : language definition for C# (yes! it was a long-missed thing!) Visual Studio-like highlighting style Plus there are a couple of minor bug fixes for parsing HTML and XML attributes.","title":"Version 4.3"},{"location":"demos/node_modules/highlight.js/CHANGES/#version-42","text":"The biggest news is highlighting for Lisp, courtesy of Vasily Polovnyov. It's somewhat experimental meaning that for highlighting \"keywords\" it doesn't use any pre-defined set of a Lisp dialect. Instead it tries to highlight first word in parentheses wherever it makes sense. I'd like to ask people programming in Lisp to confirm if it's a good idea and send feedback to the forum . Other changes: Smalltalk was excluded from DEFAULT_LANGUAGES to save traffic Vladimir Epifanov has implemented javascript style switcher for test.html comments now allowed inside Ruby function definition MEL language from Shuen-Huei Guan whitespace now allowed between <pre> and <code> better auto-detection of C++ and PHP HTML allows embedded VBScript ( <% .. %> )","title":"Version 4.2"},{"location":"demos/node_modules/highlight.js/CHANGES/#version-41","text":"Languages: Bash from Vah DOS bat-files from Alexander Makarov (Sam) Diff files from Vasily Polovnyov Ini files from myself though initial idea was from Sam Styles: Zenburn from Vladimir Epifanov, this is an imitation of a well-known theme for Vim . Ascetic from myself, as a realization of ideals of non-flashy highlighting: just one color in only three gradations :-) In other news. One small bug was fixed, built-in keywords were added for Python and C++ which improved auto-detection for the latter (it was shame that my wife's blog had issues with it from time to time). And lastly thanks go to Sam for getting rid of my stylistic comments in code that were getting in the way of JSMin .","title":"Version 4.1"},{"location":"demos/node_modules/highlight.js/CHANGES/#version-40","text":"New major version is a result of vast refactoring and of many contributions. Visible new features: Highlighting of embedded languages. Currently is implemented highlighting of Javascript and CSS inside HTML. Bundled 5 ready-made style themes! Invisible new features: Highlight.js no longer pollutes global namespace. Only one object and one function for backward compatibility. Performance is further increased by about 15%. Changing of a major version number caused by a new format of language definition files. If you use some third-party language files they should be updated.","title":"Version 4.0"},{"location":"demos/node_modules/highlight.js/CHANGES/#version-35","text":"A very nice version in my opinion fixing a number of small bugs and slightly increased speed in a couple of corner cases. Thanks to everybody who reports bugs in he forum and by email! There is also a new language \u2014 XML. A custom XML formerly was detected as HTML and didn't highlight custom tags. In this version I tried to make custom XML to be detected and highlighted by its own rules. Which by the way include such things as CDATA sections and processing instructions ( <? ... ?> ).","title":"Version 3.5"},{"location":"demos/node_modules/highlight.js/CHANGES/#version-33","text":"Vladimir Gubarkov has provided an interesting and useful addition. File export.html contains a little program that shows and allows to copy and paste an HTML code generated by the highlighter for any code snippet. This can be useful in situations when one can't use the script itself on a site.","title":"Version 3.3"},{"location":"demos/node_modules/highlight.js/CHANGES/#version-32-consists-completely-of-contributions","text":"Vladimir Gubarkov has described SmallTalk Yuri Ivanov has described 1C Peter Leonov has packaged the highlighter as a Firefox extension Vladimir Ermakov has compiled a mod for phpBB Many thanks to you all!","title":"Version 3.2 consists completely of contributions:"},{"location":"demos/node_modules/highlight.js/CHANGES/#version-31","text":"Three new languages are available: Django templates, SQL and Axapta. The latter two are sent by Dmitri Roudakov . However I've almost entirely rewrote an SQL definition but I'd never started it be it from the ground up :-) The engine itself has got a long awaited feature of grouping keywords (\"keyword\", \"built-in function\", \"literal\"). No more hacks!","title":"Version 3.1"},{"location":"demos/node_modules/highlight.js/CHANGES/#version-30","text":"It is major mainly because now highlight.js has grown large and has become modular. Now when you pass it a list of languages to highlight it will dynamically load into a browser only those languages. Also: Konstantin Evdokimenko of RibKit project has created a highlighting for RenderMan Shading Language and RenderMan Interface Bytestream. Yay for more languages! Heuristics for C++ and HTML got better. I've implemented (at last) a correct handling of backslash escapes in C-like languages. There is also a small backwards incompatible change in the new version. The function initHighlighting that was used to initialize highlighting instead of initHighlightingOnLoad a long time ago no longer works. If you by chance still use it \u2014 replace it with the new one.","title":"Version 3.0"},{"location":"demos/node_modules/highlight.js/CHANGES/#version-29","text":"Highlight.js is a parser, not just a couple of regular expressions. That said I'm glad to announce that in the new version 2.9 has support for: in-string substitutions for Ruby -- #{...} strings from from numeric symbol codes (like #XX) for Delphi","title":"Version 2.9"},{"location":"demos/node_modules/highlight.js/CHANGES/#version-28","text":"A maintenance release with more tuned heuristics. Fully backwards compatible.","title":"Version 2.8"},{"location":"demos/node_modules/highlight.js/CHANGES/#version-27","text":"Nikita Ledyaev presents highlighting for VBScript, yay! A couple of bugs with escaping in strings were fixed thanks to Mickle Ongoing tuning of heuristics Fixed bugs were rather unpleasant so I encourage everyone to upgrade!","title":"Version 2.7"},{"location":"demos/node_modules/highlight.js/CHANGES/#version-24","text":"Peter Leonov provides another improved highlighting for Perl Javascript gets a new kind of keywords \u2014 \"literals\". These are the words \"true\", \"false\" and \"null\" Also highlight.js homepage now lists sites that use the library. Feel free to add your site by dropping me a message until I find the time to build a submit form.","title":"Version 2.4"},{"location":"demos/node_modules/highlight.js/CHANGES/#version-23","text":"This version fixes IE breakage in previous version. My apologies to all who have already downloaded that one!","title":"Version 2.3"},{"location":"demos/node_modules/highlight.js/CHANGES/#version-22","text":"added highlighting for Javascript at last fixed parsing of Delphi's escaped apostrophes in strings in Ruby fixed highlighting of keywords 'def' and 'class', same for 'sub' in Perl","title":"Version 2.2"},{"location":"demos/node_modules/highlight.js/CHANGES/#version-20","text":"Ruby support by Anton Kovalyov speed increased by orders of magnitude due to new way of parsing this same way allows now correct highlighting of keywords in some tricky places (like keyword \"End\" at the end of Delphi classes)","title":"Version 2.0"},{"location":"demos/node_modules/highlight.js/CHANGES/#version-10","text":"Version 1.0 of javascript syntax highlighter is released! It's the first version available with English description. Feel free to post your comments and question to highlight.js forum . And don't be afraid if you find there some fancy Cyrillic letters -- it's for Russian users too :-)","title":"Version 1.0"},{"location":"demos/node_modules/highlight.js/SECURITY/","text":"Due to both time and resource constrains the Highlight.js core team fully supports only the current major/minor release of the library. Prior major releases may be supported for a short time after new major releases are issued. Problems with minor releases are often resolved by upgrading to the most recent minor release. Release Status Version Support Status 11.x :white_check_mark: The 11.x series recieves regular updates, new features & security fixes. 10.7.x :x: No longer supported. See VERSION_11_UPGRADE.md . <= 10.4.0 :x: Known vulnerabities. <= 9.18.5 :x: Known vulnerabities. EOL 7.x, 8.x :x: Obsolete. Known vulnerabities. Reporting a Vulnerability Many vulnerabilities can simply be reported (and tracked) via our GitHub issues . If you feel your issue is more sensitive than that you can always reach us via email: security@highlightjs.org","title":"SECURITY"},{"location":"demos/node_modules/highlight.js/SECURITY/#release-status","text":"Version Support Status 11.x :white_check_mark: The 11.x series recieves regular updates, new features & security fixes. 10.7.x :x: No longer supported. See VERSION_11_UPGRADE.md . <= 10.4.0 :x: Known vulnerabities. <= 9.18.5 :x: Known vulnerabities. EOL 7.x, 8.x :x: Obsolete. Known vulnerabities.","title":"Release Status"},{"location":"demos/node_modules/highlight.js/SECURITY/#reporting-a-vulnerability","text":"Many vulnerabilities can simply be reported (and tracked) via our GitHub issues . If you feel your issue is more sensitive than that you can always reach us via email: security@highlightjs.org","title":"Reporting a Vulnerability"},{"location":"demos/node_modules/highlight.js/SUPPORTED_LANGUAGES/","text":"The table below shows the full list of languages (and corresponding classes/aliases) supported by Highlight.js. Languages that list a Package below are 3rd party languages and are not bundled with the core library. You can find their repositories by following the links. Note: The languages available will depend on how you've built or are included the library in your app. For example our default minified web build includes only ~40 popular languages. See Getting the Library and Importing the Library in the README for examples of how to load additional/specific languages. Language Aliases Package 1C 1c 4D 4d highlightjs-4d ABAP sap-abap, abap highlight-sap-abap ABNF abnf Access logs accesslog Ada ada Arduino (C++ w/Arduino libs) arduino, ino ARM assembler armasm, arm AVR assembler avrasm ActionScript actionscript, as Alan IF alan, i highlightjs-alan Alan ln highlightjs-alan AngelScript angelscript, asc Apache apache, apacheconf AppleScript applescript, osascript Arcade arcade AsciiDoc asciidoc, adoc AspectJ aspectj AutoHotkey autohotkey AutoIt autoit Awk awk, mawk, nawk, gawk Bash bash, sh, zsh Basic basic BBCode bbcode highlightjs-bbcode Blade (Laravel) blade highlightjs-blade BNF bnf Brainfuck brainfuck, bf C# csharp, cs C c, h C++ cpp, hpp, cc, hh, c++, h++, cxx, hxx C/AL cal Cache Object Script cos, cls CMake cmake, cmake.in Coq coq CSP csp CSS css Cap\u2019n Proto capnproto, capnp Chaos chaos, kaos highlightjs-chaos Chapel chapel, chpl highlightjs-chapel Cisco CLI cisco highlightjs-cisco-cli Clojure clojure, clj CoffeeScript coffeescript, coffee, cson, iced CpcdosC+ cpc highlightjs-cpcdos Crmsh crmsh, crm, pcmk Crystal crystal, cr cURL curl highlightjs-curl Cypher (Neo4j) cypher highlightjs-cypher D d Dafny dafny highlightjs-dafny Dart dart Delphi dpr, dfm, pas, pascal Diff diff, patch Django django, jinja DNS Zone file dns, zone, bind Dockerfile dockerfile, docker DOS dos, bat, cmd dsconfig dsconfig DTS (Device Tree) dts Dust dust, dst Dylan dylan highlightjs-dylan EBNF ebnf Elixir elixir Elm elm Erlang erlang, erl Excel excel, xls, xlsx Extempore extempore, xtlang, xtm highlightjs-xtlang F# fsharp, fs FIX fix Fortran fortran, f90, f95 G-Code gcode, nc Gams gams, gms GAUSS gauss, gss GDScript godot, gdscript highlightjs-gdscript Gherkin gherkin Glimmer and EmberJS hbs, glimmer, html.hbs, html.handlebars, htmlbars highlightjs-glimmer GN for Ninja gn, gni highlightjs-GN Go go, golang Grammatical Framework gf highlightjs-gf Golo golo, gololang Gradle gradle GraphQL graphql Groovy groovy GSQL gsql highlightjs-gsql HTML, XML xml, html, xhtml, rss, atom, xjb, xsd, xsl, plist, svg HTTP http, https Haml haml Handlebars handlebars, hbs, html.hbs, html.handlebars Haskell haskell, hs Haxe haxe, hx High-level shader language hlsl highlightjs-hlsl Hy hy, hylang Ini, TOML ini, toml Inform7 inform7, i7 IRPF90 irpf90 JSON json Java java, jsp JavaScript javascript, js, jsx Jolie jolie, iol, ol highlightjs-jolie Julia julia, julia-repl Kotlin kotlin, kt LaTeX tex Leaf leaf Lean lean highlightjs-lean Lasso lasso, ls, lassoscript Less less LDIF ldif Lisp lisp LiveCode Server livecodeserver LiveScript livescript, ls Lua lua Macaulay2 macaulay2 highlightjs-macaulay2 Makefile makefile, mk, mak, make Markdown markdown, md, mkdown, mkd Mathematica mathematica, mma, wl Matlab matlab Maxima maxima Maya Embedded Language mel Mercury mercury mIRC Scripting Language mirc, mrc highlightjs-mirc Mizar mizar MKB mkb highlightjs-mkb Mojolicious mojolicious Monkey monkey Moonscript moonscript, moon N1QL n1ql NSIS nsis Never never highlightjs-never Nginx nginx, nginxconf Nim nim, nimrod Nix nix Object Constraint Language ocl highlightjs-ocl OCaml ocaml, ml Objective C objectivec, mm, objc, obj-c, obj-c++, objective-c++ OpenGL Shading Language glsl OpenSCAD openscad, scad Oracle Rules Language ruleslanguage Oxygene oxygene PF pf, pf.conf PHP php Papyrus papyrus, psc highlightjs-papyrus Parser3 parser3 Perl perl, pl, pm Pine Script pine, pinescript highlightjs-pine Plaintext plaintext, txt, text Pony pony PostgreSQL & PL/pgSQL pgsql, postgres, postgresql PowerShell powershell, ps, ps1 Processing processing Prolog prolog Properties properties Protocol Buffers protobuf Puppet puppet, pp Python python, py, gyp Python profiler results profile Python REPL python-repl, pycon Q# qsharp highlightjs-qsharp Q k, kdb QML qml R r Razor CSHTML cshtml, razor, razor-cshtml highlightjs-cshtml-razor ReasonML reasonml, re Rebol & Red redbol, rebol, red, red-system highlightjs-redbol RenderMan RIB rib RenderMan RSL rsl RiScript risc, riscript highlightjs-riscript Roboconf graph, instances Robot Framework robot, rf highlightjs-robot RPM spec files rpm-specfile, rpm, spec, rpm-spec, specfile highlightjs-rpm-specfile Ruby ruby, rb, gemspec, podspec, thor, irb Rust rust, rs SAS SAS, sas SCSS scss SQL sql STEP Part 21 p21, step, stp Scala scala Scheme scheme Scilab scilab, sci Shape Expressions shexc highlightjs-shexc Shell shell, console Smali smali Smalltalk smalltalk, st SML sml, ml Solidity solidity, sol highlightjs-solidity Splunk SPL spl highlightjs-spl Stan stan, stanfuncs Stata stata Structured Text iecst, scl, stl, structured-text highlightjs-structured-text Stylus stylus, styl SubUnit subunit Supercollider supercollider, sc highlightjs-supercollider Svelte svelte highlightjs-svelte Swift swift Tcl tcl, tk Terraform (HCL) terraform, tf, hcl highlightjs-terraform Test Anything Protocol tap Thrift thrift TP tp Transact-SQL tsql highlightjs-tsql Twig twig, craftcms TypeScript typescript, ts Unicorn Rails log unicorn-rails-log highlightjs-unicorn-rails-log VB.Net vbnet, vb VBA vba highlightjs-vba VBScript vbscript, vbs VHDL vhdl Vala vala Verilog verilog, v Vim Script vim X# xsharp, xs, prg highlightjs-xsharp X++ axapta, x++ x86 Assembly x86asm XL xl, tao XQuery xquery, xpath, xq YAML yml, yaml ZenScript zenscript, zs highlightjs-zenscript Zephir zephir, zep Alias Overlap If you are using either of these languages at the same time please be sure to use the full name and not the alias to avoid any ambiguity. Language Overlap SML ml OCaml ml Lasso ls LiveScript ls","title":"SUPPORTED LANGUAGES"},{"location":"demos/node_modules/highlight.js/SUPPORTED_LANGUAGES/#alias-overlap","text":"If you are using either of these languages at the same time please be sure to use the full name and not the alias to avoid any ambiguity. Language Overlap SML ml OCaml ml Lasso ls LiveScript ls","title":"Alias Overlap"},{"location":"demos/node_modules/highlight.js/VERSION_10_UPGRADE/","text":"Welcome to version 10.0. This a major release and therefore will contain breaking changes. Breaking Changes Our normal minor releases try to never break anything, holding all breaking changes for major releases. We tried to squeeze in as many as we could this time so that after 10.0 ships we'll be back to quiet sailing for a while before we need to push version 11. That said, we're very conservative about what we consider a breaking change. IE, if there it could possibly break things for anyone, it's typically a breaking change. The fact is a vast majority of users should upgrade and probably not notice any changes at all. See VERSION_10_BREAKING_CHANGES.md for a comprehensive list of breaking changes, but here is a summary... if you use: Core highlight.js lib on the client (with no extra CDN languages) Just keep doing that. If you're using darkula.css , you'll need to change that to darcula.css The minified distributable has changed from .pack.js to .min.js , update your name when you update your URL. If your users have very old browsers, they may no longer be supported (no more IE11, etc.). (We're using ES2015 code now.) nohighlight or no-highlight are the only two CSS classes that will SKIP highlighting completely. *text* and *plain* no longer will do this. Core highlight.js lib on the client (plus additional CDN languages) Quite a few grammars have been renamed. Ex: nimrod.js is now nim.js . Check the renamed grammars to see if you might need to update your links. Be aware that you can't use version 9 CDN JS files anymore, they aren't compatible. Plus read the above list of items. highlight.js on the server (via NPM) and only use the public API If you're just pulling in the FULL library ( require('./highlight.js') ) just keep doing that. You might not need to change anything. If you're manually loading a smaller set of languages and using registerLanguage make sure you check out all the renamed grammars and dependency changes. Read the client-side lists above also. highlight.js on the server (via NPM) with a custom integration Read the complete breaking changes list carefully. Read the client-side lists above also. highlight.js lib on the client, with source directly from our GitHub repo That will no longer work. The source needs to be built to work properly and cannot be used \"raw\" unless you've also setup your own build pipeline (rollup, etc.). Fetch a static build from the CDN, the cdn-release repo or use the new highlightjs-dist NPM package. highlight.js source code directly from our GitHub repo with a custom integration All bets are off, since we only try to guarantee stability of our NPM and CDN builds and the public API. Read all the breaking changes and perhaps skim the commit history. We're using ES6 modules now. We're using an entirely new build system. The source will likely become more and more modular during the 10.0 timeline. Enjoy and good luck. As always if you have any questions or issues, jump on the Github Issues .","title":"VERSION 10 UPGRADE"},{"location":"demos/node_modules/highlight.js/VERSION_10_UPGRADE/#breaking-changes","text":"Our normal minor releases try to never break anything, holding all breaking changes for major releases. We tried to squeeze in as many as we could this time so that after 10.0 ships we'll be back to quiet sailing for a while before we need to push version 11. That said, we're very conservative about what we consider a breaking change. IE, if there it could possibly break things for anyone, it's typically a breaking change. The fact is a vast majority of users should upgrade and probably not notice any changes at all. See VERSION_10_BREAKING_CHANGES.md for a comprehensive list of breaking changes, but here is a summary... if you use:","title":"Breaking Changes"},{"location":"demos/node_modules/highlight.js/VERSION_10_UPGRADE/#core-highlightjs-lib-on-the-client-with-no-extra-cdn-languages","text":"Just keep doing that. If you're using darkula.css , you'll need to change that to darcula.css The minified distributable has changed from .pack.js to .min.js , update your name when you update your URL. If your users have very old browsers, they may no longer be supported (no more IE11, etc.). (We're using ES2015 code now.) nohighlight or no-highlight are the only two CSS classes that will SKIP highlighting completely. *text* and *plain* no longer will do this.","title":"Core highlight.js lib on the client (with no extra CDN languages)"},{"location":"demos/node_modules/highlight.js/VERSION_10_UPGRADE/#core-highlightjs-lib-on-the-client-plus-additional-cdn-languages","text":"Quite a few grammars have been renamed. Ex: nimrod.js is now nim.js . Check the renamed grammars to see if you might need to update your links. Be aware that you can't use version 9 CDN JS files anymore, they aren't compatible. Plus read the above list of items.","title":"Core highlight.js lib on the client (plus additional CDN languages)"},{"location":"demos/node_modules/highlight.js/VERSION_10_UPGRADE/#highlightjs-on-the-server-via-npm-and-only-use-the-public-api","text":"If you're just pulling in the FULL library ( require('./highlight.js') ) just keep doing that. You might not need to change anything. If you're manually loading a smaller set of languages and using registerLanguage make sure you check out all the renamed grammars and dependency changes. Read the client-side lists above also.","title":"highlight.js on the server (via NPM) and only use the public API"},{"location":"demos/node_modules/highlight.js/VERSION_10_UPGRADE/#highlightjs-on-the-server-via-npm-with-a-custom-integration","text":"Read the complete breaking changes list carefully. Read the client-side lists above also.","title":"highlight.js on the server (via NPM) with a custom integration"},{"location":"demos/node_modules/highlight.js/VERSION_10_UPGRADE/#highlightjs-lib-on-the-client-with-source-directly-from-our-github-repo","text":"That will no longer work. The source needs to be built to work properly and cannot be used \"raw\" unless you've also setup your own build pipeline (rollup, etc.). Fetch a static build from the CDN, the cdn-release repo or use the new highlightjs-dist NPM package.","title":"highlight.js lib on the client, with source directly from our GitHub repo"},{"location":"demos/node_modules/highlight.js/VERSION_10_UPGRADE/#highlightjs-source-code-directly-from-our-github-repo-with-a-custom-integration","text":"All bets are off, since we only try to guarantee stability of our NPM and CDN builds and the public API. Read all the breaking changes and perhaps skim the commit history. We're using ES6 modules now. We're using an entirely new build system. The source will likely become more and more modular during the 10.0 timeline.","title":"highlight.js source code directly from our GitHub repo with a custom integration"},{"location":"demos/node_modules/highlight.js/VERSION_10_UPGRADE/#enjoy-and-good-luck","text":"As always if you have any questions or issues, jump on the Github Issues .","title":"Enjoy and good luck."},{"location":"demos/node_modules/highlight.js/VERSION_11_UPGRADE/","text":"Overview of Breaking Changes Built-in set of \"Common\" Languages Language Files Language Aliases Styles and CSS Grammar Scopes Behavioral changes API changes Changes to Result Data Feature Removal Small Things Upgrading from Version 9.x Overview of Breaking Changes Welcome to version 11.0. This a major release and therefore contains breaking changes. Below is a complete list of those such changes. Built-in set of \"Common\" Languages The default highlight.min.js build removes a few less popular grammars: apache http nginx properties coffeescript If you need any of these, you can always create a custom build. Ref: https://github.com/highlightjs/highlight.js/issues/2848 Language Files This would matter if you are requiring any of these files directly (via Node.js or CDN). htmlbars has been removed. Use handlebars instead. c-like has been removed. Use c , cpp , or arduino . sql_more has been removed. Use sql instead or a more specific 3rd party grammar. Language Aliases This would matter if you are using these aliases. php3 , php4 , php5 , php6 , php7 , and php8 have been removed. Use php instead. zsh has been removed. Use sh or bash instead. freepascal , lazarus , lpr , and lpm removed. Use delphi instead. You can of course re-register any of these aliases easily if necessary. For example to restore the PHP aliases: hljs . registerAliases ([ \"php3\" , \"php4\" , \"php5\" , \"php6\" , \"php7\" , \"php8\" ],{ languageName : \"php\" }) Styles and CSS The default padding on .hljs element has been increased and is now 1em (it was 0.5em previously). If your design depends on the smaller spacing you may need to update your CSS to override. schoolbook no longer has a custom lined background, it is solid color now. The old image and CSS can be found in the 10-stable branch if you wish to manually copy it into your project. github includes significant changes to more properly match modern GitHub syntax highlighting. If you desire the old theme you can manually copy it into your project from the 10-stable branch . github-gist has been removed in favor of github as GitHub and GitHub Gist have converged. If you desire the theme you can manually copy it into your project from the 10-stable branch . The .hljs CSS selector is now further scoped. It now targets code.hljs (inline code) and pre code.hljs (code blocks). If you are using a different element you may need to update your CSS to reapply some styling. All Base16 themes now live in the styles/base16 directory - this means some CSS files have moved. Please confirm themes you use reference the new locations. Grammar Scopes .meta-string removed/deprecated. Use .meta .string (a nested scope) instead. See meta-keyword . .meta-keyword removed/deprecated. Use .meta .keyword (a nested scope) instead. See meta-keyword . Behavioral changes after:highlightElement plugin callback is now fired after the DOM has been updated, not before. API changes The option ignoreIllegals is now true by default (for highlight() ). Previously it was false . The highlight(language,code, ...args) API no longer accepts continuation as a 4th argument. The highlight(language,code, ...args) API is deprecated (to be removed in 12.0). The new call signature is highlight(code, {options}) . ( see docs ) Code using the old API: // highlight(language, code, ignoreIllegals, continuation) highlight ( \"javascript\" , \"const a = 5;\" , true ) ...would be upgraded to the newer API as follows: // highlight(code, {language, ignoreIllegals}) highlight ( \"const a = 5;\" , { language : \"javascript\" , ignoreIllegals : true }) The new API purposely does not support continuation as this is only intended for internal library usage. initHighlighting() is deprecated (to be removed in 12.0). initHighlightingOnLoad() is deprecated (to be removed in 12.0). Use highlightAll() instead. ( see docs ) The old functions are now simply aliases of highlightAll() . The new function may be called before or after the DOM is loaded and should do the correct thing in all cases, replacing the need for the previous individual functions. Note: highlightAll() does not guard against calling itself repeatedly as the previous functions did. Your code should be careful to avoid doing this. highlightBlock() is deprecated (to be removed in 12.0). Use highlightElement() instead. ( see docs ) This is merely a naming change. Note: The object literal passed to the before:highlightElement callback now passes the element in the el key vs the block key. Changes to Result Data highlightAuto() 's second_best key has been renamed to secondBest highlightElement() 's result now no longer includes a re key. Use the relevance key now. highlight() renames some result keys to more clearly mark them as private: _top , _emitter , and _illegalBy . You should not depend on these keys as they are subject to change at any time. The relevance key returned by highlight() is no longer guaranteed to be an even integer. highlightElement now always tags blocks with a consistent language-[name] class This behavior was inconsistent before. Sometimes [name] class would be added, sometimes the alias name would be added, something no class would be added. now language-[name] is always added. This also affects sublanguage span tags which now also include the language- prefix. Feature Removal HTML auto-passthru is now no longer included in core. Use a plugin instead. For a possible plugin please see #2889 . An example: < pre >< code class = \"lang-js\" > var a = 4; < span class = \"yellow\" > var a = 4; </ span > </ code ></ pre > Unescaped HTML like this will now be ignored (stripped before highlighting) and a warning will be logged to the console. All HTML to be highlighted should be properly escaped to avoid potential HTML/JS injection attacks. fixMarkup has been removed. This function was deprecated in v10.2. It is not our goal to provide random string utilities. You may need to provide your own replacement Ref: #2534 CSS_NUMBER_MODE has been removed. This rule was too broad for bring inclusion in core and has been removed. lexemes mode attribute has been removed. Use the new keywords.$pattern instead. Before: { keywords : \"do.it start.now begin.later end.immediately\" lexemes : /[a-z.]+/ } After: { keywords : { $pattern : /[a-z.]+/ keyword : \"do.it start.now begin.later end.immediately\" , } } This may required converting your keywords key into an object if it's not already (as shown above). endSameAsBegin mode attribute has been removed. Use the new END_SAME_AS_BEGIN mode rule/function instead. useBR configuration has been removed. This configuration option was deprecated in v10.1. Use a plugin or preferably simply CSS white-space: pre . Ref: #2559 tabReplace configuration has been removed. This configuration option was deprecated in v10.5. Use a plugin or pre-render content instead with desired spacing. Ref: #2874 Small Things The regex utility join has been renamed to _eitherRewriteBackreferences (this has always been intended for internal use only) Upgrading from Version 9.x If you're upgrading all the way from version 9 it may still be helpful to review all the breaking changes in version 10 as well: VERSION_10_UPGRADE.md VERSION_10_BREAKING_CHANGES.md","title":"VERSION 11 UPGRADE"},{"location":"demos/node_modules/highlight.js/VERSION_11_UPGRADE/#overview-of-breaking-changes","text":"Welcome to version 11.0. This a major release and therefore contains breaking changes. Below is a complete list of those such changes.","title":"Overview of Breaking Changes"},{"location":"demos/node_modules/highlight.js/VERSION_11_UPGRADE/#built-in-set-of-common-languages","text":"The default highlight.min.js build removes a few less popular grammars: apache http nginx properties coffeescript If you need any of these, you can always create a custom build. Ref: https://github.com/highlightjs/highlight.js/issues/2848","title":"Built-in set of \"Common\" Languages"},{"location":"demos/node_modules/highlight.js/VERSION_11_UPGRADE/#language-files","text":"This would matter if you are requiring any of these files directly (via Node.js or CDN). htmlbars has been removed. Use handlebars instead. c-like has been removed. Use c , cpp , or arduino . sql_more has been removed. Use sql instead or a more specific 3rd party grammar.","title":"Language Files"},{"location":"demos/node_modules/highlight.js/VERSION_11_UPGRADE/#language-aliases","text":"This would matter if you are using these aliases. php3 , php4 , php5 , php6 , php7 , and php8 have been removed. Use php instead. zsh has been removed. Use sh or bash instead. freepascal , lazarus , lpr , and lpm removed. Use delphi instead. You can of course re-register any of these aliases easily if necessary. For example to restore the PHP aliases: hljs . registerAliases ([ \"php3\" , \"php4\" , \"php5\" , \"php6\" , \"php7\" , \"php8\" ],{ languageName : \"php\" })","title":"Language Aliases"},{"location":"demos/node_modules/highlight.js/VERSION_11_UPGRADE/#styles-and-css","text":"The default padding on .hljs element has been increased and is now 1em (it was 0.5em previously). If your design depends on the smaller spacing you may need to update your CSS to override. schoolbook no longer has a custom lined background, it is solid color now. The old image and CSS can be found in the 10-stable branch if you wish to manually copy it into your project. github includes significant changes to more properly match modern GitHub syntax highlighting. If you desire the old theme you can manually copy it into your project from the 10-stable branch . github-gist has been removed in favor of github as GitHub and GitHub Gist have converged. If you desire the theme you can manually copy it into your project from the 10-stable branch . The .hljs CSS selector is now further scoped. It now targets code.hljs (inline code) and pre code.hljs (code blocks). If you are using a different element you may need to update your CSS to reapply some styling. All Base16 themes now live in the styles/base16 directory - this means some CSS files have moved. Please confirm themes you use reference the new locations.","title":"Styles and CSS"},{"location":"demos/node_modules/highlight.js/VERSION_11_UPGRADE/#grammar-scopes","text":".meta-string removed/deprecated. Use .meta .string (a nested scope) instead. See meta-keyword . .meta-keyword removed/deprecated. Use .meta .keyword (a nested scope) instead. See meta-keyword .","title":"Grammar Scopes"},{"location":"demos/node_modules/highlight.js/VERSION_11_UPGRADE/#behavioral-changes","text":"after:highlightElement plugin callback is now fired after the DOM has been updated, not before.","title":"Behavioral changes"},{"location":"demos/node_modules/highlight.js/VERSION_11_UPGRADE/#api-changes","text":"The option ignoreIllegals is now true by default (for highlight() ). Previously it was false . The highlight(language,code, ...args) API no longer accepts continuation as a 4th argument. The highlight(language,code, ...args) API is deprecated (to be removed in 12.0). The new call signature is highlight(code, {options}) . ( see docs ) Code using the old API: // highlight(language, code, ignoreIllegals, continuation) highlight ( \"javascript\" , \"const a = 5;\" , true ) ...would be upgraded to the newer API as follows: // highlight(code, {language, ignoreIllegals}) highlight ( \"const a = 5;\" , { language : \"javascript\" , ignoreIllegals : true }) The new API purposely does not support continuation as this is only intended for internal library usage. initHighlighting() is deprecated (to be removed in 12.0). initHighlightingOnLoad() is deprecated (to be removed in 12.0). Use highlightAll() instead. ( see docs ) The old functions are now simply aliases of highlightAll() . The new function may be called before or after the DOM is loaded and should do the correct thing in all cases, replacing the need for the previous individual functions. Note: highlightAll() does not guard against calling itself repeatedly as the previous functions did. Your code should be careful to avoid doing this. highlightBlock() is deprecated (to be removed in 12.0). Use highlightElement() instead. ( see docs ) This is merely a naming change. Note: The object literal passed to the before:highlightElement callback now passes the element in the el key vs the block key.","title":"API changes"},{"location":"demos/node_modules/highlight.js/VERSION_11_UPGRADE/#changes-to-result-data","text":"highlightAuto() 's second_best key has been renamed to secondBest highlightElement() 's result now no longer includes a re key. Use the relevance key now. highlight() renames some result keys to more clearly mark them as private: _top , _emitter , and _illegalBy . You should not depend on these keys as they are subject to change at any time. The relevance key returned by highlight() is no longer guaranteed to be an even integer. highlightElement now always tags blocks with a consistent language-[name] class This behavior was inconsistent before. Sometimes [name] class would be added, sometimes the alias name would be added, something no class would be added. now language-[name] is always added. This also affects sublanguage span tags which now also include the language- prefix.","title":"Changes to Result Data"},{"location":"demos/node_modules/highlight.js/VERSION_11_UPGRADE/#feature-removal","text":"HTML auto-passthru is now no longer included in core. Use a plugin instead. For a possible plugin please see #2889 . An example: < pre >< code class = \"lang-js\" > var a = 4; < span class = \"yellow\" > var a = 4; </ span > </ code ></ pre > Unescaped HTML like this will now be ignored (stripped before highlighting) and a warning will be logged to the console. All HTML to be highlighted should be properly escaped to avoid potential HTML/JS injection attacks. fixMarkup has been removed. This function was deprecated in v10.2. It is not our goal to provide random string utilities. You may need to provide your own replacement Ref: #2534 CSS_NUMBER_MODE has been removed. This rule was too broad for bring inclusion in core and has been removed. lexemes mode attribute has been removed. Use the new keywords.$pattern instead. Before: { keywords : \"do.it start.now begin.later end.immediately\" lexemes : /[a-z.]+/ } After: { keywords : { $pattern : /[a-z.]+/ keyword : \"do.it start.now begin.later end.immediately\" , } } This may required converting your keywords key into an object if it's not already (as shown above). endSameAsBegin mode attribute has been removed. Use the new END_SAME_AS_BEGIN mode rule/function instead. useBR configuration has been removed. This configuration option was deprecated in v10.1. Use a plugin or preferably simply CSS white-space: pre . Ref: #2559 tabReplace configuration has been removed. This configuration option was deprecated in v10.5. Use a plugin or pre-render content instead with desired spacing. Ref: #2874","title":"Feature Removal"},{"location":"demos/node_modules/highlight.js/VERSION_11_UPGRADE/#small-things","text":"The regex utility join has been renamed to _eitherRewriteBackreferences (this has always been intended for internal use only)","title":"Small Things"},{"location":"demos/node_modules/highlight.js/VERSION_11_UPGRADE/#upgrading-from-version-9x","text":"If you're upgrading all the way from version 9 it may still be helpful to review all the breaking changes in version 10 as well: VERSION_10_UPGRADE.md VERSION_10_BREAKING_CHANGES.md","title":"Upgrading from Version 9.x"},{"location":"demos/node_modules/kdbush/","text":"kdbush A very fast static spatial index for 2D points based on a flat KD-tree. Compared to RBush : points only \u2014 no rectangles static \u2014 you can't add/remove items indexing is 5-8 times faster const index = kdbush ( points ); // make an index const ids1 = index . range ( 10 , 10 , 20 , 20 ); // bbox search - minX, minY, maxX, maxY const ids2 = index . within ( 10 , 10 , 5 ); // radius search - x, y, radius Install Install using NPM ( npm install kdbush ) or Yarn ( yarn add kdbush ), then: // import as a ES module import kdbush from 'kdbush' ; // or require in Node / Browserify const kdbush = require ( 'kdbush' ); Or use a browser build directly: < script src = \"https://unpkg.com/kdbush@2.0.0/kdbush.min.js\" ></ script > API kdbush(points[, getX, getY, nodeSize, arrayType]) Creates an index from the given points. points : Input array of points. getX , getY : Functions to get x and y from an input point. By default, it assumes [x, y] format. nodeSize : Size of the KD-tree node, 64 by default. Higher means faster indexing but slower search, and vise versa. arrayType : Array type to use for storing indices and coordinate values. Array by default, but if your coordinates are integer values, Int32Array makes things a bit faster. const index = kdbush ( points , ( p ) => p . x , ( p ) => p . y , 64 , Int32Array ); range(minX, minY, maxX, maxY) Finds all items within the given bounding box and returns an array of indices that refer to the items in the original points input array. const results = index . range ( 10 , 10 , 20 , 20 ). map (( id ) => points [ id ]); within(x, y, radius) Finds all items within a given radius from the query point and returns an array of indices. const results = index . within ( 10 , 10 , 5 ). map (( id ) => points [ id ]);","title":"Index"},{"location":"demos/node_modules/kdbush/#kdbush","text":"A very fast static spatial index for 2D points based on a flat KD-tree. Compared to RBush : points only \u2014 no rectangles static \u2014 you can't add/remove items indexing is 5-8 times faster const index = kdbush ( points ); // make an index const ids1 = index . range ( 10 , 10 , 20 , 20 ); // bbox search - minX, minY, maxX, maxY const ids2 = index . within ( 10 , 10 , 5 ); // radius search - x, y, radius","title":"kdbush"},{"location":"demos/node_modules/kdbush/#install","text":"Install using NPM ( npm install kdbush ) or Yarn ( yarn add kdbush ), then: // import as a ES module import kdbush from 'kdbush' ; // or require in Node / Browserify const kdbush = require ( 'kdbush' ); Or use a browser build directly: < script src = \"https://unpkg.com/kdbush@2.0.0/kdbush.min.js\" ></ script >","title":"Install"},{"location":"demos/node_modules/kdbush/#api","text":"","title":"API"},{"location":"demos/node_modules/kdbush/#kdbushpoints-getx-gety-nodesize-arraytype","text":"Creates an index from the given points. points : Input array of points. getX , getY : Functions to get x and y from an input point. By default, it assumes [x, y] format. nodeSize : Size of the KD-tree node, 64 by default. Higher means faster indexing but slower search, and vise versa. arrayType : Array type to use for storing indices and coordinate values. Array by default, but if your coordinates are integer values, Int32Array makes things a bit faster. const index = kdbush ( points , ( p ) => p . x , ( p ) => p . y , 64 , Int32Array );","title":"kdbush(points[, getX, getY, nodeSize, arrayType])"},{"location":"demos/node_modules/kdbush/#rangeminx-miny-maxx-maxy","text":"Finds all items within the given bounding box and returns an array of indices that refer to the items in the original points input array. const results = index . range ( 10 , 10 , 20 , 20 ). map (( id ) => points [ id ]);","title":"range(minX, minY, maxX, maxY)"},{"location":"demos/node_modules/kdbush/#withinx-y-radius","text":"Finds all items within a given radius from the query point and returns an array of indices. const results = index . within ( 10 , 10 , 5 ). map (( id ) => points [ id ]);","title":"within(x, y, radius)"},{"location":"demos/node_modules/makerjs/","text":"Your compass and straightedge, in JavaScript. Create line drawings using familiar constructs from geometry and drafting. Initially designated for CNC and laser cutters, Maker.js can also help you programmatically draw shapes for any purpose. It runs in both Node.js and web browsers. 2D Export formats: DXF , SVG , PDF (Requires PDFKit ), Jscad CAG object (Requires @jscad/csg ) 3D Export formats: Jscad Script , Jscad CSG object (Requires @jscad/csg ), STL (Requires @jscad/csg & @jscad/stl-serializer ) Demos - Documentation Core concepts paths - The primitive elements of a drawing are lines, arcs, and circles. models - Groups of paths to compose a shape. layers - Organization of models, such as by color or tool type. chains - A series of lines and arcs that connect end-to-end continuously. Learn more in the tutorial or API documentation . Features Drawings are a simple JavaScript object which can be serialized / deserialized conventionally with JSON. This also makes a drawing easy to clone . Other people's Models can be required the Node.js way, modified , and re-exported. Models can be scaled , distorted , measured , and converted to different unit systems . Paths can be distorted . Models can be rotated or mirrored . Find intersection points or intersection angles of paths. Traverse a model tree to reason over its children. Detect chains formed by paths connecting end to end. Get the points along a path or along a chain of paths . Easily add a curvature at the joint between any 2 paths, using a traditional or a dogbone fillet . Combine models with boolean operations to get unions, intersections, or punches. Expand paths to simulate a stroke thickness, with the option to bevel joints. Outline model to create a surrounding outline, with the option to bevel joints. Layout clones into rows , columns , grids , bricks , or honeycombs Built-in models Belt Bezier Curve Bolt Circle Bolt Rectangle Connect the dots Dogbone Dome Ellipse Elliptic Arc Holes Oval OvalArc Polygon Rectangle Ring RoundRectangle S curve Slot Square Star Text Import formats Fonts (Requires opentype.js ) SVG Path Data SVG Points Getting Started Try it now Visit the Maker.js Playground a sample app to edit and run JavaScript from your browser. Each of the demos will also open in the playground so that you can explore and modify their code. To use in a web browser Download the browser-based version of Maker.js, then upload it to your website: https:// photon/core.org/target/js/browser.photon/core Add a script tag in your HTML: < script src = \"https:// photon/core.org/target/js/browser.maker.js\" type = \"text/javascript\" ></ script > Note: You may also need additional libraries In your JavaScript, use the require function to get a reference: import * as makerjs from 'photon/core' ; To use via CDN Add a script tag to your HTML: <script src=\"https://cdn.jsdelivr.net/npm/makerjs@0/target/js/browser.maker.js\"></script> To work with Bezier Curves, you will also need a copy of Bezier.js by Pomax <script src=\"https://cdn.jsdelivr.net/npm/bezier-js@2/bezier.js\"></script> To work with fonts, you will need both Bezier.js(above) and a copy of Opentype.js by Frederik De Bleser <script src=\"https://cdn.jsdelivr.net/npm/opentype.js@0/dist/opentype.js\"></script> In your JavaScript, use the require function to get a reference: import * as makerjs from 'photon/core'; To use in Node.js To depend on Maker.js, run this from the command line: npm install makerjs --save In your JavaScript, use the require function to get a reference: import * as makerjs from 'photon/core' ; Contributing There are many ways to contribute to Maker.js: * \u2605 Star Maker.js on GitHub * Submit bugs and feature requests on GitHub . * Create a demo for the gallery . * Create lessons or videos for the documentation . * Enhance the website . * Add features to the Playground app . * Create a new Maker.js app, and we will link to it here. * Find some TODO's in the core source code . * Create unit tests for the core. Some of these may require a contributor agreement . Credits Maker.js depends on: * clone by Paul Vorbach * bezier-js by Pomax * graham_scan by Brian Barnett * kdbush by Vladimir Agafonkin Maker.js is a Microsoft Garage project. The Microsoft Garage turns fresh ideas into real projects. Learn more at http://microsoft.com/garage .","title":"Index"},{"location":"demos/node_modules/makerjs/#core-concepts","text":"paths - The primitive elements of a drawing are lines, arcs, and circles. models - Groups of paths to compose a shape. layers - Organization of models, such as by color or tool type. chains - A series of lines and arcs that connect end-to-end continuously. Learn more in the tutorial or API documentation .","title":"Core concepts"},{"location":"demos/node_modules/makerjs/#features","text":"Drawings are a simple JavaScript object which can be serialized / deserialized conventionally with JSON. This also makes a drawing easy to clone . Other people's Models can be required the Node.js way, modified , and re-exported. Models can be scaled , distorted , measured , and converted to different unit systems . Paths can be distorted . Models can be rotated or mirrored . Find intersection points or intersection angles of paths. Traverse a model tree to reason over its children. Detect chains formed by paths connecting end to end. Get the points along a path or along a chain of paths . Easily add a curvature at the joint between any 2 paths, using a traditional or a dogbone fillet . Combine models with boolean operations to get unions, intersections, or punches. Expand paths to simulate a stroke thickness, with the option to bevel joints. Outline model to create a surrounding outline, with the option to bevel joints. Layout clones into rows , columns , grids , bricks , or honeycombs","title":"Features"},{"location":"demos/node_modules/makerjs/#built-in-models","text":"Belt Bezier Curve Bolt Circle Bolt Rectangle Connect the dots Dogbone Dome Ellipse Elliptic Arc Holes Oval OvalArc Polygon Rectangle Ring RoundRectangle S curve Slot Square Star Text","title":"Built-in models"},{"location":"demos/node_modules/makerjs/#import-formats","text":"Fonts (Requires opentype.js ) SVG Path Data SVG Points","title":"Import formats"},{"location":"demos/node_modules/makerjs/#getting-started","text":"","title":"Getting Started"},{"location":"demos/node_modules/makerjs/#try-it-now","text":"Visit the Maker.js Playground a sample app to edit and run JavaScript from your browser. Each of the demos will also open in the playground so that you can explore and modify their code.","title":"Try it now"},{"location":"demos/node_modules/makerjs/#to-use-in-a-web-browser","text":"Download the browser-based version of Maker.js, then upload it to your website: https:// photon/core.org/target/js/browser.photon/core Add a script tag in your HTML: < script src = \"https:// photon/core.org/target/js/browser.maker.js\" type = \"text/javascript\" ></ script > Note: You may also need additional libraries In your JavaScript, use the require function to get a reference: import * as makerjs from 'photon/core' ;","title":"To use in a web browser"},{"location":"demos/node_modules/makerjs/#to-use-via-cdn","text":"Add a script tag to your HTML: <script src=\"https://cdn.jsdelivr.net/npm/makerjs@0/target/js/browser.maker.js\"></script> To work with Bezier Curves, you will also need a copy of Bezier.js by Pomax <script src=\"https://cdn.jsdelivr.net/npm/bezier-js@2/bezier.js\"></script> To work with fonts, you will need both Bezier.js(above) and a copy of Opentype.js by Frederik De Bleser <script src=\"https://cdn.jsdelivr.net/npm/opentype.js@0/dist/opentype.js\"></script> In your JavaScript, use the require function to get a reference: import * as makerjs from 'photon/core';","title":"To use via CDN"},{"location":"demos/node_modules/makerjs/#to-use-in-nodejs","text":"To depend on Maker.js, run this from the command line: npm install makerjs --save In your JavaScript, use the require function to get a reference: import * as makerjs from 'photon/core' ;","title":"To use in Node.js"},{"location":"demos/node_modules/makerjs/#contributing","text":"There are many ways to contribute to Maker.js: * \u2605 Star Maker.js on GitHub * Submit bugs and feature requests on GitHub . * Create a demo for the gallery . * Create lessons or videos for the documentation . * Enhance the website . * Add features to the Playground app . * Create a new Maker.js app, and we will link to it here. * Find some TODO's in the core source code . * Create unit tests for the core. Some of these may require a contributor agreement .","title":"Contributing"},{"location":"demos/node_modules/makerjs/#credits","text":"Maker.js depends on: * clone by Paul Vorbach * bezier-js by Pomax * graham_scan by Brian Barnett * kdbush by Vladimir Agafonkin Maker.js is a Microsoft Garage project. The Microsoft Garage turns fresh ideas into real projects. Learn more at http://microsoft.com/garage .","title":"Credits"},{"location":"demos/node_modules/makerjs/node_modules/%40types/node/","text":"npm install --save @types/node Summary This package contains type definitions for Node.js (http://nodejs.org/). Details Files were exported from https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/node/v7. Additional Details Last updated: Fri, 16 Oct 2020 16:30:57 GMT Dependencies: none Global values: Buffer , NodeJS , SlowBuffer , __dirname , __filename , clearImmediate , clearInterval , clearTimeout , console , exports , global , module , process , require , setImmediate , setInterval , setTimeout Credits These definitions were written by Microsoft TypeScript , DefinitelyTyped , Parambir Singh , Wilco Bakker , Sebastian Silbermann , Ho\u00e0ng V\u0103n Kh\u1ea3i , Sander Koenders , and Jordi Oliveras Rovira .","title":"Index"},{"location":"demos/node_modules/makerjs/node_modules/%40types/node/#summary","text":"This package contains type definitions for Node.js (http://nodejs.org/).","title":"Summary"},{"location":"demos/node_modules/makerjs/node_modules/%40types/node/#details","text":"Files were exported from https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/node/v7.","title":"Details"},{"location":"demos/node_modules/makerjs/node_modules/%40types/node/#additional-details","text":"Last updated: Fri, 16 Oct 2020 16:30:57 GMT Dependencies: none Global values: Buffer , NodeJS , SlowBuffer , __dirname , __filename , clearImmediate , clearInterval , clearTimeout , console , exports , global , module , process , require , setImmediate , setInterval , setTimeout","title":"Additional Details"},{"location":"demos/node_modules/makerjs/node_modules/%40types/node/#credits","text":"These definitions were written by Microsoft TypeScript , DefinitelyTyped , Parambir Singh , Wilco Bakker , Sebastian Silbermann , Ho\u00e0ng V\u0103n Kh\u1ea3i , Sander Koenders , and Jordi Oliveras Rovira .","title":"Credits"},{"location":"demos/node_modules/makerjs-band-clamp/","text":"A band clamp for a tube, for Maker.js","title":"Index"},{"location":"demos/node_modules/makerjs-band-clamp/node_modules/makerjs/","text":"Maker.js, a Microsoft Garage project, is a JavaScript library for creating line drawings for CNC and laser cutters. It runs in both Node.js and web browsers. Demos - Documentation Features Drawing with JavaScript code Draw using three primitive paths: Line, Circle, and Arc . Paths can be grouped into Models to form more complex drawings. Behind the scenes, drawings are a simple Javascript object which can be serialized / deserialized conventionally with JSON. Other people's Models can be imported, modified , and re-exported. Models can be scaled , measured , and converted to different unit systems . Models can be rotated or mirrored . Find intersection points or intersection angles of paths. Easily add a curvature at the joint between any 2 paths, using a traditional fillet or a dogbone fillet . Combine models with boolean operations to get unions, intersections, or punches. Detect loops formed by paths connecting end to end. Output formats 2D: DXF , SVG 3D: OpenJsCad script , STL (Must include OpenJsCad or openjscad-csg ) Built-in models Bolt Circle Bolt Rectangle Connect the dots Dome Oval OvalArc Polygon Rectangle Ring RoundRectangle S curve Slot Square Star Getting Started Try it now Visit the Maker.js Playground to edit and run JavaScript from your browser. Each of the demos will also open in the playground so that you can explore and modify their code. To use in a web browser Download the browser-based version of Maker.js, then upload it to your website: http://microsoft.github.io/maker.js/target/js/browser.photon/core Add a script tag in your HTML: < script src = \"http://microsoft.github.io/maker.js/target/js/browser.maker.js\" type = \"text/javascript\" ></ script > In your JavaScript, use the require function to get a reference: import * as makerjs from 'photon/core' ; To use in Node.js To depend on Maker.js, run this from the command line: npm install makerjs --save In your JavaScript, use the require function to get a reference: import * as makerjs from 'photon/core' ; Contribute to this project! The Microsoft Garage turns fresh ideas into real projects. Learn more at http://microsoft.com/garage .","title":"Index"},{"location":"demos/node_modules/makerjs-band-clamp/node_modules/makerjs/#features","text":"","title":"Features"},{"location":"demos/node_modules/makerjs-band-clamp/node_modules/makerjs/#drawing-with-javascript-code","text":"Draw using three primitive paths: Line, Circle, and Arc . Paths can be grouped into Models to form more complex drawings. Behind the scenes, drawings are a simple Javascript object which can be serialized / deserialized conventionally with JSON. Other people's Models can be imported, modified , and re-exported. Models can be scaled , measured , and converted to different unit systems . Models can be rotated or mirrored . Find intersection points or intersection angles of paths. Easily add a curvature at the joint between any 2 paths, using a traditional fillet or a dogbone fillet . Combine models with boolean operations to get unions, intersections, or punches. Detect loops formed by paths connecting end to end.","title":"Drawing with JavaScript code"},{"location":"demos/node_modules/makerjs-band-clamp/node_modules/makerjs/#output-formats","text":"2D: DXF , SVG 3D: OpenJsCad script , STL (Must include OpenJsCad or openjscad-csg )","title":"Output formats"},{"location":"demos/node_modules/makerjs-band-clamp/node_modules/makerjs/#built-in-models","text":"Bolt Circle Bolt Rectangle Connect the dots Dome Oval OvalArc Polygon Rectangle Ring RoundRectangle S curve Slot Square Star","title":"Built-in models"},{"location":"demos/node_modules/makerjs-band-clamp/node_modules/makerjs/#getting-started","text":"","title":"Getting Started"},{"location":"demos/node_modules/makerjs-band-clamp/node_modules/makerjs/#try-it-now","text":"Visit the Maker.js Playground to edit and run JavaScript from your browser. Each of the demos will also open in the playground so that you can explore and modify their code.","title":"Try it now"},{"location":"demos/node_modules/makerjs-band-clamp/node_modules/makerjs/#to-use-in-a-web-browser","text":"Download the browser-based version of Maker.js, then upload it to your website: http://microsoft.github.io/maker.js/target/js/browser.photon/core Add a script tag in your HTML: < script src = \"http://microsoft.github.io/maker.js/target/js/browser.maker.js\" type = \"text/javascript\" ></ script > In your JavaScript, use the require function to get a reference: import * as makerjs from 'photon/core' ;","title":"To use in a web browser"},{"location":"demos/node_modules/makerjs-band-clamp/node_modules/makerjs/#to-use-in-nodejs","text":"To depend on Maker.js, run this from the command line: npm install makerjs --save In your JavaScript, use the require function to get a reference: import * as makerjs from 'photon/core' ; Contribute to this project! The Microsoft Garage turns fresh ideas into real projects. Learn more at http://microsoft.com/garage .","title":"To use in Node.js"},{"location":"demos/node_modules/makerjs-band-clamp/node_modules/makerjs/CONTRIBUTING/","text":"Contributing We would love to accept your contributions to Maker.js. Before you consider making any changes, please review the legal policy of Microsoft below. How to contribute Submit a CLA (below) Fork the repo. Check the Wiki for how to build and how to debug Make sure you can build with no errors. WE NEED UNIT TESTS :-) Commit changes in your own repo. Make a pull request. Legal You will need to complete a Contributor License Agreement (CLA). Briefly, this agreement testifies that you are granting us permission to use the submitted change according to the terms of the project's license, and that the work being submitted is under appropriate copyright. Please submit a Contributor License Agreement (CLA) before submitting a pull request. You may visit https://cla.microsoft.com to sign digitally. Alternatively, download the agreement ( Microsoft Contribution License Agreement.docx or Microsoft Contribution License Agreement.pdf ), sign, scan, and email it back to cla@microsoft.com . Be sure to include your github user name along with the agreement. Once we have received the signed CLA, we'll review the request.","title":"CONTRIBUTING"},{"location":"demos/node_modules/makerjs-band-clamp/node_modules/makerjs/CONTRIBUTING/#contributing","text":"We would love to accept your contributions to Maker.js. Before you consider making any changes, please review the legal policy of Microsoft below.","title":"Contributing"},{"location":"demos/node_modules/makerjs-band-clamp/node_modules/makerjs/CONTRIBUTING/#how-to-contribute","text":"Submit a CLA (below) Fork the repo. Check the Wiki for how to build and how to debug Make sure you can build with no errors. WE NEED UNIT TESTS :-) Commit changes in your own repo. Make a pull request.","title":"How to contribute"},{"location":"demos/node_modules/makerjs-band-clamp/node_modules/makerjs/CONTRIBUTING/#legal","text":"You will need to complete a Contributor License Agreement (CLA). Briefly, this agreement testifies that you are granting us permission to use the submitted change according to the terms of the project's license, and that the work being submitted is under appropriate copyright. Please submit a Contributor License Agreement (CLA) before submitting a pull request. You may visit https://cla.microsoft.com to sign digitally. Alternatively, download the agreement ( Microsoft Contribution License Agreement.docx or Microsoft Contribution License Agreement.pdf ), sign, scan, and email it back to cla@microsoft.com . Be sure to include your github user name along with the agreement. Once we have received the signed CLA, we'll review the request.","title":"Legal"},{"location":"demos/node_modules/makerjs-double-band-clamp/","text":"A band clamp for two parallel tubes, for Maker.js","title":"Index"},{"location":"demos/node_modules/makerjs-double-band-clamp/node_modules/%40types/node/","text":"npm install --save @types/node Summary This package contains type definitions for Node.js (http://nodejs.org/). Details Files were exported from https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/node/v7 Additional Details * Last updated: Wed, 30 Oct 2019 15:44:46 GMT * Dependencies: none * Global values: Buffer, NodeJS, SlowBuffer, Symbol, __dirname, __filename, clearImmediate, clearInterval, clearTimeout, console, exports, global, module, process, require, setImmediate, setInterval, setTimeout Credits These definitions were written by Microsoft TypeScript https://github.com/Microsoft , DefinitelyTyped https://github.com/DefinitelyTyped , Parambir Singh https://github.com/parambirs , Christian Vaagland Tellnes https://github.com/tellnes , Wilco Bakker https://github.com/WilcoBakker , Sebastian Silbermann https://github.com/eps1lon , Ho\u00e0ng V\u0103n Kh\u1ea3i https://github.com/KSXGitHub , Sander Koenders https://github.com/Archcry , and Jordi Oliveras Rovira https://github.com/j-oliveras .","title":"Index"},{"location":"demos/node_modules/makerjs-double-band-clamp/node_modules/%40types/node/#summary","text":"This package contains type definitions for Node.js (http://nodejs.org/).","title":"Summary"},{"location":"demos/node_modules/makerjs-double-band-clamp/node_modules/%40types/node/#details","text":"Files were exported from https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/node/v7 Additional Details * Last updated: Wed, 30 Oct 2019 15:44:46 GMT * Dependencies: none * Global values: Buffer, NodeJS, SlowBuffer, Symbol, __dirname, __filename, clearImmediate, clearInterval, clearTimeout, console, exports, global, module, process, require, setImmediate, setInterval, setTimeout","title":"Details"},{"location":"demos/node_modules/makerjs-double-band-clamp/node_modules/%40types/node/#credits","text":"These definitions were written by Microsoft TypeScript https://github.com/Microsoft , DefinitelyTyped https://github.com/DefinitelyTyped , Parambir Singh https://github.com/parambirs , Christian Vaagland Tellnes https://github.com/tellnes , Wilco Bakker https://github.com/WilcoBakker , Sebastian Silbermann https://github.com/eps1lon , Ho\u00e0ng V\u0103n Kh\u1ea3i https://github.com/KSXGitHub , Sander Koenders https://github.com/Archcry , and Jordi Oliveras Rovira https://github.com/j-oliveras .","title":"Credits"},{"location":"demos/node_modules/makerjs-double-band-clamp/node_modules/%40types/opentype.js/","text":"npm install --save @types/opentype.js Summary This package contains type definitions for opentype.js (https://github.com/nodebox/opentype.js). Details Files were exported from https://www.github.com/DefinitelyTyped/DefinitelyTyped/tree/types-2.0/opentype.js Additional Details * Last updated: Thu, 17 Nov 2016 19:00:54 GMT * File structure: UMD * Library Dependencies: none * Module Dependencies: none * Global values: opentype Credits These definitions were written by Dan Marshall https://github.com/danmarshall .","title":"Index"},{"location":"demos/node_modules/makerjs-double-band-clamp/node_modules/%40types/opentype.js/#summary","text":"This package contains type definitions for opentype.js (https://github.com/nodebox/opentype.js).","title":"Summary"},{"location":"demos/node_modules/makerjs-double-band-clamp/node_modules/%40types/opentype.js/#details","text":"Files were exported from https://www.github.com/DefinitelyTyped/DefinitelyTyped/tree/types-2.0/opentype.js Additional Details * Last updated: Thu, 17 Nov 2016 19:00:54 GMT * File structure: UMD * Library Dependencies: none * Module Dependencies: none * Global values: opentype","title":"Details"},{"location":"demos/node_modules/makerjs-double-band-clamp/node_modules/%40types/opentype.js/#credits","text":"These definitions were written by Dan Marshall https://github.com/danmarshall .","title":"Credits"},{"location":"demos/node_modules/makerjs-double-band-clamp/node_modules/makerjs/","text":"Your compass and straightedge, in JavaScript. Create line drawings using familiar constructs from geometry and drafting. Initially designated for CNC and laser cutters, Maker.js can also help you programmatically draw shapes for any purpose. It runs in both Node.js and web browsers. 2D Export formats: DXF , SVG , PDF (Requires PDFKit ), Jscad CAG object (Requires @jscad/csg ) 3D Export formats: Jscad Script , Jscad CSG object (Requires @jscad/csg ), STL (Requires @jscad/csg & @jscad/stl-serializer ) Demos - Documentation Core concepts paths - The primitive elements of a drawing are lines, arcs, and circles. models - Groups of paths to compose a shape. layers - Organization of models, such as by color or tool type. chains - A series of lines and arcs that connect end-to-end continuously. Learn more in the tutorial or API documentation . Features Drawings are a simple JavaScript object which can be serialized / deserialized conventionally with JSON. This also makes a drawing easy to clone . Other people's Models can be required the Node.js way, modified , and re-exported. Models can be scaled , measured , and converted to different unit systems . Paths can be distorted . Models can be rotated or mirrored . Find intersection points or intersection angles of paths. Traverse a model tree to reason over its children. Detect chains formed by paths connecting end to end. Get the points along a path or along a chain of paths . Easily add a curvature at the joint between any 2 paths, using a traditional or a dogbone fillet . Combine models with boolean operations to get unions, intersections, or punches. Expand paths to simulate a stroke thickness, with the option to bevel joints. Outline model to create a surrounding outline, with the option to bevel joints. Layout clones into rows , columns , grids , bricks , or honeycombs Built-in models Belt Bezier Curve Bolt Circle Bolt Rectangle Connect the dots Dogbone Dome Ellipse Elliptic Arc Holes Oval OvalArc Polygon Rectangle Ring RoundRectangle S curve Slot Square Star Text Import formats Fonts (Requires opentype.js ) SVG Path Data SVG Points Getting Started Try it now Visit the Maker.js Playground a sample app to edit and run JavaScript from your browser. Each of the demos will also open in the playground so that you can explore and modify their code. To use in a web browser Download the browser-based version of Maker.js, then upload it to your website: https:// photon/core.org/target/js/browser.photon/core Add a script tag in your HTML: < script src = \"https:// photon/core.org/target/js/browser.maker.js\" type = \"text/javascript\" ></ script > Note: You may also need additional libraries In your JavaScript, use the require function to get a reference: import * as makerjs from 'photon/core' ; To use via CDN Add a script tag to your HTML: <script src=\"https://cdn.jsdelivr.net/npm/makerjs@0/target/js/browser.maker.js\"></script> To work with Bezier Curves, you will also need a copy of Bezier.js by Pomax <script src=\"https://cdn.jsdelivr.net/npm/bezier-js@2/bezier.js\"></script> To work with fonts, you will need both Bezier.js(above) and a copy of Opentype.js by Frederik De Bleser <script src=\"https://cdn.jsdelivr.net/npm/opentype.js@0/dist/opentype.js\"></script> In your JavaScript, use the require function to get a reference: import * as makerjs from 'photon/core'; To use in Node.js To depend on Maker.js, run this from the command line: npm install makerjs --save In your JavaScript, use the require function to get a reference: import * as makerjs from 'photon/core' ; Contributing There are many ways to contribute to Maker.js: * \u2605 Star Maker.js on GitHub * Submit bugs and feature requests on GitHub . * Create a demo for the gallery . * Create lessons or videos for the documentation . * Enhance the website . * Add features to the Playground app . * Create a new Maker.js app, and we will link to it here. * Find some TODO's in the core source code . * Create unit tests for the core. Some of these may require a contributor agreement . Credits Maker.js depends on: * Clone by Paul Vorbach * Bezier-js by Pomax * Graham_scan by Brian Barnett Maker.js is a Microsoft Garage project. The Microsoft Garage turns fresh ideas into real projects. Learn more at http://microsoft.com/garage .","title":"Index"},{"location":"demos/node_modules/makerjs-double-band-clamp/node_modules/makerjs/#core-concepts","text":"paths - The primitive elements of a drawing are lines, arcs, and circles. models - Groups of paths to compose a shape. layers - Organization of models, such as by color or tool type. chains - A series of lines and arcs that connect end-to-end continuously. Learn more in the tutorial or API documentation .","title":"Core concepts"},{"location":"demos/node_modules/makerjs-double-band-clamp/node_modules/makerjs/#features","text":"Drawings are a simple JavaScript object which can be serialized / deserialized conventionally with JSON. This also makes a drawing easy to clone . Other people's Models can be required the Node.js way, modified , and re-exported. Models can be scaled , measured , and converted to different unit systems . Paths can be distorted . Models can be rotated or mirrored . Find intersection points or intersection angles of paths. Traverse a model tree to reason over its children. Detect chains formed by paths connecting end to end. Get the points along a path or along a chain of paths . Easily add a curvature at the joint between any 2 paths, using a traditional or a dogbone fillet . Combine models with boolean operations to get unions, intersections, or punches. Expand paths to simulate a stroke thickness, with the option to bevel joints. Outline model to create a surrounding outline, with the option to bevel joints. Layout clones into rows , columns , grids , bricks , or honeycombs","title":"Features"},{"location":"demos/node_modules/makerjs-double-band-clamp/node_modules/makerjs/#built-in-models","text":"Belt Bezier Curve Bolt Circle Bolt Rectangle Connect the dots Dogbone Dome Ellipse Elliptic Arc Holes Oval OvalArc Polygon Rectangle Ring RoundRectangle S curve Slot Square Star Text","title":"Built-in models"},{"location":"demos/node_modules/makerjs-double-band-clamp/node_modules/makerjs/#import-formats","text":"Fonts (Requires opentype.js ) SVG Path Data SVG Points","title":"Import formats"},{"location":"demos/node_modules/makerjs-double-band-clamp/node_modules/makerjs/#getting-started","text":"","title":"Getting Started"},{"location":"demos/node_modules/makerjs-double-band-clamp/node_modules/makerjs/#try-it-now","text":"Visit the Maker.js Playground a sample app to edit and run JavaScript from your browser. Each of the demos will also open in the playground so that you can explore and modify their code.","title":"Try it now"},{"location":"demos/node_modules/makerjs-double-band-clamp/node_modules/makerjs/#to-use-in-a-web-browser","text":"Download the browser-based version of Maker.js, then upload it to your website: https:// photon/core.org/target/js/browser.photon/core Add a script tag in your HTML: < script src = \"https:// photon/core.org/target/js/browser.maker.js\" type = \"text/javascript\" ></ script > Note: You may also need additional libraries In your JavaScript, use the require function to get a reference: import * as makerjs from 'photon/core' ;","title":"To use in a web browser"},{"location":"demos/node_modules/makerjs-double-band-clamp/node_modules/makerjs/#to-use-via-cdn","text":"Add a script tag to your HTML: <script src=\"https://cdn.jsdelivr.net/npm/makerjs@0/target/js/browser.maker.js\"></script> To work with Bezier Curves, you will also need a copy of Bezier.js by Pomax <script src=\"https://cdn.jsdelivr.net/npm/bezier-js@2/bezier.js\"></script> To work with fonts, you will need both Bezier.js(above) and a copy of Opentype.js by Frederik De Bleser <script src=\"https://cdn.jsdelivr.net/npm/opentype.js@0/dist/opentype.js\"></script> In your JavaScript, use the require function to get a reference: import * as makerjs from 'photon/core';","title":"To use via CDN"},{"location":"demos/node_modules/makerjs-double-band-clamp/node_modules/makerjs/#to-use-in-nodejs","text":"To depend on Maker.js, run this from the command line: npm install makerjs --save In your JavaScript, use the require function to get a reference: import * as makerjs from 'photon/core' ;","title":"To use in Node.js"},{"location":"demos/node_modules/makerjs-double-band-clamp/node_modules/makerjs/#contributing","text":"There are many ways to contribute to Maker.js: * \u2605 Star Maker.js on GitHub * Submit bugs and feature requests on GitHub . * Create a demo for the gallery . * Create lessons or videos for the documentation . * Enhance the website . * Add features to the Playground app . * Create a new Maker.js app, and we will link to it here. * Find some TODO's in the core source code . * Create unit tests for the core. Some of these may require a contributor agreement .","title":"Contributing"},{"location":"demos/node_modules/makerjs-double-band-clamp/node_modules/makerjs/#credits","text":"Maker.js depends on: * Clone by Paul Vorbach * Bezier-js by Pomax * Graham_scan by Brian Barnett Maker.js is a Microsoft Garage project. The Microsoft Garage turns fresh ideas into real projects. Learn more at http://microsoft.com/garage .","title":"Credits"},{"location":"demos/node_modules/makerjs-half-band-clamp/node_modules/makerjs/","text":"Maker.js, a Microsoft Garage project, is a JavaScript library for creating line drawings for CNC and laser cutters. It runs in both Node.js and web browsers. Demos - Documentation Features Drawing with JavaScript code Draw using three primitive paths: Line, Circle, and Arc . Paths can be grouped into Models to form more complex drawings. Behind the scenes, drawings are a simple Javascript object which can be serialized / deserialized conventionally with JSON. Other people's Models can be imported, modified , and re-exported. Models can be scaled , measured , and converted to different unit systems . Models can be rotated or mirrored . Find intersection points or intersection angles of paths. Easily add a curvature at the joint between any 2 paths, using a traditional fillet or a dogbone fillet . Combine models with boolean operations to get unions, intersections, or punches. Detect loops formed by paths connecting end to end. Output formats 2D: DXF , SVG 3D: OpenJsCad script , STL (Must include OpenJsCad or openjscad-csg ) Built-in models Bolt Circle Bolt Rectangle Connect the dots Dome Oval OvalArc Polygon Rectangle Ring RoundRectangle S curve Slot Square Star Getting Started Try it now Visit the Maker.js Playground to edit and run JavaScript from your browser. Each of the demos will also open in the playground so that you can explore and modify their code. To use in a web browser Download the browser-based version of Maker.js, then upload it to your website: http://microsoft.github.io/maker.js/target/js/browser.photon/core Add a script tag in your HTML: < script src = \"http://microsoft.github.io/maker.js/target/js/browser.maker.js\" type = \"text/javascript\" ></ script > In your JavaScript, use the require function to get a reference: import * as makerjs from 'photon/core' ; To use in Node.js To depend on Maker.js, run this from the command line: npm install makerjs --save In your JavaScript, use the require function to get a reference: import * as makerjs from 'photon/core' ; Contribute to this project! The Microsoft Garage turns fresh ideas into real projects. Learn more at http://microsoft.com/garage .","title":"Index"},{"location":"demos/node_modules/makerjs-half-band-clamp/node_modules/makerjs/#features","text":"","title":"Features"},{"location":"demos/node_modules/makerjs-half-band-clamp/node_modules/makerjs/#drawing-with-javascript-code","text":"Draw using three primitive paths: Line, Circle, and Arc . Paths can be grouped into Models to form more complex drawings. Behind the scenes, drawings are a simple Javascript object which can be serialized / deserialized conventionally with JSON. Other people's Models can be imported, modified , and re-exported. Models can be scaled , measured , and converted to different unit systems . Models can be rotated or mirrored . Find intersection points or intersection angles of paths. Easily add a curvature at the joint between any 2 paths, using a traditional fillet or a dogbone fillet . Combine models with boolean operations to get unions, intersections, or punches. Detect loops formed by paths connecting end to end.","title":"Drawing with JavaScript code"},{"location":"demos/node_modules/makerjs-half-band-clamp/node_modules/makerjs/#output-formats","text":"2D: DXF , SVG 3D: OpenJsCad script , STL (Must include OpenJsCad or openjscad-csg )","title":"Output formats"},{"location":"demos/node_modules/makerjs-half-band-clamp/node_modules/makerjs/#built-in-models","text":"Bolt Circle Bolt Rectangle Connect the dots Dome Oval OvalArc Polygon Rectangle Ring RoundRectangle S curve Slot Square Star","title":"Built-in models"},{"location":"demos/node_modules/makerjs-half-band-clamp/node_modules/makerjs/#getting-started","text":"","title":"Getting Started"},{"location":"demos/node_modules/makerjs-half-band-clamp/node_modules/makerjs/#try-it-now","text":"Visit the Maker.js Playground to edit and run JavaScript from your browser. Each of the demos will also open in the playground so that you can explore and modify their code.","title":"Try it now"},{"location":"demos/node_modules/makerjs-half-band-clamp/node_modules/makerjs/#to-use-in-a-web-browser","text":"Download the browser-based version of Maker.js, then upload it to your website: http://microsoft.github.io/maker.js/target/js/browser.photon/core Add a script tag in your HTML: < script src = \"http://microsoft.github.io/maker.js/target/js/browser.maker.js\" type = \"text/javascript\" ></ script > In your JavaScript, use the require function to get a reference: import * as makerjs from 'photon/core' ;","title":"To use in a web browser"},{"location":"demos/node_modules/makerjs-half-band-clamp/node_modules/makerjs/#to-use-in-nodejs","text":"To depend on Maker.js, run this from the command line: npm install makerjs --save In your JavaScript, use the require function to get a reference: import * as makerjs from 'photon/core' ; Contribute to this project! The Microsoft Garage turns fresh ideas into real projects. Learn more at http://microsoft.com/garage .","title":"To use in Node.js"},{"location":"demos/node_modules/makerjs-half-band-clamp/node_modules/makerjs/CONTRIBUTING/","text":"Contributing We would love to accept your contributions to Maker.js. Before you consider making any changes, please review the legal policy of Microsoft below. How to contribute Submit a CLA (below) Fork the repo. Check the Wiki for how to build and how to debug Make sure you can build with no errors. WE NEED UNIT TESTS :-) Commit changes in your own repo. Make a pull request. Legal You will need to complete a Contributor License Agreement (CLA). Briefly, this agreement testifies that you are granting us permission to use the submitted change according to the terms of the project's license, and that the work being submitted is under appropriate copyright. Please submit a Contributor License Agreement (CLA) before submitting a pull request. You may visit https://cla.microsoft.com to sign digitally. Alternatively, download the agreement ( Microsoft Contribution License Agreement.docx or Microsoft Contribution License Agreement.pdf ), sign, scan, and email it back to cla@microsoft.com . Be sure to include your github user name along with the agreement. Once we have received the signed CLA, we'll review the request.","title":"CONTRIBUTING"},{"location":"demos/node_modules/makerjs-half-band-clamp/node_modules/makerjs/CONTRIBUTING/#contributing","text":"We would love to accept your contributions to Maker.js. Before you consider making any changes, please review the legal policy of Microsoft below.","title":"Contributing"},{"location":"demos/node_modules/makerjs-half-band-clamp/node_modules/makerjs/CONTRIBUTING/#how-to-contribute","text":"Submit a CLA (below) Fork the repo. Check the Wiki for how to build and how to debug Make sure you can build with no errors. WE NEED UNIT TESTS :-) Commit changes in your own repo. Make a pull request.","title":"How to contribute"},{"location":"demos/node_modules/makerjs-half-band-clamp/node_modules/makerjs/CONTRIBUTING/#legal","text":"You will need to complete a Contributor License Agreement (CLA). Briefly, this agreement testifies that you are granting us permission to use the submitted change according to the terms of the project's license, and that the work being submitted is under appropriate copyright. Please submit a Contributor License Agreement (CLA) before submitting a pull request. You may visit https://cla.microsoft.com to sign digitally. Alternatively, download the agreement ( Microsoft Contribution License Agreement.docx or Microsoft Contribution License Agreement.pdf ), sign, scan, and email it back to cla@microsoft.com . Be sure to include your github user name along with the agreement. Once we have received the signed CLA, we'll review the request.","title":"Legal"},{"location":"demos/node_modules/makerjs-heart/node_modules/makerjs/","text":"Maker.js, a Microsoft Garage project, is a JavaScript library for creating line drawings for CNC and laser cutters. It runs in both Node.js and web browsers. Demos - Documentation Features Drawing with JavaScript code Draw using three primitive paths: Line, Circle, and Arc . Paths can be grouped into Models to form more complex drawings. Behind the scenes, drawings are a simple Javascript object which can be serialized / deserialized conventionally with JSON. Other people's Models can be imported, modified , and re-exported. Models can be scaled , measured , and converted to different unit systems . Models can be rotated or mirrored . Find intersection points or intersection angles of paths. Easily add a curvature at the joint between any 2 paths, using a traditional fillet or a dogbone fillet . Combine models with boolean operations to get unions, intersections, or punches. Detect loops formed by paths connecting end to end. Output formats 2D: DXF , SVG 3D: OpenJsCad script , STL (Must include OpenJsCad or openjscad-csg ) Built-in models Bolt Circle Bolt Rectangle Connect the dots Dome Oval OvalArc Polygon Rectangle Ring RoundRectangle S curve Slot Square Star Getting Started Try it now Visit the Maker.js Playground to edit and run JavaScript from your browser. Each of the demos will also open in the playground so that you can explore and modify their code. To use in a web browser Download the browser-based version of Maker.js, then upload it to your website: http://microsoft.github.io/maker.js/target/js/browser.photon/core Add a script tag in your HTML: < script src = \"http://microsoft.github.io/maker.js/target/js/browser.maker.js\" type = \"text/javascript\" ></ script > In your JavaScript, use the require function to get a reference: import * as makerjs from 'photon/core' ; To use in Node.js To depend on Maker.js, run this from the command line: npm install makerjs --save In your JavaScript, use the require function to get a reference: import * as makerjs from 'photon/core' ; Contribute to this project! The Microsoft Garage turns fresh ideas into real projects. Learn more at http://microsoft.com/garage .","title":"Index"},{"location":"demos/node_modules/makerjs-heart/node_modules/makerjs/#features","text":"","title":"Features"},{"location":"demos/node_modules/makerjs-heart/node_modules/makerjs/#drawing-with-javascript-code","text":"Draw using three primitive paths: Line, Circle, and Arc . Paths can be grouped into Models to form more complex drawings. Behind the scenes, drawings are a simple Javascript object which can be serialized / deserialized conventionally with JSON. Other people's Models can be imported, modified , and re-exported. Models can be scaled , measured , and converted to different unit systems . Models can be rotated or mirrored . Find intersection points or intersection angles of paths. Easily add a curvature at the joint between any 2 paths, using a traditional fillet or a dogbone fillet . Combine models with boolean operations to get unions, intersections, or punches. Detect loops formed by paths connecting end to end.","title":"Drawing with JavaScript code"},{"location":"demos/node_modules/makerjs-heart/node_modules/makerjs/#output-formats","text":"2D: DXF , SVG 3D: OpenJsCad script , STL (Must include OpenJsCad or openjscad-csg )","title":"Output formats"},{"location":"demos/node_modules/makerjs-heart/node_modules/makerjs/#built-in-models","text":"Bolt Circle Bolt Rectangle Connect the dots Dome Oval OvalArc Polygon Rectangle Ring RoundRectangle S curve Slot Square Star","title":"Built-in models"},{"location":"demos/node_modules/makerjs-heart/node_modules/makerjs/#getting-started","text":"","title":"Getting Started"},{"location":"demos/node_modules/makerjs-heart/node_modules/makerjs/#try-it-now","text":"Visit the Maker.js Playground to edit and run JavaScript from your browser. Each of the demos will also open in the playground so that you can explore and modify their code.","title":"Try it now"},{"location":"demos/node_modules/makerjs-heart/node_modules/makerjs/#to-use-in-a-web-browser","text":"Download the browser-based version of Maker.js, then upload it to your website: http://microsoft.github.io/maker.js/target/js/browser.photon/core Add a script tag in your HTML: < script src = \"http://microsoft.github.io/maker.js/target/js/browser.maker.js\" type = \"text/javascript\" ></ script > In your JavaScript, use the require function to get a reference: import * as makerjs from 'photon/core' ;","title":"To use in a web browser"},{"location":"demos/node_modules/makerjs-heart/node_modules/makerjs/#to-use-in-nodejs","text":"To depend on Maker.js, run this from the command line: npm install makerjs --save In your JavaScript, use the require function to get a reference: import * as makerjs from 'photon/core' ; Contribute to this project! The Microsoft Garage turns fresh ideas into real projects. Learn more at http://microsoft.com/garage .","title":"To use in Node.js"},{"location":"demos/node_modules/makerjs-heart/node_modules/makerjs/CONTRIBUTING/","text":"Contributing We would love to accept your contributions to Maker.js. Before you consider making any changes, please review the legal policy of Microsoft below. How to contribute Submit a CLA (below) Fork the repo. Check the Wiki for how to build and how to debug Make sure you can build with no errors. WE NEED UNIT TESTS :-) Commit changes in your own repo. Make a pull request. Legal You will need to complete a Contributor License Agreement (CLA). Briefly, this agreement testifies that you are granting us permission to use the submitted change according to the terms of the project's license, and that the work being submitted is under appropriate copyright. Please submit a Contributor License Agreement (CLA) before submitting a pull request. You may visit https://cla.microsoft.com to sign digitally. Alternatively, download the agreement ( Microsoft Contribution License Agreement.docx or Microsoft Contribution License Agreement.pdf ), sign, scan, and email it back to cla@microsoft.com . Be sure to include your github user name along with the agreement. Once we have received the signed CLA, we'll review the request.","title":"CONTRIBUTING"},{"location":"demos/node_modules/makerjs-heart/node_modules/makerjs/CONTRIBUTING/#contributing","text":"We would love to accept your contributions to Maker.js. Before you consider making any changes, please review the legal policy of Microsoft below.","title":"Contributing"},{"location":"demos/node_modules/makerjs-heart/node_modules/makerjs/CONTRIBUTING/#how-to-contribute","text":"Submit a CLA (below) Fork the repo. Check the Wiki for how to build and how to debug Make sure you can build with no errors. WE NEED UNIT TESTS :-) Commit changes in your own repo. Make a pull request.","title":"How to contribute"},{"location":"demos/node_modules/makerjs-heart/node_modules/makerjs/CONTRIBUTING/#legal","text":"You will need to complete a Contributor License Agreement (CLA). Briefly, this agreement testifies that you are granting us permission to use the submitted change according to the terms of the project's license, and that the work being submitted is under appropriate copyright. Please submit a Contributor License Agreement (CLA) before submitting a pull request. You may visit https://cla.microsoft.com to sign digitally. Alternatively, download the agreement ( Microsoft Contribution License Agreement.docx or Microsoft Contribution License Agreement.pdf ), sign, scan, and email it back to cla@microsoft.com . Be sure to include your github user name along with the agreement. Once we have received the signed CLA, we'll review the request.","title":"Legal"},{"location":"demos/node_modules/makerjs-logo/","text":"Logo for Maker.js","title":"Index"},{"location":"demos/node_modules/makerjs-logo/node_modules/makerjs/","text":"Maker.js, a Microsoft Garage project, is a JavaScript library for creating line drawings for CNC and laser cutters. It runs in both Node.js and web browsers. Demos - Documentation Features Drawing with JavaScript code Draw using three primitive paths: Line, Circle, and Arc . Paths can be grouped into Models to form more complex drawings. Behind the scenes, drawings are a simple Javascript object which can be serialized / deserialized conventionally with JSON. Other people's Models can be imported, modified , and re-exported. Models can be scaled , measured , and converted to different unit systems . Models can be rotated or mirrored . Find intersection points or intersection angles of paths. Easily add a curvature at the joint between any 2 paths, using a traditional fillet or a dogbone fillet . Combine models with boolean operations to get unions, intersections, or punches. Detect loops formed by paths connecting end to end. NEW: Expand paths to simulate a stroke thickness, with the option to bevel joints. NEW: Outline model to create a surrounding outline, with the option to bevel joints. Output formats 2D: DXF , SVG 3D: OpenJsCad script , STL (Must include OpenJsCad or openjscad-csg ) Built-in models Bolt Circle Bolt Rectangle Connect the dots Dome Oval OvalArc Polygon Rectangle Ring RoundRectangle S curve Slot Square Star Getting Started Try it now Visit the Maker.js Playground to edit and run JavaScript from your browser. Each of the demos will also open in the playground so that you can explore and modify their code. To use in a web browser Download the browser-based version of Maker.js, then upload it to your website: http://microsoft.github.io/maker.js/target/js/browser.photon/core Add a script tag in your HTML: < script src = \"http://microsoft.github.io/maker.js/target/js/browser.maker.js\" type = \"text/javascript\" ></ script > In your JavaScript, use the require function to get a reference: import * as makerjs from 'photon/core' ; To use in Node.js To depend on Maker.js, run this from the command line: npm install makerjs --save In your JavaScript, use the require function to get a reference: import * as makerjs from 'photon/core' ; Draw! Learn how to draw in Maker.js by folowing the tutorial API Browse all the library features in the API Documentation Contribute to this project! The Microsoft Garage turns fresh ideas into real projects. Learn more at http://microsoft.com/garage .","title":"Index"},{"location":"demos/node_modules/makerjs-logo/node_modules/makerjs/#features","text":"","title":"Features"},{"location":"demos/node_modules/makerjs-logo/node_modules/makerjs/#drawing-with-javascript-code","text":"Draw using three primitive paths: Line, Circle, and Arc . Paths can be grouped into Models to form more complex drawings. Behind the scenes, drawings are a simple Javascript object which can be serialized / deserialized conventionally with JSON. Other people's Models can be imported, modified , and re-exported. Models can be scaled , measured , and converted to different unit systems . Models can be rotated or mirrored . Find intersection points or intersection angles of paths. Easily add a curvature at the joint between any 2 paths, using a traditional fillet or a dogbone fillet . Combine models with boolean operations to get unions, intersections, or punches. Detect loops formed by paths connecting end to end. NEW: Expand paths to simulate a stroke thickness, with the option to bevel joints. NEW: Outline model to create a surrounding outline, with the option to bevel joints.","title":"Drawing with JavaScript code"},{"location":"demos/node_modules/makerjs-logo/node_modules/makerjs/#output-formats","text":"2D: DXF , SVG 3D: OpenJsCad script , STL (Must include OpenJsCad or openjscad-csg )","title":"Output formats"},{"location":"demos/node_modules/makerjs-logo/node_modules/makerjs/#built-in-models","text":"Bolt Circle Bolt Rectangle Connect the dots Dome Oval OvalArc Polygon Rectangle Ring RoundRectangle S curve Slot Square Star","title":"Built-in models"},{"location":"demos/node_modules/makerjs-logo/node_modules/makerjs/#getting-started","text":"","title":"Getting Started"},{"location":"demos/node_modules/makerjs-logo/node_modules/makerjs/#try-it-now","text":"Visit the Maker.js Playground to edit and run JavaScript from your browser. Each of the demos will also open in the playground so that you can explore and modify their code.","title":"Try it now"},{"location":"demos/node_modules/makerjs-logo/node_modules/makerjs/#to-use-in-a-web-browser","text":"Download the browser-based version of Maker.js, then upload it to your website: http://microsoft.github.io/maker.js/target/js/browser.photon/core Add a script tag in your HTML: < script src = \"http://microsoft.github.io/maker.js/target/js/browser.maker.js\" type = \"text/javascript\" ></ script > In your JavaScript, use the require function to get a reference: import * as makerjs from 'photon/core' ;","title":"To use in a web browser"},{"location":"demos/node_modules/makerjs-logo/node_modules/makerjs/#to-use-in-nodejs","text":"To depend on Maker.js, run this from the command line: npm install makerjs --save In your JavaScript, use the require function to get a reference: import * as makerjs from 'photon/core' ;","title":"To use in Node.js"},{"location":"demos/node_modules/makerjs-logo/node_modules/makerjs/#draw","text":"Learn how to draw in Maker.js by folowing the tutorial","title":"Draw!"},{"location":"demos/node_modules/makerjs-logo/node_modules/makerjs/#api","text":"Browse all the library features in the API Documentation Contribute to this project! The Microsoft Garage turns fresh ideas into real projects. Learn more at http://microsoft.com/garage .","title":"API"},{"location":"demos/node_modules/makerjs-logo/node_modules/makerjs/CONTRIBUTING/","text":"Contributing We would love to accept your contributions to Maker.js. Before you consider making any changes, please review the legal policy of Microsoft below. How to contribute Submit a CLA (below) Fork the repo. Check the Wiki for how to build and how to debug Make sure you can build with no errors. WE NEED UNIT TESTS :-) Commit changes in your own repo. Make a pull request. Legal You will need to complete a Contributor License Agreement (CLA). Briefly, this agreement testifies that you are granting us permission to use the submitted change according to the terms of the project's license, and that the work being submitted is under appropriate copyright. Please submit a Contributor License Agreement (CLA) before submitting a pull request. You may visit https://cla.microsoft.com to sign digitally. Alternatively, download the agreement ( Microsoft Contribution License Agreement.docx or Microsoft Contribution License Agreement.pdf ), sign, scan, and email it back to cla@microsoft.com . Be sure to include your github user name along with the agreement. Once we have received the signed CLA, we'll review the request.","title":"CONTRIBUTING"},{"location":"demos/node_modules/makerjs-logo/node_modules/makerjs/CONTRIBUTING/#contributing","text":"We would love to accept your contributions to Maker.js. Before you consider making any changes, please review the legal policy of Microsoft below.","title":"Contributing"},{"location":"demos/node_modules/makerjs-logo/node_modules/makerjs/CONTRIBUTING/#how-to-contribute","text":"Submit a CLA (below) Fork the repo. Check the Wiki for how to build and how to debug Make sure you can build with no errors. WE NEED UNIT TESTS :-) Commit changes in your own repo. Make a pull request.","title":"How to contribute"},{"location":"demos/node_modules/makerjs-logo/node_modules/makerjs/CONTRIBUTING/#legal","text":"You will need to complete a Contributor License Agreement (CLA). Briefly, this agreement testifies that you are granting us permission to use the submitted change according to the terms of the project's license, and that the work being submitted is under appropriate copyright. Please submit a Contributor License Agreement (CLA) before submitting a pull request. You may visit https://cla.microsoft.com to sign digitally. Alternatively, download the agreement ( Microsoft Contribution License Agreement.docx or Microsoft Contribution License Agreement.pdf ), sign, scan, and email it back to cla@microsoft.com . Be sure to include your github user name along with the agreement. Once we have received the signed CLA, we'll review the request.","title":"Legal"},{"location":"demos/node_modules/makerjs-monotext/","text":"A stencil font for adding text to your Maker.js drawings.","title":"Index"},{"location":"demos/node_modules/makerjs-monotext/node_modules/makerjs/","text":"Maker.js, a Microsoft Garage project, is a JavaScript library for creating and sharing modular line drawings for CNC and laser cutters. Maker.js runs in both Node.js and web browsers. About - Blog - Demos - Documentation - Discussion Getting Started To use in a web browser Download the browser-based version of Maker.js, then upload it to your website: http://microsoft.github.io/maker.js/target/js/browser.photon/core Add a script tag in your HTML: < script src = \"http://microsoft.github.io/maker.js/target/js/browser.maker.js\" type = \"text/javascript\" ></ script > In your JavaScript, use the require function to get a reference: import * as makerjs from 'photon/core' ; To use in Node.js To depend on Maker.js, run this from the command line: npm install makerjs --save In your JavaScript, use the require function to get a reference: import * as makerjs from 'photon/core' ; Contribute to this project! The Microsoft Garage turns fresh ideas into real projects. Learn more at http://microsoft.com/garage .","title":"Index"},{"location":"demos/node_modules/makerjs-monotext/node_modules/makerjs/#getting-started","text":"","title":"Getting Started"},{"location":"demos/node_modules/makerjs-monotext/node_modules/makerjs/#to-use-in-a-web-browser","text":"Download the browser-based version of Maker.js, then upload it to your website: http://microsoft.github.io/maker.js/target/js/browser.photon/core Add a script tag in your HTML: < script src = \"http://microsoft.github.io/maker.js/target/js/browser.maker.js\" type = \"text/javascript\" ></ script > In your JavaScript, use the require function to get a reference: import * as makerjs from 'photon/core' ;","title":"To use in a web browser"},{"location":"demos/node_modules/makerjs-monotext/node_modules/makerjs/#to-use-in-nodejs","text":"To depend on Maker.js, run this from the command line: npm install makerjs --save In your JavaScript, use the require function to get a reference: import * as makerjs from 'photon/core' ; Contribute to this project! The Microsoft Garage turns fresh ideas into real projects. Learn more at http://microsoft.com/garage .","title":"To use in Node.js"},{"location":"demos/node_modules/makerjs-monotext/node_modules/makerjs/CONTRIBUTING/","text":"Contributing We would love to accept your contributions to Maker.js. Before you consider making any changes, please review the legal policy of Microsoft below. How to contribute Submit a CLA (below) Fork the repo. Check the Wiki for how to build and how to debug Make sure you can build with no errors. WE NEED UNIT TESTS :-) Commit changes in your own repo. Make a pull request. Legal You will need to complete a Contributor License Agreement (CLA). Briefly, this agreement testifies that you are granting us permission to use the submitted change according to the terms of the project's license, and that the work being submitted is under appropriate copyright. Please submit a Contributor License Agreement (CLA) before submitting a pull request. You may visit https://cla.microsoft.com to sign digitally. Alternatively, download the agreement ( Microsoft Contribution License Agreement.docx or Microsoft Contribution License Agreement.pdf ), sign, scan, and email it back to cla@microsoft.com . Be sure to include your github user name along with the agreement. Once we have received the signed CLA, we'll review the request.","title":"CONTRIBUTING"},{"location":"demos/node_modules/makerjs-monotext/node_modules/makerjs/CONTRIBUTING/#contributing","text":"We would love to accept your contributions to Maker.js. Before you consider making any changes, please review the legal policy of Microsoft below.","title":"Contributing"},{"location":"demos/node_modules/makerjs-monotext/node_modules/makerjs/CONTRIBUTING/#how-to-contribute","text":"Submit a CLA (below) Fork the repo. Check the Wiki for how to build and how to debug Make sure you can build with no errors. WE NEED UNIT TESTS :-) Commit changes in your own repo. Make a pull request.","title":"How to contribute"},{"location":"demos/node_modules/makerjs-monotext/node_modules/makerjs/CONTRIBUTING/#legal","text":"You will need to complete a Contributor License Agreement (CLA). Briefly, this agreement testifies that you are granting us permission to use the submitted change according to the terms of the project's license, and that the work being submitted is under appropriate copyright. Please submit a Contributor License Agreement (CLA) before submitting a pull request. You may visit https://cla.microsoft.com to sign digitally. Alternatively, download the agreement ( Microsoft Contribution License Agreement.docx or Microsoft Contribution License Agreement.pdf ), sign, scan, and email it back to cla@microsoft.com . Be sure to include your github user name along with the agreement. Once we have received the signed CLA, we'll review the request.","title":"Legal"},{"location":"demos/node_modules/makerjs-nameplate/","text":"A nameplate for Maker.js","title":"Index"},{"location":"demos/node_modules/makerjs-nameplate/node_modules/%40types/node/","text":"npm install --save @types/node Summary This package contains type definitions for Node.js (http://nodejs.org/). Details Files were exported from https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/node/v7 Additional Details * Last updated: Wed, 30 Oct 2019 15:44:46 GMT * Dependencies: none * Global values: Buffer, NodeJS, SlowBuffer, Symbol, __dirname, __filename, clearImmediate, clearInterval, clearTimeout, console, exports, global, module, process, require, setImmediate, setInterval, setTimeout Credits These definitions were written by Microsoft TypeScript https://github.com/Microsoft , DefinitelyTyped https://github.com/DefinitelyTyped , Parambir Singh https://github.com/parambirs , Christian Vaagland Tellnes https://github.com/tellnes , Wilco Bakker https://github.com/WilcoBakker , Sebastian Silbermann https://github.com/eps1lon , Ho\u00e0ng V\u0103n Kh\u1ea3i https://github.com/KSXGitHub , Sander Koenders https://github.com/Archcry , and Jordi Oliveras Rovira https://github.com/j-oliveras .","title":"Index"},{"location":"demos/node_modules/makerjs-nameplate/node_modules/%40types/node/#summary","text":"This package contains type definitions for Node.js (http://nodejs.org/).","title":"Summary"},{"location":"demos/node_modules/makerjs-nameplate/node_modules/%40types/node/#details","text":"Files were exported from https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/node/v7 Additional Details * Last updated: Wed, 30 Oct 2019 15:44:46 GMT * Dependencies: none * Global values: Buffer, NodeJS, SlowBuffer, Symbol, __dirname, __filename, clearImmediate, clearInterval, clearTimeout, console, exports, global, module, process, require, setImmediate, setInterval, setTimeout","title":"Details"},{"location":"demos/node_modules/makerjs-nameplate/node_modules/%40types/node/#credits","text":"These definitions were written by Microsoft TypeScript https://github.com/Microsoft , DefinitelyTyped https://github.com/DefinitelyTyped , Parambir Singh https://github.com/parambirs , Christian Vaagland Tellnes https://github.com/tellnes , Wilco Bakker https://github.com/WilcoBakker , Sebastian Silbermann https://github.com/eps1lon , Ho\u00e0ng V\u0103n Kh\u1ea3i https://github.com/KSXGitHub , Sander Koenders https://github.com/Archcry , and Jordi Oliveras Rovira https://github.com/j-oliveras .","title":"Credits"},{"location":"demos/node_modules/makerjs-nameplate/node_modules/%40types/opentype.js/","text":"npm install --save @types/opentype.js Summary This package contains type definitions for opentype.js (https://github.com/nodebox/opentype.js). Details Files were exported from https://www.github.com/DefinitelyTyped/DefinitelyTyped/tree/types-2.0/opentype.js Additional Details * Last updated: Thu, 17 Nov 2016 19:00:54 GMT * File structure: UMD * Library Dependencies: none * Module Dependencies: none * Global values: opentype Credits These definitions were written by Dan Marshall https://github.com/danmarshall .","title":"Index"},{"location":"demos/node_modules/makerjs-nameplate/node_modules/%40types/opentype.js/#summary","text":"This package contains type definitions for opentype.js (https://github.com/nodebox/opentype.js).","title":"Summary"},{"location":"demos/node_modules/makerjs-nameplate/node_modules/%40types/opentype.js/#details","text":"Files were exported from https://www.github.com/DefinitelyTyped/DefinitelyTyped/tree/types-2.0/opentype.js Additional Details * Last updated: Thu, 17 Nov 2016 19:00:54 GMT * File structure: UMD * Library Dependencies: none * Module Dependencies: none * Global values: opentype","title":"Details"},{"location":"demos/node_modules/makerjs-nameplate/node_modules/%40types/opentype.js/#credits","text":"These definitions were written by Dan Marshall https://github.com/danmarshall .","title":"Credits"},{"location":"demos/node_modules/makerjs-nameplate/node_modules/makerjs/","text":"Your compass and straightedge, in JavaScript. Create line drawings using familiar constructs from geometry and drafting. Initially designated for CNC and laser cutters, Maker.js can also help you programmatically draw shapes for any purpose. It runs in both Node.js and web browsers. 2D Export formats: DXF , SVG , PDF (Requires PDFKit ), Jscad CAG object (Requires @jscad/csg ) 3D Export formats: Jscad Script , Jscad CSG object (Requires @jscad/csg ), STL (Requires @jscad/csg & @jscad/stl-serializer ) Demos - Documentation Core concepts paths - The primitive elements of a drawing are lines, arcs, and circles. models - Groups of paths to compose a shape. layers - Organization of models, such as by color or tool type. chains - A series of lines and arcs that connect end-to-end continuously. Learn more in the tutorial or API documentation . Features Drawings are a simple JavaScript object which can be serialized / deserialized conventionally with JSON. This also makes a drawing easy to clone . Other people's Models can be required the Node.js way, modified , and re-exported. Models can be scaled , measured , and converted to different unit systems . Paths can be distorted . Models can be rotated or mirrored . Find intersection points or intersection angles of paths. Traverse a model tree to reason over its children. Detect chains formed by paths connecting end to end. Get the points along a path or along a chain of paths . Easily add a curvature at the joint between any 2 paths, using a traditional or a dogbone fillet . Combine models with boolean operations to get unions, intersections, or punches. Expand paths to simulate a stroke thickness, with the option to bevel joints. Outline model to create a surrounding outline, with the option to bevel joints. Layout clones into rows , columns , grids , bricks , or honeycombs Built-in models Belt Bezier Curve Bolt Circle Bolt Rectangle Connect the dots Dogbone Dome Ellipse Elliptic Arc Holes Oval OvalArc Polygon Rectangle Ring RoundRectangle S curve Slot Square Star Text Import formats Fonts (Requires opentype.js ) SVG Path Data SVG Points Getting Started Try it now Visit the Maker.js Playground a sample app to edit and run JavaScript from your browser. Each of the demos will also open in the playground so that you can explore and modify their code. To use in a web browser Download the browser-based version of Maker.js, then upload it to your website: https:// photon/core.org/target/js/browser.photon/core Add a script tag in your HTML: < script src = \"https:// photon/core.org/target/js/browser.maker.js\" type = \"text/javascript\" ></ script > Note: You may also need additional libraries In your JavaScript, use the require function to get a reference: import * as makerjs from 'photon/core' ; To use via CDN Add a script tag to your HTML: <script src=\"https://cdn.jsdelivr.net/npm/makerjs@0/target/js/browser.maker.js\"></script> To work with Bezier Curves, you will also need a copy of Bezier.js by Pomax <script src=\"https://cdn.jsdelivr.net/npm/bezier-js@2/bezier.js\"></script> To work with fonts, you will need both Bezier.js(above) and a copy of Opentype.js by Frederik De Bleser <script src=\"https://cdn.jsdelivr.net/npm/opentype.js@0/dist/opentype.js\"></script> In your JavaScript, use the require function to get a reference: import * as makerjs from 'photon/core'; To use in Node.js To depend on Maker.js, run this from the command line: npm install makerjs --save In your JavaScript, use the require function to get a reference: import * as makerjs from 'photon/core' ; Contributing There are many ways to contribute to Maker.js: * \u2605 Star Maker.js on GitHub * Submit bugs and feature requests on GitHub . * Create a demo for the gallery . * Create lessons or videos for the documentation . * Enhance the website . * Add features to the Playground app . * Create a new Maker.js app, and we will link to it here. * Find some TODO's in the core source code . * Create unit tests for the core. Some of these may require a contributor agreement . Credits Maker.js depends on: * Clone by Paul Vorbach * Bezier-js by Pomax * Graham_scan by Brian Barnett Maker.js is a Microsoft Garage project. The Microsoft Garage turns fresh ideas into real projects. Learn more at http://microsoft.com/garage .","title":"Index"},{"location":"demos/node_modules/makerjs-nameplate/node_modules/makerjs/#core-concepts","text":"paths - The primitive elements of a drawing are lines, arcs, and circles. models - Groups of paths to compose a shape. layers - Organization of models, such as by color or tool type. chains - A series of lines and arcs that connect end-to-end continuously. Learn more in the tutorial or API documentation .","title":"Core concepts"},{"location":"demos/node_modules/makerjs-nameplate/node_modules/makerjs/#features","text":"Drawings are a simple JavaScript object which can be serialized / deserialized conventionally with JSON. This also makes a drawing easy to clone . Other people's Models can be required the Node.js way, modified , and re-exported. Models can be scaled , measured , and converted to different unit systems . Paths can be distorted . Models can be rotated or mirrored . Find intersection points or intersection angles of paths. Traverse a model tree to reason over its children. Detect chains formed by paths connecting end to end. Get the points along a path or along a chain of paths . Easily add a curvature at the joint between any 2 paths, using a traditional or a dogbone fillet . Combine models with boolean operations to get unions, intersections, or punches. Expand paths to simulate a stroke thickness, with the option to bevel joints. Outline model to create a surrounding outline, with the option to bevel joints. Layout clones into rows , columns , grids , bricks , or honeycombs","title":"Features"},{"location":"demos/node_modules/makerjs-nameplate/node_modules/makerjs/#built-in-models","text":"Belt Bezier Curve Bolt Circle Bolt Rectangle Connect the dots Dogbone Dome Ellipse Elliptic Arc Holes Oval OvalArc Polygon Rectangle Ring RoundRectangle S curve Slot Square Star Text","title":"Built-in models"},{"location":"demos/node_modules/makerjs-nameplate/node_modules/makerjs/#import-formats","text":"Fonts (Requires opentype.js ) SVG Path Data SVG Points","title":"Import formats"},{"location":"demos/node_modules/makerjs-nameplate/node_modules/makerjs/#getting-started","text":"","title":"Getting Started"},{"location":"demos/node_modules/makerjs-nameplate/node_modules/makerjs/#try-it-now","text":"Visit the Maker.js Playground a sample app to edit and run JavaScript from your browser. Each of the demos will also open in the playground so that you can explore and modify their code.","title":"Try it now"},{"location":"demos/node_modules/makerjs-nameplate/node_modules/makerjs/#to-use-in-a-web-browser","text":"Download the browser-based version of Maker.js, then upload it to your website: https:// photon/core.org/target/js/browser.photon/core Add a script tag in your HTML: < script src = \"https:// photon/core.org/target/js/browser.maker.js\" type = \"text/javascript\" ></ script > Note: You may also need additional libraries In your JavaScript, use the require function to get a reference: import * as makerjs from 'photon/core' ;","title":"To use in a web browser"},{"location":"demos/node_modules/makerjs-nameplate/node_modules/makerjs/#to-use-via-cdn","text":"Add a script tag to your HTML: <script src=\"https://cdn.jsdelivr.net/npm/makerjs@0/target/js/browser.maker.js\"></script> To work with Bezier Curves, you will also need a copy of Bezier.js by Pomax <script src=\"https://cdn.jsdelivr.net/npm/bezier-js@2/bezier.js\"></script> To work with fonts, you will need both Bezier.js(above) and a copy of Opentype.js by Frederik De Bleser <script src=\"https://cdn.jsdelivr.net/npm/opentype.js@0/dist/opentype.js\"></script> In your JavaScript, use the require function to get a reference: import * as makerjs from 'photon/core';","title":"To use via CDN"},{"location":"demos/node_modules/makerjs-nameplate/node_modules/makerjs/#to-use-in-nodejs","text":"To depend on Maker.js, run this from the command line: npm install makerjs --save In your JavaScript, use the require function to get a reference: import * as makerjs from 'photon/core' ;","title":"To use in Node.js"},{"location":"demos/node_modules/makerjs-nameplate/node_modules/makerjs/#contributing","text":"There are many ways to contribute to Maker.js: * \u2605 Star Maker.js on GitHub * Submit bugs and feature requests on GitHub . * Create a demo for the gallery . * Create lessons or videos for the documentation . * Enhance the website . * Add features to the Playground app . * Create a new Maker.js app, and we will link to it here. * Find some TODO's in the core source code . * Create unit tests for the core. Some of these may require a contributor agreement .","title":"Contributing"},{"location":"demos/node_modules/makerjs-nameplate/node_modules/makerjs/#credits","text":"Maker.js depends on: * Clone by Paul Vorbach * Bezier-js by Pomax * Graham_scan by Brian Barnett Maker.js is a Microsoft Garage project. The Microsoft Garage turns fresh ideas into real projects. Learn more at http://microsoft.com/garage .","title":"Credits"},{"location":"demos/node_modules/makerjs-nameplate/node_modules/opentype.js/","text":"opentype.js opentype.js is a JavaScript parser and writer for TrueType and OpenType fonts. It gives you access to the letterforms of text from the browser or node.js. Here's an example. We load a font, then display it on a canvas with id \"canvas\": opentype.load('fonts/Roboto-Black.ttf', function(err, font) { if (err) { alert('Font could not be loaded: ' + err); } else { var ctx = document.getElementById('canvas').getContext('2d'); // Construct a Path object containing the letter shapes of the given text. // The other parameters are x, y and fontSize. // Note that y is the position of the baseline. var path = font.getPath('Hello, World!', 0, 150, 72); // If you just want to draw the text you can also use font.draw(ctx, text, x, y, fontSize). path.draw(ctx); } }); See the project website for a live demo. Features Create a b\u00e9zier path out of a piece of text. Support for composite glyphs (accented letters). Support for WOFF, OTF, TTF (both with TrueType glyf and PostScript cff outlines) Support for kerning (Using GPOS or the kern table). Support for ligatures. Very efficient. Runs in the browser and node.js. Installation Directly Download the latest ZIP and grab the files in the dist folder. These are compiled. Using Bower To install using Bower , enter the following command in your project directory: bower install opentype.js You can then include them in your scripts using: <script src=\"/bower_components/opentype.js/dist/opentype.js\"></script> Using Browserify To install using Browserify , enter the following command in your project directory: npm install --save opentype.js API Loading a font Use opentype.load(url, callback) to load a font from a URL. Since this method goes out the network, it is asynchronous. The callback gets (err, font) where font is a Font object. Check if the err is null before using the font. opentype.load('fonts/Roboto-Black.ttf', function(err, font) { if (err) { alert('Could not load font: ' + err); } else { // Use your font here. } }); If you already have an ArrayBuffer , you can use opentype.parse(buffer) to parse the buffer. This method always returns a Font, but check font.supported to see if the font is in a supported format. (Fonts can be marked unsupported if they have encoding tables we can't read). var font = opentype.parse(myBuffer); Loading a font synchronously (Node.js) Use opentype.loadSync(url) to load a font from a file and return a Font object. Throws an error if the font could not be parsed. This only works in Node.js. var font = opentype.loadSync('fonts/Roboto-Black.ttf'); Writing a font Once you have a Font object (either by using opentype.load or by creating a new one from scratch) you can write it back out as a binary file. In the browser, you can use Font.download() to instruct the browser to download a binary .OTF file. The name is based on the font name. // Create the b\u00e9zier paths for each of the glyphs. // Note that the .notdef glyph is required. var notdefGlyph = new opentype.Glyph({ name: '.notdef', unicode: 0, advanceWidth: 650, path: new opentype.Path() }); var aPath = new opentype.Path(); aPath.moveTo(100, 0); aPath.lineTo(100, 700); // more drawing instructions... var aGlyph = new opentype.Glyph({ name: 'A', unicode: 65, advanceWidth: 650, path: aPath }); var glyphs = [notdefGlyph, aGlyph]; var font = new opentype.Font({ familyName: 'OpenTypeSans', styleName: 'Medium', unitsPerEm: 1000, ascender: 800, descender: -200, glyphs: glyphs}); font.download(); If you want to inspect the font, use font.toTables() to generate an object showing the data structures that map directly to binary values. If you want to get an ArrayBuffer , use font.toArrayBuffer() . The Font object A Font represents a loaded OpenType font file. It contains a set of glyphs and methods to draw text on a drawing context, or to get a path representing the text. glyphs : an indexed list of Glyph objects. unitsPerEm : X/Y coordinates in fonts are stored as integers. This value determines the size of the grid. Common values are 2048 and 4096. ascender : Distance from baseline of highest ascender. In font units, not pixels. descender : Distance from baseline of lowest descender. In font units, not pixels. Font.getPath(text, x, y, fontSize, options) Create a Path that represents the given text. * x : Horizontal position of the beginning of the text. (default: 0) * y : Vertical position of the baseline of the text. (default: 0) * fontSize : Size of the text in pixels (default: 72). Options is an optional object containing: * kerning : if true takes kerning information into account (default: true) * features : an object with OpenType feature tags as keys, and a boolean value to enable each feature. Currently only ligature features \"liga\" and \"rlig\" are supported (default: true). Note: there is also Font.getPaths with the same arguments which returns a list of Paths. Font.draw(ctx, text, x, y, fontSize, options) Create a Path that represents the given text. * ctx : A 2D drawing context, like Canvas. * x : Horizontal position of the beginning of the text. (default: 0) * y : Vertical position of the baseline of the text. (default: 0) * fontSize : Size of the text in pixels (default: 72). Options is an optional object containing: * kerning : if true takes kerning information into account (default: true) Font.drawPoints(ctx, text, x, y, fontSize, options) Draw the points of all glyphs in the text. On-curve points will be drawn in blue, off-curve points will be drawn in red. The arguments are the same as Font.draw . Font.drawMetrics(ctx, text, x, y, fontSize, options) Draw lines indicating important font measurements for all glyphs in the text. Black lines indicate the origin of the coordinate system (point 0,0). Blue lines indicate the glyph bounding box. Green line indicates the advance width of the glyph. Font.stringToGlyphs(string) Convert the string to a list of glyph objects. Note that there is no strict 1-to-1 correspondence between the string and glyph list due to possible substitutions such as ligatures. The list of returned glyphs can be larger or smaller than the length of the given string. Font.charToGlyph(char) Convert the character to a Glyph object. Returns null if the glyph could not be found. Note that this function assumes that there is a one-to-one mapping between the given character and a glyph; for complex scripts this might not be the case. Font.getKerningValue(leftGlyph, rightGlyph) Retrieve the value of the kerning pair between the left glyph (or its index) and the right glyph (or its index). If no kerning pair is found, return 0. The kerning value gets added to the advance width when calculating the spacing between glyphs. The Glyph object A Glyph is an individual mark that often corresponds to a character. Some glyphs, such as ligatures, are a combination of many characters. Glyphs are the basic building blocks of a font. font : A reference to the Font object. name : The glyph name (e.g. \"Aring\", \"five\") unicode : The primary unicode value of this glyph (can be undefined ). unicodes : The list of unicode values for this glyph (most of the time this will be 1, can also be empty). index : The index number of the glyph. advanceWidth : The width to advance the pen when drawing this glyph. xMin , yMin , xMax , yMax : The bounding box of the glyph. path : The raw, unscaled path of the glyph. Glyph.getPath(x, y, fontSize) Get a scaled glyph Path object we can draw on a drawing context. * x : Horizontal position of the glyph. (default: 0) * y : Vertical position of the baseline of the glyph. (default: 0) * fontSize : Font size in pixels (default: 72). Glyph.getBoundingBox() Calculate the minimum bounding box for the unscaled path of the given glyph. Returns an opentype.BoundingBox object that contains x1/y1/x2/y2. If the glyph has no points (e.g. a space character), all coordinates will be zero. Glyph.draw(ctx, x, y, fontSize) Draw the glyph on the given context. * ctx : The drawing context. * x : Horizontal position of the glyph. (default: 0) * y : Vertical position of the baseline of the glyph. (default: 0) * fontSize : Font size, in pixels (default: 72). Glyph.drawPoints(ctx, x, y, fontSize) Draw the points of the glyph on the given context. On-curve points will be drawn in blue, off-curve points will be drawn in red. The arguments are the same as Glyph.draw . Glyph.drawMetrics(ctx, x, y, fontSize) Draw lines indicating important font measurements for all glyphs in the text. Black lines indicate the origin of the coordinate system (point 0,0). Blue lines indicate the glyph bounding box. Green line indicates the advance width of the glyph. The arguments are the same as Glyph.draw . The Path object Once you have a path through Font.getPath or Glyph.getPath , you can use it. commands : The path commands. Each command is a dictionary containing a type and coordinates. See below for examples. fill : The fill color of the Path . Color is a string representing a CSS color . (default: 'black') stroke : The stroke color of the Path . Color is a string representing a CSS color . (default: null : the path will not be stroked) strokeWidth : The line thickness of the Path . (default: 1, but since the stroke is null no stroke will be drawn) Path.draw(ctx) Draw the path on the given 2D context. This uses the fill , stroke and strokeWidth properties of the Path object. * ctx : The drawing context. Path.getBoundingBox() Calculate the minimum bounding box for the given path. Returns an opentype.BoundingBox object that contains x1/y1/x2/y2. If the path is empty (e.g. a space character), all coordinates will be zero. Path.toPathData(decimalPlaces) Convert the Path to a string of path data instructions. See http://www.w3.org/TR/SVG/paths.html#PathData * decimalPlaces : The amount of decimal places for floating-point values. (default: 2) Path.toSVG(decimalPlaces) Convert the path to a SVG <path> element, as a string. * decimalPlaces : The amount of decimal places for floating-point values. (default: 2) Path commands Move To : Move to a new position. This creates a new contour. Example: {type: 'M', x: 100, y: 200} Line To : Draw a line from the previous position to the given coordinate. Example: {type: 'L', x: 100, y: 200} Curve To : Draw a b\u00e9zier curve from the current position to the given coordinate. Example: {type: 'C', x1: 0, y1: 50, x2: 100, y2: 200, x: 100, y: 200} Quad To : Draw a quadratic b\u00e9zier curve from the current position to the given coordinate. Example: {type: 'Q', x1: 0, y1: 50, x: 100, y: 200} Close : Close the path. If stroked, this will draw a line from the first to the last point of the contour. Example: {type: 'Z'} Planned Support for contextual alternates. Thanks I would like to acknowledge the work of others without which opentype.js wouldn't be possible: pdf.js : for an awesome implementation of font parsing in the browser. FreeType : for the nitty-gritty details and filling in the gaps when the spec was incomplete. ttf.js : for hints about the TrueType parsing code. CFF-glyphlet-fonts : for a great explanation/implementation of CFF font writing. tiny-inflate : for WOFF decompression. Microsoft Typography : the go-to reference for all things OpenType. Adobe Compact Font Format spec and the Adobe Type 2 Charstring spec : explains the data structures and commands for the CFF glyph format. All contributing authors mentioned in the AUTHORS file.","title":"opentype.js"},{"location":"demos/node_modules/makerjs-nameplate/node_modules/opentype.js/#opentypejs","text":"opentype.js is a JavaScript parser and writer for TrueType and OpenType fonts. It gives you access to the letterforms of text from the browser or node.js. Here's an example. We load a font, then display it on a canvas with id \"canvas\": opentype.load('fonts/Roboto-Black.ttf', function(err, font) { if (err) { alert('Font could not be loaded: ' + err); } else { var ctx = document.getElementById('canvas').getContext('2d'); // Construct a Path object containing the letter shapes of the given text. // The other parameters are x, y and fontSize. // Note that y is the position of the baseline. var path = font.getPath('Hello, World!', 0, 150, 72); // If you just want to draw the text you can also use font.draw(ctx, text, x, y, fontSize). path.draw(ctx); } }); See the project website for a live demo.","title":"opentype.js"},{"location":"demos/node_modules/makerjs-nameplate/node_modules/opentype.js/#features","text":"Create a b\u00e9zier path out of a piece of text. Support for composite glyphs (accented letters). Support for WOFF, OTF, TTF (both with TrueType glyf and PostScript cff outlines) Support for kerning (Using GPOS or the kern table). Support for ligatures. Very efficient. Runs in the browser and node.js.","title":"Features"},{"location":"demos/node_modules/makerjs-nameplate/node_modules/opentype.js/#installation","text":"","title":"Installation"},{"location":"demos/node_modules/makerjs-nameplate/node_modules/opentype.js/#directly","text":"Download the latest ZIP and grab the files in the dist folder. These are compiled.","title":"Directly"},{"location":"demos/node_modules/makerjs-nameplate/node_modules/opentype.js/#using-bower","text":"To install using Bower , enter the following command in your project directory: bower install opentype.js You can then include them in your scripts using: <script src=\"/bower_components/opentype.js/dist/opentype.js\"></script>","title":"Using Bower"},{"location":"demos/node_modules/makerjs-nameplate/node_modules/opentype.js/#using-browserify","text":"To install using Browserify , enter the following command in your project directory: npm install --save opentype.js","title":"Using Browserify"},{"location":"demos/node_modules/makerjs-nameplate/node_modules/opentype.js/#api","text":"","title":"API"},{"location":"demos/node_modules/makerjs-nameplate/node_modules/opentype.js/#loading-a-font","text":"Use opentype.load(url, callback) to load a font from a URL. Since this method goes out the network, it is asynchronous. The callback gets (err, font) where font is a Font object. Check if the err is null before using the font. opentype.load('fonts/Roboto-Black.ttf', function(err, font) { if (err) { alert('Could not load font: ' + err); } else { // Use your font here. } }); If you already have an ArrayBuffer , you can use opentype.parse(buffer) to parse the buffer. This method always returns a Font, but check font.supported to see if the font is in a supported format. (Fonts can be marked unsupported if they have encoding tables we can't read). var font = opentype.parse(myBuffer);","title":"Loading a font"},{"location":"demos/node_modules/makerjs-nameplate/node_modules/opentype.js/#loading-a-font-synchronously-nodejs","text":"Use opentype.loadSync(url) to load a font from a file and return a Font object. Throws an error if the font could not be parsed. This only works in Node.js. var font = opentype.loadSync('fonts/Roboto-Black.ttf');","title":"Loading a font synchronously (Node.js)"},{"location":"demos/node_modules/makerjs-nameplate/node_modules/opentype.js/#writing-a-font","text":"Once you have a Font object (either by using opentype.load or by creating a new one from scratch) you can write it back out as a binary file. In the browser, you can use Font.download() to instruct the browser to download a binary .OTF file. The name is based on the font name. // Create the b\u00e9zier paths for each of the glyphs. // Note that the .notdef glyph is required. var notdefGlyph = new opentype.Glyph({ name: '.notdef', unicode: 0, advanceWidth: 650, path: new opentype.Path() }); var aPath = new opentype.Path(); aPath.moveTo(100, 0); aPath.lineTo(100, 700); // more drawing instructions... var aGlyph = new opentype.Glyph({ name: 'A', unicode: 65, advanceWidth: 650, path: aPath }); var glyphs = [notdefGlyph, aGlyph]; var font = new opentype.Font({ familyName: 'OpenTypeSans', styleName: 'Medium', unitsPerEm: 1000, ascender: 800, descender: -200, glyphs: glyphs}); font.download(); If you want to inspect the font, use font.toTables() to generate an object showing the data structures that map directly to binary values. If you want to get an ArrayBuffer , use font.toArrayBuffer() .","title":"Writing a font"},{"location":"demos/node_modules/makerjs-nameplate/node_modules/opentype.js/#the-font-object","text":"A Font represents a loaded OpenType font file. It contains a set of glyphs and methods to draw text on a drawing context, or to get a path representing the text. glyphs : an indexed list of Glyph objects. unitsPerEm : X/Y coordinates in fonts are stored as integers. This value determines the size of the grid. Common values are 2048 and 4096. ascender : Distance from baseline of highest ascender. In font units, not pixels. descender : Distance from baseline of lowest descender. In font units, not pixels.","title":"The Font object"},{"location":"demos/node_modules/makerjs-nameplate/node_modules/opentype.js/#fontgetpathtext-x-y-fontsize-options","text":"Create a Path that represents the given text. * x : Horizontal position of the beginning of the text. (default: 0) * y : Vertical position of the baseline of the text. (default: 0) * fontSize : Size of the text in pixels (default: 72). Options is an optional object containing: * kerning : if true takes kerning information into account (default: true) * features : an object with OpenType feature tags as keys, and a boolean value to enable each feature. Currently only ligature features \"liga\" and \"rlig\" are supported (default: true). Note: there is also Font.getPaths with the same arguments which returns a list of Paths.","title":"Font.getPath(text, x, y, fontSize, options)"},{"location":"demos/node_modules/makerjs-nameplate/node_modules/opentype.js/#fontdrawctx-text-x-y-fontsize-options","text":"Create a Path that represents the given text. * ctx : A 2D drawing context, like Canvas. * x : Horizontal position of the beginning of the text. (default: 0) * y : Vertical position of the baseline of the text. (default: 0) * fontSize : Size of the text in pixels (default: 72). Options is an optional object containing: * kerning : if true takes kerning information into account (default: true)","title":"Font.draw(ctx, text, x, y, fontSize, options)"},{"location":"demos/node_modules/makerjs-nameplate/node_modules/opentype.js/#fontdrawpointsctx-text-x-y-fontsize-options","text":"Draw the points of all glyphs in the text. On-curve points will be drawn in blue, off-curve points will be drawn in red. The arguments are the same as Font.draw .","title":"Font.drawPoints(ctx, text, x, y, fontSize, options)"},{"location":"demos/node_modules/makerjs-nameplate/node_modules/opentype.js/#fontdrawmetricsctx-text-x-y-fontsize-options","text":"Draw lines indicating important font measurements for all glyphs in the text. Black lines indicate the origin of the coordinate system (point 0,0). Blue lines indicate the glyph bounding box. Green line indicates the advance width of the glyph.","title":"Font.drawMetrics(ctx, text, x, y, fontSize, options)"},{"location":"demos/node_modules/makerjs-nameplate/node_modules/opentype.js/#fontstringtoglyphsstring","text":"Convert the string to a list of glyph objects. Note that there is no strict 1-to-1 correspondence between the string and glyph list due to possible substitutions such as ligatures. The list of returned glyphs can be larger or smaller than the length of the given string.","title":"Font.stringToGlyphs(string)"},{"location":"demos/node_modules/makerjs-nameplate/node_modules/opentype.js/#fontchartoglyphchar","text":"Convert the character to a Glyph object. Returns null if the glyph could not be found. Note that this function assumes that there is a one-to-one mapping between the given character and a glyph; for complex scripts this might not be the case.","title":"Font.charToGlyph(char)"},{"location":"demos/node_modules/makerjs-nameplate/node_modules/opentype.js/#fontgetkerningvalueleftglyph-rightglyph","text":"Retrieve the value of the kerning pair between the left glyph (or its index) and the right glyph (or its index). If no kerning pair is found, return 0. The kerning value gets added to the advance width when calculating the spacing between glyphs.","title":"Font.getKerningValue(leftGlyph, rightGlyph)"},{"location":"demos/node_modules/makerjs-nameplate/node_modules/opentype.js/#the-glyph-object","text":"A Glyph is an individual mark that often corresponds to a character. Some glyphs, such as ligatures, are a combination of many characters. Glyphs are the basic building blocks of a font. font : A reference to the Font object. name : The glyph name (e.g. \"Aring\", \"five\") unicode : The primary unicode value of this glyph (can be undefined ). unicodes : The list of unicode values for this glyph (most of the time this will be 1, can also be empty). index : The index number of the glyph. advanceWidth : The width to advance the pen when drawing this glyph. xMin , yMin , xMax , yMax : The bounding box of the glyph. path : The raw, unscaled path of the glyph.","title":"The Glyph object"},{"location":"demos/node_modules/makerjs-nameplate/node_modules/opentype.js/#glyphgetpathx-y-fontsize","text":"Get a scaled glyph Path object we can draw on a drawing context. * x : Horizontal position of the glyph. (default: 0) * y : Vertical position of the baseline of the glyph. (default: 0) * fontSize : Font size in pixels (default: 72).","title":"Glyph.getPath(x, y, fontSize)"},{"location":"demos/node_modules/makerjs-nameplate/node_modules/opentype.js/#glyphgetboundingbox","text":"Calculate the minimum bounding box for the unscaled path of the given glyph. Returns an opentype.BoundingBox object that contains x1/y1/x2/y2. If the glyph has no points (e.g. a space character), all coordinates will be zero.","title":"Glyph.getBoundingBox()"},{"location":"demos/node_modules/makerjs-nameplate/node_modules/opentype.js/#glyphdrawctx-x-y-fontsize","text":"Draw the glyph on the given context. * ctx : The drawing context. * x : Horizontal position of the glyph. (default: 0) * y : Vertical position of the baseline of the glyph. (default: 0) * fontSize : Font size, in pixels (default: 72).","title":"Glyph.draw(ctx, x, y, fontSize)"},{"location":"demos/node_modules/makerjs-nameplate/node_modules/opentype.js/#glyphdrawpointsctx-x-y-fontsize","text":"Draw the points of the glyph on the given context. On-curve points will be drawn in blue, off-curve points will be drawn in red. The arguments are the same as Glyph.draw .","title":"Glyph.drawPoints(ctx, x, y, fontSize)"},{"location":"demos/node_modules/makerjs-nameplate/node_modules/opentype.js/#glyphdrawmetricsctx-x-y-fontsize","text":"Draw lines indicating important font measurements for all glyphs in the text. Black lines indicate the origin of the coordinate system (point 0,0). Blue lines indicate the glyph bounding box. Green line indicates the advance width of the glyph. The arguments are the same as Glyph.draw .","title":"Glyph.drawMetrics(ctx, x, y, fontSize)"},{"location":"demos/node_modules/makerjs-nameplate/node_modules/opentype.js/#the-path-object","text":"Once you have a path through Font.getPath or Glyph.getPath , you can use it. commands : The path commands. Each command is a dictionary containing a type and coordinates. See below for examples. fill : The fill color of the Path . Color is a string representing a CSS color . (default: 'black') stroke : The stroke color of the Path . Color is a string representing a CSS color . (default: null : the path will not be stroked) strokeWidth : The line thickness of the Path . (default: 1, but since the stroke is null no stroke will be drawn)","title":"The Path object"},{"location":"demos/node_modules/makerjs-nameplate/node_modules/opentype.js/#pathdrawctx","text":"Draw the path on the given 2D context. This uses the fill , stroke and strokeWidth properties of the Path object. * ctx : The drawing context.","title":"Path.draw(ctx)"},{"location":"demos/node_modules/makerjs-nameplate/node_modules/opentype.js/#pathgetboundingbox","text":"Calculate the minimum bounding box for the given path. Returns an opentype.BoundingBox object that contains x1/y1/x2/y2. If the path is empty (e.g. a space character), all coordinates will be zero.","title":"Path.getBoundingBox()"},{"location":"demos/node_modules/makerjs-nameplate/node_modules/opentype.js/#pathtopathdatadecimalplaces","text":"Convert the Path to a string of path data instructions. See http://www.w3.org/TR/SVG/paths.html#PathData * decimalPlaces : The amount of decimal places for floating-point values. (default: 2)","title":"Path.toPathData(decimalPlaces)"},{"location":"demos/node_modules/makerjs-nameplate/node_modules/opentype.js/#pathtosvgdecimalplaces","text":"Convert the path to a SVG <path> element, as a string. * decimalPlaces : The amount of decimal places for floating-point values. (default: 2)","title":"Path.toSVG(decimalPlaces)"},{"location":"demos/node_modules/makerjs-nameplate/node_modules/opentype.js/#path-commands","text":"Move To : Move to a new position. This creates a new contour. Example: {type: 'M', x: 100, y: 200} Line To : Draw a line from the previous position to the given coordinate. Example: {type: 'L', x: 100, y: 200} Curve To : Draw a b\u00e9zier curve from the current position to the given coordinate. Example: {type: 'C', x1: 0, y1: 50, x2: 100, y2: 200, x: 100, y: 200} Quad To : Draw a quadratic b\u00e9zier curve from the current position to the given coordinate. Example: {type: 'Q', x1: 0, y1: 50, x: 100, y: 200} Close : Close the path. If stroked, this will draw a line from the first to the last point of the contour. Example: {type: 'Z'}","title":"Path commands"},{"location":"demos/node_modules/makerjs-nameplate/node_modules/opentype.js/#planned","text":"Support for contextual alternates.","title":"Planned"},{"location":"demos/node_modules/makerjs-nameplate/node_modules/opentype.js/#thanks","text":"I would like to acknowledge the work of others without which opentype.js wouldn't be possible: pdf.js : for an awesome implementation of font parsing in the browser. FreeType : for the nitty-gritty details and filling in the gaps when the spec was incomplete. ttf.js : for hints about the TrueType parsing code. CFF-glyphlet-fonts : for a great explanation/implementation of CFF font writing. tiny-inflate : for WOFF decompression. Microsoft Typography : the go-to reference for all things OpenType. Adobe Compact Font Format spec and the Adobe Type 2 Charstring spec : explains the data structures and commands for the CFF glyph format. All contributing authors mentioned in the AUTHORS file.","title":"Thanks"},{"location":"demos/node_modules/makerjs-nameplate/node_modules/opentype.js/CONTRIBUTING/","text":"Organization of the source code The source of opentype.js is divided into modules, located in the src directory. We use browserify to combine this into a single package with every release. When creating a pull request, you don't need to run npm run dist -- we'll do that when creating a release. How to hack on the source On our GitHub page , click the \"Fork\" button to create your personal fork of the opentype.js repository. Clone your repository: git clone git://github.com/nodebox/opentype.js.git Create a new branch for your feature. For example: git checkout -b my-awesome-feature . A dedicated branch for your pull request means you can develop multiple features at the same time, and ensures that your pull request is stable even if you later decide to develop an unrelated feature. Install the development dependencies (browserify, watchify, jshint, ...): cd opentype.js npm install Start the development server. This watches file changes and compiles and serves the page at http://localhost:8080/ npm start Note that the compiled file ends up in the build folder, not the dist folder! The development server rewrites the JavaScript URL from dist/opentype.min.js to build/opentype.js . Make some changes Check if tests pass npm test Commit your changes git add --all && git commit Submit your pull request -- and thanks in advance! Making a distributable for yourself If you want to create your own self-contained version of opentype.js, run npm run dist This compiles the source and places opentype.js and opentype.min.js in the dist folder. How we publish a release We use a set of npm scripts to build releases: Update the version number in package.json and bower.json . Add information about the new release in RELEASES.md . Run npm run dist to update the files in the dist folder. Commit ( git commit -a ) and create a tag (e.g. git tag 1.2.1 ). Push and push tags ( git push && git push --tags ). Once published, Travis will push the new tagged release to npm. Bower updates automatically.","title":"CONTRIBUTING"},{"location":"demos/node_modules/makerjs-nameplate/node_modules/opentype.js/CONTRIBUTING/#organization-of-the-source-code","text":"The source of opentype.js is divided into modules, located in the src directory. We use browserify to combine this into a single package with every release. When creating a pull request, you don't need to run npm run dist -- we'll do that when creating a release.","title":"Organization of the source code"},{"location":"demos/node_modules/makerjs-nameplate/node_modules/opentype.js/CONTRIBUTING/#how-to-hack-on-the-source","text":"On our GitHub page , click the \"Fork\" button to create your personal fork of the opentype.js repository. Clone your repository: git clone git://github.com/nodebox/opentype.js.git Create a new branch for your feature. For example: git checkout -b my-awesome-feature . A dedicated branch for your pull request means you can develop multiple features at the same time, and ensures that your pull request is stable even if you later decide to develop an unrelated feature. Install the development dependencies (browserify, watchify, jshint, ...): cd opentype.js npm install Start the development server. This watches file changes and compiles and serves the page at http://localhost:8080/ npm start Note that the compiled file ends up in the build folder, not the dist folder! The development server rewrites the JavaScript URL from dist/opentype.min.js to build/opentype.js . Make some changes Check if tests pass npm test Commit your changes git add --all && git commit Submit your pull request -- and thanks in advance!","title":"How to hack on the source"},{"location":"demos/node_modules/makerjs-nameplate/node_modules/opentype.js/CONTRIBUTING/#making-a-distributable-for-yourself","text":"If you want to create your own self-contained version of opentype.js, run npm run dist This compiles the source and places opentype.js and opentype.min.js in the dist folder.","title":"Making a distributable for yourself"},{"location":"demos/node_modules/makerjs-nameplate/node_modules/opentype.js/CONTRIBUTING/#how-we-publish-a-release","text":"We use a set of npm scripts to build releases: Update the version number in package.json and bower.json . Add information about the new release in RELEASES.md . Run npm run dist to update the files in the dist folder. Commit ( git commit -a ) and create a tag (e.g. git tag 1.2.1 ). Push and push tags ( git push && git push --tags ). Once published, Travis will push the new tagged release to npm. Bower updates automatically.","title":"How we publish a release"},{"location":"demos/node_modules/makerjs-nameplate/node_modules/opentype.js/RELEASES/","text":"0.6.9 (Jan 17, 2017) Add ligature rendering (thanks @fpirsch!) 0.6.8 (Jan 9, 2017) Add a getBoundingBox method to the Path and Glyph objects. 0.6.7 (Jan 5, 2017) Add basic support for Mac OS X format kern tables. 0.6.6 (October 25, 2016) Add support for letter-spacing and tracking (thanks @lachmanski!). Fixed a bug in the nameToGlyph function. 0.6.5 (September 9, 2016) GSUB reading and writing by @fpirsch. This is still missing a user-friendly API. Add support for cmap table format 12, which enables support for Unicode characters outside of the 0x0 - 0xFFFF range. Better API documentation using JSDoc . Accessing xMin/... metrics works before path load.\u2029 0.6.4 (June 30, 2016) Add X/Y scale options to compute a streched path of a glyph. Correct reading/writing of font timestamps. examples/generate-font-node.js now generates \"full\" Latin font. Add OS/2 value options for weight, width and fsSelection. 0.6.3 (May 10, 2016) Wrapped parseBuffer in a try/catch so it doesn't throw exceptions. Thanks @rBurgett! Fix a leaking global variable. Thanks @cuixiping! 0.6.2 (March 11, 2016) Improve table writing to support nested subtables. Thanks @fpirsch! 0.6.1 (February 20, 2016) Left side bearing is now correctly reported. Simplified code for including ascender / descender values. 0.6.0 (December 1, 2015) Improvements to font writing: generated fonts now work properly on OS X. When creating a new font, ascender and descender are now required. 0.5.1 (October 26, 2015) Add Font.getPaths() which returns a list of paths. 0.5.0 (October 6, 2015) Read support for WOFF. 0.4.11 (September 27, 2015) Fix issue with loading of TrueType composite glyphs. Fix issue with missing hmtx values. Sensible getMetrics() values for empty glyphs (e.g. space). 0.4.10 (July 30, 2015) Add loadSync method for Node.js. Unit tests for basic types and tables. Implement MACSTRING codec. Support multilingual names. Handle names of font variation axes and instances. 0.4.9 (June 23, 2015) Improve memory usage by deferring glyph / path loading. Thanks @Pomax! Put examples in the \"examples\" directory. Use the local web server to see them. 0.4.8 (June 3, 2015) Fix an issue with writing out fonts that have an UPM != 1000. 0.4.6 (March 26, 2015) Fix issues with exporting/subsetting TrueType fonts. Improve validness of exported fonts. Empty paths (think: space) no longer contain a single closePath command. Fix issues with exporting fonts with TrueType half-point values. Expose the internal byte parsing algorithms as opentype._parse. 0.4.5 (March 10, 2015) Add support for writing quad curves. Add support for CFF flex operators. Close CFF subpaths. 0.4.4 (Dec 8, 2014) Solve issues with Browserify. 0.4.3 (Nov 26, 2014) Un-break node.js support. 0.4.2 (Nov 24, 2014) 2x speedup when writing fonts, thanks @louisremi! 0.4.1 (Nov 10, 2014) Fix bug that prevented npm install . 0.4.0 (Nov 10, 2014) Add support for font writing. 0.3.0 (Jun 10, 2014) Support for GPOS kerning, which works in both PostScript and OpenType. Big performance improvements. The font and glyph inspector can visually debug a font. 0.2.0 (Feb 7, 2014) Support for reading PostScript fonts. 0.1.0 (Sep 27, 2013) Initial release. Supports reading TrueType CFF fonts.","title":"0.6.9 (Jan 17, 2017)"},{"location":"demos/node_modules/makerjs-nameplate/node_modules/opentype.js/RELEASES/#069-jan-17-2017","text":"Add ligature rendering (thanks @fpirsch!)","title":"0.6.9 (Jan 17, 2017)"},{"location":"demos/node_modules/makerjs-nameplate/node_modules/opentype.js/RELEASES/#068-jan-9-2017","text":"Add a getBoundingBox method to the Path and Glyph objects.","title":"0.6.8 (Jan 9, 2017)"},{"location":"demos/node_modules/makerjs-nameplate/node_modules/opentype.js/RELEASES/#067-jan-5-2017","text":"Add basic support for Mac OS X format kern tables.","title":"0.6.7 (Jan 5, 2017)"},{"location":"demos/node_modules/makerjs-nameplate/node_modules/opentype.js/RELEASES/#066-october-25-2016","text":"Add support for letter-spacing and tracking (thanks @lachmanski!). Fixed a bug in the nameToGlyph function.","title":"0.6.6 (October 25, 2016)"},{"location":"demos/node_modules/makerjs-nameplate/node_modules/opentype.js/RELEASES/#065-september-9-2016","text":"GSUB reading and writing by @fpirsch. This is still missing a user-friendly API. Add support for cmap table format 12, which enables support for Unicode characters outside of the 0x0 - 0xFFFF range. Better API documentation using JSDoc . Accessing xMin/... metrics works before path load.","title":"0.6.5 (September 9, 2016)"},{"location":"demos/node_modules/makerjs-nameplate/node_modules/opentype.js/RELEASES/#064-june-30-2016","text":"Add X/Y scale options to compute a streched path of a glyph. Correct reading/writing of font timestamps. examples/generate-font-node.js now generates \"full\" Latin font. Add OS/2 value options for weight, width and fsSelection.","title":"0.6.4 (June 30, 2016)"},{"location":"demos/node_modules/makerjs-nameplate/node_modules/opentype.js/RELEASES/#063-may-10-2016","text":"Wrapped parseBuffer in a try/catch so it doesn't throw exceptions. Thanks @rBurgett! Fix a leaking global variable. Thanks @cuixiping!","title":"0.6.3 (May 10, 2016)"},{"location":"demos/node_modules/makerjs-nameplate/node_modules/opentype.js/RELEASES/#062-march-11-2016","text":"Improve table writing to support nested subtables. Thanks @fpirsch!","title":"0.6.2 (March 11, 2016)"},{"location":"demos/node_modules/makerjs-nameplate/node_modules/opentype.js/RELEASES/#061-february-20-2016","text":"Left side bearing is now correctly reported. Simplified code for including ascender / descender values.","title":"0.6.1 (February 20, 2016)"},{"location":"demos/node_modules/makerjs-nameplate/node_modules/opentype.js/RELEASES/#060-december-1-2015","text":"Improvements to font writing: generated fonts now work properly on OS X. When creating a new font, ascender and descender are now required.","title":"0.6.0 (December 1, 2015)"},{"location":"demos/node_modules/makerjs-nameplate/node_modules/opentype.js/RELEASES/#051-october-26-2015","text":"Add Font.getPaths() which returns a list of paths.","title":"0.5.1 (October 26, 2015)"},{"location":"demos/node_modules/makerjs-nameplate/node_modules/opentype.js/RELEASES/#050-october-6-2015","text":"Read support for WOFF.","title":"0.5.0 (October 6, 2015)"},{"location":"demos/node_modules/makerjs-nameplate/node_modules/opentype.js/RELEASES/#0411-september-27-2015","text":"Fix issue with loading of TrueType composite glyphs. Fix issue with missing hmtx values. Sensible getMetrics() values for empty glyphs (e.g. space).","title":"0.4.11 (September 27, 2015)"},{"location":"demos/node_modules/makerjs-nameplate/node_modules/opentype.js/RELEASES/#0410-july-30-2015","text":"Add loadSync method for Node.js. Unit tests for basic types and tables. Implement MACSTRING codec. Support multilingual names. Handle names of font variation axes and instances.","title":"0.4.10 (July 30, 2015)"},{"location":"demos/node_modules/makerjs-nameplate/node_modules/opentype.js/RELEASES/#049-june-23-2015","text":"Improve memory usage by deferring glyph / path loading. Thanks @Pomax! Put examples in the \"examples\" directory. Use the local web server to see them.","title":"0.4.9 (June 23, 2015)"},{"location":"demos/node_modules/makerjs-nameplate/node_modules/opentype.js/RELEASES/#048-june-3-2015","text":"Fix an issue with writing out fonts that have an UPM != 1000.","title":"0.4.8 (June 3, 2015)"},{"location":"demos/node_modules/makerjs-nameplate/node_modules/opentype.js/RELEASES/#046-march-26-2015","text":"Fix issues with exporting/subsetting TrueType fonts. Improve validness of exported fonts. Empty paths (think: space) no longer contain a single closePath command. Fix issues with exporting fonts with TrueType half-point values. Expose the internal byte parsing algorithms as opentype._parse.","title":"0.4.6 (March 26, 2015)"},{"location":"demos/node_modules/makerjs-nameplate/node_modules/opentype.js/RELEASES/#045-march-10-2015","text":"Add support for writing quad curves. Add support for CFF flex operators. Close CFF subpaths.","title":"0.4.5 (March 10, 2015)"},{"location":"demos/node_modules/makerjs-nameplate/node_modules/opentype.js/RELEASES/#044-dec-8-2014","text":"Solve issues with Browserify.","title":"0.4.4 (Dec 8, 2014)"},{"location":"demos/node_modules/makerjs-nameplate/node_modules/opentype.js/RELEASES/#043-nov-26-2014","text":"Un-break node.js support.","title":"0.4.3 (Nov 26, 2014)"},{"location":"demos/node_modules/makerjs-nameplate/node_modules/opentype.js/RELEASES/#042-nov-24-2014","text":"2x speedup when writing fonts, thanks @louisremi!","title":"0.4.2 (Nov 24, 2014)"},{"location":"demos/node_modules/makerjs-nameplate/node_modules/opentype.js/RELEASES/#041-nov-10-2014","text":"Fix bug that prevented npm install .","title":"0.4.1 (Nov 10, 2014)"},{"location":"demos/node_modules/makerjs-nameplate/node_modules/opentype.js/RELEASES/#040-nov-10-2014","text":"Add support for font writing.","title":"0.4.0 (Nov 10, 2014)"},{"location":"demos/node_modules/makerjs-nameplate/node_modules/opentype.js/RELEASES/#030-jun-10-2014","text":"Support for GPOS kerning, which works in both PostScript and OpenType. Big performance improvements. The font and glyph inspector can visually debug a font.","title":"0.3.0 (Jun 10, 2014)"},{"location":"demos/node_modules/makerjs-nameplate/node_modules/opentype.js/RELEASES/#020-feb-7-2014","text":"Support for reading PostScript fonts.","title":"0.2.0 (Feb 7, 2014)"},{"location":"demos/node_modules/makerjs-nameplate/node_modules/opentype.js/RELEASES/#010-sep-27-2013","text":"Initial release. Supports reading TrueType CFF fonts.","title":"0.1.0 (Sep 27, 2013)"},{"location":"demos/node_modules/makerjs-nameplate/node_modules/opentype.js/examples/","text":"OpenType.js Examples Due to security issues, these examples only work when running a local web server. Run npm start in the home directory to start a web server. Then navigate to one of the examples, e.g.: http://localhost:8080/examples/reading-writing.html The generate-font-node.js example can be run from node.js: cd opentype.js/examples node generate-font-node.js # This generates a font file, called Pyramid-Regular.otf.","title":"OpenType.js Examples"},{"location":"demos/node_modules/makerjs-nameplate/node_modules/opentype.js/examples/#opentypejs-examples","text":"Due to security issues, these examples only work when running a local web server. Run npm start in the home directory to start a web server. Then navigate to one of the examples, e.g.: http://localhost:8080/examples/reading-writing.html The generate-font-node.js example can be run from node.js: cd opentype.js/examples node generate-font-node.js # This generates a font file, called Pyramid-Regular.otf.","title":"OpenType.js Examples"},{"location":"demos/node_modules/makerjs-polygon-rimbox/","text":"A drawing of a parametric polygon box with a bolt hole at each corner. click here for a demo","title":"Index"},{"location":"demos/node_modules/makerjs-polygon-rimbox/node_modules/makerjs/","text":"Maker.js, a Microsoft Garage project, is a JavaScript library for creating line drawings for CNC and laser cutters. It runs in both Node.js and web browsers. Demos - Documentation Features Drawing with JavaScript code Draw using three primitive paths: Line, Circle, and Arc . Paths can be grouped into Models to form more complex drawings. Behind the scenes, drawings are a simple Javascript object which can be serialized / deserialized conventionally with JSON. Other people's Models can be imported, modified , and re-exported. Models can be scaled , measured , and converted to different unit systems . Models can be rotated or mirrored . Find intersection points or intersection angles of paths. Easily add a curvature at the joint between any 2 paths, using a traditional fillet or a dogbone fillet . Combine models with boolean operations to get unions, intersections, or punches. Detect loops formed by paths connecting end to end. Output formats 2D: DXF , SVG 3D: OpenJsCad script , STL (Must include OpenJsCad or openjscad-csg ) Built-in models Bolt Circle Bolt Rectangle Connect the dots Dome Oval OvalArc Polygon Rectangle Ring RoundRectangle S curve Slot Square Star Getting Started Try it now Visit the Maker.js Playground to edit and run JavaScript from your browser. Each of the demos will also open in the playground so that you can explore and modify their code. To use in a web browser Download the browser-based version of Maker.js, then upload it to your website: http://microsoft.github.io/maker.js/target/js/browser.photon/core Add a script tag in your HTML: < script src = \"http://microsoft.github.io/maker.js/target/js/browser.maker.js\" type = \"text/javascript\" ></ script > In your JavaScript, use the require function to get a reference: import * as makerjs from 'photon/core' ; To use in Node.js To depend on Maker.js, run this from the command line: npm install makerjs --save In your JavaScript, use the require function to get a reference: import * as makerjs from 'photon/core' ; Contribute to this project! The Microsoft Garage turns fresh ideas into real projects. Learn more at http://microsoft.com/garage .","title":"Index"},{"location":"demos/node_modules/makerjs-polygon-rimbox/node_modules/makerjs/#features","text":"","title":"Features"},{"location":"demos/node_modules/makerjs-polygon-rimbox/node_modules/makerjs/#drawing-with-javascript-code","text":"Draw using three primitive paths: Line, Circle, and Arc . Paths can be grouped into Models to form more complex drawings. Behind the scenes, drawings are a simple Javascript object which can be serialized / deserialized conventionally with JSON. Other people's Models can be imported, modified , and re-exported. Models can be scaled , measured , and converted to different unit systems . Models can be rotated or mirrored . Find intersection points or intersection angles of paths. Easily add a curvature at the joint between any 2 paths, using a traditional fillet or a dogbone fillet . Combine models with boolean operations to get unions, intersections, or punches. Detect loops formed by paths connecting end to end.","title":"Drawing with JavaScript code"},{"location":"demos/node_modules/makerjs-polygon-rimbox/node_modules/makerjs/#output-formats","text":"2D: DXF , SVG 3D: OpenJsCad script , STL (Must include OpenJsCad or openjscad-csg )","title":"Output formats"},{"location":"demos/node_modules/makerjs-polygon-rimbox/node_modules/makerjs/#built-in-models","text":"Bolt Circle Bolt Rectangle Connect the dots Dome Oval OvalArc Polygon Rectangle Ring RoundRectangle S curve Slot Square Star","title":"Built-in models"},{"location":"demos/node_modules/makerjs-polygon-rimbox/node_modules/makerjs/#getting-started","text":"","title":"Getting Started"},{"location":"demos/node_modules/makerjs-polygon-rimbox/node_modules/makerjs/#try-it-now","text":"Visit the Maker.js Playground to edit and run JavaScript from your browser. Each of the demos will also open in the playground so that you can explore and modify their code.","title":"Try it now"},{"location":"demos/node_modules/makerjs-polygon-rimbox/node_modules/makerjs/#to-use-in-a-web-browser","text":"Download the browser-based version of Maker.js, then upload it to your website: http://microsoft.github.io/maker.js/target/js/browser.photon/core Add a script tag in your HTML: < script src = \"http://microsoft.github.io/maker.js/target/js/browser.maker.js\" type = \"text/javascript\" ></ script > In your JavaScript, use the require function to get a reference: import * as makerjs from 'photon/core' ;","title":"To use in a web browser"},{"location":"demos/node_modules/makerjs-polygon-rimbox/node_modules/makerjs/#to-use-in-nodejs","text":"To depend on Maker.js, run this from the command line: npm install makerjs --save In your JavaScript, use the require function to get a reference: import * as makerjs from 'photon/core' ; Contribute to this project! The Microsoft Garage turns fresh ideas into real projects. Learn more at http://microsoft.com/garage .","title":"To use in Node.js"},{"location":"demos/node_modules/makerjs-polygon-rimbox/node_modules/makerjs/CONTRIBUTING/","text":"Contributing We would love to accept your contributions to Maker.js. Before you consider making any changes, please review the legal policy of Microsoft below. How to contribute Submit a CLA (below) Fork the repo. Check the Wiki for how to build and how to debug Make sure you can build with no errors. WE NEED UNIT TESTS :-) Commit changes in your own repo. Make a pull request. Legal You will need to complete a Contributor License Agreement (CLA). Briefly, this agreement testifies that you are granting us permission to use the submitted change according to the terms of the project's license, and that the work being submitted is under appropriate copyright. Please submit a Contributor License Agreement (CLA) before submitting a pull request. You may visit https://cla.microsoft.com to sign digitally. Alternatively, download the agreement ( Microsoft Contribution License Agreement.docx or Microsoft Contribution License Agreement.pdf ), sign, scan, and email it back to cla@microsoft.com . Be sure to include your github user name along with the agreement. Once we have received the signed CLA, we'll review the request.","title":"CONTRIBUTING"},{"location":"demos/node_modules/makerjs-polygon-rimbox/node_modules/makerjs/CONTRIBUTING/#contributing","text":"We would love to accept your contributions to Maker.js. Before you consider making any changes, please review the legal policy of Microsoft below.","title":"Contributing"},{"location":"demos/node_modules/makerjs-polygon-rimbox/node_modules/makerjs/CONTRIBUTING/#how-to-contribute","text":"Submit a CLA (below) Fork the repo. Check the Wiki for how to build and how to debug Make sure you can build with no errors. WE NEED UNIT TESTS :-) Commit changes in your own repo. Make a pull request.","title":"How to contribute"},{"location":"demos/node_modules/makerjs-polygon-rimbox/node_modules/makerjs/CONTRIBUTING/#legal","text":"You will need to complete a Contributor License Agreement (CLA). Briefly, this agreement testifies that you are granting us permission to use the submitted change according to the terms of the project's license, and that the work being submitted is under appropriate copyright. Please submit a Contributor License Agreement (CLA) before submitting a pull request. You may visit https://cla.microsoft.com to sign digitally. Alternatively, download the agreement ( Microsoft Contribution License Agreement.docx or Microsoft Contribution License Agreement.pdf ), sign, scan, and email it back to cla@microsoft.com . Be sure to include your github user name along with the agreement. Once we have received the signed CLA, we'll review the request.","title":"Legal"},{"location":"demos/node_modules/makerjs-raster/","text":"Rasterizer for Maker.js","title":"Index"},{"location":"demos/node_modules/makerjs-raster/node_modules/%40types/node/","text":"npm install --save @types/node Summary This package contains type definitions for Node.js (http://nodejs.org/). Details Files were exported from https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/node/v7 Additional Details * Last updated: Wed, 30 Oct 2019 15:44:46 GMT * Dependencies: none * Global values: Buffer, NodeJS, SlowBuffer, Symbol, __dirname, __filename, clearImmediate, clearInterval, clearTimeout, console, exports, global, module, process, require, setImmediate, setInterval, setTimeout Credits These definitions were written by Microsoft TypeScript https://github.com/Microsoft , DefinitelyTyped https://github.com/DefinitelyTyped , Parambir Singh https://github.com/parambirs , Christian Vaagland Tellnes https://github.com/tellnes , Wilco Bakker https://github.com/WilcoBakker , Sebastian Silbermann https://github.com/eps1lon , Ho\u00e0ng V\u0103n Kh\u1ea3i https://github.com/KSXGitHub , Sander Koenders https://github.com/Archcry , and Jordi Oliveras Rovira https://github.com/j-oliveras .","title":"Index"},{"location":"demos/node_modules/makerjs-raster/node_modules/%40types/node/#summary","text":"This package contains type definitions for Node.js (http://nodejs.org/).","title":"Summary"},{"location":"demos/node_modules/makerjs-raster/node_modules/%40types/node/#details","text":"Files were exported from https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/node/v7 Additional Details * Last updated: Wed, 30 Oct 2019 15:44:46 GMT * Dependencies: none * Global values: Buffer, NodeJS, SlowBuffer, Symbol, __dirname, __filename, clearImmediate, clearInterval, clearTimeout, console, exports, global, module, process, require, setImmediate, setInterval, setTimeout","title":"Details"},{"location":"demos/node_modules/makerjs-raster/node_modules/%40types/node/#credits","text":"These definitions were written by Microsoft TypeScript https://github.com/Microsoft , DefinitelyTyped https://github.com/DefinitelyTyped , Parambir Singh https://github.com/parambirs , Christian Vaagland Tellnes https://github.com/tellnes , Wilco Bakker https://github.com/WilcoBakker , Sebastian Silbermann https://github.com/eps1lon , Ho\u00e0ng V\u0103n Kh\u1ea3i https://github.com/KSXGitHub , Sander Koenders https://github.com/Archcry , and Jordi Oliveras Rovira https://github.com/j-oliveras .","title":"Credits"},{"location":"demos/node_modules/makerjs-raster/node_modules/makerjs/","text":"Your compass and straightedge, in JavaScript. Create line drawings using familiar constructs from geometry and drafting. Initially designated for CNC and laser cutters, Maker.js can also help you programmatically draw shapes for any purpose. It runs in both Node.js and web browsers. 2D Export formats: DXF , SVG , PDF , Jscad CAG object 3D Export formats: Jscad Script , Jscad CSG object , STL Demos - Documentation Core concepts paths - The primitive elements of a drawing are lines, arcs, and circles. models - Groups of paths to compose a shape. layers - Organization of models, such as by color or tool type. chains - A series of lines and arcs that connect end-to-end continuously. Learn more in the tutorial or API documentation . Features Drawings are a simple JavaScript object which can be serialized / deserialized conventionally with JSON. This also makes a drawing easy to clone . Other people's Models can be required the Node.js way, modified , and re-exported. Models can be scaled , distorted , measured , and converted to different unit systems . Paths can be distorted . Models can be rotated or mirrored . Find intersection points or intersection angles of paths. Traverse a model tree to reason over its children. Detect chains formed by paths connecting end to end. Get the points along a path or along a chain of paths . Easily add a curvature at the joint between any 2 paths, using a traditional or a dogbone fillet . Combine models with boolean operations to get unions, intersections, or punches. Expand paths to simulate a stroke thickness, with the option to bevel joints. Outline model to create a surrounding outline, with the option to bevel joints. Layout clones into rows , columns , grids , bricks , or honeycombs Built-in models Belt Bezier Curve Bolt Circle Bolt Rectangle Connect the dots Dogbone Dome Ellipse Elliptic Arc Holes Oval OvalArc Polygon Rectangle Ring RoundRectangle S curve Slot Square Star Text Import formats Fonts (Requires opentype.js ) SVG Path Data SVG Points Getting Started Try it now Visit the Maker.js Playground a sample app to edit and run JavaScript from your browser. Each of the demos will also open in the playground so that you can explore and modify their code. To use in a web browser Download the browser-based version of Maker.js, then upload it to your website: https:// photon/core.org/target/js/browser.photon/core Add a script tag in your HTML: < script src = \"https:// photon/core.org/target/js/browser.maker.js\" type = \"text/javascript\" ></ script > Note: You may also need additional libraries In your JavaScript, use the require function to get a reference: import * as makerjs from 'photon/core' ; To use via CDN Add a script tag to your HTML: <script src=\"https://cdn.jsdelivr.net/npm/makerjs@0/target/js/browser.maker.js\"></script> To work with Bezier Curves, you will also need a copy of Bezier.js by Pomax <script src=\"https://cdn.jsdelivr.net/npm/bezier-js@2/bezier.js\"></script> To work with fonts, you will need both Bezier.js(above) and a copy of Opentype.js by Frederik De Bleser <script src=\"https://cdn.jsdelivr.net/npm/opentype.js@0/dist/opentype.js\"></script> In your JavaScript, use the require function to get a reference: import * as makerjs from 'photon/core'; To use in Node.js To depend on Maker.js, run this from the command line: npm install makerjs --save In your JavaScript, use the require function to get a reference: import * as makerjs from 'photon/core' ; Contributing There are many ways to contribute to Maker.js: * \u2605 Star Maker.js on GitHub * Submit bugs and feature requests on GitHub . * Create a demo for the gallery . * Create lessons or videos for the documentation . * Enhance the website . * Add features to the Playground app . * Create a new Maker.js app, and we will link to it here. * Find some TODO's in the core source code . * Create unit tests for the core. Some of these may require a contributor agreement . Credits Maker.js depends on: * clone by Paul Vorbach * bezier-js by Pomax * graham_scan by Brian Barnett * kdbush by Vladimir Agafonkin Maker.js is a Microsoft Garage project. The Microsoft Garage turns fresh ideas into real projects. Learn more at http://microsoft.com/garage .","title":"Index"},{"location":"demos/node_modules/makerjs-raster/node_modules/makerjs/#core-concepts","text":"paths - The primitive elements of a drawing are lines, arcs, and circles. models - Groups of paths to compose a shape. layers - Organization of models, such as by color or tool type. chains - A series of lines and arcs that connect end-to-end continuously. Learn more in the tutorial or API documentation .","title":"Core concepts"},{"location":"demos/node_modules/makerjs-raster/node_modules/makerjs/#features","text":"Drawings are a simple JavaScript object which can be serialized / deserialized conventionally with JSON. This also makes a drawing easy to clone . Other people's Models can be required the Node.js way, modified , and re-exported. Models can be scaled , distorted , measured , and converted to different unit systems . Paths can be distorted . Models can be rotated or mirrored . Find intersection points or intersection angles of paths. Traverse a model tree to reason over its children. Detect chains formed by paths connecting end to end. Get the points along a path or along a chain of paths . Easily add a curvature at the joint between any 2 paths, using a traditional or a dogbone fillet . Combine models with boolean operations to get unions, intersections, or punches. Expand paths to simulate a stroke thickness, with the option to bevel joints. Outline model to create a surrounding outline, with the option to bevel joints. Layout clones into rows , columns , grids , bricks , or honeycombs","title":"Features"},{"location":"demos/node_modules/makerjs-raster/node_modules/makerjs/#built-in-models","text":"Belt Bezier Curve Bolt Circle Bolt Rectangle Connect the dots Dogbone Dome Ellipse Elliptic Arc Holes Oval OvalArc Polygon Rectangle Ring RoundRectangle S curve Slot Square Star Text","title":"Built-in models"},{"location":"demos/node_modules/makerjs-raster/node_modules/makerjs/#import-formats","text":"Fonts (Requires opentype.js ) SVG Path Data SVG Points","title":"Import formats"},{"location":"demos/node_modules/makerjs-raster/node_modules/makerjs/#getting-started","text":"","title":"Getting Started"},{"location":"demos/node_modules/makerjs-raster/node_modules/makerjs/#try-it-now","text":"Visit the Maker.js Playground a sample app to edit and run JavaScript from your browser. Each of the demos will also open in the playground so that you can explore and modify their code.","title":"Try it now"},{"location":"demos/node_modules/makerjs-raster/node_modules/makerjs/#to-use-in-a-web-browser","text":"Download the browser-based version of Maker.js, then upload it to your website: https:// photon/core.org/target/js/browser.photon/core Add a script tag in your HTML: < script src = \"https:// photon/core.org/target/js/browser.maker.js\" type = \"text/javascript\" ></ script > Note: You may also need additional libraries In your JavaScript, use the require function to get a reference: import * as makerjs from 'photon/core' ;","title":"To use in a web browser"},{"location":"demos/node_modules/makerjs-raster/node_modules/makerjs/#to-use-via-cdn","text":"Add a script tag to your HTML: <script src=\"https://cdn.jsdelivr.net/npm/makerjs@0/target/js/browser.maker.js\"></script> To work with Bezier Curves, you will also need a copy of Bezier.js by Pomax <script src=\"https://cdn.jsdelivr.net/npm/bezier-js@2/bezier.js\"></script> To work with fonts, you will need both Bezier.js(above) and a copy of Opentype.js by Frederik De Bleser <script src=\"https://cdn.jsdelivr.net/npm/opentype.js@0/dist/opentype.js\"></script> In your JavaScript, use the require function to get a reference: import * as makerjs from 'photon/core';","title":"To use via CDN"},{"location":"demos/node_modules/makerjs-raster/node_modules/makerjs/#to-use-in-nodejs","text":"To depend on Maker.js, run this from the command line: npm install makerjs --save In your JavaScript, use the require function to get a reference: import * as makerjs from 'photon/core' ;","title":"To use in Node.js"},{"location":"demos/node_modules/makerjs-raster/node_modules/makerjs/#contributing","text":"There are many ways to contribute to Maker.js: * \u2605 Star Maker.js on GitHub * Submit bugs and feature requests on GitHub . * Create a demo for the gallery . * Create lessons or videos for the documentation . * Enhance the website . * Add features to the Playground app . * Create a new Maker.js app, and we will link to it here. * Find some TODO's in the core source code . * Create unit tests for the core. Some of these may require a contributor agreement .","title":"Contributing"},{"location":"demos/node_modules/makerjs-raster/node_modules/makerjs/#credits","text":"Maker.js depends on: * clone by Paul Vorbach * bezier-js by Pomax * graham_scan by Brian Barnett * kdbush by Vladimir Agafonkin Maker.js is a Microsoft Garage project. The Microsoft Garage turns fresh ideas into real projects. Learn more at http://microsoft.com/garage .","title":"Credits"},{"location":"demos/node_modules/makerjs-rimbox/","text":"A drawing of a parametric box with round corners and a bolt hole in each corner. The box may have an empty center which follows the contour of the holes and the sides, forming a rim. If several of these are made of thin material they may be stacked to form an enclosure which can be secured with bolts. click here for a demo","title":"Index"},{"location":"demos/node_modules/makerjs-rimbox/node_modules/makerjs/CONTRIBUTING/","text":"Contributing We would love to accept your contributions to Maker.js. Before you consider making any changes, please review the legal policy of Microsoft below. How to contribute Submit a CLA (below) Fork the repo. Check the Wiki for how to build and how to debug Make sure you can build with no errors. WE NEED UNIT TESTS :-) Commit changes in your own repo. Make a pull request. Legal You will need to complete a Contributor License Agreement (CLA). Briefly, this agreement testifies that you are granting us permission to use the submitted change according to the terms of the project's license, and that the work being submitted is under appropriate copyright. Please submit a Contributor License Agreement (CLA) before submitting a pull request. You may visit https://cla.microsoft.com to sign digitally. Alternatively, download the agreement ( Microsoft Contribution License Agreement.docx or Microsoft Contribution License Agreement.pdf ), sign, scan, and email it back to cla@microsoft.com . Be sure to include your github user name along with the agreement. Once we have received the signed CLA, we'll review the request.","title":"CONTRIBUTING"},{"location":"demos/node_modules/makerjs-rimbox/node_modules/makerjs/CONTRIBUTING/#contributing","text":"We would love to accept your contributions to Maker.js. Before you consider making any changes, please review the legal policy of Microsoft below.","title":"Contributing"},{"location":"demos/node_modules/makerjs-rimbox/node_modules/makerjs/CONTRIBUTING/#how-to-contribute","text":"Submit a CLA (below) Fork the repo. Check the Wiki for how to build and how to debug Make sure you can build with no errors. WE NEED UNIT TESTS :-) Commit changes in your own repo. Make a pull request.","title":"How to contribute"},{"location":"demos/node_modules/makerjs-rimbox/node_modules/makerjs/CONTRIBUTING/#legal","text":"You will need to complete a Contributor License Agreement (CLA). Briefly, this agreement testifies that you are granting us permission to use the submitted change according to the terms of the project's license, and that the work being submitted is under appropriate copyright. Please submit a Contributor License Agreement (CLA) before submitting a pull request. You may visit https://cla.microsoft.com to sign digitally. Alternatively, download the agreement ( Microsoft Contribution License Agreement.docx or Microsoft Contribution License Agreement.pdf ), sign, scan, and email it back to cla@microsoft.com . Be sure to include your github user name along with the agreement. Once we have received the signed CLA, we'll review the request.","title":"Legal"},{"location":"demos/node_modules/makerjs-smile/","text":"A smiley face for Maker.js","title":"Index"},{"location":"demos/node_modules/makerjs-smile/node_modules/makerjs/CONTRIBUTING/","text":"Contributing We would love to accept your contributions to Maker.js. Before you consider making any changes, please review the legal policy of Microsoft below. How to contribute Submit a CLA (below) Fork the repo. Check the Wiki for how to build and how to debug Make sure you can build with no errors. WE NEED UNIT TESTS :-) Commit changes in your own repo. Make a pull request. Legal You will need to complete a Contributor License Agreement (CLA). Briefly, this agreement testifies that you are granting us permission to use the submitted change according to the terms of the project's license, and that the work being submitted is under appropriate copyright. Please submit a Contributor License Agreement (CLA) before submitting a pull request. You may visit https://cla.microsoft.com to sign digitally. Alternatively, download the agreement ( Microsoft Contribution License Agreement.docx or Microsoft Contribution License Agreement.pdf ), sign, scan, and email it back to cla@microsoft.com . Be sure to include your github user name along with the agreement. Once we have received the signed CLA, we'll review the request.","title":"CONTRIBUTING"},{"location":"demos/node_modules/makerjs-smile/node_modules/makerjs/CONTRIBUTING/#contributing","text":"We would love to accept your contributions to Maker.js. Before you consider making any changes, please review the legal policy of Microsoft below.","title":"Contributing"},{"location":"demos/node_modules/makerjs-smile/node_modules/makerjs/CONTRIBUTING/#how-to-contribute","text":"Submit a CLA (below) Fork the repo. Check the Wiki for how to build and how to debug Make sure you can build with no errors. WE NEED UNIT TESTS :-) Commit changes in your own repo. Make a pull request.","title":"How to contribute"},{"location":"demos/node_modules/makerjs-smile/node_modules/makerjs/CONTRIBUTING/#legal","text":"You will need to complete a Contributor License Agreement (CLA). Briefly, this agreement testifies that you are granting us permission to use the submitted change according to the terms of the project's license, and that the work being submitted is under appropriate copyright. Please submit a Contributor License Agreement (CLA) before submitting a pull request. You may visit https://cla.microsoft.com to sign digitally. Alternatively, download the agreement ( Microsoft Contribution License Agreement.docx or Microsoft Contribution License Agreement.pdf ), sign, scan, and email it back to cla@microsoft.com . Be sure to include your github user name along with the agreement. Once we have received the signed CLA, we'll review the request.","title":"Legal"},{"location":"demos/node_modules/makerjs-spiral/node_modules/makerjs/","text":"Maker.js, a Microsoft Garage project, is a JavaScript library for creating line drawings for CNC and laser cutters. It runs in both Node.js and web browsers. Demos - Documentation Features Drawing with JavaScript code Draw using three primitive paths: Line, Circle, and Arc . Paths can be grouped into Models to form more complex drawings. Behind the scenes, drawings are a simple Javascript object which can be serialized / deserialized conventionally with JSON. Other people's Models can be imported, modified , and re-exported. Models can be scaled , measured , and converted to different unit systems . Models can be rotated or mirrored . Find intersection points or intersection angles of paths. Easily add a curvature at the joint between any 2 paths, using a traditional fillet or a dogbone fillet . Combine models with boolean operations to get unions, intersections, or punches. Detect loops formed by paths connecting end to end. Output formats 2D: DXF , SVG 3D: OpenJsCad script , STL (Must include OpenJsCad or openjscad-csg ) Built-in models Bolt Circle Bolt Rectangle Connect the dots Dome Oval OvalArc Polygon Rectangle Ring RoundRectangle S curve Slot Square Star Getting Started Try it now Visit the Maker.js Playground to edit and run JavaScript from your browser. Each of the demos will also open in the playground so that you can explore and modify their code. To use in a web browser Download the browser-based version of Maker.js, then upload it to your website: http://microsoft.github.io/maker.js/target/js/browser.photon/core Add a script tag in your HTML: < script src = \"http://microsoft.github.io/maker.js/target/js/browser.maker.js\" type = \"text/javascript\" ></ script > In your JavaScript, use the require function to get a reference: import * as makerjs from 'photon/core' ; To use in Node.js To depend on Maker.js, run this from the command line: npm install makerjs --save In your JavaScript, use the require function to get a reference: import * as makerjs from 'photon/core' ; Contribute to this project! The Microsoft Garage turns fresh ideas into real projects. Learn more at http://microsoft.com/garage .","title":"Index"},{"location":"demos/node_modules/makerjs-spiral/node_modules/makerjs/#features","text":"","title":"Features"},{"location":"demos/node_modules/makerjs-spiral/node_modules/makerjs/#drawing-with-javascript-code","text":"Draw using three primitive paths: Line, Circle, and Arc . Paths can be grouped into Models to form more complex drawings. Behind the scenes, drawings are a simple Javascript object which can be serialized / deserialized conventionally with JSON. Other people's Models can be imported, modified , and re-exported. Models can be scaled , measured , and converted to different unit systems . Models can be rotated or mirrored . Find intersection points or intersection angles of paths. Easily add a curvature at the joint between any 2 paths, using a traditional fillet or a dogbone fillet . Combine models with boolean operations to get unions, intersections, or punches. Detect loops formed by paths connecting end to end.","title":"Drawing with JavaScript code"},{"location":"demos/node_modules/makerjs-spiral/node_modules/makerjs/#output-formats","text":"2D: DXF , SVG 3D: OpenJsCad script , STL (Must include OpenJsCad or openjscad-csg )","title":"Output formats"},{"location":"demos/node_modules/makerjs-spiral/node_modules/makerjs/#built-in-models","text":"Bolt Circle Bolt Rectangle Connect the dots Dome Oval OvalArc Polygon Rectangle Ring RoundRectangle S curve Slot Square Star","title":"Built-in models"},{"location":"demos/node_modules/makerjs-spiral/node_modules/makerjs/#getting-started","text":"","title":"Getting Started"},{"location":"demos/node_modules/makerjs-spiral/node_modules/makerjs/#try-it-now","text":"Visit the Maker.js Playground to edit and run JavaScript from your browser. Each of the demos will also open in the playground so that you can explore and modify their code.","title":"Try it now"},{"location":"demos/node_modules/makerjs-spiral/node_modules/makerjs/#to-use-in-a-web-browser","text":"Download the browser-based version of Maker.js, then upload it to your website: http://microsoft.github.io/maker.js/target/js/browser.photon/core Add a script tag in your HTML: < script src = \"http://microsoft.github.io/maker.js/target/js/browser.maker.js\" type = \"text/javascript\" ></ script > In your JavaScript, use the require function to get a reference: import * as makerjs from 'photon/core' ;","title":"To use in a web browser"},{"location":"demos/node_modules/makerjs-spiral/node_modules/makerjs/#to-use-in-nodejs","text":"To depend on Maker.js, run this from the command line: npm install makerjs --save In your JavaScript, use the require function to get a reference: import * as makerjs from 'photon/core' ; Contribute to this project! The Microsoft Garage turns fresh ideas into real projects. Learn more at http://microsoft.com/garage .","title":"To use in Node.js"},{"location":"demos/node_modules/makerjs-spiral/node_modules/makerjs/CONTRIBUTING/","text":"Contributing We would love to accept your contributions to Maker.js. Before you consider making any changes, please review the legal policy of Microsoft below. How to contribute Submit a CLA (below) Fork the repo. Check the Wiki for how to build and how to debug Make sure you can build with no errors. WE NEED UNIT TESTS :-) Commit changes in your own repo. Make a pull request. Legal You will need to complete a Contributor License Agreement (CLA). Briefly, this agreement testifies that you are granting us permission to use the submitted change according to the terms of the project's license, and that the work being submitted is under appropriate copyright. Please submit a Contributor License Agreement (CLA) before submitting a pull request. You may visit https://cla.microsoft.com to sign digitally. Alternatively, download the agreement ( Microsoft Contribution License Agreement.docx or Microsoft Contribution License Agreement.pdf ), sign, scan, and email it back to cla@microsoft.com . Be sure to include your github user name along with the agreement. Once we have received the signed CLA, we'll review the request.","title":"CONTRIBUTING"},{"location":"demos/node_modules/makerjs-spiral/node_modules/makerjs/CONTRIBUTING/#contributing","text":"We would love to accept your contributions to Maker.js. Before you consider making any changes, please review the legal policy of Microsoft below.","title":"Contributing"},{"location":"demos/node_modules/makerjs-spiral/node_modules/makerjs/CONTRIBUTING/#how-to-contribute","text":"Submit a CLA (below) Fork the repo. Check the Wiki for how to build and how to debug Make sure you can build with no errors. WE NEED UNIT TESTS :-) Commit changes in your own repo. Make a pull request.","title":"How to contribute"},{"location":"demos/node_modules/makerjs-spiral/node_modules/makerjs/CONTRIBUTING/#legal","text":"You will need to complete a Contributor License Agreement (CLA). Briefly, this agreement testifies that you are granting us permission to use the submitted change according to the terms of the project's license, and that the work being submitted is under appropriate copyright. Please submit a Contributor License Agreement (CLA) before submitting a pull request. You may visit https://cla.microsoft.com to sign digitally. Alternatively, download the agreement ( Microsoft Contribution License Agreement.docx or Microsoft Contribution License Agreement.pdf ), sign, scan, and email it back to cla@microsoft.com . Be sure to include your github user name along with the agreement. Once we have received the signed CLA, we'll review the request.","title":"Legal"},{"location":"demos/node_modules/makerjs-spoke-wedge/","text":"Creates the shape of the negative space between spokes in a wheel. For Maker.js","title":"Index"},{"location":"demos/node_modules/makerjs-spoke-wedge/node_modules/makerjs/","text":"Maker.js, a Microsoft Garage project, is a JavaScript library for creating line drawings for CNC and laser cutters. It runs in both Node.js and web browsers. Demos - Documentation Features Drawing with JavaScript code Draw using three primitive paths: Line, Circle, and Arc . Paths can be grouped into Models to form more complex drawings. Behind the scenes, drawings are a simple Javascript object which can be serialized / deserialized conventionally with JSON. Other people's Models can be imported, modified , and re-exported. Models can be scaled , measured , and converted to different unit systems . Models can be rotated or mirrored . Find intersection points or intersection angles of paths. Easily add a curvature at the joint between any 2 paths, using a traditional fillet or a dogbone fillet . Combine models with boolean operations to get unions, intersections, or punches. Detect loops formed by paths connecting end to end. Output formats 2D: DXF , SVG 3D: OpenJsCad script , STL (Must include OpenJsCad or openjscad-csg ) Built-in models Bolt Circle Bolt Rectangle Connect the dots Dome Oval OvalArc Polygon Rectangle Ring RoundRectangle S curve Slot Square Star Getting Started Try it now Visit the Maker.js Playground to edit and run JavaScript from your browser. Each of the demos will also open in the playground so that you can explore and modify their code. To use in a web browser Download the browser-based version of Maker.js, then upload it to your website: http://microsoft.github.io/maker.js/target/js/browser.photon/core Add a script tag in your HTML: < script src = \"http://microsoft.github.io/maker.js/target/js/browser.maker.js\" type = \"text/javascript\" ></ script > In your JavaScript, use the require function to get a reference: import * as makerjs from 'photon/core' ; To use in Node.js To depend on Maker.js, run this from the command line: npm install makerjs --save In your JavaScript, use the require function to get a reference: import * as makerjs from 'photon/core' ; Contribute to this project! The Microsoft Garage turns fresh ideas into real projects. Learn more at http://microsoft.com/garage .","title":"Index"},{"location":"demos/node_modules/makerjs-spoke-wedge/node_modules/makerjs/#features","text":"","title":"Features"},{"location":"demos/node_modules/makerjs-spoke-wedge/node_modules/makerjs/#drawing-with-javascript-code","text":"Draw using three primitive paths: Line, Circle, and Arc . Paths can be grouped into Models to form more complex drawings. Behind the scenes, drawings are a simple Javascript object which can be serialized / deserialized conventionally with JSON. Other people's Models can be imported, modified , and re-exported. Models can be scaled , measured , and converted to different unit systems . Models can be rotated or mirrored . Find intersection points or intersection angles of paths. Easily add a curvature at the joint between any 2 paths, using a traditional fillet or a dogbone fillet . Combine models with boolean operations to get unions, intersections, or punches. Detect loops formed by paths connecting end to end.","title":"Drawing with JavaScript code"},{"location":"demos/node_modules/makerjs-spoke-wedge/node_modules/makerjs/#output-formats","text":"2D: DXF , SVG 3D: OpenJsCad script , STL (Must include OpenJsCad or openjscad-csg )","title":"Output formats"},{"location":"demos/node_modules/makerjs-spoke-wedge/node_modules/makerjs/#built-in-models","text":"Bolt Circle Bolt Rectangle Connect the dots Dome Oval OvalArc Polygon Rectangle Ring RoundRectangle S curve Slot Square Star","title":"Built-in models"},{"location":"demos/node_modules/makerjs-spoke-wedge/node_modules/makerjs/#getting-started","text":"","title":"Getting Started"},{"location":"demos/node_modules/makerjs-spoke-wedge/node_modules/makerjs/#try-it-now","text":"Visit the Maker.js Playground to edit and run JavaScript from your browser. Each of the demos will also open in the playground so that you can explore and modify their code.","title":"Try it now"},{"location":"demos/node_modules/makerjs-spoke-wedge/node_modules/makerjs/#to-use-in-a-web-browser","text":"Download the browser-based version of Maker.js, then upload it to your website: http://microsoft.github.io/maker.js/target/js/browser.photon/core Add a script tag in your HTML: < script src = \"http://microsoft.github.io/maker.js/target/js/browser.maker.js\" type = \"text/javascript\" ></ script > In your JavaScript, use the require function to get a reference: import * as makerjs from 'photon/core' ;","title":"To use in a web browser"},{"location":"demos/node_modules/makerjs-spoke-wedge/node_modules/makerjs/#to-use-in-nodejs","text":"To depend on Maker.js, run this from the command line: npm install makerjs --save In your JavaScript, use the require function to get a reference: import * as makerjs from 'photon/core' ; Contribute to this project! The Microsoft Garage turns fresh ideas into real projects. Learn more at http://microsoft.com/garage .","title":"To use in Node.js"},{"location":"demos/node_modules/makerjs-spoke-wedge/node_modules/makerjs/CONTRIBUTING/","text":"Contributing We would love to accept your contributions to Maker.js. Before you consider making any changes, please review the legal policy of Microsoft below. How to contribute Submit a CLA (below) Fork the repo. Check the Wiki for how to build and how to debug Make sure you can build with no errors. WE NEED UNIT TESTS :-) Commit changes in your own repo. Make a pull request. Legal You will need to complete a Contributor License Agreement (CLA). Briefly, this agreement testifies that you are granting us permission to use the submitted change according to the terms of the project's license, and that the work being submitted is under appropriate copyright. Please submit a Contributor License Agreement (CLA) before submitting a pull request. You may visit https://cla.microsoft.com to sign digitally. Alternatively, download the agreement ( Microsoft Contribution License Agreement.docx or Microsoft Contribution License Agreement.pdf ), sign, scan, and email it back to cla@microsoft.com . Be sure to include your github user name along with the agreement. Once we have received the signed CLA, we'll review the request.","title":"CONTRIBUTING"},{"location":"demos/node_modules/makerjs-spoke-wedge/node_modules/makerjs/CONTRIBUTING/#contributing","text":"We would love to accept your contributions to Maker.js. Before you consider making any changes, please review the legal policy of Microsoft below.","title":"Contributing"},{"location":"demos/node_modules/makerjs-spoke-wedge/node_modules/makerjs/CONTRIBUTING/#how-to-contribute","text":"Submit a CLA (below) Fork the repo. Check the Wiki for how to build and how to debug Make sure you can build with no errors. WE NEED UNIT TESTS :-) Commit changes in your own repo. Make a pull request.","title":"How to contribute"},{"location":"demos/node_modules/makerjs-spoke-wedge/node_modules/makerjs/CONTRIBUTING/#legal","text":"You will need to complete a Contributor License Agreement (CLA). Briefly, this agreement testifies that you are granting us permission to use the submitted change according to the terms of the project's license, and that the work being submitted is under appropriate copyright. Please submit a Contributor License Agreement (CLA) before submitting a pull request. You may visit https://cla.microsoft.com to sign digitally. Alternatively, download the agreement ( Microsoft Contribution License Agreement.docx or Microsoft Contribution License Agreement.pdf ), sign, scan, and email it back to cla@microsoft.com . Be sure to include your github user name along with the agreement. Once we have received the signed CLA, we'll review the request.","title":"Legal"},{"location":"demos/node_modules/makerjs-spokes-flared/","text":"A parametric flared-spoked wheel drawing, for Maker.js clik here for demo","title":"Index"},{"location":"demos/node_modules/makerjs-spokes-flared/node_modules/makerjs/","text":"Maker.js, a Microsoft Garage project, is a JavaScript library for creating line drawings for CNC and laser cutters. It runs in both Node.js and web browsers. Demos - Documentation Features Drawing with JavaScript code Draw using three primitive paths: Line, Circle, and Arc . Paths can be grouped into Models to form more complex drawings. Behind the scenes, drawings are a simple Javascript object which can be serialized / deserialized conventionally with JSON. Other people's Models can be imported, modified , and re-exported. Models can be scaled , measured , and converted to different unit systems . Models can be rotated or mirrored . Find intersection points or intersection angles of paths. Easily add a curvature at the joint between any 2 paths, using a traditional fillet or a dogbone fillet . Combine models with boolean operations to get unions, intersections, or punches. Detect loops formed by paths connecting end to end. Output formats 2D: DXF , SVG 3D: OpenJsCad script , STL (Must include OpenJsCad or openjscad-csg ) Built-in models Bolt Circle Bolt Rectangle Connect the dots Dome Oval OvalArc Polygon Rectangle Ring RoundRectangle S curve Slot Square Star Getting Started Try it now Visit the Maker.js Playground to edit and run JavaScript from your browser. Each of the demos will also open in the playground so that you can explore and modify their code. To use in a web browser Download the browser-based version of Maker.js, then upload it to your website: http://microsoft.github.io/maker.js/target/js/browser.photon/core Add a script tag in your HTML: < script src = \"http://microsoft.github.io/maker.js/target/js/browser.maker.js\" type = \"text/javascript\" ></ script > In your JavaScript, use the require function to get a reference: import * as makerjs from 'photon/core' ; To use in Node.js To depend on Maker.js, run this from the command line: npm install makerjs --save In your JavaScript, use the require function to get a reference: import * as makerjs from 'photon/core' ; Contribute to this project! The Microsoft Garage turns fresh ideas into real projects. Learn more at http://microsoft.com/garage .","title":"Index"},{"location":"demos/node_modules/makerjs-spokes-flared/node_modules/makerjs/#features","text":"","title":"Features"},{"location":"demos/node_modules/makerjs-spokes-flared/node_modules/makerjs/#drawing-with-javascript-code","text":"Draw using three primitive paths: Line, Circle, and Arc . Paths can be grouped into Models to form more complex drawings. Behind the scenes, drawings are a simple Javascript object which can be serialized / deserialized conventionally with JSON. Other people's Models can be imported, modified , and re-exported. Models can be scaled , measured , and converted to different unit systems . Models can be rotated or mirrored . Find intersection points or intersection angles of paths. Easily add a curvature at the joint between any 2 paths, using a traditional fillet or a dogbone fillet . Combine models with boolean operations to get unions, intersections, or punches. Detect loops formed by paths connecting end to end.","title":"Drawing with JavaScript code"},{"location":"demos/node_modules/makerjs-spokes-flared/node_modules/makerjs/#output-formats","text":"2D: DXF , SVG 3D: OpenJsCad script , STL (Must include OpenJsCad or openjscad-csg )","title":"Output formats"},{"location":"demos/node_modules/makerjs-spokes-flared/node_modules/makerjs/#built-in-models","text":"Bolt Circle Bolt Rectangle Connect the dots Dome Oval OvalArc Polygon Rectangle Ring RoundRectangle S curve Slot Square Star","title":"Built-in models"},{"location":"demos/node_modules/makerjs-spokes-flared/node_modules/makerjs/#getting-started","text":"","title":"Getting Started"},{"location":"demos/node_modules/makerjs-spokes-flared/node_modules/makerjs/#try-it-now","text":"Visit the Maker.js Playground to edit and run JavaScript from your browser. Each of the demos will also open in the playground so that you can explore and modify their code.","title":"Try it now"},{"location":"demos/node_modules/makerjs-spokes-flared/node_modules/makerjs/#to-use-in-a-web-browser","text":"Download the browser-based version of Maker.js, then upload it to your website: http://microsoft.github.io/maker.js/target/js/browser.photon/core Add a script tag in your HTML: < script src = \"http://microsoft.github.io/maker.js/target/js/browser.maker.js\" type = \"text/javascript\" ></ script > In your JavaScript, use the require function to get a reference: import * as makerjs from 'photon/core' ;","title":"To use in a web browser"},{"location":"demos/node_modules/makerjs-spokes-flared/node_modules/makerjs/#to-use-in-nodejs","text":"To depend on Maker.js, run this from the command line: npm install makerjs --save In your JavaScript, use the require function to get a reference: import * as makerjs from 'photon/core' ; Contribute to this project! The Microsoft Garage turns fresh ideas into real projects. Learn more at http://microsoft.com/garage .","title":"To use in Node.js"},{"location":"demos/node_modules/makerjs-spokes-flared/node_modules/makerjs/CONTRIBUTING/","text":"Contributing We would love to accept your contributions to Maker.js. Before you consider making any changes, please review the legal policy of Microsoft below. How to contribute Submit a CLA (below) Fork the repo. Check the Wiki for how to build and how to debug Make sure you can build with no errors. WE NEED UNIT TESTS :-) Commit changes in your own repo. Make a pull request. Legal You will need to complete a Contributor License Agreement (CLA). Briefly, this agreement testifies that you are granting us permission to use the submitted change according to the terms of the project's license, and that the work being submitted is under appropriate copyright. Please submit a Contributor License Agreement (CLA) before submitting a pull request. You may visit https://cla.microsoft.com to sign digitally. Alternatively, download the agreement ( Microsoft Contribution License Agreement.docx or Microsoft Contribution License Agreement.pdf ), sign, scan, and email it back to cla@microsoft.com . Be sure to include your github user name along with the agreement. Once we have received the signed CLA, we'll review the request.","title":"CONTRIBUTING"},{"location":"demos/node_modules/makerjs-spokes-flared/node_modules/makerjs/CONTRIBUTING/#contributing","text":"We would love to accept your contributions to Maker.js. Before you consider making any changes, please review the legal policy of Microsoft below.","title":"Contributing"},{"location":"demos/node_modules/makerjs-spokes-flared/node_modules/makerjs/CONTRIBUTING/#how-to-contribute","text":"Submit a CLA (below) Fork the repo. Check the Wiki for how to build and how to debug Make sure you can build with no errors. WE NEED UNIT TESTS :-) Commit changes in your own repo. Make a pull request.","title":"How to contribute"},{"location":"demos/node_modules/makerjs-spokes-flared/node_modules/makerjs/CONTRIBUTING/#legal","text":"You will need to complete a Contributor License Agreement (CLA). Briefly, this agreement testifies that you are granting us permission to use the submitted change according to the terms of the project's license, and that the work being submitted is under appropriate copyright. Please submit a Contributor License Agreement (CLA) before submitting a pull request. You may visit https://cla.microsoft.com to sign digitally. Alternatively, download the agreement ( Microsoft Contribution License Agreement.docx or Microsoft Contribution License Agreement.pdf ), sign, scan, and email it back to cla@microsoft.com . Be sure to include your github user name along with the agreement. Once we have received the signed CLA, we'll review the request.","title":"Legal"},{"location":"demos/node_modules/makerjs-spokes-straight/","text":"A parametric straight-spoked wheel drawing, for Maker.js clik here for demo","title":"Index"},{"location":"demos/node_modules/makerjs-spokes-straight/node_modules/makerjs/","text":"Maker.js, a Microsoft Garage project, is a JavaScript library for creating line drawings for CNC and laser cutters. It runs in both Node.js and web browsers. Demos - Documentation Features Drawing with JavaScript code Draw using three primitive paths: Line, Circle, and Arc . Paths can be grouped into Models to form more complex drawings. Behind the scenes, drawings are a simple Javascript object which can be serialized / deserialized conventionally with JSON. Other people's Models can be imported, modified , and re-exported. Models can be scaled , measured , and converted to different unit systems . Models can be rotated or mirrored . Find intersection points or intersection angles of paths. Easily add a curvature at the joint between any 2 paths, using a traditional fillet or a dogbone fillet . Combine models with boolean operations to get unions, intersections, or punches. Detect loops formed by paths connecting end to end. Output formats 2D: DXF , SVG 3D: OpenJsCad script , STL (Must include OpenJsCad or openjscad-csg ) Built-in models Bolt Circle Bolt Rectangle Connect the dots Dome Oval OvalArc Polygon Rectangle Ring RoundRectangle S curve Slot Square Star Getting Started Try it now Visit the Maker.js Playground to edit and run JavaScript from your browser. Each of the demos will also open in the playground so that you can explore and modify their code. To use in a web browser Download the browser-based version of Maker.js, then upload it to your website: http://microsoft.github.io/maker.js/target/js/browser.photon/core Add a script tag in your HTML: < script src = \"http://microsoft.github.io/maker.js/target/js/browser.maker.js\" type = \"text/javascript\" ></ script > In your JavaScript, use the require function to get a reference: import * as makerjs from 'photon/core' ; To use in Node.js To depend on Maker.js, run this from the command line: npm install makerjs --save In your JavaScript, use the require function to get a reference: import * as makerjs from 'photon/core' ; Contribute to this project! The Microsoft Garage turns fresh ideas into real projects. Learn more at http://microsoft.com/garage .","title":"Index"},{"location":"demos/node_modules/makerjs-spokes-straight/node_modules/makerjs/#features","text":"","title":"Features"},{"location":"demos/node_modules/makerjs-spokes-straight/node_modules/makerjs/#drawing-with-javascript-code","text":"Draw using three primitive paths: Line, Circle, and Arc . Paths can be grouped into Models to form more complex drawings. Behind the scenes, drawings are a simple Javascript object which can be serialized / deserialized conventionally with JSON. Other people's Models can be imported, modified , and re-exported. Models can be scaled , measured , and converted to different unit systems . Models can be rotated or mirrored . Find intersection points or intersection angles of paths. Easily add a curvature at the joint between any 2 paths, using a traditional fillet or a dogbone fillet . Combine models with boolean operations to get unions, intersections, or punches. Detect loops formed by paths connecting end to end.","title":"Drawing with JavaScript code"},{"location":"demos/node_modules/makerjs-spokes-straight/node_modules/makerjs/#output-formats","text":"2D: DXF , SVG 3D: OpenJsCad script , STL (Must include OpenJsCad or openjscad-csg )","title":"Output formats"},{"location":"demos/node_modules/makerjs-spokes-straight/node_modules/makerjs/#built-in-models","text":"Bolt Circle Bolt Rectangle Connect the dots Dome Oval OvalArc Polygon Rectangle Ring RoundRectangle S curve Slot Square Star","title":"Built-in models"},{"location":"demos/node_modules/makerjs-spokes-straight/node_modules/makerjs/#getting-started","text":"","title":"Getting Started"},{"location":"demos/node_modules/makerjs-spokes-straight/node_modules/makerjs/#try-it-now","text":"Visit the Maker.js Playground to edit and run JavaScript from your browser. Each of the demos will also open in the playground so that you can explore and modify their code.","title":"Try it now"},{"location":"demos/node_modules/makerjs-spokes-straight/node_modules/makerjs/#to-use-in-a-web-browser","text":"Download the browser-based version of Maker.js, then upload it to your website: http://microsoft.github.io/maker.js/target/js/browser.photon/core Add a script tag in your HTML: < script src = \"http://microsoft.github.io/maker.js/target/js/browser.maker.js\" type = \"text/javascript\" ></ script > In your JavaScript, use the require function to get a reference: import * as makerjs from 'photon/core' ;","title":"To use in a web browser"},{"location":"demos/node_modules/makerjs-spokes-straight/node_modules/makerjs/#to-use-in-nodejs","text":"To depend on Maker.js, run this from the command line: npm install makerjs --save In your JavaScript, use the require function to get a reference: import * as makerjs from 'photon/core' ; Contribute to this project! The Microsoft Garage turns fresh ideas into real projects. Learn more at http://microsoft.com/garage .","title":"To use in Node.js"},{"location":"demos/node_modules/makerjs-spokes-straight/node_modules/makerjs/CONTRIBUTING/","text":"Contributing We would love to accept your contributions to Maker.js. Before you consider making any changes, please review the legal policy of Microsoft below. How to contribute Submit a CLA (below) Fork the repo. Check the Wiki for how to build and how to debug Make sure you can build with no errors. WE NEED UNIT TESTS :-) Commit changes in your own repo. Make a pull request. Legal You will need to complete a Contributor License Agreement (CLA). Briefly, this agreement testifies that you are granting us permission to use the submitted change according to the terms of the project's license, and that the work being submitted is under appropriate copyright. Please submit a Contributor License Agreement (CLA) before submitting a pull request. You may visit https://cla.microsoft.com to sign digitally. Alternatively, download the agreement ( Microsoft Contribution License Agreement.docx or Microsoft Contribution License Agreement.pdf ), sign, scan, and email it back to cla@microsoft.com . Be sure to include your github user name along with the agreement. Once we have received the signed CLA, we'll review the request.","title":"CONTRIBUTING"},{"location":"demos/node_modules/makerjs-spokes-straight/node_modules/makerjs/CONTRIBUTING/#contributing","text":"We would love to accept your contributions to Maker.js. Before you consider making any changes, please review the legal policy of Microsoft below.","title":"Contributing"},{"location":"demos/node_modules/makerjs-spokes-straight/node_modules/makerjs/CONTRIBUTING/#how-to-contribute","text":"Submit a CLA (below) Fork the repo. Check the Wiki for how to build and how to debug Make sure you can build with no errors. WE NEED UNIT TESTS :-) Commit changes in your own repo. Make a pull request.","title":"How to contribute"},{"location":"demos/node_modules/makerjs-spokes-straight/node_modules/makerjs/CONTRIBUTING/#legal","text":"You will need to complete a Contributor License Agreement (CLA). Briefly, this agreement testifies that you are granting us permission to use the submitted change according to the terms of the project's license, and that the work being submitted is under appropriate copyright. Please submit a Contributor License Agreement (CLA) before submitting a pull request. You may visit https://cla.microsoft.com to sign digitally. Alternatively, download the agreement ( Microsoft Contribution License Agreement.docx or Microsoft Contribution License Agreement.pdf ), sign, scan, and email it back to cla@microsoft.com . Be sure to include your github user name along with the agreement. Once we have received the signed CLA, we'll review the request.","title":"Legal"},{"location":"demos/node_modules/makerjs-ventgrid/","text":"A grid of circles for Maker.Js","title":"Index"},{"location":"demos/node_modules/makerjs-ventgrid/node_modules/makerjs/CONTRIBUTING/","text":"Contributing We would love to accept your contributions to Maker.js. Before you consider making any changes, please review the legal policy of Microsoft below. How to contribute Submit a CLA (below) Fork the repo. Check the Wiki for how to build and how to debug Make sure you can build with no errors. WE NEED UNIT TESTS :-) Commit changes in your own repo. Make a pull request. Legal You will need to complete a Contributor License Agreement (CLA). Briefly, this agreement testifies that you are granting us permission to use the submitted change according to the terms of the project's license, and that the work being submitted is under appropriate copyright. Please submit a Contributor License Agreement (CLA) before submitting a pull request. You may visit https://cla.microsoft.com to sign digitally. Alternatively, download the agreement ( Microsoft Contribution License Agreement.docx or Microsoft Contribution License Agreement.pdf ), sign, scan, and email it back to cla@microsoft.com . Be sure to include your github user name along with the agreement. Once we have received the signed CLA, we'll review the request.","title":"CONTRIBUTING"},{"location":"demos/node_modules/makerjs-ventgrid/node_modules/makerjs/CONTRIBUTING/#contributing","text":"We would love to accept your contributions to Maker.js. Before you consider making any changes, please review the legal policy of Microsoft below.","title":"Contributing"},{"location":"demos/node_modules/makerjs-ventgrid/node_modules/makerjs/CONTRIBUTING/#how-to-contribute","text":"Submit a CLA (below) Fork the repo. Check the Wiki for how to build and how to debug Make sure you can build with no errors. WE NEED UNIT TESTS :-) Commit changes in your own repo. Make a pull request.","title":"How to contribute"},{"location":"demos/node_modules/makerjs-ventgrid/node_modules/makerjs/CONTRIBUTING/#legal","text":"You will need to complete a Contributor License Agreement (CLA). Briefly, this agreement testifies that you are granting us permission to use the submitted change according to the terms of the project's license, and that the work being submitted is under appropriate copyright. Please submit a Contributor License Agreement (CLA) before submitting a pull request. You may visit https://cla.microsoft.com to sign digitally. Alternatively, download the agreement ( Microsoft Contribution License Agreement.docx or Microsoft Contribution License Agreement.pdf ), sign, scan, and email it back to cla@microsoft.com . Be sure to include your github user name along with the agreement. Once we have received the signed CLA, we'll review the request.","title":"Legal"},{"location":"demos/node_modules/makerjs-ventgridcircle/","text":"A grid of circles constrained within a larger circle, for Maker.js","title":"Index"},{"location":"demos/node_modules/makerjs-ventgridcircle/node_modules/makerjs/CONTRIBUTING/","text":"Contributing We would love to accept your contributions to Maker.js. Before you consider making any changes, please review the legal policy of Microsoft below. How to contribute Submit a CLA (below) Fork the repo. Check the Wiki for how to build and how to debug Make sure you can build with no errors. WE NEED UNIT TESTS :-) Commit changes in your own repo. Make a pull request. Legal You will need to complete a Contributor License Agreement (CLA). Briefly, this agreement testifies that you are granting us permission to use the submitted change according to the terms of the project's license, and that the work being submitted is under appropriate copyright. Please submit a Contributor License Agreement (CLA) before submitting a pull request. You may visit https://cla.microsoft.com to sign digitally. Alternatively, download the agreement ( Microsoft Contribution License Agreement.docx or Microsoft Contribution License Agreement.pdf ), sign, scan, and email it back to cla@microsoft.com . Be sure to include your github user name along with the agreement. Once we have received the signed CLA, we'll review the request.","title":"CONTRIBUTING"},{"location":"demos/node_modules/makerjs-ventgridcircle/node_modules/makerjs/CONTRIBUTING/#contributing","text":"We would love to accept your contributions to Maker.js. Before you consider making any changes, please review the legal policy of Microsoft below.","title":"Contributing"},{"location":"demos/node_modules/makerjs-ventgridcircle/node_modules/makerjs/CONTRIBUTING/#how-to-contribute","text":"Submit a CLA (below) Fork the repo. Check the Wiki for how to build and how to debug Make sure you can build with no errors. WE NEED UNIT TESTS :-) Commit changes in your own repo. Make a pull request.","title":"How to contribute"},{"location":"demos/node_modules/makerjs-ventgridcircle/node_modules/makerjs/CONTRIBUTING/#legal","text":"You will need to complete a Contributor License Agreement (CLA). Briefly, this agreement testifies that you are granting us permission to use the submitted change according to the terms of the project's license, and that the work being submitted is under appropriate copyright. Please submit a Contributor License Agreement (CLA) before submitting a pull request. You may visit https://cla.microsoft.com to sign digitally. Alternatively, download the agreement ( Microsoft Contribution License Agreement.docx or Microsoft Contribution License Agreement.pdf ), sign, scan, and email it back to cla@microsoft.com . Be sure to include your github user name along with the agreement. Once we have received the signed CLA, we'll review the request.","title":"Legal"},{"location":"demos/node_modules/marked/","text":"Marked \u26a1 built for speed \u2b07\ufe0f low-level compiler for parsing markdown without caching or blocking for long periods of time \u2696\ufe0f light-weight while implementing all markdown features from the supported flavors & specifications \ud83c\udf10 works in a browser, on a server, or from a command line interface (CLI) Demo Checkout the demo page to see marked in action \u26f9\ufe0f Docs Our documentation pages are also rendered using marked \ud83d\udcaf Also read about: Options Extensibility Compatibility Node.js: Only current and LTS Node.js versions are supported. End of life Node.js versions may become incompatible with Marked at any point in time. Browser: Not IE11 :) Installation CLI: npm install -g marked In-browser: npm install marked Usage Warning: \ud83d\udea8 Marked does not sanitize the output HTML. Please use a sanitize library, like DOMPurify (recommended), sanitize-html or insane on the output HTML! \ud83d\udea8 CLI # Example with stdin input $ marked -o hello.html hello world ^D $ cat hello.html <p>hello world</p> # Print all options $ marked --help Browser <!doctype html> < html > < head > < meta charset = \"utf-8\" /> < title > Marked in the browser </ title > </ head > < body > < div id = \"content\" ></ div > < script src = \"https://cdn.jsdelivr.net/npm/marked/marked.min.js\" ></ script > < script > document . getElementById ( 'content' ). innerHTML = marked . parse ( '# Marked in the browser\\n\\nRendered by **marked**.' ); </ script > </ body > </ html > License Copyright (c) 2011-2022, Christopher Jeffrey. (MIT License)","title":"Index"},{"location":"demos/node_modules/marked/#marked","text":"\u26a1 built for speed \u2b07\ufe0f low-level compiler for parsing markdown without caching or blocking for long periods of time \u2696\ufe0f light-weight while implementing all markdown features from the supported flavors & specifications \ud83c\udf10 works in a browser, on a server, or from a command line interface (CLI)","title":"Marked"},{"location":"demos/node_modules/marked/#demo","text":"Checkout the demo page to see marked in action \u26f9\ufe0f","title":"Demo"},{"location":"demos/node_modules/marked/#docs","text":"Our documentation pages are also rendered using marked \ud83d\udcaf Also read about: Options Extensibility","title":"Docs"},{"location":"demos/node_modules/marked/#compatibility","text":"Node.js: Only current and LTS Node.js versions are supported. End of life Node.js versions may become incompatible with Marked at any point in time. Browser: Not IE11 :)","title":"Compatibility"},{"location":"demos/node_modules/marked/#installation","text":"CLI: npm install -g marked In-browser: npm install marked","title":"Installation"},{"location":"demos/node_modules/marked/#usage","text":"","title":"Usage"},{"location":"demos/node_modules/marked/#warning-marked-does-not-sanitize-the-output-html-please-use-a-sanitize-library-like-dompurify-recommended-sanitize-html-or-insane-on-the-output-html","text":"CLI # Example with stdin input $ marked -o hello.html hello world ^D $ cat hello.html <p>hello world</p> # Print all options $ marked --help Browser <!doctype html> < html > < head > < meta charset = \"utf-8\" /> < title > Marked in the browser </ title > </ head > < body > < div id = \"content\" ></ div > < script src = \"https://cdn.jsdelivr.net/npm/marked/marked.min.js\" ></ script > < script > document . getElementById ( 'content' ). innerHTML = marked . parse ( '# Marked in the browser\\n\\nRendered by **marked**.' ); </ script > </ body > </ html >","title":"Warning: \ud83d\udea8 Marked does not sanitize the output HTML. Please use a sanitize library, like DOMPurify (recommended), sanitize-html or insane on the output HTML! \ud83d\udea8"},{"location":"demos/node_modules/marked/#license","text":"Copyright (c) 2011-2022, Christopher Jeffrey. (MIT License)","title":"License"},{"location":"demos/node_modules/marked/LICENSE/","text":"Contribution License Agreement If you contribute code to this project, you are implicitly allowing your code to be distributed under the MIT license. You are also implicitly verifying that all code is your original work. </legalese> Marked Copyright (c) 2018+, MarkedJS (https://github.com/markedjs/) Copyright (c) 2011-2018, Christopher Jeffrey (https://github.com/chjj/) Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. Markdown Copyright \u00a9 2004, John Gruber http://daringfireball.net/ All rights reserved. Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met: Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution. Neither the name \u201cMarkdown\u201d nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission. This software is provided by the copyright holders and contributors \u201cas is\u201d and any express or implied warranties, including, but not limited to, the implied warranties of merchantability and fitness for a particular purpose are disclaimed. In no event shall the copyright owner or contributors be liable for any direct, indirect, incidental, special, exemplary, or consequential damages (including, but not limited to, procurement of substitute goods or services; loss of use, data, or profits; or business interruption) however caused and on any theory of liability, whether in contract, strict liability, or tort (including negligence or otherwise) arising in any way out of the use of this software, even if advised of the possibility of such damage.","title":"LICENSE"},{"location":"demos/node_modules/marked/LICENSE/#contribution-license-agreement","text":"If you contribute code to this project, you are implicitly allowing your code to be distributed under the MIT license. You are also implicitly verifying that all code is your original work. </legalese>","title":"Contribution License Agreement"},{"location":"demos/node_modules/marked/LICENSE/#marked","text":"Copyright (c) 2018+, MarkedJS (https://github.com/markedjs/) Copyright (c) 2011-2018, Christopher Jeffrey (https://github.com/chjj/) Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"Marked"},{"location":"demos/node_modules/marked/LICENSE/#markdown","text":"Copyright \u00a9 2004, John Gruber http://daringfireball.net/ All rights reserved. Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met: Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution. Neither the name \u201cMarkdown\u201d nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission. This software is provided by the copyright holders and contributors \u201cas is\u201d and any express or implied warranties, including, but not limited to, the implied warranties of merchantability and fitness for a particular purpose are disclaimed. In no event shall the copyright owner or contributors be liable for any direct, indirect, incidental, special, exemplary, or consequential damages (including, but not limited to, procurement of substitute goods or services; loss of use, data, or profits; or business interruption) however caused and on any theory of liability, whether in contract, strict liability, or tort (including negligence or otherwise) arising in any way out of the use of this software, even if advised of the possibility of such damage.","title":"Markdown"},{"location":"demos/node_modules/object-assign/readme/","text":"ES2015 Object.assign() ponyfill Use the built-in Node.js 4 and up, as well as every evergreen browser (Chrome, Edge, Firefox, Opera, Safari), support Object.assign() :tada:. If you target only those environments, then by all means, use Object.assign() instead of this package. Install $ npm install --save object-assign Usage const objectAssign = require ( 'object-assign' ); objectAssign ({ foo : 0 }, { bar : 1 }); //=> {foo: 0, bar: 1} // multiple sources objectAssign ({ foo : 0 }, { bar : 1 }, { baz : 2 }); //=> {foo: 0, bar: 1, baz: 2} // overwrites equal keys objectAssign ({ foo : 0 }, { foo : 1 }, { foo : 2 }); //=> {foo: 2} // ignores null and undefined sources objectAssign ({ foo : 0 }, null , { bar : 1 }, undefined ); //=> {foo: 0, bar: 1} API objectAssign(target, [source, ...]) Assigns enumerable own properties of source objects to the target object and returns the target object. Additional source objects will overwrite previous ones. Resources ES2015 spec - Object.assign Related deep-assign - Recursive Object.assign() License MIT \u00a9 Sindre Sorhus","title":"Readme"},{"location":"demos/node_modules/object-assign/readme/#use-the-built-in","text":"Node.js 4 and up, as well as every evergreen browser (Chrome, Edge, Firefox, Opera, Safari), support Object.assign() :tada:. If you target only those environments, then by all means, use Object.assign() instead of this package.","title":"Use the built-in"},{"location":"demos/node_modules/object-assign/readme/#install","text":"$ npm install --save object-assign","title":"Install"},{"location":"demos/node_modules/object-assign/readme/#usage","text":"const objectAssign = require ( 'object-assign' ); objectAssign ({ foo : 0 }, { bar : 1 }); //=> {foo: 0, bar: 1} // multiple sources objectAssign ({ foo : 0 }, { bar : 1 }, { baz : 2 }); //=> {foo: 0, bar: 1, baz: 2} // overwrites equal keys objectAssign ({ foo : 0 }, { foo : 1 }, { foo : 2 }); //=> {foo: 2} // ignores null and undefined sources objectAssign ({ foo : 0 }, null , { bar : 1 }, undefined ); //=> {foo: 0, bar: 1}","title":"Usage"},{"location":"demos/node_modules/object-assign/readme/#api","text":"","title":"API"},{"location":"demos/node_modules/object-assign/readme/#objectassigntarget-source","text":"Assigns enumerable own properties of source objects to the target object and returns the target object. Additional source objects will overwrite previous ones.","title":"objectAssign(target, [source, ...])"},{"location":"demos/node_modules/object-assign/readme/#resources","text":"ES2015 spec - Object.assign","title":"Resources"},{"location":"demos/node_modules/object-assign/readme/#related","text":"deep-assign - Recursive Object.assign()","title":"Related"},{"location":"demos/node_modules/object-assign/readme/#license","text":"MIT \u00a9 Sindre Sorhus","title":"License"},{"location":"demos/node_modules/opentype-layout/LICENSE/","text":"The MIT License (MIT) Copyright (c) 2016 Jam3 Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"LICENSE"},{"location":"demos/node_modules/opentype-layout/METRICS/","text":"Metrics This will act as a living document for proper handling of text layout in canvas/DOM. Please open an issue if you find issues with the math. Opentype.js and many systems keep the font paths in \"units\" in an EM square, chosen by the font designer. e.g. 1em may equal 2048 units . These units have the origin (0, 0) at the lower left, unlike Canvas2D context. To scale the font paths to a pixel size, we can use the font size in px units: var scale = 1 / font.unitsPerEm * fontSizePx // Flip Y axis to match lower-left EM square units context.scale(scale, -scale); Ascender","title":"METRICS"},{"location":"demos/node_modules/opentype-layout/METRICS/#metrics","text":"This will act as a living document for proper handling of text layout in canvas/DOM. Please open an issue if you find issues with the math.","title":"Metrics"},{"location":"demos/node_modules/opentype-layout/METRICS/#_1","text":"Opentype.js and many systems keep the font paths in \"units\" in an EM square, chosen by the font designer. e.g. 1em may equal 2048 units . These units have the origin (0, 0) at the lower left, unlike Canvas2D context. To scale the font paths to a pixel size, we can use the font size in px units: var scale = 1 / font.unitsPerEm * fontSizePx // Flip Y axis to match lower-left EM square units context.scale(scale, -scale);","title":""},{"location":"demos/node_modules/opentype-layout/METRICS/#ascender","text":"","title":"Ascender"},{"location":"demos/node_modules/opentype.js/","text":"opentype.js opentype.js is a JavaScript parser and writer for TrueType and OpenType fonts. It gives you access to the letterforms of text from the browser or node.js. Here's an example. We load a font, then display it on a canvas with id \"canvas\": opentype.load('fonts/Roboto-Black.ttf', function(err, font) { if (err) { alert('Font could not be loaded: ' + err); } else { var ctx = document.getElementById('canvas').getContext('2d'); // Construct a Path object containing the letter shapes of the given text. // The other parameters are x, y and fontSize. // Note that y is the position of the baseline. var path = font.getPath('Hello, World!', 0, 150, 72); // If you just want to draw the text you can also use font.draw(ctx, text, x, y, fontSize). path.draw(ctx); } }); See the project website for a live demo. Features Create a b\u00e9zier path out of a piece of text. Support for composite glyphs (accented letters). Support for WOFF, OTF, TTF (both with TrueType glyf and PostScript cff outlines) Support for kerning (Using GPOS or the kern table). Support for ligatures. Support for TrueType font hinting. Very efficient. Runs in the browser and node.js. Installation Directly Download the latest ZIP and grab the files in the dist folder. These are compiled. Using npm npm install --save opentype.js OpenType.js uses ES6-style imports, so debugging it in Node.js requires running npm run build first. Use npm run watch to automatically rebuild when files change. Using Bower To install using Bower , enter the following command in your project directory: bower install opentype.js You can then include them in your scripts using: <script src=\"/bower_components/opentype.js/dist/opentype.js\"></script> Using via a CDN To use via a CDN, include the following code in your html: <script src=\"https://cdn.jsdelivr.net/npm/opentype.js@latest/dist/opentype.min.js\"></script> API Loading a font Use opentype.load(url, callback) to load a font from a URL. Since this method goes out the network, it is asynchronous. The callback gets (err, font) where font is a Font object. Check if the err is null before using the font. opentype.load('fonts/Roboto-Black.ttf', function(err, font) { if (err) { alert('Could not load font: ' + err); } else { // Use your font here. } }); If you already have an ArrayBuffer , you can use opentype.parse(buffer) to parse the buffer. This method always returns a Font, but check font.supported to see if the font is in a supported format. (Fonts can be marked unsupported if they have encoding tables we can't read). var font = opentype.parse(myBuffer); Loading a font synchronously (Node.js) Use opentype.loadSync(url) to load a font from a file and return a Font object. Throws an error if the font could not be parsed. This only works in Node.js. var font = opentype.loadSync('fonts/Roboto-Black.ttf'); Writing a font Once you have a Font object (either by using opentype.load or by creating a new one from scratch) you can write it back out as a binary file. In the browser, you can use Font.download() to instruct the browser to download a binary .OTF file. The name is based on the font name. // Create the b\u00e9zier paths for each of the glyphs. // Note that the .notdef glyph is required. var notdefGlyph = new opentype.Glyph({ name: '.notdef', unicode: 0, advanceWidth: 650, path: new opentype.Path() }); var aPath = new opentype.Path(); aPath.moveTo(100, 0); aPath.lineTo(100, 700); // more drawing instructions... var aGlyph = new opentype.Glyph({ name: 'A', unicode: 65, advanceWidth: 650, path: aPath }); var glyphs = [notdefGlyph, aGlyph]; var font = new opentype.Font({ familyName: 'OpenTypeSans', styleName: 'Medium', unitsPerEm: 1000, ascender: 800, descender: -200, glyphs: glyphs}); font.download(); If you want to inspect the font, use font.toTables() to generate an object showing the data structures that map directly to binary values. If you want to get an ArrayBuffer , use font.toArrayBuffer() . The Font object A Font represents a loaded OpenType font file. It contains a set of glyphs and methods to draw text on a drawing context, or to get a path representing the text. glyphs : an indexed list of Glyph objects. unitsPerEm : X/Y coordinates in fonts are stored as integers. This value determines the size of the grid. Common values are 2048 and 4096. ascender : Distance from baseline of highest ascender. In font units, not pixels. descender : Distance from baseline of lowest descender. In font units, not pixels. Font.getPath(text, x, y, fontSize, options) Create a Path that represents the given text. * x : Horizontal position of the beginning of the text. (default: 0) * y : Vertical position of the baseline of the text. (default: 0) * fontSize : Size of the text in pixels (default: 72). Options is an optional object containing: * kerning : if true takes kerning information into account (default: true) * features : an object with OpenType feature tags as keys, and a boolean value to enable each feature. Currently only ligature features \"liga\" and \"rlig\" are supported (default: true). * hinting : if true uses TrueType font hinting if available (default: false). Note: there is also Font.getPaths with the same arguments which returns a list of Paths. Font.draw(ctx, text, x, y, fontSize, options) Create a Path that represents the given text. * ctx : A 2D drawing context, like Canvas. * x : Horizontal position of the beginning of the text. (default: 0) * y : Vertical position of the baseline of the text. (default: 0) * fontSize : Size of the text in pixels (default: 72). Options is an optional object containing: * kerning : if true takes kerning information into account (default: true) * features : an object with OpenType feature tags as keys, and a boolean value to enable each feature. Currently only ligature features \"liga\" and \"rlig\" are supported (default: true). * hinting : if true uses TrueType font hinting if available (default: false). Font.drawPoints(ctx, text, x, y, fontSize, options) Draw the points of all glyphs in the text. On-curve points will be drawn in blue, off-curve points will be drawn in red. The arguments are the same as Font.draw . Font.drawMetrics(ctx, text, x, y, fontSize, options) Draw lines indicating important font measurements for all glyphs in the text. Black lines indicate the origin of the coordinate system (point 0,0). Blue lines indicate the glyph bounding box. Green line indicates the advance width of the glyph. Font.stringToGlyphs(string) Convert the string to a list of glyph objects. Note that there is no strict 1-to-1 correspondence between the string and glyph list due to possible substitutions such as ligatures. The list of returned glyphs can be larger or smaller than the length of the given string. Font.charToGlyph(char) Convert the character to a Glyph object. Returns null if the glyph could not be found. Note that this function assumes that there is a one-to-one mapping between the given character and a glyph; for complex scripts this might not be the case. Font.getKerningValue(leftGlyph, rightGlyph) Retrieve the value of the kerning pair between the left glyph (or its index) and the right glyph (or its index). If no kerning pair is found, return 0. The kerning value gets added to the advance width when calculating the spacing between glyphs. Font.getAdvanceWidth(text, fontSize, options) Returns the advance width of a text. This is something different than Path.getBoundingBox() as for example a suffixed whitespace increases the advancewidth but not the bounding box or an overhanging letter like a calligraphic 'f' might have a quite larger bounding box than its advance width. This corresponds to canvas2dContext.measureText(text).width * fontSize : Size of the text in pixels (default: 72). * options : See Font.getPath The Glyph object A Glyph is an individual mark that often corresponds to a character. Some glyphs, such as ligatures, are a combination of many characters. Glyphs are the basic building blocks of a font. font : A reference to the Font object. name : The glyph name (e.g. \"Aring\", \"five\") unicode : The primary unicode value of this glyph (can be undefined ). unicodes : The list of unicode values for this glyph (most of the time this will be 1, can also be empty). index : The index number of the glyph. advanceWidth : The width to advance the pen when drawing this glyph. xMin , yMin , xMax , yMax : The bounding box of the glyph. path : The raw, unscaled path of the glyph. Glyph.getPath(x, y, fontSize) Get a scaled glyph Path object we can draw on a drawing context. * x : Horizontal position of the glyph. (default: 0) * y : Vertical position of the baseline of the glyph. (default: 0) * fontSize : Font size in pixels (default: 72). Glyph.getBoundingBox() Calculate the minimum bounding box for the unscaled path of the given glyph. Returns an opentype.BoundingBox object that contains x1/y1/x2/y2. If the glyph has no points (e.g. a space character), all coordinates will be zero. Glyph.draw(ctx, x, y, fontSize) Draw the glyph on the given context. * ctx : The drawing context. * x : Horizontal position of the glyph. (default: 0) * y : Vertical position of the baseline of the glyph. (default: 0) * fontSize : Font size, in pixels (default: 72). Glyph.drawPoints(ctx, x, y, fontSize) Draw the points of the glyph on the given context. On-curve points will be drawn in blue, off-curve points will be drawn in red. The arguments are the same as Glyph.draw . Glyph.drawMetrics(ctx, x, y, fontSize) Draw lines indicating important font measurements for all glyphs in the text. Black lines indicate the origin of the coordinate system (point 0,0). Blue lines indicate the glyph bounding box. Green line indicates the advance width of the glyph. The arguments are the same as Glyph.draw . The Path object Once you have a path through Font.getPath or Glyph.getPath , you can use it. commands : The path commands. Each command is a dictionary containing a type and coordinates. See below for examples. fill : The fill color of the Path . Color is a string representing a CSS color . (default: 'black') stroke : The stroke color of the Path . Color is a string representing a CSS color . (default: null : the path will not be stroked) strokeWidth : The line thickness of the Path . (default: 1, but since the stroke is null no stroke will be drawn) Path.draw(ctx) Draw the path on the given 2D context. This uses the fill , stroke and strokeWidth properties of the Path object. * ctx : The drawing context. Path.getBoundingBox() Calculate the minimum bounding box for the given path. Returns an opentype.BoundingBox object that contains x1/y1/x2/y2. If the path is empty (e.g. a space character), all coordinates will be zero. Path.toPathData(decimalPlaces) Convert the Path to a string of path data instructions. See http://www.w3.org/TR/SVG/paths.html#PathData * decimalPlaces : The amount of decimal places for floating-point values. (default: 2) Path.toSVG(decimalPlaces) Convert the path to a SVG <path> element, as a string. * decimalPlaces : The amount of decimal places for floating-point values. (default: 2) Path commands Move To : Move to a new position. This creates a new contour. Example: {type: 'M', x: 100, y: 200} Line To : Draw a line from the previous position to the given coordinate. Example: {type: 'L', x: 100, y: 200} Curve To : Draw a b\u00e9zier curve from the current position to the given coordinate. Example: {type: 'C', x1: 0, y1: 50, x2: 100, y2: 200, x: 100, y: 200} Quad To : Draw a quadratic b\u00e9zier curve from the current position to the given coordinate. Example: {type: 'Q', x1: 0, y1: 50, x: 100, y: 200} Close : Close the path. If stroked, this will draw a line from the first to the last point of the contour. Example: {type: 'Z'} Planned Support for contextual alternates. Thanks I would like to acknowledge the work of others without which opentype.js wouldn't be possible: pdf.js : for an awesome implementation of font parsing in the browser. FreeType : for the nitty-gritty details and filling in the gaps when the spec was incomplete. ttf.js : for hints about the TrueType parsing code. CFF-glyphlet-fonts : for a great explanation/implementation of CFF font writing. tiny-inflate : for WOFF decompression. Microsoft Typography : the go-to reference for all things OpenType. Adobe Compact Font Format spec and the Adobe Type 2 Charstring spec : explains the data structures and commands for the CFF glyph format. All contributing authors mentioned in the AUTHORS file.","title":"opentype.js"},{"location":"demos/node_modules/opentype.js/#opentypejs","text":"opentype.js is a JavaScript parser and writer for TrueType and OpenType fonts. It gives you access to the letterforms of text from the browser or node.js. Here's an example. We load a font, then display it on a canvas with id \"canvas\": opentype.load('fonts/Roboto-Black.ttf', function(err, font) { if (err) { alert('Font could not be loaded: ' + err); } else { var ctx = document.getElementById('canvas').getContext('2d'); // Construct a Path object containing the letter shapes of the given text. // The other parameters are x, y and fontSize. // Note that y is the position of the baseline. var path = font.getPath('Hello, World!', 0, 150, 72); // If you just want to draw the text you can also use font.draw(ctx, text, x, y, fontSize). path.draw(ctx); } }); See the project website for a live demo.","title":"opentype.js"},{"location":"demos/node_modules/opentype.js/#features","text":"Create a b\u00e9zier path out of a piece of text. Support for composite glyphs (accented letters). Support for WOFF, OTF, TTF (both with TrueType glyf and PostScript cff outlines) Support for kerning (Using GPOS or the kern table). Support for ligatures. Support for TrueType font hinting. Very efficient. Runs in the browser and node.js.","title":"Features"},{"location":"demos/node_modules/opentype.js/#installation","text":"","title":"Installation"},{"location":"demos/node_modules/opentype.js/#directly","text":"Download the latest ZIP and grab the files in the dist folder. These are compiled.","title":"Directly"},{"location":"demos/node_modules/opentype.js/#using-npm","text":"npm install --save opentype.js OpenType.js uses ES6-style imports, so debugging it in Node.js requires running npm run build first. Use npm run watch to automatically rebuild when files change.","title":"Using npm"},{"location":"demos/node_modules/opentype.js/#using-bower","text":"To install using Bower , enter the following command in your project directory: bower install opentype.js You can then include them in your scripts using: <script src=\"/bower_components/opentype.js/dist/opentype.js\"></script>","title":"Using Bower"},{"location":"demos/node_modules/opentype.js/#using-via-a-cdn","text":"To use via a CDN, include the following code in your html: <script src=\"https://cdn.jsdelivr.net/npm/opentype.js@latest/dist/opentype.min.js\"></script>","title":"Using via a CDN"},{"location":"demos/node_modules/opentype.js/#api","text":"","title":"API"},{"location":"demos/node_modules/opentype.js/#loading-a-font","text":"Use opentype.load(url, callback) to load a font from a URL. Since this method goes out the network, it is asynchronous. The callback gets (err, font) where font is a Font object. Check if the err is null before using the font. opentype.load('fonts/Roboto-Black.ttf', function(err, font) { if (err) { alert('Could not load font: ' + err); } else { // Use your font here. } }); If you already have an ArrayBuffer , you can use opentype.parse(buffer) to parse the buffer. This method always returns a Font, but check font.supported to see if the font is in a supported format. (Fonts can be marked unsupported if they have encoding tables we can't read). var font = opentype.parse(myBuffer);","title":"Loading a font"},{"location":"demos/node_modules/opentype.js/#loading-a-font-synchronously-nodejs","text":"Use opentype.loadSync(url) to load a font from a file and return a Font object. Throws an error if the font could not be parsed. This only works in Node.js. var font = opentype.loadSync('fonts/Roboto-Black.ttf');","title":"Loading a font synchronously (Node.js)"},{"location":"demos/node_modules/opentype.js/#writing-a-font","text":"Once you have a Font object (either by using opentype.load or by creating a new one from scratch) you can write it back out as a binary file. In the browser, you can use Font.download() to instruct the browser to download a binary .OTF file. The name is based on the font name. // Create the b\u00e9zier paths for each of the glyphs. // Note that the .notdef glyph is required. var notdefGlyph = new opentype.Glyph({ name: '.notdef', unicode: 0, advanceWidth: 650, path: new opentype.Path() }); var aPath = new opentype.Path(); aPath.moveTo(100, 0); aPath.lineTo(100, 700); // more drawing instructions... var aGlyph = new opentype.Glyph({ name: 'A', unicode: 65, advanceWidth: 650, path: aPath }); var glyphs = [notdefGlyph, aGlyph]; var font = new opentype.Font({ familyName: 'OpenTypeSans', styleName: 'Medium', unitsPerEm: 1000, ascender: 800, descender: -200, glyphs: glyphs}); font.download(); If you want to inspect the font, use font.toTables() to generate an object showing the data structures that map directly to binary values. If you want to get an ArrayBuffer , use font.toArrayBuffer() .","title":"Writing a font"},{"location":"demos/node_modules/opentype.js/#the-font-object","text":"A Font represents a loaded OpenType font file. It contains a set of glyphs and methods to draw text on a drawing context, or to get a path representing the text. glyphs : an indexed list of Glyph objects. unitsPerEm : X/Y coordinates in fonts are stored as integers. This value determines the size of the grid. Common values are 2048 and 4096. ascender : Distance from baseline of highest ascender. In font units, not pixels. descender : Distance from baseline of lowest descender. In font units, not pixels.","title":"The Font object"},{"location":"demos/node_modules/opentype.js/#fontgetpathtext-x-y-fontsize-options","text":"Create a Path that represents the given text. * x : Horizontal position of the beginning of the text. (default: 0) * y : Vertical position of the baseline of the text. (default: 0) * fontSize : Size of the text in pixels (default: 72). Options is an optional object containing: * kerning : if true takes kerning information into account (default: true) * features : an object with OpenType feature tags as keys, and a boolean value to enable each feature. Currently only ligature features \"liga\" and \"rlig\" are supported (default: true). * hinting : if true uses TrueType font hinting if available (default: false). Note: there is also Font.getPaths with the same arguments which returns a list of Paths.","title":"Font.getPath(text, x, y, fontSize, options)"},{"location":"demos/node_modules/opentype.js/#fontdrawctx-text-x-y-fontsize-options","text":"Create a Path that represents the given text. * ctx : A 2D drawing context, like Canvas. * x : Horizontal position of the beginning of the text. (default: 0) * y : Vertical position of the baseline of the text. (default: 0) * fontSize : Size of the text in pixels (default: 72). Options is an optional object containing: * kerning : if true takes kerning information into account (default: true) * features : an object with OpenType feature tags as keys, and a boolean value to enable each feature. Currently only ligature features \"liga\" and \"rlig\" are supported (default: true). * hinting : if true uses TrueType font hinting if available (default: false).","title":"Font.draw(ctx, text, x, y, fontSize, options)"},{"location":"demos/node_modules/opentype.js/#fontdrawpointsctx-text-x-y-fontsize-options","text":"Draw the points of all glyphs in the text. On-curve points will be drawn in blue, off-curve points will be drawn in red. The arguments are the same as Font.draw .","title":"Font.drawPoints(ctx, text, x, y, fontSize, options)"},{"location":"demos/node_modules/opentype.js/#fontdrawmetricsctx-text-x-y-fontsize-options","text":"Draw lines indicating important font measurements for all glyphs in the text. Black lines indicate the origin of the coordinate system (point 0,0). Blue lines indicate the glyph bounding box. Green line indicates the advance width of the glyph.","title":"Font.drawMetrics(ctx, text, x, y, fontSize, options)"},{"location":"demos/node_modules/opentype.js/#fontstringtoglyphsstring","text":"Convert the string to a list of glyph objects. Note that there is no strict 1-to-1 correspondence between the string and glyph list due to possible substitutions such as ligatures. The list of returned glyphs can be larger or smaller than the length of the given string.","title":"Font.stringToGlyphs(string)"},{"location":"demos/node_modules/opentype.js/#fontchartoglyphchar","text":"Convert the character to a Glyph object. Returns null if the glyph could not be found. Note that this function assumes that there is a one-to-one mapping between the given character and a glyph; for complex scripts this might not be the case.","title":"Font.charToGlyph(char)"},{"location":"demos/node_modules/opentype.js/#fontgetkerningvalueleftglyph-rightglyph","text":"Retrieve the value of the kerning pair between the left glyph (or its index) and the right glyph (or its index). If no kerning pair is found, return 0. The kerning value gets added to the advance width when calculating the spacing between glyphs.","title":"Font.getKerningValue(leftGlyph, rightGlyph)"},{"location":"demos/node_modules/opentype.js/#fontgetadvancewidthtext-fontsize-options","text":"Returns the advance width of a text. This is something different than Path.getBoundingBox() as for example a suffixed whitespace increases the advancewidth but not the bounding box or an overhanging letter like a calligraphic 'f' might have a quite larger bounding box than its advance width. This corresponds to canvas2dContext.measureText(text).width * fontSize : Size of the text in pixels (default: 72). * options : See Font.getPath","title":"Font.getAdvanceWidth(text, fontSize, options)"},{"location":"demos/node_modules/opentype.js/#the-glyph-object","text":"A Glyph is an individual mark that often corresponds to a character. Some glyphs, such as ligatures, are a combination of many characters. Glyphs are the basic building blocks of a font. font : A reference to the Font object. name : The glyph name (e.g. \"Aring\", \"five\") unicode : The primary unicode value of this glyph (can be undefined ). unicodes : The list of unicode values for this glyph (most of the time this will be 1, can also be empty). index : The index number of the glyph. advanceWidth : The width to advance the pen when drawing this glyph. xMin , yMin , xMax , yMax : The bounding box of the glyph. path : The raw, unscaled path of the glyph.","title":"The Glyph object"},{"location":"demos/node_modules/opentype.js/#glyphgetpathx-y-fontsize","text":"Get a scaled glyph Path object we can draw on a drawing context. * x : Horizontal position of the glyph. (default: 0) * y : Vertical position of the baseline of the glyph. (default: 0) * fontSize : Font size in pixels (default: 72).","title":"Glyph.getPath(x, y, fontSize)"},{"location":"demos/node_modules/opentype.js/#glyphgetboundingbox","text":"Calculate the minimum bounding box for the unscaled path of the given glyph. Returns an opentype.BoundingBox object that contains x1/y1/x2/y2. If the glyph has no points (e.g. a space character), all coordinates will be zero.","title":"Glyph.getBoundingBox()"},{"location":"demos/node_modules/opentype.js/#glyphdrawctx-x-y-fontsize","text":"Draw the glyph on the given context. * ctx : The drawing context. * x : Horizontal position of the glyph. (default: 0) * y : Vertical position of the baseline of the glyph. (default: 0) * fontSize : Font size, in pixels (default: 72).","title":"Glyph.draw(ctx, x, y, fontSize)"},{"location":"demos/node_modules/opentype.js/#glyphdrawpointsctx-x-y-fontsize","text":"Draw the points of the glyph on the given context. On-curve points will be drawn in blue, off-curve points will be drawn in red. The arguments are the same as Glyph.draw .","title":"Glyph.drawPoints(ctx, x, y, fontSize)"},{"location":"demos/node_modules/opentype.js/#glyphdrawmetricsctx-x-y-fontsize","text":"Draw lines indicating important font measurements for all glyphs in the text. Black lines indicate the origin of the coordinate system (point 0,0). Blue lines indicate the glyph bounding box. Green line indicates the advance width of the glyph. The arguments are the same as Glyph.draw .","title":"Glyph.drawMetrics(ctx, x, y, fontSize)"},{"location":"demos/node_modules/opentype.js/#the-path-object","text":"Once you have a path through Font.getPath or Glyph.getPath , you can use it. commands : The path commands. Each command is a dictionary containing a type and coordinates. See below for examples. fill : The fill color of the Path . Color is a string representing a CSS color . (default: 'black') stroke : The stroke color of the Path . Color is a string representing a CSS color . (default: null : the path will not be stroked) strokeWidth : The line thickness of the Path . (default: 1, but since the stroke is null no stroke will be drawn)","title":"The Path object"},{"location":"demos/node_modules/opentype.js/#pathdrawctx","text":"Draw the path on the given 2D context. This uses the fill , stroke and strokeWidth properties of the Path object. * ctx : The drawing context.","title":"Path.draw(ctx)"},{"location":"demos/node_modules/opentype.js/#pathgetboundingbox","text":"Calculate the minimum bounding box for the given path. Returns an opentype.BoundingBox object that contains x1/y1/x2/y2. If the path is empty (e.g. a space character), all coordinates will be zero.","title":"Path.getBoundingBox()"},{"location":"demos/node_modules/opentype.js/#pathtopathdatadecimalplaces","text":"Convert the Path to a string of path data instructions. See http://www.w3.org/TR/SVG/paths.html#PathData * decimalPlaces : The amount of decimal places for floating-point values. (default: 2)","title":"Path.toPathData(decimalPlaces)"},{"location":"demos/node_modules/opentype.js/#pathtosvgdecimalplaces","text":"Convert the path to a SVG <path> element, as a string. * decimalPlaces : The amount of decimal places for floating-point values. (default: 2)","title":"Path.toSVG(decimalPlaces)"},{"location":"demos/node_modules/opentype.js/#path-commands","text":"Move To : Move to a new position. This creates a new contour. Example: {type: 'M', x: 100, y: 200} Line To : Draw a line from the previous position to the given coordinate. Example: {type: 'L', x: 100, y: 200} Curve To : Draw a b\u00e9zier curve from the current position to the given coordinate. Example: {type: 'C', x1: 0, y1: 50, x2: 100, y2: 200, x: 100, y: 200} Quad To : Draw a quadratic b\u00e9zier curve from the current position to the given coordinate. Example: {type: 'Q', x1: 0, y1: 50, x: 100, y: 200} Close : Close the path. If stroked, this will draw a line from the first to the last point of the contour. Example: {type: 'Z'}","title":"Path commands"},{"location":"demos/node_modules/opentype.js/#planned","text":"Support for contextual alternates.","title":"Planned"},{"location":"demos/node_modules/opentype.js/#thanks","text":"I would like to acknowledge the work of others without which opentype.js wouldn't be possible: pdf.js : for an awesome implementation of font parsing in the browser. FreeType : for the nitty-gritty details and filling in the gaps when the spec was incomplete. ttf.js : for hints about the TrueType parsing code. CFF-glyphlet-fonts : for a great explanation/implementation of CFF font writing. tiny-inflate : for WOFF decompression. Microsoft Typography : the go-to reference for all things OpenType. Adobe Compact Font Format spec and the Adobe Type 2 Charstring spec : explains the data structures and commands for the CFF glyph format. All contributing authors mentioned in the AUTHORS file.","title":"Thanks"},{"location":"demos/node_modules/opentype.js/AUTHORS/","text":"OpenType.js is written and maintained by Frederik De Bleser frederik@debleser.be & contributors. Contributors Andreas K\u00f6berle Romuald Bulyshko Fran\u00e7ois Pirsch Denis Moyogo Jacquerye Miguel Sousa Louis-R\u00e9mi Bab\u00e9 Mike Kamermans Sascha Brawer Jo\u00ebl Galeran Gabe Harbs Romuald Bulyshko Martin Bolot Rob Garrison Francois Poizat Vildan Akchurin Josh Marinacci Ning Sun Adam Lachmanski Tom Shinnick Andreas K\u00f6berle Shiro Jarda Kot\u011b\u0161ovec Dima Yv Konstantin K\u00e4fer Victor Powell Amit Halberstam Jacky Nguyen Dominik Lessel Ryan Burgett \u738b\u96c6\u9e44 Axel Kittenberger Tom Shinnick","title":"AUTHORS"},{"location":"demos/node_modules/opentype.js/AUTHORS/#contributors","text":"Andreas K\u00f6berle Romuald Bulyshko Fran\u00e7ois Pirsch Denis Moyogo Jacquerye Miguel Sousa Louis-R\u00e9mi Bab\u00e9 Mike Kamermans Sascha Brawer Jo\u00ebl Galeran Gabe Harbs Romuald Bulyshko Martin Bolot Rob Garrison Francois Poizat Vildan Akchurin Josh Marinacci Ning Sun Adam Lachmanski Tom Shinnick Andreas K\u00f6berle Shiro Jarda Kot\u011b\u0161ovec Dima Yv Konstantin K\u00e4fer Victor Powell Amit Halberstam Jacky Nguyen Dominik Lessel Ryan Burgett \u738b\u96c6\u9e44 Axel Kittenberger Tom Shinnick","title":"Contributors"},{"location":"demos/node_modules/opentype.js/CONTRIBUTING/","text":"Organization of the source code The source of opentype.js is divided into modules, located in the src directory. We use rollup to combine this into a single package with every release. When creating a pull request, you don't need to run npm run dist -- we'll do that when creating a release. How to hack on the source On our GitHub page , click the \"Fork\" button to create your personal fork of the opentype.js repository. Clone your repository: git clone git://github.com/nodebox/opentype.js.git Create a new branch for your feature. For example: git checkout -b my-awesome-feature . A dedicated branch for your pull request means you can develop multiple features at the same time, and ensures that your pull request is stable even if you later decide to develop an unrelated feature. Install the development dependencies: cd opentype.js npm install Start the development server. This watches file changes and compiles and serves the page at http://localhost:8080/ npm start This bundles all source files under dist/opentype.js . Make some changes Check if tests pass npm test Commit your changes git add --all && git commit Submit your pull request -- and thanks in advance! Making a distributable for yourself If you want to create your own self-contained version of opentype.js, run `npm run dist` This compiles the source and places opentype.js and opentype.min.js in the dist folder. How we publish a release We use a set of npm scripts to build releases: Update the version number in package.json and bower.json . Add information about the new release in RELEASES.md . Run npm run dist to update the files in the dist folder. Commit ( git commit -a ) and create a tag (e.g. git tag 1.2.1 ). Push and push tags ( git push && git push --tags ). Once published, Travis will push the new tagged release to npm. Bower updates automatically.","title":"CONTRIBUTING"},{"location":"demos/node_modules/opentype.js/CONTRIBUTING/#organization-of-the-source-code","text":"The source of opentype.js is divided into modules, located in the src directory. We use rollup to combine this into a single package with every release. When creating a pull request, you don't need to run npm run dist -- we'll do that when creating a release.","title":"Organization of the source code"},{"location":"demos/node_modules/opentype.js/CONTRIBUTING/#how-to-hack-on-the-source","text":"On our GitHub page , click the \"Fork\" button to create your personal fork of the opentype.js repository. Clone your repository: git clone git://github.com/nodebox/opentype.js.git Create a new branch for your feature. For example: git checkout -b my-awesome-feature . A dedicated branch for your pull request means you can develop multiple features at the same time, and ensures that your pull request is stable even if you later decide to develop an unrelated feature. Install the development dependencies: cd opentype.js npm install Start the development server. This watches file changes and compiles and serves the page at http://localhost:8080/ npm start This bundles all source files under dist/opentype.js . Make some changes Check if tests pass npm test Commit your changes git add --all && git commit Submit your pull request -- and thanks in advance!","title":"How to hack on the source"},{"location":"demos/node_modules/opentype.js/CONTRIBUTING/#making-a-distributable-for-yourself","text":"If you want to create your own self-contained version of opentype.js, run `npm run dist` This compiles the source and places opentype.js and opentype.min.js in the dist folder.","title":"Making a distributable for yourself"},{"location":"demos/node_modules/opentype.js/CONTRIBUTING/#how-we-publish-a-release","text":"We use a set of npm scripts to build releases: Update the version number in package.json and bower.json . Add information about the new release in RELEASES.md . Run npm run dist to update the files in the dist folder. Commit ( git commit -a ) and create a tag (e.g. git tag 1.2.1 ). Push and push tags ( git push && git push --tags ). Once published, Travis will push the new tagged release to npm. Bower updates automatically.","title":"How we publish a release"},{"location":"demos/node_modules/opentype.js/RELEASES/","text":"0.9.0 (June 21, 2018) Update/Migrate rollup, update all dependencies, add package-lock.json and fix circular dependency (thanks @jolg42!) Parse cmap table with platform id 0 as well (PR #350, fixes #348) (thanks @moyogo!) Prevent auto-generated postScriptName from containing whitespace (#339) (thanks @mqudsi!) Support non-Basic-Multilingual-Plane (BMP) characters (#338) (thanks @antonytse!) GPOS: display correct error message in some cases of malformed data (#336) (thanks @fpirsch!) Restore simple GPOS kerning in font.getKerningValue (#335) (thanks @fpirsch!) Fix duplicated lineTo when using getPath (#328) (thanks @jolg42!) Change example generate-font-node.js to be compatible with any Node.js version (thanks @jolg42!) 0.8.0 (March 6, 2018) Fix loading font file on Android devices (thanks @maoamid!). Fix loading fonts from a local source (file://data/... for Android for example (thanks @IntuilabGit!). Fixing 2 issues when hinting \"mutlu.ttf\" (thanks @axkibe!). Add some support for OpenType font variations (thanks @taylorb-monotype!). Make cmap table format 12 if needed (thanks @Jolg42!). Enable uglify's mangle and compress optimizations for a ~30% smaller minified file. (thanks @lojjic & @Jolg42!). Better parsing of NULL pointers (thanks @fpirsch!). Fix bad path init (empty glyphs) (thanks @fpirsch!). Rewrite GPOS parsing (thanks @fpirsch!). Roboto-Black.ttf updated (thanks @Jolg42!). 0.7.3 (July 18, 2017) Fix \"Object x already has key\" error in Safari (thanks @neiltron!). Fixed a bug where Font.getPaths() didn't pass options (thanks @keeslinp!). 0.7.2 (June 7, 2017) WOFF fonts with cvt tables now parse correctly. Migrated to ES6 modules and let/const. Use Rollup to bundle the JavaScript. 0.7.1 (Apr 25, 2017) Auto-generated glyph IDs (CID-keyed fonts) are now prefixed with \"gid\", e.g. \"gid42\". Fix ligature substitution for fonts with coverage table format 2. Better error messages when no valid cmap is found. 0.7.0 (Apr 25, 2017) Add font hinting (thanks @axkibe!) Add support for CID-keyed fonts, thanks to @tshinnic. TrueType fonts with signature 'true' or 'typ1' are also supported. Fixing rounding issues. Add GSUB and kern output in font-inspector. Add font loading error callback. Dev server turns browser caching off. Add encoding support for variation adjustment deltas (thanks @brawer!). 0.6.9 (Jan 17, 2017) Add ligature rendering (thanks @fpirsch!) 0.6.8 (Jan 9, 2017) Add a getBoundingBox method to the Path and Glyph objects. 0.6.7 (Jan 5, 2017) Add basic support for Mac OS X format kern tables. 0.6.6 (October 25, 2016) Add support for letter-spacing and tracking (thanks @lachmanski!). Fixed a bug in the nameToGlyph function. 0.6.5 (September 9, 2016) GSUB reading and writing by @fpirsch. This is still missing a user-friendly API. Add support for cmap table format 12, which enables support for Unicode characters outside of the 0x0 - 0xFFFF range. Better API documentation using JSDoc . Accessing xMin/... metrics works before path load.\u2029 0.6.4 (June 30, 2016) Add X/Y scale options to compute a streched path of a glyph. Correct reading/writing of font timestamps. examples/generate-font-node.js now generates \"full\" Latin font. Add OS/2 value options for weight, width and fsSelection. 0.6.3 (May 10, 2016) Wrapped parseBuffer in a try/catch so it doesn't throw exceptions. Thanks @rBurgett! Fix a leaking global variable. Thanks @cuixiping! 0.6.2 (March 11, 2016) Improve table writing to support nested subtables. Thanks @fpirsch! 0.6.1 (February 20, 2016) Left side bearing is now correctly reported. Simplified code for including ascender / descender values. 0.6.0 (December 1, 2015) Improvements to font writing: generated fonts now work properly on OS X. When creating a new font, ascender and descender are now required. 0.5.1 (October 26, 2015) Add Font.getPaths() which returns a list of paths. 0.5.0 (October 6, 2015) Read support for WOFF. 0.4.11 (September 27, 2015) Fix issue with loading of TrueType composite glyphs. Fix issue with missing hmtx values. Sensible getMetrics() values for empty glyphs (e.g. space). 0.4.10 (July 30, 2015) Add loadSync method for Node.js. Unit tests for basic types and tables. Implement MACSTRING codec. Support multilingual names. Handle names of font variation axes and instances. 0.4.9 (June 23, 2015) Improve memory usage by deferring glyph / path loading. Thanks @Pomax! Put examples in the \"examples\" directory. Use the local web server to see them. 0.4.8 (June 3, 2015) Fix an issue with writing out fonts that have an UPM != 1000. 0.4.6 (March 26, 2015) Fix issues with exporting/subsetting TrueType fonts. Improve validness of exported fonts. Empty paths (think: space) no longer contain a single closePath command. Fix issues with exporting fonts with TrueType half-point values. Expose the internal byte parsing algorithms as opentype._parse. 0.4.5 (March 10, 2015) Add support for writing quad curves. Add support for CFF flex operators. Close CFF subpaths. 0.4.4 (Dec 8, 2014) Solve issues with Browserify. 0.4.3 (Nov 26, 2014) Un-break node.js support. 0.4.2 (Nov 24, 2014) 2x speedup when writing fonts, thanks @louisremi! 0.4.1 (Nov 10, 2014) Fix bug that prevented npm install . 0.4.0 (Nov 10, 2014) Add support for font writing. 0.3.0 (Jun 10, 2014) Support for GPOS kerning, which works in both PostScript and OpenType. Big performance improvements. The font and glyph inspector can visually debug a font. 0.2.0 (Feb 7, 2014) Support for reading PostScript fonts. 0.1.0 (Sep 27, 2013) Initial release. Supports reading TrueType CFF fonts.","title":"0.9.0 (June 21, 2018)"},{"location":"demos/node_modules/opentype.js/RELEASES/#090-june-21-2018","text":"Update/Migrate rollup, update all dependencies, add package-lock.json and fix circular dependency (thanks @jolg42!) Parse cmap table with platform id 0 as well (PR #350, fixes #348) (thanks @moyogo!) Prevent auto-generated postScriptName from containing whitespace (#339) (thanks @mqudsi!) Support non-Basic-Multilingual-Plane (BMP) characters (#338) (thanks @antonytse!) GPOS: display correct error message in some cases of malformed data (#336) (thanks @fpirsch!) Restore simple GPOS kerning in font.getKerningValue (#335) (thanks @fpirsch!) Fix duplicated lineTo when using getPath (#328) (thanks @jolg42!) Change example generate-font-node.js to be compatible with any Node.js version (thanks @jolg42!)","title":"0.9.0 (June 21, 2018)"},{"location":"demos/node_modules/opentype.js/RELEASES/#080-march-6-2018","text":"Fix loading font file on Android devices (thanks @maoamid!). Fix loading fonts from a local source (file://data/... for Android for example (thanks @IntuilabGit!). Fixing 2 issues when hinting \"mutlu.ttf\" (thanks @axkibe!). Add some support for OpenType font variations (thanks @taylorb-monotype!). Make cmap table format 12 if needed (thanks @Jolg42!). Enable uglify's mangle and compress optimizations for a ~30% smaller minified file. (thanks @lojjic & @Jolg42!). Better parsing of NULL pointers (thanks @fpirsch!). Fix bad path init (empty glyphs) (thanks @fpirsch!). Rewrite GPOS parsing (thanks @fpirsch!). Roboto-Black.ttf updated (thanks @Jolg42!).","title":"0.8.0 (March 6, 2018)"},{"location":"demos/node_modules/opentype.js/RELEASES/#073-july-18-2017","text":"Fix \"Object x already has key\" error in Safari (thanks @neiltron!). Fixed a bug where Font.getPaths() didn't pass options (thanks @keeslinp!).","title":"0.7.3 (July 18, 2017)"},{"location":"demos/node_modules/opentype.js/RELEASES/#072-june-7-2017","text":"WOFF fonts with cvt tables now parse correctly. Migrated to ES6 modules and let/const. Use Rollup to bundle the JavaScript.","title":"0.7.2 (June 7, 2017)"},{"location":"demos/node_modules/opentype.js/RELEASES/#071-apr-25-2017","text":"Auto-generated glyph IDs (CID-keyed fonts) are now prefixed with \"gid\", e.g. \"gid42\". Fix ligature substitution for fonts with coverage table format 2. Better error messages when no valid cmap is found.","title":"0.7.1 (Apr 25, 2017)"},{"location":"demos/node_modules/opentype.js/RELEASES/#070-apr-25-2017","text":"Add font hinting (thanks @axkibe!) Add support for CID-keyed fonts, thanks to @tshinnic. TrueType fonts with signature 'true' or 'typ1' are also supported. Fixing rounding issues. Add GSUB and kern output in font-inspector. Add font loading error callback. Dev server turns browser caching off. Add encoding support for variation adjustment deltas (thanks @brawer!).","title":"0.7.0 (Apr 25, 2017)"},{"location":"demos/node_modules/opentype.js/RELEASES/#069-jan-17-2017","text":"Add ligature rendering (thanks @fpirsch!)","title":"0.6.9 (Jan 17, 2017)"},{"location":"demos/node_modules/opentype.js/RELEASES/#068-jan-9-2017","text":"Add a getBoundingBox method to the Path and Glyph objects.","title":"0.6.8 (Jan 9, 2017)"},{"location":"demos/node_modules/opentype.js/RELEASES/#067-jan-5-2017","text":"Add basic support for Mac OS X format kern tables.","title":"0.6.7 (Jan 5, 2017)"},{"location":"demos/node_modules/opentype.js/RELEASES/#066-october-25-2016","text":"Add support for letter-spacing and tracking (thanks @lachmanski!). Fixed a bug in the nameToGlyph function.","title":"0.6.6 (October 25, 2016)"},{"location":"demos/node_modules/opentype.js/RELEASES/#065-september-9-2016","text":"GSUB reading and writing by @fpirsch. This is still missing a user-friendly API. Add support for cmap table format 12, which enables support for Unicode characters outside of the 0x0 - 0xFFFF range. Better API documentation using JSDoc . Accessing xMin/... metrics works before path load.","title":"0.6.5 (September 9, 2016)"},{"location":"demos/node_modules/opentype.js/RELEASES/#064-june-30-2016","text":"Add X/Y scale options to compute a streched path of a glyph. Correct reading/writing of font timestamps. examples/generate-font-node.js now generates \"full\" Latin font. Add OS/2 value options for weight, width and fsSelection.","title":"0.6.4 (June 30, 2016)"},{"location":"demos/node_modules/opentype.js/RELEASES/#063-may-10-2016","text":"Wrapped parseBuffer in a try/catch so it doesn't throw exceptions. Thanks @rBurgett! Fix a leaking global variable. Thanks @cuixiping!","title":"0.6.3 (May 10, 2016)"},{"location":"demos/node_modules/opentype.js/RELEASES/#062-march-11-2016","text":"Improve table writing to support nested subtables. Thanks @fpirsch!","title":"0.6.2 (March 11, 2016)"},{"location":"demos/node_modules/opentype.js/RELEASES/#061-february-20-2016","text":"Left side bearing is now correctly reported. Simplified code for including ascender / descender values.","title":"0.6.1 (February 20, 2016)"},{"location":"demos/node_modules/opentype.js/RELEASES/#060-december-1-2015","text":"Improvements to font writing: generated fonts now work properly on OS X. When creating a new font, ascender and descender are now required.","title":"0.6.0 (December 1, 2015)"},{"location":"demos/node_modules/opentype.js/RELEASES/#051-october-26-2015","text":"Add Font.getPaths() which returns a list of paths.","title":"0.5.1 (October 26, 2015)"},{"location":"demos/node_modules/opentype.js/RELEASES/#050-october-6-2015","text":"Read support for WOFF.","title":"0.5.0 (October 6, 2015)"},{"location":"demos/node_modules/opentype.js/RELEASES/#0411-september-27-2015","text":"Fix issue with loading of TrueType composite glyphs. Fix issue with missing hmtx values. Sensible getMetrics() values for empty glyphs (e.g. space).","title":"0.4.11 (September 27, 2015)"},{"location":"demos/node_modules/opentype.js/RELEASES/#0410-july-30-2015","text":"Add loadSync method for Node.js. Unit tests for basic types and tables. Implement MACSTRING codec. Support multilingual names. Handle names of font variation axes and instances.","title":"0.4.10 (July 30, 2015)"},{"location":"demos/node_modules/opentype.js/RELEASES/#049-june-23-2015","text":"Improve memory usage by deferring glyph / path loading. Thanks @Pomax! Put examples in the \"examples\" directory. Use the local web server to see them.","title":"0.4.9 (June 23, 2015)"},{"location":"demos/node_modules/opentype.js/RELEASES/#048-june-3-2015","text":"Fix an issue with writing out fonts that have an UPM != 1000.","title":"0.4.8 (June 3, 2015)"},{"location":"demos/node_modules/opentype.js/RELEASES/#046-march-26-2015","text":"Fix issues with exporting/subsetting TrueType fonts. Improve validness of exported fonts. Empty paths (think: space) no longer contain a single closePath command. Fix issues with exporting fonts with TrueType half-point values. Expose the internal byte parsing algorithms as opentype._parse.","title":"0.4.6 (March 26, 2015)"},{"location":"demos/node_modules/opentype.js/RELEASES/#045-march-10-2015","text":"Add support for writing quad curves. Add support for CFF flex operators. Close CFF subpaths.","title":"0.4.5 (March 10, 2015)"},{"location":"demos/node_modules/opentype.js/RELEASES/#044-dec-8-2014","text":"Solve issues with Browserify.","title":"0.4.4 (Dec 8, 2014)"},{"location":"demos/node_modules/opentype.js/RELEASES/#043-nov-26-2014","text":"Un-break node.js support.","title":"0.4.3 (Nov 26, 2014)"},{"location":"demos/node_modules/opentype.js/RELEASES/#042-nov-24-2014","text":"2x speedup when writing fonts, thanks @louisremi!","title":"0.4.2 (Nov 24, 2014)"},{"location":"demos/node_modules/opentype.js/RELEASES/#041-nov-10-2014","text":"Fix bug that prevented npm install .","title":"0.4.1 (Nov 10, 2014)"},{"location":"demos/node_modules/opentype.js/RELEASES/#040-nov-10-2014","text":"Add support for font writing.","title":"0.4.0 (Nov 10, 2014)"},{"location":"demos/node_modules/opentype.js/RELEASES/#030-jun-10-2014","text":"Support for GPOS kerning, which works in both PostScript and OpenType. Big performance improvements. The font and glyph inspector can visually debug a font.","title":"0.3.0 (Jun 10, 2014)"},{"location":"demos/node_modules/opentype.js/RELEASES/#020-feb-7-2014","text":"Support for reading PostScript fonts.","title":"0.2.0 (Feb 7, 2014)"},{"location":"demos/node_modules/opentype.js/RELEASES/#010-sep-27-2013","text":"Initial release. Supports reading TrueType CFF fonts.","title":"0.1.0 (Sep 27, 2013)"},{"location":"demos/node_modules/opentype.js/examples/","text":"OpenType.js Examples Due to security issues, these examples only work when running a local web server. Run npm start in the home directory to start a web server. Then navigate to one of the examples, e.g.: http://localhost:8080/examples/reading-writing.html The generate-font-node.js example can be run from node.js: cd opentype.js/examples node generate-font-node.js # This generates a font file, called Pyramid-Regular.otf.","title":"OpenType.js Examples"},{"location":"demos/node_modules/opentype.js/examples/#opentypejs-examples","text":"Due to security issues, these examples only work when running a local web server. Run npm start in the home directory to start a web server. Then navigate to one of the examples, e.g.: http://localhost:8080/examples/reading-writing.html The generate-font-node.js example can be run from node.js: cd opentype.js/examples node generate-font-node.js # This generates a font file, called Pyramid-Regular.otf.","title":"OpenType.js Examples"},{"location":"demos/node_modules/undici-types/","text":"This package is a dual-publish of the undici library types. The undici package still contains types . This package is for users who only need undici types (such as for @types/node ). It is published alongside every release of undici , so you can always use the same version. GitHub nodejs/undici Undici Documentation","title":"Index"},{"location":"demos/node_modules/word-wrapper/","text":"click here for a Canvas demo This is a generic word wrapper for left-to-right text in 2D applications. It can be used in console, canvas, WebGL, etc. Accepts a custom measure function for glyph metrics. The simplest use-case: const text = wrap ( 'the quick brown fox jumps over the lazy dog' , { width : 8 }) console . log ( text ) This will print the following: the quick brown fox jumps over the lazy dog In 2D applications it's more common to layout the text manually. For this we can use wrap.lines() to operate on a list of { start, end } indices. Then each line can be rendered with text.substring(line.start, line.end) . An example: //for example... const lines = wrap . lines ( text , { width : 40 }) //operate on the lines... const text = lines . map ( x => text . substring ( x . start , x . end ) ) . join ( '\\n' ) See demo/canvas for a full 2D example. Usage text = wordwrap(text[, opt]) Word-wraps the text string with the given options. Returns a string with the word-wrapped result. start the starting index to word-wrap, default 0 end the ending index to word-wrap (exclusive), default text.length width the width to word wrap to, in 'units' (see below) measure a function that measures the number of glyphs that can fit in (see measure ). Defaults to monospace (i.e. 1 char is 1 unit) mode can be 'pre' (maintain spacing), or 'nowrap' (collapse whitespace but only break on newline characters), otherwise assumes normal word-wrap behaviour The width is measured in 'units' which could be pixels, centimeters, characters, etc. By default, one \"unit\" corresponds to one character (i.e. for monospace console rendering). To wrap text to a pixel width, you should use a custom measure function. If mode is \"pre\" and width is specified, it will clip the characters to the given width (to avoid them over-flowing outside the bounds). lines = wordwrap.lines(text[, opt]) Takes the same parameters as the above method, but returns a list of \"lines\" objects for manual text layout/rendering. A \"line\" is typically an object with { start, end } indices that can be used with text.substring(start, end) . The \"line\" is the return value from the measure function, so it may also include application-specific data (i.e. to avoid re-computing line widths). measure To layout glyphs in 2D space, you typically will need to measure the width of each glyph (and its x-advance, kerning, etc) to determine the maximum number of glyphs that can fit within a specified available width . You can pass a custom measure function which takes the text being wrapped, the start (inclusive) and end (exclusive) indices into the string, and the desired width . The return value should be an object with { start, end } indices, representing the actual glyphs that can be rendered within those bounds. For example, a Canvas2D implementation that uses monospace fonts might look like this: //the canvas font style const font = '24px \"Courier New\", monospace' //compute width const measure = createMetrics ( context , font ) function createMetrics ( context , font ) { context . font = font const charWidth = context . measureText ( 'M' ). width return function measure ( text , start , end , width ) { //measures the chunk of text, returning the substring //we can fit within the given width const availableGlyphs = Math . floor ( width / charWidth ) const totalGlyphs = Math . floor (( end - start ) * charWidth ) const glyphs = Math . min ( end - start , availableGlyphs , totalGlyphs ) return { start : start , end : start + glyphs } } } function draw ( context ) { const lines = wordwrap ( text , { measure : measure , width : 200 }) //draw the lines.. } License The original implementation is based on LibGDX's word wrapper . MIT, see LICENSE.md for details.","title":"Index"},{"location":"demos/node_modules/word-wrapper/#usage","text":"","title":"Usage"},{"location":"demos/node_modules/word-wrapper/#text-wordwraptext-opt","text":"Word-wraps the text string with the given options. Returns a string with the word-wrapped result. start the starting index to word-wrap, default 0 end the ending index to word-wrap (exclusive), default text.length width the width to word wrap to, in 'units' (see below) measure a function that measures the number of glyphs that can fit in (see measure ). Defaults to monospace (i.e. 1 char is 1 unit) mode can be 'pre' (maintain spacing), or 'nowrap' (collapse whitespace but only break on newline characters), otherwise assumes normal word-wrap behaviour The width is measured in 'units' which could be pixels, centimeters, characters, etc. By default, one \"unit\" corresponds to one character (i.e. for monospace console rendering). To wrap text to a pixel width, you should use a custom measure function. If mode is \"pre\" and width is specified, it will clip the characters to the given width (to avoid them over-flowing outside the bounds).","title":"text = wordwrap(text[, opt])"},{"location":"demos/node_modules/word-wrapper/#lines-wordwraplinestext-opt","text":"Takes the same parameters as the above method, but returns a list of \"lines\" objects for manual text layout/rendering. A \"line\" is typically an object with { start, end } indices that can be used with text.substring(start, end) . The \"line\" is the return value from the measure function, so it may also include application-specific data (i.e. to avoid re-computing line widths).","title":"lines = wordwrap.lines(text[, opt])"},{"location":"demos/node_modules/word-wrapper/#measure","text":"To layout glyphs in 2D space, you typically will need to measure the width of each glyph (and its x-advance, kerning, etc) to determine the maximum number of glyphs that can fit within a specified available width . You can pass a custom measure function which takes the text being wrapped, the start (inclusive) and end (exclusive) indices into the string, and the desired width . The return value should be an object with { start, end } indices, representing the actual glyphs that can be rendered within those bounds. For example, a Canvas2D implementation that uses monospace fonts might look like this: //the canvas font style const font = '24px \"Courier New\", monospace' //compute width const measure = createMetrics ( context , font ) function createMetrics ( context , font ) { context . font = font const charWidth = context . measureText ( 'M' ). width return function measure ( text , start , end , width ) { //measures the chunk of text, returning the substring //we can fit within the given width const availableGlyphs = Math . floor ( width / charWidth ) const totalGlyphs = Math . floor (( end - start ) * charWidth ) const glyphs = Math . min ( end - start , availableGlyphs , totalGlyphs ) return { start : start , end : start + glyphs } } } function draw ( context ) { const lines = wordwrap ( text , { measure : measure , width : 200 }) //draw the lines.. }","title":"measure"},{"location":"demos/node_modules/word-wrapper/#license","text":"The original implementation is based on LibGDX's word wrapper . MIT, see LICENSE.md for details.","title":"License"},{"location":"exporting/","text":"Export drawings to common formats suitable for laser cutters and CAD tools.","title":"Exporting"},{"location":"external/text-encoding/LICENSE/","text":"The encoding indexes, algorithms, and many comments in the code derive from the Encoding Standard https://encoding.spec.whatwg.org/ Otherwise... This is free and unencumbered software released into the public domain. Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means. In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. For more information, please refer to http://unlicense.org/","title":"LICENSE"},{"location":"getting-started/","text":"Learn how to install, set up, and begin using Photon for 2D vector modeling. Hot reload verification: update test.","title":"Getting Started"},{"location":"migration/api-mapping/","text":"This guide provides a comprehensive mapping of photon/core APIs to their photon/core equivalents. Use this reference when migrating existing code or updating documentation examples. Quick Summary photon/core is the modernized version of photon/core with: ES6+ module syntax (import/export instead of require) Consistent naming conventions Improved TypeScript support Enhanced tree-shaking capabilities Modern build tooling Namespace Mapping Core Namespace photon/core photon/core Notes var makerjs = require('photon/core'); import { models, paths, exporter } from 'photon/core' Named imports (preferred) makerjs (global) import { models, paths, exporter } from 'photon/core' Use named imports in modules Models photon/core photon/core Breaking Changes new makerjs.models.Rectangle(width, height) new models.Rectangle(width, height) Import from photon/core new makerjs.models.Circle(radius) new models.Circle(radius) None new makerjs.models.Polygon(numberOfSides, radius) new models.Polygon(numberOfSides, radius) None new makerjs.models.BoltCircle(holeRadius, holeCount, boltRadius) new models.BoltCircle(holeRadius, holeCount, boltRadius) None new makerjs.models.Ellipse(radiusX, radiusY) new models.Ellipse(radiusX, radiusY) None new makerjs.models.RoundRectangle(width, height, radius) new models.RoundRectangle(width, height, radius) None Paths photon/core photon/core Breaking Changes new makerjs.paths.Line(origin, end) new paths.Line(origin, end) Import from photon/core new makerjs.paths.Arc(origin, radius, startAngle, endAngle) new paths.Arc(origin, radius, startAngle, endAngle) None new makerjs.paths.Circle(origin, radius) new paths.Circle(origin, radius) None new makerjs.paths.BezierSeed(origin, controls, end) new paths.BezierSeed(origin, controls, end) None Path Operations photon/core photon/core Breaking Changes makerjs.path.mirror(path, ...) path.mirror(path, ...) Import from photon/core makerjs.path.rotate(path, ...) path.rotate(path, ...) None makerjs.path.scale(path, ...) path.scale(path, ...) None makerjs.path.moveRelative(path, ...) path.moveRelative(path, ...) None makerjs.path.distort(path, ...) path.distort(path, ...) None Model Operations photon/core photon/core Breaking Changes makerjs.model.move(model, point) model.move(model, point) Import from photon/core makerjs.model.rotate(model, angle, origin) model.rotate(model, angle, origin) None makerjs.model.scale(model, scale) model.scale(model, scale) None makerjs.model.combine(...) model.combine(...) None makerjs.model.findChains(model) model.findChains(model) None makerjs.model.findSingleChain(model) model.findSingleChain(model) None Chain Operations photon/core photon/core Breaking Changes makerjs.chain.fillet(chain, radius) chain.fillet(chain, radius) Import from photon/core makerjs.chain.dogbone(chain, ...) chain.dogbone(chain, ...) None Exporters photon/core photon/core Breaking Changes makerjs.exporter.toSVG(model) exporter.toSVG(model) Import from photon/core makerjs.exporter.toDXF(model) exporter.toDXF(model) None makerjs.exporter.toJSON(model) JSON.stringify(model) Use native JSON Layout photon/core photon/core Breaking Changes makerjs.layout.cloneToRow(...) layout.cloneToRow(...) Import from photon/core makerjs.layout.cloneToColumn(...) layout.cloneToColumn(...) None makerjs.layout.cloneToGrid(...) layout.cloneToGrid(...) None makerjs.layout.cloneToHoneycomb(...) layout.cloneToHoneycomb(...) None Import Patterns Before (photon/core - CommonJS) // Node.js / CommonJS const makerjs = require ( 'photon/core' ); // Create a rectangle const rect = new makerjs . models . Rectangle ( 100 , 50 ); // Export to SVG const svg = makerjs . exporter . toSVG ( rect ); console . log ( svg ); After (photon/core - ES6 Modules) // ES6 module import - Named imports (preferred) import { models , exporter } from 'photon/core' ; const rect = new models . Rectangle ( 100 , 50 ); const svg = exporter . toSVG ( rect ); console . log ( svg ); Browser Usage Before (photon/core) <!-- Global namespace via script tag --> < script src = \"http:// photon/core.org/target/js/browser.maker.js\" ></ script > < script > const rect = new makerjs . models . Rectangle ( 100 , 50 ); const svg = makerjs . exporter . toSVG ( rect ); document . write ( svg ); </ script > After (photon/core) <!-- ES6 module via script tag --> < script type = \"module\" > import { models , exporter } from 'https://unpkg.com/photon/core' ; const rect = new models . Rectangle ( 100 , 50 ); const svg = exporter . toSVG ( rect ); document . body . innerHTML = svg ; </ script > OR with bundler (Vite, Webpack, etc.): import { models , exporter } from 'photon/core' ; const rect = new models . Rectangle ( 100 , 50 ); const svg = exporter . toSVG ( rect ); document . body . innerHTML = svg ; Breaking Changes 1. Module System Change : CommonJS ( require ) \u2192 ES6 Modules ( import ) Impact : All imports must be updated Migration : // Before const makerjs = require ( 'photon/core' ); // After import { models , paths , exporter } from 'photon/core' ; 2. Global Namespace (Browser) Change : Global makerjs variable \u2192 ES6 module imports Impact : Browser scripts must use <script type=\"module\"> Migration : <!-- Before --> < script src = \"browser.maker.js\" ></ script > < script > const rect = new makerjs . models . Rectangle ( 100 , 50 ); </ script > <!-- After --> < script type = \"module\" > import { models } from 'photon/core' ; const rect = new models . Rectangle ( 100 , 50 ); </ script > 3. JSON Export Change : makerjs.exporter.toJSON() \u2192 Native JSON.stringify() Impact : Use native JSON methods instead Migration : // Before const json = makerjs . exporter . toJSON ( model ); // After const json = JSON . stringify ( model ); Common Migration Patterns Pattern 1: Simple Shapes // Before (photon/core) const makerjs = require ( 'photon/core' ); const rect = new makerjs . models . Rectangle ( 100 , 50 ); const svg = makerjs . exporter . toSVG ( rect ); // After (photon/core) import { models , exporter } from 'photon/core' ; const rect = new models . Rectangle ( 100 , 50 ); const svg = exporter . toSVG ( rect ); Pattern 2: Complex Models // Before (photon/core) const makerjs = require ( 'photon/core' ); const model = { models : { rect : new makerjs . models . Rectangle ( 100 , 50 ), circle : new makerjs . models . Circle ( 25 ) } }; makerjs . model . move ( model . models . circle , [ 50 , 25 ]); const svg = makerjs . exporter . toSVG ( model ); // After (photon/core) import { models , model as modelOps , exporter } from 'photon/core' ; const myModel = { models : { rect : new models . Rectangle ( 100 , 50 ), circle : new models . Circle ( 25 ) } }; modelOps . move ( myModel . models . circle , [ 50 , 25 ]); const svg = exporter . toSVG ( myModel ); Pattern 3: Chains and Fillets // Before (photon/core) const makerjs = require ( 'photon/core' ); const model = { /* paths */ }; const chain = makerjs . model . findSingleChain ( model ); const fillets = makerjs . chain . fillet ( chain , 10 ); // After (photon/core) import { model as modelOps , chain as chainOps } from 'photon/core' ; const myModel = { /* paths */ }; const chain = modelOps . findSingleChain ( myModel ); const fillets = chainOps . fillet ( chain , 10 ); ES6+ Modernization In addition to namespace changes, all examples should use modern JavaScript: Variable Declarations // Before const rect = new makerjs . models . Rectangle ( 100 , 50 ); const svg = makerjs . exporter . toSVG ( rect ); // After const rect = new models . Rectangle ( 100 , 50 ); const svg = exporter . toSVG ( rect ); Arrow Functions // Before function createRect ( width , height ) { return new makerjs . models . Rectangle ( width , height ); } // After const createRect = ( width , height ) => new models . Rectangle ( width , height ); Template Literals // Before const message = 'Rectangle size: ' + width + ' x ' + height ; // After const message = `Rectangle size: ${ width } x ${ height } ` ; Destructuring // Before const models = makerjs . models ; const exporter = makerjs . exporter ; // After import { models , exporter } from 'photon/core' ; Migration Checklist Use this checklist when migrating code: Replace require('photon/core') or var makerjs = require('photon/core') with named imports: import { models, paths, exporter } from 'photon/core' Update all var to const or let Convert functions to arrow functions where appropriate Replace string concatenation with template literals Update browser scripts to use <script type=\"module\"> Replace makerjs.exporter.toJSON() with JSON.stringify() Test all examples to ensure they execute correctly Update documentation links to point to photon/core API reference Related Topics Getting Started with photon/core API Reference Migration FAQs Support If you encounter issues during migration: Check this mapping document for API equivalents Review the photon/core API reference Open an issue on GitHub with migration questions","title":"API Migration Guide - photon/core to photon/core"},{"location":"migration/api-mapping/#quick-summary","text":"photon/core is the modernized version of photon/core with: ES6+ module syntax (import/export instead of require) Consistent naming conventions Improved TypeScript support Enhanced tree-shaking capabilities Modern build tooling","title":"Quick Summary"},{"location":"migration/api-mapping/#namespace-mapping","text":"","title":"Namespace Mapping"},{"location":"migration/api-mapping/#core-namespace","text":"photon/core photon/core Notes var makerjs = require('photon/core'); import { models, paths, exporter } from 'photon/core' Named imports (preferred) makerjs (global) import { models, paths, exporter } from 'photon/core' Use named imports in modules","title":"Core Namespace"},{"location":"migration/api-mapping/#models","text":"photon/core photon/core Breaking Changes new makerjs.models.Rectangle(width, height) new models.Rectangle(width, height) Import from photon/core new makerjs.models.Circle(radius) new models.Circle(radius) None new makerjs.models.Polygon(numberOfSides, radius) new models.Polygon(numberOfSides, radius) None new makerjs.models.BoltCircle(holeRadius, holeCount, boltRadius) new models.BoltCircle(holeRadius, holeCount, boltRadius) None new makerjs.models.Ellipse(radiusX, radiusY) new models.Ellipse(radiusX, radiusY) None new makerjs.models.RoundRectangle(width, height, radius) new models.RoundRectangle(width, height, radius) None","title":"Models"},{"location":"migration/api-mapping/#paths","text":"photon/core photon/core Breaking Changes new makerjs.paths.Line(origin, end) new paths.Line(origin, end) Import from photon/core new makerjs.paths.Arc(origin, radius, startAngle, endAngle) new paths.Arc(origin, radius, startAngle, endAngle) None new makerjs.paths.Circle(origin, radius) new paths.Circle(origin, radius) None new makerjs.paths.BezierSeed(origin, controls, end) new paths.BezierSeed(origin, controls, end) None","title":"Paths"},{"location":"migration/api-mapping/#path-operations","text":"photon/core photon/core Breaking Changes makerjs.path.mirror(path, ...) path.mirror(path, ...) Import from photon/core makerjs.path.rotate(path, ...) path.rotate(path, ...) None makerjs.path.scale(path, ...) path.scale(path, ...) None makerjs.path.moveRelative(path, ...) path.moveRelative(path, ...) None makerjs.path.distort(path, ...) path.distort(path, ...) None","title":"Path Operations"},{"location":"migration/api-mapping/#model-operations","text":"photon/core photon/core Breaking Changes makerjs.model.move(model, point) model.move(model, point) Import from photon/core makerjs.model.rotate(model, angle, origin) model.rotate(model, angle, origin) None makerjs.model.scale(model, scale) model.scale(model, scale) None makerjs.model.combine(...) model.combine(...) None makerjs.model.findChains(model) model.findChains(model) None makerjs.model.findSingleChain(model) model.findSingleChain(model) None","title":"Model Operations"},{"location":"migration/api-mapping/#chain-operations","text":"photon/core photon/core Breaking Changes makerjs.chain.fillet(chain, radius) chain.fillet(chain, radius) Import from photon/core makerjs.chain.dogbone(chain, ...) chain.dogbone(chain, ...) None","title":"Chain Operations"},{"location":"migration/api-mapping/#exporters","text":"photon/core photon/core Breaking Changes makerjs.exporter.toSVG(model) exporter.toSVG(model) Import from photon/core makerjs.exporter.toDXF(model) exporter.toDXF(model) None makerjs.exporter.toJSON(model) JSON.stringify(model) Use native JSON","title":"Exporters"},{"location":"migration/api-mapping/#layout","text":"photon/core photon/core Breaking Changes makerjs.layout.cloneToRow(...) layout.cloneToRow(...) Import from photon/core makerjs.layout.cloneToColumn(...) layout.cloneToColumn(...) None makerjs.layout.cloneToGrid(...) layout.cloneToGrid(...) None makerjs.layout.cloneToHoneycomb(...) layout.cloneToHoneycomb(...) None","title":"Layout"},{"location":"migration/api-mapping/#import-patterns","text":"","title":"Import Patterns"},{"location":"migration/api-mapping/#before-photoncore-commonjs","text":"// Node.js / CommonJS const makerjs = require ( 'photon/core' ); // Create a rectangle const rect = new makerjs . models . Rectangle ( 100 , 50 ); // Export to SVG const svg = makerjs . exporter . toSVG ( rect ); console . log ( svg );","title":"Before (photon/core - CommonJS)"},{"location":"migration/api-mapping/#after-photoncore-es6-modules","text":"// ES6 module import - Named imports (preferred) import { models , exporter } from 'photon/core' ; const rect = new models . Rectangle ( 100 , 50 ); const svg = exporter . toSVG ( rect ); console . log ( svg );","title":"After (photon/core - ES6 Modules)"},{"location":"migration/api-mapping/#browser-usage","text":"","title":"Browser Usage"},{"location":"migration/api-mapping/#before-photoncore","text":"<!-- Global namespace via script tag --> < script src = \"http:// photon/core.org/target/js/browser.maker.js\" ></ script > < script > const rect = new makerjs . models . Rectangle ( 100 , 50 ); const svg = makerjs . exporter . toSVG ( rect ); document . write ( svg ); </ script >","title":"Before (photon/core)"},{"location":"migration/api-mapping/#after-photoncore","text":"<!-- ES6 module via script tag --> < script type = \"module\" > import { models , exporter } from 'https://unpkg.com/photon/core' ; const rect = new models . Rectangle ( 100 , 50 ); const svg = exporter . toSVG ( rect ); document . body . innerHTML = svg ; </ script > OR with bundler (Vite, Webpack, etc.): import { models , exporter } from 'photon/core' ; const rect = new models . Rectangle ( 100 , 50 ); const svg = exporter . toSVG ( rect ); document . body . innerHTML = svg ;","title":"After (photon/core)"},{"location":"migration/api-mapping/#breaking-changes","text":"","title":"Breaking Changes"},{"location":"migration/api-mapping/#1-module-system","text":"Change : CommonJS ( require ) \u2192 ES6 Modules ( import ) Impact : All imports must be updated Migration : // Before const makerjs = require ( 'photon/core' ); // After import { models , paths , exporter } from 'photon/core' ;","title":"1. Module System"},{"location":"migration/api-mapping/#2-global-namespace-browser","text":"Change : Global makerjs variable \u2192 ES6 module imports Impact : Browser scripts must use <script type=\"module\"> Migration : <!-- Before --> < script src = \"browser.maker.js\" ></ script > < script > const rect = new makerjs . models . Rectangle ( 100 , 50 ); </ script > <!-- After --> < script type = \"module\" > import { models } from 'photon/core' ; const rect = new models . Rectangle ( 100 , 50 ); </ script >","title":"2. Global Namespace (Browser)"},{"location":"migration/api-mapping/#3-json-export","text":"Change : makerjs.exporter.toJSON() \u2192 Native JSON.stringify() Impact : Use native JSON methods instead Migration : // Before const json = makerjs . exporter . toJSON ( model ); // After const json = JSON . stringify ( model );","title":"3. JSON Export"},{"location":"migration/api-mapping/#common-migration-patterns","text":"","title":"Common Migration Patterns"},{"location":"migration/api-mapping/#pattern-1-simple-shapes","text":"// Before (photon/core) const makerjs = require ( 'photon/core' ); const rect = new makerjs . models . Rectangle ( 100 , 50 ); const svg = makerjs . exporter . toSVG ( rect ); // After (photon/core) import { models , exporter } from 'photon/core' ; const rect = new models . Rectangle ( 100 , 50 ); const svg = exporter . toSVG ( rect );","title":"Pattern 1: Simple Shapes"},{"location":"migration/api-mapping/#pattern-2-complex-models","text":"// Before (photon/core) const makerjs = require ( 'photon/core' ); const model = { models : { rect : new makerjs . models . Rectangle ( 100 , 50 ), circle : new makerjs . models . Circle ( 25 ) } }; makerjs . model . move ( model . models . circle , [ 50 , 25 ]); const svg = makerjs . exporter . toSVG ( model ); // After (photon/core) import { models , model as modelOps , exporter } from 'photon/core' ; const myModel = { models : { rect : new models . Rectangle ( 100 , 50 ), circle : new models . Circle ( 25 ) } }; modelOps . move ( myModel . models . circle , [ 50 , 25 ]); const svg = exporter . toSVG ( myModel );","title":"Pattern 2: Complex Models"},{"location":"migration/api-mapping/#pattern-3-chains-and-fillets","text":"// Before (photon/core) const makerjs = require ( 'photon/core' ); const model = { /* paths */ }; const chain = makerjs . model . findSingleChain ( model ); const fillets = makerjs . chain . fillet ( chain , 10 ); // After (photon/core) import { model as modelOps , chain as chainOps } from 'photon/core' ; const myModel = { /* paths */ }; const chain = modelOps . findSingleChain ( myModel ); const fillets = chainOps . fillet ( chain , 10 );","title":"Pattern 3: Chains and Fillets"},{"location":"migration/api-mapping/#es6-modernization","text":"In addition to namespace changes, all examples should use modern JavaScript:","title":"ES6+ Modernization"},{"location":"migration/api-mapping/#variable-declarations","text":"// Before const rect = new makerjs . models . Rectangle ( 100 , 50 ); const svg = makerjs . exporter . toSVG ( rect ); // After const rect = new models . Rectangle ( 100 , 50 ); const svg = exporter . toSVG ( rect );","title":"Variable Declarations"},{"location":"migration/api-mapping/#arrow-functions","text":"// Before function createRect ( width , height ) { return new makerjs . models . Rectangle ( width , height ); } // After const createRect = ( width , height ) => new models . Rectangle ( width , height );","title":"Arrow Functions"},{"location":"migration/api-mapping/#template-literals","text":"// Before const message = 'Rectangle size: ' + width + ' x ' + height ; // After const message = `Rectangle size: ${ width } x ${ height } ` ;","title":"Template Literals"},{"location":"migration/api-mapping/#destructuring","text":"// Before const models = makerjs . models ; const exporter = makerjs . exporter ; // After import { models , exporter } from 'photon/core' ;","title":"Destructuring"},{"location":"migration/api-mapping/#migration-checklist","text":"Use this checklist when migrating code: Replace require('photon/core') or var makerjs = require('photon/core') with named imports: import { models, paths, exporter } from 'photon/core' Update all var to const or let Convert functions to arrow functions where appropriate Replace string concatenation with template literals Update browser scripts to use <script type=\"module\"> Replace makerjs.exporter.toJSON() with JSON.stringify() Test all examples to ensure they execute correctly Update documentation links to point to photon/core API reference","title":"Migration Checklist"},{"location":"migration/api-mapping/#related-topics","text":"Getting Started with photon/core API Reference Migration FAQs","title":"Related Topics"},{"location":"migration/api-mapping/#support","text":"If you encounter issues during migration: Check this mapping document for API equivalents Review the photon/core API reference Open an issue on GitHub with migration questions","title":"Support"},{"location":"migration/migration-faq/","text":"Common questions and issues when migrating from maker.js to photon/core. General Questions Q: What is the main difference between maker.js and photon/core? A: photon/core is the modernized version of maker.js with: ES6+ modules instead of CommonJS ( import vs require ) Modern JavaScript syntax (const/let, arrow functions, template literals) Better tree-shaking for smaller bundle sizes Improved TypeScript support with better type definitions Active maintenance and modern tooling The core API remains largely the same - most breaking changes are in how you import and use the library, not in the functionality itself. Q: Will my existing maker.js code stop working? A: Your code will need updates to work with photon/core: Import statements must change from require() to import Package name changes from makerjs to photon/core Browser usage requires ES6 modules instead of global namespace The actual API methods (creating shapes, exporting, transformations) work the same way. Q: Can I use both maker.js and photon/core in the same project? A: Yes, but it's not recommended. They are essentially the same library with different packaging. Using both would: Increase bundle size unnecessarily Create confusion about which version to use Potentially cause naming conflicts Choose one and stick with it. For new projects, use photon/core. Installation & Setup Q: How do I install photon/core? A: Using npm or yarn: npm install photon/core # or yarn add photon/core Q: Do I need to uninstall maker.js first? A: Not required, but recommended for clean projects: npm uninstall makerjs npm install photon/core Q: How do I use photon/core in the browser? A: Use ES6 modules with a <script type=\"module\"> tag: < script type = \"module\" > import { models , exporter } from 'https://unpkg.com/photon/core' ; const rect = new models . Rectangle ( 100 , 50 ); const svg = exporter . toSVG ( rect ); document . body . innerHTML = svg ; </ script > Or use a bundler (Vite, Webpack, Rollup) for production builds. Migration Issues Q: My imports aren't working - \"Cannot find module 'makerjs'\" A: Update your import statements: // Before (maker.js) const makerjs = require ( 'makerjs' ); // After (photon/core) import { exporter } from 'photon/core' ; Q: I'm getting \"var is not defined\" in browser A: Browser scripts need type=\"module\" : <!-- Before --> < script src = \"browser.maker.js\" ></ script > <!-- After --> < script type = \"module\" > import { models } from 'photon/core' ; </ script > Q: My build is failing with \"require is not defined\" A: You're mixing CommonJS and ES6 modules. Use consistent ES6 imports: // Convert all requires to imports import { models , paths , exporter } from 'photon/core' ; Q: Export to JSON isn't working A: Use native JSON.stringify() instead: // Before const json = exporter . toJSON ( model ); // After const json = JSON . stringify ( model ); Performance & Optimization Q: Will photon/core be faster than maker.js? A: Performance is similar for core operations. Benefits include: Smaller bundles with tree-shaking (only import what you use) Faster load times in modern browsers with native ES6 modules Better caching with module-based architecture Q: How do I reduce bundle size? A: Use named imports to enable tree-shaking: // Good - tree-shaking friendly import { models , exporter } from 'photon/core' ; // Less optimal - imports everything import { exporter } from 'photon/core' ; TypeScript Support Q: Does photon/core have TypeScript definitions? A: Yes, photon/core includes TypeScript definitions. They should work automatically: import { models , exporter } from 'photon/core' ; const rect = new models . Rectangle ( 100 , 50 ); // Type-safe! Q: My TypeScript types aren't working A: Ensure your tsconfig.json has: { \"compilerOptions\" : { \"module\" : \"ES6\" , \"moduleResolution\" : \"node\" } } Browser Compatibility Q: What browsers support photon/core? A: Modern browsers with ES6 module support: Chrome 61+ Firefox 60+ Safari 11+ Edge 79+ For older browsers, use a bundler (Webpack, Rollup, Vite) with transpilation. Q: How do I support IE11? A: Use a bundler with Babel to transpile ES6 to ES5: Install Babel and necessary presets Configure Babel to transpile photon/core Bundle your application Common Patterns Q: How do I create a simple shape? A: import { models , exporter } from 'photon/core' ; const rect = new models . Rectangle ( 100 , 50 ); const svg = exporter . toSVG ( rect ); Q: How do I combine multiple shapes? A: import { models , model as modelOps , exporter } from 'photon/core' ; const myModel = { models : { rect : new models . Rectangle ( 100 , 50 ), circle : new models . Circle ( 25 ) } }; modelOps . move ( myModel . models . circle , [ 50 , 25 ]); const svg = exporter . toSVG ( myModel ); Q: How do I add fillets to a chain? A: import { model as modelOps , chain as chainOps } from 'photon/core' ; const myModel = { /* paths */ }; const chain = modelOps . findSingleChain ( myModel ); const fillets = chainOps . fillet ( chain , 10 ); Getting Help Q: Where can I find more examples? A: Check these resources: Getting Started Guide API Reference Code Examples API Migration Guide Q: I found a bug, where do I report it? A: Open an issue on the photon GitHub repository with: Description of the issue Code example that reproduces the problem Expected vs actual behavior Your environment (browser, Node.js version, etc.) Q: How can I contribute? A: Contributions welcome! Fork the repository Create a feature branch Make your changes with tests Submit a pull request See Contributing Guide for details. Related Resources API Migration Guide - Complete API mapping reference Getting Started - Quick start guide API Documentation - Full API reference Examples - Code examples and tutorials","title":"Migration FAQ - maker.js to photon/core"},{"location":"migration/migration-faq/#general-questions","text":"","title":"General Questions"},{"location":"migration/migration-faq/#q-what-is-the-main-difference-between-makerjs-and-photoncore","text":"A: photon/core is the modernized version of maker.js with: ES6+ modules instead of CommonJS ( import vs require ) Modern JavaScript syntax (const/let, arrow functions, template literals) Better tree-shaking for smaller bundle sizes Improved TypeScript support with better type definitions Active maintenance and modern tooling The core API remains largely the same - most breaking changes are in how you import and use the library, not in the functionality itself.","title":"Q: What is the main difference between maker.js and photon/core?"},{"location":"migration/migration-faq/#q-will-my-existing-makerjs-code-stop-working","text":"A: Your code will need updates to work with photon/core: Import statements must change from require() to import Package name changes from makerjs to photon/core Browser usage requires ES6 modules instead of global namespace The actual API methods (creating shapes, exporting, transformations) work the same way.","title":"Q: Will my existing maker.js code stop working?"},{"location":"migration/migration-faq/#q-can-i-use-both-makerjs-and-photoncore-in-the-same-project","text":"A: Yes, but it's not recommended. They are essentially the same library with different packaging. Using both would: Increase bundle size unnecessarily Create confusion about which version to use Potentially cause naming conflicts Choose one and stick with it. For new projects, use photon/core.","title":"Q: Can I use both maker.js and photon/core in the same project?"},{"location":"migration/migration-faq/#installation-setup","text":"","title":"Installation &amp; Setup"},{"location":"migration/migration-faq/#q-how-do-i-install-photoncore","text":"A: Using npm or yarn: npm install photon/core # or yarn add photon/core","title":"Q: How do I install photon/core?"},{"location":"migration/migration-faq/#q-do-i-need-to-uninstall-makerjs-first","text":"A: Not required, but recommended for clean projects: npm uninstall makerjs npm install photon/core","title":"Q: Do I need to uninstall maker.js first?"},{"location":"migration/migration-faq/#q-how-do-i-use-photoncore-in-the-browser","text":"A: Use ES6 modules with a <script type=\"module\"> tag: < script type = \"module\" > import { models , exporter } from 'https://unpkg.com/photon/core' ; const rect = new models . Rectangle ( 100 , 50 ); const svg = exporter . toSVG ( rect ); document . body . innerHTML = svg ; </ script > Or use a bundler (Vite, Webpack, Rollup) for production builds.","title":"Q: How do I use photon/core in the browser?"},{"location":"migration/migration-faq/#migration-issues","text":"","title":"Migration Issues"},{"location":"migration/migration-faq/#q-my-imports-arent-working-cannot-find-module-makerjs","text":"A: Update your import statements: // Before (maker.js) const makerjs = require ( 'makerjs' ); // After (photon/core) import { exporter } from 'photon/core' ;","title":"Q: My imports aren't working - \"Cannot find module 'makerjs'\""},{"location":"migration/migration-faq/#q-im-getting-var-is-not-defined-in-browser","text":"A: Browser scripts need type=\"module\" : <!-- Before --> < script src = \"browser.maker.js\" ></ script > <!-- After --> < script type = \"module\" > import { models } from 'photon/core' ; </ script >","title":"Q: I'm getting \"var is not defined\" in browser"},{"location":"migration/migration-faq/#q-my-build-is-failing-with-require-is-not-defined","text":"A: You're mixing CommonJS and ES6 modules. Use consistent ES6 imports: // Convert all requires to imports import { models , paths , exporter } from 'photon/core' ;","title":"Q: My build is failing with \"require is not defined\""},{"location":"migration/migration-faq/#q-export-to-json-isnt-working","text":"A: Use native JSON.stringify() instead: // Before const json = exporter . toJSON ( model ); // After const json = JSON . stringify ( model );","title":"Q: Export to JSON isn't working"},{"location":"migration/migration-faq/#performance-optimization","text":"","title":"Performance &amp; Optimization"},{"location":"migration/migration-faq/#q-will-photoncore-be-faster-than-makerjs","text":"A: Performance is similar for core operations. Benefits include: Smaller bundles with tree-shaking (only import what you use) Faster load times in modern browsers with native ES6 modules Better caching with module-based architecture","title":"Q: Will photon/core be faster than maker.js?"},{"location":"migration/migration-faq/#q-how-do-i-reduce-bundle-size","text":"A: Use named imports to enable tree-shaking: // Good - tree-shaking friendly import { models , exporter } from 'photon/core' ; // Less optimal - imports everything import { exporter } from 'photon/core' ;","title":"Q: How do I reduce bundle size?"},{"location":"migration/migration-faq/#typescript-support","text":"","title":"TypeScript Support"},{"location":"migration/migration-faq/#q-does-photoncore-have-typescript-definitions","text":"A: Yes, photon/core includes TypeScript definitions. They should work automatically: import { models , exporter } from 'photon/core' ; const rect = new models . Rectangle ( 100 , 50 ); // Type-safe!","title":"Q: Does photon/core have TypeScript definitions?"},{"location":"migration/migration-faq/#q-my-typescript-types-arent-working","text":"A: Ensure your tsconfig.json has: { \"compilerOptions\" : { \"module\" : \"ES6\" , \"moduleResolution\" : \"node\" } }","title":"Q: My TypeScript types aren't working"},{"location":"migration/migration-faq/#browser-compatibility","text":"","title":"Browser Compatibility"},{"location":"migration/migration-faq/#q-what-browsers-support-photoncore","text":"A: Modern browsers with ES6 module support: Chrome 61+ Firefox 60+ Safari 11+ Edge 79+ For older browsers, use a bundler (Webpack, Rollup, Vite) with transpilation.","title":"Q: What browsers support photon/core?"},{"location":"migration/migration-faq/#q-how-do-i-support-ie11","text":"A: Use a bundler with Babel to transpile ES6 to ES5: Install Babel and necessary presets Configure Babel to transpile photon/core Bundle your application","title":"Q: How do I support IE11?"},{"location":"migration/migration-faq/#common-patterns","text":"","title":"Common Patterns"},{"location":"migration/migration-faq/#q-how-do-i-create-a-simple-shape","text":"A: import { models , exporter } from 'photon/core' ; const rect = new models . Rectangle ( 100 , 50 ); const svg = exporter . toSVG ( rect );","title":"Q: How do I create a simple shape?"},{"location":"migration/migration-faq/#q-how-do-i-combine-multiple-shapes","text":"A: import { models , model as modelOps , exporter } from 'photon/core' ; const myModel = { models : { rect : new models . Rectangle ( 100 , 50 ), circle : new models . Circle ( 25 ) } }; modelOps . move ( myModel . models . circle , [ 50 , 25 ]); const svg = exporter . toSVG ( myModel );","title":"Q: How do I combine multiple shapes?"},{"location":"migration/migration-faq/#q-how-do-i-add-fillets-to-a-chain","text":"A: import { model as modelOps , chain as chainOps } from 'photon/core' ; const myModel = { /* paths */ }; const chain = modelOps . findSingleChain ( myModel ); const fillets = chainOps . fillet ( chain , 10 );","title":"Q: How do I add fillets to a chain?"},{"location":"migration/migration-faq/#getting-help","text":"","title":"Getting Help"},{"location":"migration/migration-faq/#q-where-can-i-find-more-examples","text":"A: Check these resources: Getting Started Guide API Reference Code Examples API Migration Guide","title":"Q: Where can I find more examples?"},{"location":"migration/migration-faq/#q-i-found-a-bug-where-do-i-report-it","text":"A: Open an issue on the photon GitHub repository with: Description of the issue Code example that reproduces the problem Expected vs actual behavior Your environment (browser, Node.js version, etc.)","title":"Q: I found a bug, where do I report it?"},{"location":"migration/migration-faq/#q-how-can-i-contribute","text":"A: Contributions welcome! Fork the repository Create a feature branch Make your changes with tests Submit a pull request See Contributing Guide for details.","title":"Q: How can I contribute?"},{"location":"migration/migration-faq/#related-resources","text":"API Migration Guide - Complete API mapping reference Getting Started - Quick start guide API Documentation - Full API reference Examples - Code examples and tutorials","title":"Related Resources"},{"location":"model-trees/","text":"Compose and organize models using hierarchical structures.","title":"Model Trees"},{"location":"snippets/%24-function/","text":"As an alternative to cascading functions, photon/core offers a handy way to modify your drawing in an object-oriented style, inspired by the jQuery library. Call $(x) from photon/core to get a cascade container object returned. You can then invoke a series of cascading functions upon x. The output of each function becomes the input of the next. A cascade container will only work with functions that output the same type of object that they input as their first parameter, which must be one of these types: Model Path Point Container operators A cascade container will have special properties that operate the container itself (as opposed to operating upon x). These are prefixed with $: $initial : object Gets the original x object that you passed in. $result : object Gets the final result of all cascaded function calls. $reset() : function() - Resets the container to $initial. Cascadable functions Depending on the type of x, a cascade container will provide all of the functions from one of the corresponding modules. model module / cascade-safe functions path module / cascade-safe functions point module / cascade-safe functions These are the same functions that we've covered in previous lessons. One difference is that you do not need to provide the first parameter, since it will either be x or the cascaded result of the previous function call. Example Let's rewrite the example from above to compare the readability of the code: //cascade functions import { $ , exporter , models } from 'photon/core' ; //many operations in this one statement const square = $ ( new models . Square ( 10 )) . center () . rotate ( 45 ) . moveRelative ([ 0 , 15 ]) . $result ; const drawing = { models : { dome : new models . Dome ( 30 , 30 ), square : square } }; const svg = exporter . toSVG ( drawing ); document . write ( svg ); This has saved us some typing - we didnt need to use model... to access any functions. The order of operations makes more sense too: the first operation ( center() ) is at the top, the final operation ( moveRelative([0, 15]) ) is at the bottom, and the function parameters are together with their call. Using addTo() instead of .$result In some cases, you can avoid using .$result and just add a path or add a model to a parent model by calling addTo(model, id) . This is particularly useful prior to a call that creates a clone (such as mirror ): //use addTo with mirror import { $ , exporter , paths } from 'photon/core' ; const starburst = {}; $ ( new paths . Arc ([ 5 , 5 ], 5 , 180 , 270 )) . addTo ( starburst , 'arc1' ) . mirror ( true , false ) . addTo ( starburst , 'arc2' ) . mirror ( false , true ) . addTo ( starburst , 'arc3' ) . mirror ( true , false ) . addTo ( starburst , 'arc4' ); const svg = exporter . toSVG ( starburst ); document . write ( svg );","title":"Using the $ Function"},{"location":"snippets/%24-function/#container-operators","text":"A cascade container will have special properties that operate the container itself (as opposed to operating upon x). These are prefixed with $: $initial : object Gets the original x object that you passed in. $result : object Gets the final result of all cascaded function calls. $reset() : function() - Resets the container to $initial.","title":"Container operators"},{"location":"snippets/%24-function/#cascadable-functions","text":"Depending on the type of x, a cascade container will provide all of the functions from one of the corresponding modules. model module / cascade-safe functions path module / cascade-safe functions point module / cascade-safe functions These are the same functions that we've covered in previous lessons. One difference is that you do not need to provide the first parameter, since it will either be x or the cascaded result of the previous function call.","title":"Cascadable functions"},{"location":"snippets/%24-function/#example","text":"Let's rewrite the example from above to compare the readability of the code: //cascade functions import { $ , exporter , models } from 'photon/core' ; //many operations in this one statement const square = $ ( new models . Square ( 10 )) . center () . rotate ( 45 ) . moveRelative ([ 0 , 15 ]) . $result ; const drawing = { models : { dome : new models . Dome ( 30 , 30 ), square : square } }; const svg = exporter . toSVG ( drawing ); document . write ( svg ); This has saved us some typing - we didnt need to use model... to access any functions. The order of operations makes more sense too: the first operation ( center() ) is at the top, the final operation ( moveRelative([0, 15]) ) is at the bottom, and the function parameters are together with their call.","title":"Example"},{"location":"snippets/%24-function/#using-addto-instead-of-result","text":"In some cases, you can avoid using .$result and just add a path or add a model to a parent model by calling addTo(model, id) . This is particularly useful prior to a call that creates a clone (such as mirror ): //use addTo with mirror import { $ , exporter , paths } from 'photon/core' ; const starburst = {}; $ ( new paths . Arc ([ 5 , 5 ], 5 , 180 , 270 )) . addTo ( starburst , 'arc1' ) . mirror ( true , false ) . addTo ( starburst , 'arc2' ) . mirror ( false , true ) . addTo ( starburst , 'arc3' ) . mirror ( true , false ) . addTo ( starburst , 'arc4' ); const svg = exporter . toSVG ( starburst ); document . write ( svg );","title":"Using addTo() instead of .$result"},{"location":"snippets/aliasing/","text":"","title":"Aliasing"},{"location":"snippets/basic-rendering-in-svg/","text":"Call the exporter.toSVG function and pass your path as a parameter: //renders a line import { exporter } from 'photon/core' ; const line = { type : 'line' , origin : [ 0 , 0 ], end : [ 50 , 50 ] }; const svg = exporter . toSVG ( line ); document . write ( svg ); You may also call exporter.toSVG with an array of paths as a parameter: //renders a line and a circle import { exporter } from 'photon/core' ; const line = { type : 'line' , origin : [ 0 , 0 ], end : [ 50 , 50 ] }; const circle = { type : 'circle' , origin : [ 0 , 0 ], radius : 50 }; const pathArray = [ line , circle ]; const svg = exporter . toSVG ( pathArray ); document . write ( svg );","title":"Rendering in SVG"},{"location":"snippets/bezier-curves/","text":"Bezier curves are a fascinating and complex topic too large to cover here, it is recommended that you visit A Primer on Bezier Curves by Mike Kamermans (aka Pomax) . Maker.js depends on Pomax's Bezier.js which is a vital site to visit for understanding Bezier curve functionality in depth. It is important to understand how Maker.js manages the complexity of these mathematical wonders. For this explanation, we will start at the end and work our way backwards to the beginning of the process. The final representation of a Bezier curve in Maker.js is a model containing a series of circular arc paths which closely approximate the curve. Closer approximation means more calculation time and more arcs. Prior to generating the arcs, the curve is broken down into a series of sub-curves. It is from the sub-curves that the arcs are generated. Each sub-curve is guaranteed to not have an \"S\" shape so that it more closely resembles a circular arc. The sub-curves are also broken at their rectangular \"boundary box\" points so that we are guaranteed that the boundary box tangent points are truly points on the curve and not approximations. In the Bezier.js terminology, these breaking points are known as extrema . Now we are at the beginning of the process, where you call makerjs.models.BezierCurve with the new operator. You can create both quadratic and cubic Bezier curves. For either type, you may optionally pass the accuracy - the maximum distance between the true curve and the arc approximations. The default accuracy coefficient in Maker.js will produce an accurate and visually smooth curve in a reasonable calculation timeframe. Create a quadratic Bezier curve in by passing an array of three points - an origin point, a control point, and an end point: //create a quadratic Bezier curve const m = require ( 'makerjs' ); const points = [[ 0 , 100 ], [ 0 , 0 ], [ 100 , 0 ]]; const curve1 = new m . models . BezierCurve ( points ); curve1 . origin = [ 20 , 20 ]; //more accurate const curve2 = new m . models . BezierCurve ( points , 0.01 ); const model = { models : { c1 : curve1 , c2 : curve2 } }; const svg = m . exporter . toSVG ( model ); document . write ( svg ); Create a cubic Bezier curve in by passing an array of four points - an origin point, a first control point (relating to the origin point), a second control point (relating to the end point), and an end point: //create a cubic Bezier curve const m = require ( 'makerjs' ); const points = [[ 0 , 0 ], [ 50 , 50 ], [ 50 , - 50 ], [ 100 , 0 ]]; const curve1 = new m . models . BezierCurve ( points ); curve1 . origin = [ 0 , 20 ]; //more accurate const curve2 = new m . models . BezierCurve ( points , 0.1 ); const model = { models : { c1 : curve1 , c2 : curve2 } }; const svg = m . exporter . toSVG ( model ); document . write ( svg ); Be sure to Play these examples, then click \"show path names\" to see the arcs representing the curve.","title":"Bezier Curves"},{"location":"snippets/breaking/","text":"You can break paths into two pieces if you have a point that lies on the path (from an intersection, for example) by using path.breakAtPoint . This function will change the path that you pass it, so that it is broken at that point, and it will return a new path object which is the other broken piece: //break a path in two import { exporter , model , path , paths } from 'photon/core' ; const model = { paths : { arc : new paths . Arc ([ 0 , 0 ], 50 , 0 , 180 ) } }; const arc2 = path . breakAtPoint ( model . paths . arc , [ 0 , 50 ]); model . moveRelative ( arc2 , [ - 10 , 0 ]); model . paths . arc2 = arc2 ; const svg = exporter . toSVG ( model ); document . write ( svg ); For Circle, the original path will be converted in place to an Arc, and null is returned.","title":"Breaking"},{"location":"snippets/built-in-models/","text":"Maker.js provides these fundamental models: Belt Bezier Curve Bolt Circle Bolt Rectangle Connect the dots Dogbone Dome Ellipse Elliptic Arc Holes Oval OvalArc Polygon Rectangle Ring RoundRectangle S curve Slot Square Star Text","title":"Built-in Models"},{"location":"snippets/captions/","text":"Captions are fragments of text that can be positioned anywhere in your model, useful for adding documentation within your drawing. Captions are unlike the Text model , which is a line drawing of glyphs in a given font. A caption is aligned to an invisible line called an anchor. The caption text is centered both horizontally and vertically at the center point of the anchor line. The text in a caption will not wrap, it is a single line of text. The text and anchor line do not need to be the same length, the anchor line is only used to determine the center point and the slope. The anchor line may be rotated to angle the caption text. Anchor lines are moved, originated, scaled, distorted and rotated accoordingly within a model. The font size of caption text is determined when you export your model. A caption can be put on a different layer from it's model by setting the layer of it's anchor. Note: In the Playground, caption text does not scale when you zoom in or out. Creating a caption object A caption is an object with these two properties: text - String anchor - Line object Add this to a model via the caption property: //add a caption to a model import { exporter , model , models , paths } from 'photon/core' ; const square = new models . Square ( 100 ); square . caption = { text : \"a square\" , anchor : new paths . Line ([ 0 , 50 ], [ 100 , 50 ]) }; const svg = exporter . toSVG ( square ); document . write ( svg ); There is a helper function model.addCaption(text, [optional] leftAnchorPoint, [optional] rightAnchorPoint) which lets you add a caption on one line of code: //add a caption to a model with the helper import { exporter , model , models , paths } from 'photon/core' ; const square = new models . Square ( 100 ); model . addPath ( square , new paths . Line ([ 10 , 10 ], [ 90 , 90 ])); model . addCaption ( square , 'fold here' , [ 10 , 20 ], [ 80 , 90 ]); const svg = exporter . toSVG ( square ); document . write ( svg ); If the anchor line is degenerate (meaning its origin and end point are the same), you can achieve text which will remain horizontally aligned regardless of model rotation: //add a caption that will not rotate import { exporter , model , models , paths } from 'photon/core' ; const square = makerjs . $ ( new models . Square ( 100 )) . addCaption ( 'always aligned' , [ 50 , 50 ], [ 50 , 50 ]) . rotate ( 22 ) . $result ; const svg = exporter . toSVG ( square ); document . write ( svg );","title":"Captions"},{"location":"snippets/captions/#creating-a-caption-object","text":"A caption is an object with these two properties: text - String anchor - Line object Add this to a model via the caption property: //add a caption to a model import { exporter , model , models , paths } from 'photon/core' ; const square = new models . Square ( 100 ); square . caption = { text : \"a square\" , anchor : new paths . Line ([ 0 , 50 ], [ 100 , 50 ]) }; const svg = exporter . toSVG ( square ); document . write ( svg ); There is a helper function model.addCaption(text, [optional] leftAnchorPoint, [optional] rightAnchorPoint) which lets you add a caption on one line of code: //add a caption to a model with the helper import { exporter , model , models , paths } from 'photon/core' ; const square = new models . Square ( 100 ); model . addPath ( square , new paths . Line ([ 10 , 10 ], [ 90 , 90 ])); model . addCaption ( square , 'fold here' , [ 10 , 20 ], [ 80 , 90 ]); const svg = exporter . toSVG ( square ); document . write ( svg ); If the anchor line is degenerate (meaning its origin and end point are the same), you can achieve text which will remain horizontally aligned regardless of model rotation: //add a caption that will not rotate import { exporter , model , models , paths } from 'photon/core' ; const square = makerjs . $ ( new models . Square ( 100 )) . addCaption ( 'always aligned' , [ 50 , 50 ], [ 50 , 50 ]) . rotate ( 22 ) . $result ; const svg = exporter . toSVG ( square ); document . write ( svg );","title":"Creating a caption object"},{"location":"snippets/cascading-functions/","text":"When calling a function, you can pass its output directly into another function. This is called cascading. This lets you do multiple operations in one statement. Here we will center, rotate and move a square: //cascade functions import { exporter , model , models } from 'photon/core' ; //many operations in this one statement const square = model . moveRelative ( model . rotate ( model . center ( new models . Square ( 10 ) ), 45 ), [ 0 , 15 ]) ; const drawing = { models : { dome : new models . Dome ( 30 , 30 ), square : square } }; const svg = exporter . toSVG ( drawing ); document . write ( svg ); This is convenient, but it also has the drawback of making the code less readable. As more function calls are added, the parameters associated with the call are separated outward. Also notice that the final operation (moveRelative) appears at the beginning of the statement.","title":"Cascading Functions"},{"location":"snippets/chain-dogbone/","text":"A dogbone fillet can be added between all line paths in a chain by calling chain.dogbone with these parameters: chainToFillet: the chain containing paths which will be modified to have dogbone fillets at their joints. filletRadiusOrFilletRadii: Either of: a number, specifying the radius of the dogbone fillets at every link junction. an object, with these optional properties: left: radius of the dogbone fillets at every left-turning link junction. right: radius of the dogbone fillets at every right-turning link junction. This will modify all of the chain's line paths to accomodate an arc between each other, and it will return a new model containing all of the dogbone fillets which fit. This new model should be added into your tree. Left turn and right turn example The direction of turns are in context of which direction the chain is \"flowing\". An endless chain might flow either clockwise or counter-clockwise. Let's decide to make our chain clockwise. Now when we follow the chain's links in a clockwise direction, right turns will be on the \"outside\" corners of the shape, and left turns will be on the \"inside\" corners of the shape. Let's make a shape that is a cutout to represent both the inside and outside of a cut: //make a plus that is cut out from a square import { chain , cloneObject , exporter , measure , model , models } from 'photon/core' ; const plus = model . combineUnion ( model . center ( new models . Rectangle ( 50 , 100 )), model . center ( new models . Rectangle ( 100 , 50 )) ); const plus2 = cloneObject ( plus ); plus2 . origin = [ 150 , 0 ]; const outer = model . center ( new models . Rectangle ( 150 , 150 )); const model = { models : { plus , plus2 , outer } //using Shorthand property names :) } const svg = exporter . toSVG ( model ); document . write ( svg ); Next, lets find the chains for each plus, and ensure they are clockwise. Then we can add dogbones to the \"outside\" corners of the plus that is contained within the square, and to the \"inside\" corners of the plus that is apart: //make a plus that is cut out from a square import { chain , cloneObject , exporter , measure , model , models } from 'photon/core' ; const plus1 = model . combineUnion ( model . center ( new models . Rectangle ( 50 , 100 )), model . center ( new models . Rectangle ( 100 , 50 )) ); const plus2 = cloneObject ( plus1 ); plus2 . origin = [ 150 , 0 ]; const square = model . center ( new models . Square ( 150 )); //find chains for each plus const chain1 = model . findSingleChain ( plus1 ); const chain2 = model . findSingleChain ( plus2 ); //make sure our chains are clockwise [ chain1 , chain2 ]. forEach ( chain => { if ( measure . isChainClockwise ( chain )) chain . reverse ( chain ); }); //add dogbones for left and right turns const dogbones1 = chain . dogbone ( chain1 , { left : 5 }); const dogbones2 = chain . dogbone ( chain2 , { right : 5 }); const model = { models : { plus1 , plus2 , square , dogbones1 , dogbones2 } } const svg = exporter . toSVG ( model ); document . write ( svg );","title":"Chain Dogbone"},{"location":"snippets/chain-dogbone/#left-turn-and-right-turn-example","text":"The direction of turns are in context of which direction the chain is \"flowing\". An endless chain might flow either clockwise or counter-clockwise. Let's decide to make our chain clockwise. Now when we follow the chain's links in a clockwise direction, right turns will be on the \"outside\" corners of the shape, and left turns will be on the \"inside\" corners of the shape. Let's make a shape that is a cutout to represent both the inside and outside of a cut: //make a plus that is cut out from a square import { chain , cloneObject , exporter , measure , model , models } from 'photon/core' ; const plus = model . combineUnion ( model . center ( new models . Rectangle ( 50 , 100 )), model . center ( new models . Rectangle ( 100 , 50 )) ); const plus2 = cloneObject ( plus ); plus2 . origin = [ 150 , 0 ]; const outer = model . center ( new models . Rectangle ( 150 , 150 )); const model = { models : { plus , plus2 , outer } //using Shorthand property names :) } const svg = exporter . toSVG ( model ); document . write ( svg ); Next, lets find the chains for each plus, and ensure they are clockwise. Then we can add dogbones to the \"outside\" corners of the plus that is contained within the square, and to the \"inside\" corners of the plus that is apart: //make a plus that is cut out from a square import { chain , cloneObject , exporter , measure , model , models } from 'photon/core' ; const plus1 = model . combineUnion ( model . center ( new models . Rectangle ( 50 , 100 )), model . center ( new models . Rectangle ( 100 , 50 )) ); const plus2 = cloneObject ( plus1 ); plus2 . origin = [ 150 , 0 ]; const square = model . center ( new models . Square ( 150 )); //find chains for each plus const chain1 = model . findSingleChain ( plus1 ); const chain2 = model . findSingleChain ( plus2 ); //make sure our chains are clockwise [ chain1 , chain2 ]. forEach ( chain => { if ( measure . isChainClockwise ( chain )) chain . reverse ( chain ); }); //add dogbones for left and right turns const dogbones1 = chain . dogbone ( chain1 , { left : 5 }); const dogbones2 = chain . dogbone ( chain2 , { right : 5 }); const model = { models : { plus1 , plus2 , square , dogbones1 , dogbones2 } } const svg = exporter . toSVG ( model ); document . write ( svg );","title":"Left turn and right turn example"},{"location":"snippets/chain-fillet/","text":"A fillet can be added between all paths in a chain by calling chain.fillet with these parameters: chainToFillet: the chain containing paths which will be modified to have fillets at their joints. filletRadius: radius of the fillets. This will modify all of the chain's paths to accomodate an arc between each other, and it will return a new model containing all of the fillets which fit. This new model should be added into your tree. Basic example Let's draw a few lines that we know will form a chain: //render a model with paths that form a chain import { chain , exporter , model , paths } from 'photon/core' ; const model = { paths : { \"0\" : new paths . Line ([ 0 , 0 ], [ 100 , 0 ]), \"1\" : new paths . Line ([ 100 , 0 ], [ 100 , 100 ]), \"2\" : new paths . Line ([ 100 , 100 ], [ 200 , 100 ]) } }; const svg = exporter . toSVG ( model ); document . write ( svg ); Next we will find all of the chains in our model. We are expecting that there will only be one chain, so we will just take chains[0] . Then we will add fillets to that chain: //render a model with paths that form a chain import { chain , exporter , model , paths } from 'photon/core' ; const model = { paths : { \"0\" : new paths . Line ([ 0 , 0 ], [ 100 , 0 ]), \"1\" : new paths . Line ([ 100 , 0 ], [ 100 , 100 ]), \"2\" : new paths . Line ([ 100 , 100 ], [ 200 , 100 ]) }, //create a placeholder in the tree for more models models : {} }; //find the chain const chain = model . findSingleChain ( model ); //add fillets to the chain const filletsModel = chain . fillet ( chain , 10 ); //put the fillets in the tree model . models . fillets = filletsModel ; const svg = exporter . toSVG ( model ); document . write ( svg ); Advanced example We can improve upon the design of the truss example by adding fillets to the interior shapes. Let's review the truss design: //expand a truss wireframe const m = require ( 'makerjs' ); function trussWireframe ( w , h ) { this . models = { frame : new m . models . ConnectTheDots ( true , [ [ 0 , h ], [ w , 0 ], [ 0 , 0 ] ]) }; const angled = this . models . frame . paths . ShapeLine1 ; const bracepoints = [ [ 0 , 0 ], m . point . middle ( angled , 1 / 3 ), [ w / 2 , 0 ], m . point . middle ( angled , 2 / 3 ) ]; this . models . brace = new m . models . ConnectTheDots ( false , bracepoints ); } const truss = new trussWireframe ( 200 , 50 ); const expansion = m . model . expandPaths ( truss , 3 , 1 ); //call originate before calling simplify: m . model . originate ( expansion ); m . model . simplify ( expansion ); const svg = m . exporter . toSVG ( expansion ); document . write ( svg ); We know that there are 5 chains in this drawing. When we find chains, the array of found chains will be sorted by pathLength (the total length of all paths in each chain), so we know that the first chain represents the outermost perimeter of the drawing. Therefore we will ignore chains[0] and create a for...loop beginning at chains[1] : //fillet all interior chains in the truss const m = require ( 'makerjs' ); function trussWireframe ( w , h ) { this . models = { frame : new m . models . ConnectTheDots ( true , [ [ 0 , h ], [ w , 0 ], [ 0 , 0 ] ]) }; const angled = this . models . frame . paths . ShapeLine1 ; const bracepoints = [ [ 0 , 0 ], m . point . middle ( angled , 1 / 3 ), [ w / 2 , 0 ], m . point . middle ( angled , 2 / 3 ) ]; this . models . brace = new m . models . ConnectTheDots ( false , bracepoints ); } const truss = new trussWireframe ( 200 , 50 ); const expansion = m . model . expandPaths ( truss , 3 , 1 ); m . model . originate ( expansion ); m . model . simplify ( expansion ); //find chains const chains = m . model . findChains ( expansion ); //start at 1 - ignore the longest chain which is the perimeter for ( const i = 1 ; i < chains . length ; i ++ ) { //save the fillets in the model tree expansion . models [ `fillets ${ i } ` ] = m . chain . fillet ( chains [ i ], 2 ); } const svg = m . exporter . toSVG ( expansion ); document . write ( svg );","title":"Chain Fillet"},{"location":"snippets/chain-fillet/#basic-example","text":"Let's draw a few lines that we know will form a chain: //render a model with paths that form a chain import { chain , exporter , model , paths } from 'photon/core' ; const model = { paths : { \"0\" : new paths . Line ([ 0 , 0 ], [ 100 , 0 ]), \"1\" : new paths . Line ([ 100 , 0 ], [ 100 , 100 ]), \"2\" : new paths . Line ([ 100 , 100 ], [ 200 , 100 ]) } }; const svg = exporter . toSVG ( model ); document . write ( svg ); Next we will find all of the chains in our model. We are expecting that there will only be one chain, so we will just take chains[0] . Then we will add fillets to that chain: //render a model with paths that form a chain import { chain , exporter , model , paths } from 'photon/core' ; const model = { paths : { \"0\" : new paths . Line ([ 0 , 0 ], [ 100 , 0 ]), \"1\" : new paths . Line ([ 100 , 0 ], [ 100 , 100 ]), \"2\" : new paths . Line ([ 100 , 100 ], [ 200 , 100 ]) }, //create a placeholder in the tree for more models models : {} }; //find the chain const chain = model . findSingleChain ( model ); //add fillets to the chain const filletsModel = chain . fillet ( chain , 10 ); //put the fillets in the tree model . models . fillets = filletsModel ; const svg = exporter . toSVG ( model ); document . write ( svg );","title":"Basic example"},{"location":"snippets/chain-fillet/#advanced-example","text":"We can improve upon the design of the truss example by adding fillets to the interior shapes. Let's review the truss design: //expand a truss wireframe const m = require ( 'makerjs' ); function trussWireframe ( w , h ) { this . models = { frame : new m . models . ConnectTheDots ( true , [ [ 0 , h ], [ w , 0 ], [ 0 , 0 ] ]) }; const angled = this . models . frame . paths . ShapeLine1 ; const bracepoints = [ [ 0 , 0 ], m . point . middle ( angled , 1 / 3 ), [ w / 2 , 0 ], m . point . middle ( angled , 2 / 3 ) ]; this . models . brace = new m . models . ConnectTheDots ( false , bracepoints ); } const truss = new trussWireframe ( 200 , 50 ); const expansion = m . model . expandPaths ( truss , 3 , 1 ); //call originate before calling simplify: m . model . originate ( expansion ); m . model . simplify ( expansion ); const svg = m . exporter . toSVG ( expansion ); document . write ( svg ); We know that there are 5 chains in this drawing. When we find chains, the array of found chains will be sorted by pathLength (the total length of all paths in each chain), so we know that the first chain represents the outermost perimeter of the drawing. Therefore we will ignore chains[0] and create a for...loop beginning at chains[1] : //fillet all interior chains in the truss const m = require ( 'makerjs' ); function trussWireframe ( w , h ) { this . models = { frame : new m . models . ConnectTheDots ( true , [ [ 0 , h ], [ w , 0 ], [ 0 , 0 ] ]) }; const angled = this . models . frame . paths . ShapeLine1 ; const bracepoints = [ [ 0 , 0 ], m . point . middle ( angled , 1 / 3 ), [ w / 2 , 0 ], m . point . middle ( angled , 2 / 3 ) ]; this . models . brace = new m . models . ConnectTheDots ( false , bracepoints ); } const truss = new trussWireframe ( 200 , 50 ); const expansion = m . model . expandPaths ( truss , 3 , 1 ); m . model . originate ( expansion ); m . model . simplify ( expansion ); //find chains const chains = m . model . findChains ( expansion ); //start at 1 - ignore the longest chain which is the perimeter for ( const i = 1 ; i < chains . length ; i ++ ) { //save the fillets in the model tree expansion . models [ `fillets ${ i } ` ] = m . chain . fillet ( chains [ i ], 2 ); } const svg = m . exporter . toSVG ( expansion ); document . write ( svg );","title":"Advanced example"},{"location":"snippets/chain-links/","text":"Each path in the chain is represented by a ChainLink wrapper object in the links array. This ChainLink wrapper tells us how the path relates to the rest of the chain. Each ChainLink array element is connected to the next and previous element. If the chain is endless, then the last array element is connected to the first, and vice-versa. ChainLink object The path itself can be found in the walkedPath property which is a WalkPath object, the same type of object used in walking a model tree . Natural path flow The three types of paths in Maker.js are line, arc and circle. A circle has no end points, and therefore cannot connect to other paths to form a chain. Lines and arcs however, may connect to other lines or arcs at their end points to form chains. In context of a chain, lines and arcs each have a concept of a directional flow: line - a line flows from its origin to its end. arc - an arc flows from its startAngle to its endAngle, in the polar (counter-clockwise) direction. The reversed property of a ChainLink denotes that the link's path flows in the opposite direction of its natural flow to connect to its neighboring links.","title":"Chain Links"},{"location":"snippets/chain-links/#chainlink-object","text":"The path itself can be found in the walkedPath property which is a WalkPath object, the same type of object used in walking a model tree .","title":"ChainLink object"},{"location":"snippets/chain-links/#natural-path-flow","text":"The three types of paths in Maker.js are line, arc and circle. A circle has no end points, and therefore cannot connect to other paths to form a chain. Lines and arcs however, may connect to other lines or arcs at their end points to form chains. In context of a chain, lines and arcs each have a concept of a directional flow: line - a line flows from its origin to its end. arc - an arc flows from its startAngle to its endAngle, in the polar (counter-clockwise) direction. The reversed property of a ChainLink denotes that the link's path flows in the opposite direction of its natural flow to connect to its neighboring links.","title":"Natural path flow"},{"location":"snippets/chain-multiple/","text":"You can find multiple chains by calling model.findChains(model) , which will return an array of chains, sorted by largest to smallest on the pathLength property. We can find 2 chains in this drawing with 2 rectangles: //2 concentric rectangles import { exporter , model , models , paths } from 'photon/core' ; const model = { models : { outer : model . center ( new models . Rectangle ( 60 , 30 )), inner : model . center ( new models . Rectangle ( 45 , 15 )) } }; const svg = exporter . toSVG ( model ); document . write ( svg ); //now find the chains const chains = model . findChains ( model ); document . write ( `found ${ chains } ` . length + ' chains' ); Containment Instead of a \"flat\" array, we can see the containment of chains by also passing an { contain: true } object to model.findChains(model, options) : //2 concentric rectangles import { exporter , model , models , paths } from 'photon/core' ; const model = { models : { outer : model . center ( new models . Rectangle ( 60 , 30 )), inner : model . center ( new models . Rectangle ( 45 , 15 )) } }; const svg = exporter . toSVG ( model ); document . write ( svg ); //now find the contained chains const chains = model . findChains ( model , { contain : true }); document . write ( `found ${ chains } ` . length + ' chain(s) ' ); document . write ( `which contains ${ chains } ` [ 0 ]. contains . length + ' chain(s)' ); Alternating flow directions There are scenarios where you may need contained chains to flow in the opposite direction of their containing chain. This will require extra computation on each chain to test its direction. If you need this, use { contain: { alternateDirection: true } } in your options. In the returned chains array, the outmost chains will flow clockwise: //2 concentric rectangles import { exporter , model , models , paths } from 'photon/core' ; const model = { models : { outer : model . center ( new models . Rectangle ( 60 , 30 )), inner : model . center ( new models . Rectangle ( 45 , 15 )) } }; const svg = exporter . toSVG ( model ); document . write ( svg ); //now find the contained chains with alternating direction const chains = model . findChains ( model , { contain : { alternateDirection : true } }); document . write ( `found ${ chains } ` . length + ' chain(s) ' ); document . write ( `which contains ${ chains } ` [ 0 ]. contains . length + ' chain(s) ' ); document . write ( `outer is clockwise: ${ makerjs } ` . measure . isChainClockwise ( chains [ 0 ]) + ' ' ); document . write ( `inner is clockwise: ${ makerjs } ` . measure . isChainClockwise ( chains [ 0 ]. contains [ 0 ])); Isolating within layers You can find chains within layers by passing { byLayers: true } in your options. This will not return an array, but it will return an object map with keys being the layer names, and values being the array of chains for that layer: //find chains on layers import { exporter , model , models , paths } from 'photon/core' ; const c1 = new paths . Circle ( 1 ); const c2 = new paths . Circle ( 1 ); c2 . origin = [ 3 , 0 ]; c1 . layer = 'red' ; c2 . layer = 'blue' ; const model = { paths : { c1 : c1 , c2 : c2 } }; const svg = exporter . toSVG ( model ); document . write ( svg ); //now find the chains by layer const chains = model . findChains ( model , { byLayers : true }); document . write ( `found ${ chains } ` [ 'red' ]. length + ' chain(s) on red layer ' ); document . write ( `found ${ chains } ` [ 'blue' ]. length + ' chain(s) on blue layer' );","title":"Multiple Chains"},{"location":"snippets/chain-multiple/#containment","text":"Instead of a \"flat\" array, we can see the containment of chains by also passing an { contain: true } object to model.findChains(model, options) : //2 concentric rectangles import { exporter , model , models , paths } from 'photon/core' ; const model = { models : { outer : model . center ( new models . Rectangle ( 60 , 30 )), inner : model . center ( new models . Rectangle ( 45 , 15 )) } }; const svg = exporter . toSVG ( model ); document . write ( svg ); //now find the contained chains const chains = model . findChains ( model , { contain : true }); document . write ( `found ${ chains } ` . length + ' chain(s) ' ); document . write ( `which contains ${ chains } ` [ 0 ]. contains . length + ' chain(s)' );","title":"Containment"},{"location":"snippets/chain-multiple/#alternating-flow-directions","text":"There are scenarios where you may need contained chains to flow in the opposite direction of their containing chain. This will require extra computation on each chain to test its direction. If you need this, use { contain: { alternateDirection: true } } in your options. In the returned chains array, the outmost chains will flow clockwise: //2 concentric rectangles import { exporter , model , models , paths } from 'photon/core' ; const model = { models : { outer : model . center ( new models . Rectangle ( 60 , 30 )), inner : model . center ( new models . Rectangle ( 45 , 15 )) } }; const svg = exporter . toSVG ( model ); document . write ( svg ); //now find the contained chains with alternating direction const chains = model . findChains ( model , { contain : { alternateDirection : true } }); document . write ( `found ${ chains } ` . length + ' chain(s) ' ); document . write ( `which contains ${ chains } ` [ 0 ]. contains . length + ' chain(s) ' ); document . write ( `outer is clockwise: ${ makerjs } ` . measure . isChainClockwise ( chains [ 0 ]) + ' ' ); document . write ( `inner is clockwise: ${ makerjs } ` . measure . isChainClockwise ( chains [ 0 ]. contains [ 0 ]));","title":"Alternating flow directions"},{"location":"snippets/chain-multiple/#isolating-within-layers","text":"You can find chains within layers by passing { byLayers: true } in your options. This will not return an array, but it will return an object map with keys being the layer names, and values being the array of chains for that layer: //find chains on layers import { exporter , model , models , paths } from 'photon/core' ; const c1 = new paths . Circle ( 1 ); const c2 = new paths . Circle ( 1 ); c2 . origin = [ 3 , 0 ]; c1 . layer = 'red' ; c2 . layer = 'blue' ; const model = { paths : { c1 : c1 , c2 : c2 } }; const svg = exporter . toSVG ( model ); document . write ( svg ); //now find the chains by layer const chains = model . findChains ( model , { byLayers : true }); document . write ( `found ${ chains } ` [ 'red' ]. length + ' chain(s) on red layer ' ); document . write ( `found ${ chains } ` [ 'blue' ]. length + ' chain(s) on blue layer' );","title":"Isolating within layers"},{"location":"snippets/chain-order/","text":"You may have already noticed that we have not specified the order of the links array. For example, given a chain with 3 links A, B, C - the order may also be C, B, A. So, what is the order of the links in a chain? The answer is: it is quite arbitrary. There is no guarantee that the order will be the same each time across JavaScript runtime environments. Reverse a chain If you have deduced that your chain needs to be reversed, you can call makerjs.chain.reverse(chain) . Beginning of a chain Another issue with endless chains is, which link is at the beginning of the links array? The answer once again, is that it is unpredictable. If you need to specify which link is at the beginning of an endless chain, you have 2 functions at your disposal: makerjs.chain.cycle(chain, amount) - Shift the links of an endless chain. makerjs.chain.startAt(chain, routeKey) - Set the beginning of an endless chain to a known routeKey of a path. Clockwise If you have an endless chain, you also have the option to see if your links flow in a clockwise direction. Call makerjs.measure.isChainClockwise(chain) which returns a boolean, unless your chain has one link which is a circle - in which case it will return null.","title":"Chain Order"},{"location":"snippets/chain-order/#reverse-a-chain","text":"If you have deduced that your chain needs to be reversed, you can call makerjs.chain.reverse(chain) .","title":"Reverse a chain"},{"location":"snippets/chain-order/#beginning-of-a-chain","text":"Another issue with endless chains is, which link is at the beginning of the links array? The answer once again, is that it is unpredictable. If you need to specify which link is at the beginning of an endless chain, you have 2 functions at your disposal: makerjs.chain.cycle(chain, amount) - Shift the links of an endless chain. makerjs.chain.startAt(chain, routeKey) - Set the beginning of an endless chain to a known routeKey of a path.","title":"Beginning of a chain"},{"location":"snippets/chain-order/#clockwise","text":"If you have an endless chain, you also have the option to see if your links flow in a clockwise direction. Call makerjs.measure.isChainClockwise(chain) which returns a boolean, unless your chain has one link which is a circle - in which case it will return null.","title":"Clockwise"},{"location":"snippets/chain-single/","text":"Let's start with a drawing of a rectangle. A rectangle is a model, but we also implicitly know that a rectangle comprises a chain of 4 paths which connect end to end. Let's find this chain now using model.findSingleChain(model) : //from a rectangle, find a single chain import { exporter , model , models } from 'photon/core' ; const model = new models . Rectangle ( 100 , 50 ); const svg = exporter . toSVG ( model ); document . write ( svg ); //now find the chain const chain = model . findSingleChain ( model ); document . write ( `found a chain with ${ chain } ` . links . length + ` links and endless= ${ chain } ` . endless ); Now, let's combine two rectangle models in a union. Notice that a chain will continue unconstrained by the fact that the two rectangle models are independent: //combine 2 rectangles import { exporter , model , models } from 'photon/core' ; const drawing = { models : { r1 : new models . Rectangle ( 100 , 50 ), r2 : model . move ( new models . Rectangle ( 100 , 50 ), [ 50 , 25 ]) } }; model . combineUnion ( drawing . models . r1 , drawing . models . r2 ); const svg = exporter . toSVG ( drawing ); document . write ( svg ); //now find the chain const chain = model . findSingleChain ( drawing ); document . write ( `found a chain with ${ chain } ` . links . length + ` links and endless= ${ chain } ` . endless );","title":"Single Chain"},{"location":"snippets/chain-theory/","text":"When 2 or more paths connect end to end, we call this a chain . Here are 3 lines that connect end to end, forming a chain with 3 links; each line path is considered a link in the chain: When the links do not have any loose ends and connect to each other, we call this an endless chain. Frequently, endless chains are used to represent a closed geometry . Here is an endless chain made up of 2 lines and an arc: A circle is a closed geometry by nature. In Maker.js, a single circle comprises an endless chain with only one link. A chain may contain other chains, recursively. A chain may only contain others if it is an endless chain itself. Here are some examples of one chain containing another: Here is a model which does not have any chains. Although the lines overlap, they do not connect end to end. Chains are implicit You do not explicitly define chains in your drawing, chains are something that Maker.js finds in your model(s). Finding Call one of these two functions to find chains, which will return one or more Chain objects: makerjs.model.findSingleChain(model) makerjs.model.findChains(model) Chain object type makerjs.model.findSingleChain(model) makerjs.model.findChains(model)","title":"Chain Theory"},{"location":"snippets/chain-theory/#chains-are-implicit","text":"You do not explicitly define chains in your drawing, chains are something that Maker.js finds in your model(s).","title":"Chains are implicit"},{"location":"snippets/chain-theory/#finding","text":"Call one of these two functions to find chains, which will return one or more Chain objects: makerjs.model.findSingleChain(model) makerjs.model.findChains(model)","title":"Finding"},{"location":"snippets/chain-theory/#chain-object-type","text":"makerjs.model.findSingleChain(model) makerjs.model.findChains(model)","title":"Chain object type"},{"location":"snippets/chain-to-key-points/","text":"If you want a \"low poly\" representation of a chain, call model.toKeyPoints(chain, [optional] maxArcFacet) passing your chain, and the maximum length of facets on arcs & circles: //convert a round rectangle to key points import { chain , exporter , model , models } from 'photon/core' ; const rect = new models . RoundRectangle ( 100 , 50 , 10 ); const chain = model . findSingleChain ( rect ); const keyPoints = chain . toKeyPoints ( chain , 5 ); const model = { models : { rect : rect , dots : new models . Holes ( 1 , keyPoints ) } }; const svg = exporter . toSVG ( model ); document . write ( svg );","title":"Chain to Key Points"},{"location":"snippets/chain-to-new-model/","text":"Once you have a chain, you can also convert it to a model, so that you can return to using the familiar model API with your shapes. Call makerjs.chain.toNewModel(chain, detachFromOldModel: boolean) .","title":"Chain to New Model"},{"location":"snippets/chain-to-points/","text":"To get points consistently spaced along a chains, call model.toPoints(chain, distance) passing your chain, and the distance between points: //convert a round rectangle to points import { chain , exporter , model , models } from 'photon/core' ; const rect = new models . RoundRectangle ( 100 , 50 , 10 ); const chain = model . findSingleChain ( rect ); const spacing = 10 ; const keyPoints = chain . toPoints ( chain , spacing ); const model = { models : { rect : rect , dots : new models . Holes ( 1 , keyPoints ) } }; const svg = exporter . toSVG ( model ); document . write ( svg ); Hint: you can use the pathLength property of the chain to make sure your distance divides equally on the entire chain: //convert a round rectangle to points import { chain , exporter , model , models } from 'photon/core' ; const rect = new models . RoundRectangle ( 100 , 50 , 10 ); const chain = model . findSingleChain ( rect ); const minimumSpacing = 10 ; const divisions = Math . floor ( chain . pathLength / minimumSpacing ); const spacing = chain . pathLength / divisions ; console . log ( spacing ); const keyPoints = chain . toPoints ( chain , spacing ); const model = { models : { rect : rect , dots : new models . Holes ( 1 , keyPoints ) } }; const svg = exporter . toSVG ( model ); document . write ( svg );","title":"Chain to Points"},{"location":"snippets/chains/","text":"You may also wish to find paths that are not part of a chain. This will require you to pass a callback function which will be passed these three parameters: chains: an array of chains that were found. (both endless and non-endless) loose: an array of paths that did not connect in a chain. layer: the layer name containing the above. This function will get called once for each logical layer. Since our example has no layers (logically it's all one \"null\" layer), our function will only get called once. //combine a rectangle and an oval, add some other paths const m = require ( 'makerjs' ); function example ( origin ) { this . models = { rect : new m . models . Rectangle ( 100 , 50 ), oval : m . model . move ( new m . models . Oval ( 100 , 50 ), [ 50 , 25 ]) }; this . origin = origin ; } const x = new example (); m . model . combineUnion ( x . models . rect , x . models . oval ); x . paths = { line1 : new m . paths . Line ([ 150 , 10 ], [ 220 , 10 ]), line2 : new m . paths . Line ([ 220 , 50 ], [ 220 , 10 ]), line3 : new m . paths . Line ([ 220 , 75 ], [ 260 , 35 ]), circle : new m . paths . Circle ([ 185 , 50 ], 15 ) }; const svg = m . exporter . toSVG ( x ); document . write ( svg ); //find chains and output the results m . model . findChains ( x , ( chains , loose , layer ) => { document . write ( `found ${ chains } ` . length + ` chain(s) and ${ loose } ` . length + ` loose path(s) on layer ${ layer } ` ); });","title":"Chains"},{"location":"snippets/cloning/","text":"Models and paths are simple JavaScript objects, so they are easy to clone in a way that is standard to JavaScript. Maker.js provides a few functions for cloning: cloneObject - clones a model, or any other object. path.clone - clones a path (quicker than cloneObject) point.clone - clones a point (quicker than cloneObject) Cloning is useful in many situations. For example, if you need many copies of a model for rotation: //clone and rotate import { angle , cloneObject , exporter , model , path , paths , point } from 'photon/core' ; function sawtooth ( numTeeth , r1 , rd , offset ) { const a = 360 / numTeeth ; const a1 = 90 - a / 2 ; const r2 = r1 + rd ; const p1 = point . fromPolar ( angle . toRadians ( a1 ), r1 ); const p2 = point . rotate ( p1 , a , [ 0 , 0 ]); const p3 = [ - offset , r2 ]; this . paths = { outer : new paths . Arc ( p1 , p3 , r2 / 4 , false , false ), inner : new paths . Arc ( p2 , p3 , r1 / 4 , false , false ) }; } const wheel = { models : {} }; const numTeeth = 30 ; const tooth = new sawtooth ( numTeeth , 100 , 20 , 10 ); for ( const i = 0 ; i < numTeeth ; i ++ ) { const clone = cloneObject ( tooth ); const a = 360 / numTeeth ; model . rotate ( clone , a \\ * i , [ 0 , 0 ]); wheel . models [ i ] = clone ; } const svg = exporter . toSVG ( wheel ); document . write ( svg );","title":"Cloning"},{"location":"snippets/combining/","text":"You can combine models using the model.combine function, passing these parameters: first model to combine, we'll call it \"modelA\" second model to combine, we'll call it \"modelB\" boolean to include modelA's paths which are inside of modelB boolean to include modelA's paths which are outside of modelB boolean to include modelB's paths which are inside of modelA boolean to include modelB's paths which are outside of modelA Each model must be a closed geometry, and should not be self-intersecting. The effect of the 4 boolean parameters is shown in these examples: //combine a rectangle and an oval, several ways import { exporter , model , models } from 'photon/core' ; function example ( origin ) { this . models = { rect : new models . Rectangle ( 100 , 50 ), oval : model . move ( new models . Oval ( 100 , 50 ), [ 50 , 25 ]) }; this . origin = origin ; } const examples = { models : { x1 : new example ([ 0 , 0 ]), x2 : new example ([ 200 , 0 ]), x3 : new example ([ 400 , 0 ]), x4 : new example ([ 500 , 0 ]) } }; //save us some typing :) const x = examples . models ; model . combine ( x . x2 . models . rect , x . x2 . models . oval , false , true , false , true ); model . combine ( x . x3 . models . rect , x . x3 . models . oval , false , true , true , false ); model . combine ( x . x4 . models . rect , x . x4 . models . oval , true , false , true , false ); const svg = exporter . toSVG ( examples ); document . write ( svg ); Instead of remembering the boolean flag combinations, shortcuts are provided for: model.combineIntersection model.combineSubtraction model.combineUnion //combine a rectangle and an oval, several ways import { exporter , model , models } from 'photon/core' ; function example ( origin ) { this . models = { rect : new models . Rectangle ( 100 , 50 ), oval : model . move ( new models . Oval ( 100 , 50 ), [ 50 , 25 ]) }; this . origin = origin ; } const examples = { models : { x1 : new example ([ 0 , 0 ]), x2 : new example ([ 200 , 0 ]), x3 : new example ([ 400 , 0 ]), x4 : new example ([ 500 , 0 ]) } }; //save us some typing :) const x = examples . models ; model . combineUnion ( x . x2 . models . rect , x . x2 . models . oval ); model . combineSubtraction ( x . x3 . models . rect , x . x3 . models . oval ); model . combineIntersection ( x . x4 . models . rect , x . x4 . models . oval ); const svg = exporter . toSVG ( examples ); document . write ( svg ); Now it is apparent why we need a closed geometry - because we need to know what is considered the inside of a model. Return value These function will return a new model object with 2 child models, \"a\" and \"b\" which are aliases for the 2 models you passed in.","title":"Combining"},{"location":"snippets/combining/#return-value","text":"These function will return a new model object with 2 child models, \"a\" and \"b\" which are aliases for the 2 models you passed in.","title":"Return value"},{"location":"snippets/converging/","text":"To make lines meet at their slope intersection point, use path.converge . This function will only work with lines, it will not work with arcs. The converge function will try to use the end of the line that is closest to the convergence point. If you need to specify which ends of your lines should be converged, pass two additional boolean values. The boolean value is true to use the line's origin, false to use the end. Converge example: //converge lines import { cloneObject , exporter , path , paths } from 'photon/core' ; const model = { origin : [ 0 , 0 ], paths : { line1 : new paths . Line ([ 0 , 0 ], [ 10 , 5 ]), line2 : new paths . Line ([ 0 , 10 ], [ 10 , 4 ]), line3 : new paths . Line ([ 1 , 0 ], [ 5 , - 2 ]) } }; const clone1 = cloneObject ( model ); clone1 . origin = [ 10 , 0 ]; const clone2 = cloneObject ( model ); clone2 . origin = [ 20 , 0 ]; path . converge ( clone1 . paths . line1 , clone1 . paths . line2 ); path . converge ( clone1 . paths . line1 , clone1 . paths . line3 ); path . converge ( clone2 . paths . line1 , clone2 . paths . line2 , false , true ); path . converge ( clone2 . paths . line1 , clone2 . paths . line3 , true , false ); const svg = exporter . toSVG ({ models : { before : clone1 , after : model , x : clone2 } }); document . write ( svg );","title":"Converging"},{"location":"snippets/distorting/","text":"To disproportionately scale a simple point, use point.distort . To disproportionately scale a path, use path.distort (path: object, scaleX: number, scaleY: number) which returns a new object and does not modify the original. The type of returned object is dependent on the type of path being distorted: A line will return a line IPath object, since the distortion can be represented with another line. An arc will return a BezierCurve IModel object, since the distortion is not circular. A circle will return an Ellipse IModel object, since the distortion is not circular. Distort path example: //render distorted paths import { exporter , model , models , path , paths , point } from 'photon/core' ; const circle = new paths . Circle ( 50 ); const line = new paths . Line ([ - 50 , - 50 ], [ 50 , 50 ]); //a distorted line is a path, so it should be added to paths const distortedLine = path . distort ( line , 4 , 1.5 ); //a distorted circle is a model, so it should be added to models const ellipse = path . distort ( circle , 4 , 1.5 ); const model = { paths : { circle : circle , line : line , distortedLine : distortedLine }, models : { ellipse : ellipse } }; const svg = exporter . toSVG ( model ); document . write ( svg ); To disproportionately scale a model, use model.distort (model: object, scaleX: number, scaleY: number) which returns a new IModel object and does not modify the original. Distort model example: //render a distorted star import { exporter , model , models , path , paths , point } from 'photon/core' ; const star = new models . Star ( 5 , 100 ); model . rotate ( star , 18 ); //make the star 4 times wider, and 2 times taller const wideStar = model . distort ( star , 4 , 2 ); const model = { models : { star : star , wideStar : wideStar } }; const svg = exporter . toSVG ( model ); document . write ( svg );","title":"Distorting"},{"location":"snippets/dogbones/","text":"Many CNC tools are not able to cut a sharp interior corner. The way to clear the apex of an interior corner is by encompassing the corner with a circular cut known as a dogbone fillet. Use path.dogbone to round a corner at the junction between two lines. This function will only work for two lines which must meet at one point. It will clip the two lines that you pass it, and will return a new arc path which clears the corner where the lines meet. It will return null if a dogbone fillet cannot be created at the radius you specify. //dogbone fillet between lines. import { exporter , models , path , paths } from 'photon/core' ; const model = { paths : { line1 : new paths . Line ([ 0 , 0 ], [ 0 , 5 ]), line2 : new paths . Line ([ 0 , 5 ], [ 10 , 5 ]) } }; //create dogbone fillet const arc1 = path . dogbone ( model . paths . line1 , model . paths . line2 , 1 ); //add the fillet to the model model . paths . arc1 = arc1 ; const svg = exporter . toSVG ( model ); document . write ( svg ); Dogbone models If you need a rectangle with dogbones at each corner, you can use models.Dogbone(width, height, radius , optional style, optional bottomless ) . There are a 3 styles of a Dogbone model: 0 : (default) rounded -1 : horizontal -1 : vertical Dogbone model corner styles: //dogbone corner styles. import { exporter , models , path , paths } from 'photon/core' ; const dogbones = { models : { round : new models . Dogbone ( 100 , 50 , 5 , 0 ), horizontal : new models . Dogbone ( 100 , 50 , 5 , - 1 ), vertical : new models . Dogbone ( 100 , 50 , 5 , 1 ) } }; dogbones . models . horizontal . origin = [ 115 , 0 ]; dogbones . models . vertical . origin = [ 230 , 0 ]; const svg = exporter . toSVG ( dogbones ); document . write ( svg ); Making them bottomless is useful for creating tongue-and-groove shapes : //bottomless dogbones. import { exporter , models , path , paths } from 'photon/core' ; const dogbones = { models : { O : new models . Dogbone ( 100 , 50 , 5 , 0 , true ), horizontal : new models . Dogbone ( 100 , 50 , 5 , - 1 , true ), vertical : new models . Dogbone ( 100 , 50 , 5 , 1 , true ) } }; dogbones . models . horizontal . origin = [ 115 , 0 ]; dogbones . models . vertical . origin = [ 230 , 0 ]; const svg = exporter . toSVG ( dogbones ); document . write ( svg );","title":"Dogbones"},{"location":"snippets/dogbones/#dogbone-models","text":"If you need a rectangle with dogbones at each corner, you can use models.Dogbone(width, height, radius , optional style, optional bottomless ) . There are a 3 styles of a Dogbone model: 0 : (default) rounded -1 : horizontal -1 : vertical Dogbone model corner styles: //dogbone corner styles. import { exporter , models , path , paths } from 'photon/core' ; const dogbones = { models : { round : new models . Dogbone ( 100 , 50 , 5 , 0 ), horizontal : new models . Dogbone ( 100 , 50 , 5 , - 1 ), vertical : new models . Dogbone ( 100 , 50 , 5 , 1 ) } }; dogbones . models . horizontal . origin = [ 115 , 0 ]; dogbones . models . vertical . origin = [ 230 , 0 ]; const svg = exporter . toSVG ( dogbones ); document . write ( svg ); Making them bottomless is useful for creating tongue-and-groove shapes : //bottomless dogbones. import { exporter , models , path , paths } from 'photon/core' ; const dogbones = { models : { O : new models . Dogbone ( 100 , 50 , 5 , 0 , true ), horizontal : new models . Dogbone ( 100 , 50 , 5 , - 1 , true ), vertical : new models . Dogbone ( 100 , 50 , 5 , 1 , true ) } }; dogbones . models . horizontal . origin = [ 115 , 0 ]; dogbones . models . vertical . origin = [ 230 , 0 ]; const svg = exporter . toSVG ( dogbones ); document . write ( svg );","title":"Dogbone models"},{"location":"snippets/expanding/","text":"Paths can be expanded to produce a closed geometry model which surrounds them perfectly. //show each path type import { exporter , model , path , paths } from 'photon/core' ; const model = { paths : { p1 : new paths . Line ([ 0 , 2 ], [ 10 , 2 ]), p2 : new paths . Arc ([ 20 , 0 ], 5 , 0 , 180 ), p3 : new paths . Circle ([ 35 , 2 ], 5 ) } }; const svg = exporter . toSVG ( model ); document . write ( svg ); Pass a path and a distance to path.expand , this will return a new model: //expand around each path type import { exporter , model , path , paths } from 'photon/core' ; const model = { paths : { p1 : new paths . Line ([ 0 , 2 ], [ 10 , 2 ]), p2 : new paths . Arc ([ 20 , 0 ], 5 , 0 , 180 ), p3 : new paths . Circle ([ 35 , 2 ], 5 ) } }; model . models = { x1 : path . expand ( model . paths . p1 , 2 ), x2 : path . expand ( model . paths . p2 , 2 ), x3 : path . expand ( model . paths . p3 , 2 ) }; const svg = exporter . toSVG ( model ); document . write ( svg ); //show only expansions import { exporter , model , path , paths } from 'photon/core' ; const temp = { paths : { p1 : new paths . Line ([ 0 , 2 ], [ 10 , 2 ]), p2 : new paths . Arc ([ 20 , 0 ], 5 , 0 , 180 ), p3 : new paths . Circle ([ 35 , 2 ], 5 ) } }; const model = { models : { x1 : path . expand ( temp . paths . p1 , 2 ), x2 : path . expand ( temp . paths . p2 , 2 ), x3 : path . expand ( temp . paths . p3 , 2 ) } }; const svg = exporter . toSVG ( model ); document . write ( svg ); You can also expand all the paths in a model by calling model.expandPaths : //expand a star model const m = require ( 'makerjs' ); const star = m . model . rotate ( new m . models . Star ( 5 , 100 ), 18 ); const expanded = m . model . expandPaths ( star , 10 ); const model = { models : { star : star , outline : expanded } }; const svg = m . exporter . toSVG ( model ); document . write ( svg ); Beveling joints A third parameter can be passed to model.expandPaths to specify the number of corners to apply to each joint and end cap: 0 (default) - no corners (rounded) 1 - one corner (pointed) 2 - two corners (beveled) //expand and bevel const m = require ( 'makerjs' ); const star = m . model . rotate ( new m . models . Star ( 5 , 100 ), 18 ); const rounded = m . model . expandPaths ( star , 10 , 0 ); const pointed = m . model . expandPaths ( star , 10 , 1 ); const beveled = m . model . expandPaths ( star , 10 , 2 ); const model = { models : { star : star , rounded : m . model . move ( rounded , [ 240 , 0 ]), pointed : m . model . move ( pointed , [ 480 , 0 ]), beveled : m . model . move ( beveled , [ 720 , 0 ]) } }; const svg = m . exporter . toSVG ( model ); document . write ( svg );","title":"Expanding"},{"location":"snippets/expanding/#beveling-joints","text":"A third parameter can be passed to model.expandPaths to specify the number of corners to apply to each joint and end cap: 0 (default) - no corners (rounded) 1 - one corner (pointed) 2 - two corners (beveled) //expand and bevel const m = require ( 'makerjs' ); const star = m . model . rotate ( new m . models . Star ( 5 , 100 ), 18 ); const rounded = m . model . expandPaths ( star , 10 , 0 ); const pointed = m . model . expandPaths ( star , 10 , 1 ); const beveled = m . model . expandPaths ( star , 10 , 2 ); const model = { models : { star : star , rounded : m . model . move ( rounded , [ 240 , 0 ]), pointed : m . model . move ( pointed , [ 480 , 0 ]), beveled : m . model . move ( beveled , [ 720 , 0 ]) } }; const svg = m . exporter . toSVG ( model ); document . write ( svg );","title":"Beveling joints"},{"location":"snippets/exporting-dxf/","text":"Simple export Call makerjs.exporter.toDXF(model) passing your model. This function returns a string of DXF. If your drawing has layers with names that match the following reserved color names, paths on that layer will have a stroke color automatically: aqua, black, blue, fuchsia, green, gray, lime, maroon, navy, olive, orange, purple, red, silver, teal, white, yellow Captions A caption will inherit the layerOptions that are applied to its model's layer name unless overridden by the anchor layer. Advanced options You may override the default export behavior by calling makerjs.exporter.toDXF(model, options) and passing an options object. The options object has these properties: property values / effects units Maker.js unit type - unit system (default: extracted from drawing. If unit system is not in drawing or not passed, it will use DXF default of inches) fontSize number - font size of captions (default: 9). The font size is in the same unit system as the units property. layerOptions object map - keys are the layer names, values are an object with these properties:","title":"Exporting DXF"},{"location":"snippets/exporting-dxf/#simple-export","text":"Call makerjs.exporter.toDXF(model) passing your model. This function returns a string of DXF. If your drawing has layers with names that match the following reserved color names, paths on that layer will have a stroke color automatically: aqua, black, blue, fuchsia, green, gray, lime, maroon, navy, olive, orange, purple, red, silver, teal, white, yellow","title":"Simple export"},{"location":"snippets/exporting-dxf/#captions","text":"A caption will inherit the layerOptions that are applied to its model's layer name unless overridden by the anchor layer.","title":"Captions"},{"location":"snippets/exporting-dxf/#advanced-options","text":"You may override the default export behavior by calling makerjs.exporter.toDXF(model, options) and passing an options object. The options object has these properties: property values / effects units Maker.js unit type - unit system (default: extracted from drawing. If unit system is not in drawing or not passed, it will use DXF default of inches) fontSize number - font size of captions (default: 9). The font size is in the same unit system as the units property. layerOptions object map - keys are the layer names, values are an object with these properties:","title":"Advanced options"},{"location":"snippets/exporting-openjscad/","text":"Simple export Call makerjs.exporter.toOpenJsCad(model) passing your model. This function returns a string of JavaScript code executable within an OpenJsCad environment . Advanced options Call makerjs.exporter.toOpenJsCad(model, options) passing your model and an options object. See the API documentation for OpenJsCad export options","title":"Exporting to OpenJSCAD"},{"location":"snippets/exporting-openjscad/#simple-export","text":"Call makerjs.exporter.toOpenJsCad(model) passing your model. This function returns a string of JavaScript code executable within an OpenJsCad environment .","title":"Simple export"},{"location":"snippets/exporting-openjscad/#advanced-options","text":"Call makerjs.exporter.toOpenJsCad(model, options) passing your model and an options object. See the API documentation for OpenJsCad export options","title":"Advanced options"},{"location":"snippets/exporting-pdf/","text":"","title":"Exporting PDF"},{"location":"snippets/exporting-stl/","text":"To use this functionality you will need the OpenJsCsg library which is a fork of OpenJsCad without the GUI. For the browser Note: This is here for your debugging convenience. For complex models, 3D rendering on the main thread of the browser can make your page unresponsive. It is advised that you use a web worker instead. For a web worker importScripts ( 'http:// photon/core.org/external/OpenJsCad/csg.js' , 'http:// photon/core.org/external/OpenJsCad/formats.js' ); For Node.js From the command line: npm install openjscad-csg --save In your Node.js code: import { exporter , models , paths } from 'photon/core' ; const fs = require ( 'fs' ); const model = new models . Star ( 5 , 100 ); model . paths . c = new paths . Circle ([ 0 , 0 ], 20 ); fs . writeFileSync ( 'star.stl' , exporter . toSTL ( model )); Simple export Call exporter.toSTL(model) passing your model. This function returns a string of STL. Advanced options Call exporter.toSTL(model, options) passing your model and an options object. See the API documentation for OpenJsCad export options","title":"Exporting STL"},{"location":"snippets/exporting-stl/#for-the-browser","text":"","title":"For the browser"},{"location":"snippets/exporting-stl/#_1","text":"Note: This is here for your debugging convenience. For complex models, 3D rendering on the main thread of the browser can make your page unresponsive. It is advised that you use a web worker instead.","title":""},{"location":"snippets/exporting-stl/#for-a-web-worker","text":"importScripts ( 'http:// photon/core.org/external/OpenJsCad/csg.js' , 'http:// photon/core.org/external/OpenJsCad/formats.js' );","title":"For a web worker"},{"location":"snippets/exporting-stl/#for-nodejs","text":"From the command line: npm install openjscad-csg --save In your Node.js code: import { exporter , models , paths } from 'photon/core' ; const fs = require ( 'fs' ); const model = new models . Star ( 5 , 100 ); model . paths . c = new paths . Circle ([ 0 , 0 ], 20 ); fs . writeFileSync ( 'star.stl' , exporter . toSTL ( model ));","title":"For Node.js"},{"location":"snippets/exporting-stl/#simple-export","text":"Call exporter.toSTL(model) passing your model. This function returns a string of STL.","title":"Simple export"},{"location":"snippets/exporting-stl/#advanced-options","text":"Call exporter.toSTL(model, options) passing your model and an options object. See the API documentation for OpenJsCad export options","title":"Advanced options"},{"location":"snippets/exporting-svg-path-data/","text":"","title":"SVG Path Data"},{"location":"snippets/exporting-svg/","text":"Simple export Call makerjs.exporter.toSVG(model) passing your model. This function returns a string of SVG. If your drawing has layers with names that match the following reserved color names, paths on that layer will have a stroke color automatically: aqua, black, blue, fuchsia, green, gray, lime, maroon, navy, olive, orange, purple, red, silver, teal, white, yellow Captions Captions are added to an SVG group with a layer name of \"captions\". This layer name may be used to apply layerOptions that are common to all captions. In addition, a caption will inherit the layerOptions that are applied to its model's layer name unless overridden by the anchor layer. Advanced options There are two main modes of SVG export: Path-only mode and Separate mode. Path-only mode is the default. In Path-only mode, the SVG structure will have only one SVG <path> element per layer. (If you do not specify layers then you have one \"null\" layer). This SVG <path> element will contain all of your model's path data. If your drawing contained any closed geometries from endless chains, you will be able to use SVG fill on these shapes. In Separate mode, every model in your heirarchy is exported as an SVG <g> element containing that model's paths, each exported as an individual SVG element. Lines will export as an SVG <line> element, circles will export as an SVG <circle> element, and arcs will export as an SVG <path> element. Child models will become nested <g> elements. You will not be able to use SVG fill in any satisfactory way. You may override the default export behavior by calling makerjs.exporter.toSVG(model, options) and passing an options object. The options object has these properties: property values / effects mode avalability useSvgPathOnly * true (default) - Path-only mode * false - Separate mode accuracy number - Exemplar number of decimal digits (default: .001) Both annotate * true - Adds SVG <text> elements with the path id * false (default) Separate className string - Class name Both cssStyle string - CSS style Both fill string - CSS color (default: none) Path-only fillRule string - SVG fill-rule (default: \"evenodd\") * \"evenodd\" - Uses the even-odd rule * \"nonzero\" - Uses the non-zero rule (requires more computation) Path-only fontSize string - CSS font size + units (default: 9pt). For annotations and captions. Both layerOptions object map - keys are the layer names, values are an object with these properties: property origin point - offset your drawing in the SVG coordinate space (default: null) Separate scale number - scale your drawing (default: 1) Separate stroke string - CSS color (default: black) Both strokeWidth string - SVG width + units (default: 0.25mm) Both svgAttrs object map - attributes to add to the root svg tag Both units Maker.js unit type (default - extracted from drawing. If unit system is not in drawing or not passed, it will use SVG default of pixels) Both viewbox * true (default) - use SVG viewbox, stretch drawing to fill the SVG element. * false - do not stretch drawing Both","title":"Exporting SVG"},{"location":"snippets/exporting-svg/#simple-export","text":"Call makerjs.exporter.toSVG(model) passing your model. This function returns a string of SVG. If your drawing has layers with names that match the following reserved color names, paths on that layer will have a stroke color automatically: aqua, black, blue, fuchsia, green, gray, lime, maroon, navy, olive, orange, purple, red, silver, teal, white, yellow","title":"Simple export"},{"location":"snippets/exporting-svg/#captions","text":"Captions are added to an SVG group with a layer name of \"captions\". This layer name may be used to apply layerOptions that are common to all captions. In addition, a caption will inherit the layerOptions that are applied to its model's layer name unless overridden by the anchor layer.","title":"Captions"},{"location":"snippets/exporting-svg/#advanced-options","text":"There are two main modes of SVG export: Path-only mode and Separate mode. Path-only mode is the default. In Path-only mode, the SVG structure will have only one SVG <path> element per layer. (If you do not specify layers then you have one \"null\" layer). This SVG <path> element will contain all of your model's path data. If your drawing contained any closed geometries from endless chains, you will be able to use SVG fill on these shapes. In Separate mode, every model in your heirarchy is exported as an SVG <g> element containing that model's paths, each exported as an individual SVG element. Lines will export as an SVG <line> element, circles will export as an SVG <circle> element, and arcs will export as an SVG <path> element. Child models will become nested <g> elements. You will not be able to use SVG fill in any satisfactory way. You may override the default export behavior by calling makerjs.exporter.toSVG(model, options) and passing an options object. The options object has these properties: property values / effects mode avalability useSvgPathOnly * true (default) - Path-only mode * false - Separate mode accuracy number - Exemplar number of decimal digits (default: .001) Both annotate * true - Adds SVG <text> elements with the path id * false (default) Separate className string - Class name Both cssStyle string - CSS style Both fill string - CSS color (default: none) Path-only fillRule string - SVG fill-rule (default: \"evenodd\") * \"evenodd\" - Uses the even-odd rule * \"nonzero\" - Uses the non-zero rule (requires more computation) Path-only fontSize string - CSS font size + units (default: 9pt). For annotations and captions. Both layerOptions object map - keys are the layer names, values are an object with these properties: property origin point - offset your drawing in the SVG coordinate space (default: null) Separate scale number - scale your drawing (default: 1) Separate stroke string - CSS color (default: black) Both strokeWidth string - SVG width + units (default: 0.25mm) Both svgAttrs object map - attributes to add to the root svg tag Both units Maker.js unit type (default - extracted from drawing. If unit system is not in drawing or not passed, it will use SVG default of pixels) Both viewbox * true (default) - use SVG viewbox, stretch drawing to fill the SVG element. * false - do not stretch drawing Both","title":"Advanced options"},{"location":"snippets/fillets/","text":"Fillets are round corners where two paths meet. Maker.js provides two types of fillets: traditional fillets and dogbone fillets . Traditional fillet Rounding a corner can add strength to your part, as well as make it faster to print. Using path.fillet you can round a corner at the junction between two lines, two arcs, or a line and an arc. This function will clip the two paths that you pass it, and will return a new arc path which fits between the clipped ends. The paths must meet at one point, this is how it determines which ends of the paths to clip. You also provide a radius of the fillet. If the fillet cannot be created this function will return null. //fillet between lines import { exporter , path , paths } from 'photon/core' ; const model = { paths : { line1 : new paths . Line ([ 0 , 20 ], [ 30 , 10 ]), line2 : new paths . Line ([ 10 , 0 ], [ 30 , 10 ]) } }; //create a fillet const arc = path . fillet ( model . paths . line1 , model . paths . line2 , 2 ); //add the fillet to the model model . paths . arc = arc ; const svg = exporter . toSVG ( model ); document . write ( svg ); //fillet between arcs import { exporter , path , paths } from 'photon/core' ; const model = { paths : { arc1 : new paths . Arc ([ 0 , 50 ], 50 , 270 , 0 ), arc2 : new paths . Arc ([ 100 , 50 ], 50 , 180 , 270 ) } }; //create a fillet const arc = path . fillet ( model . paths . arc1 , model . paths . arc2 , 2 ); //add the fillet to the model model . paths . arc = arc ; const svg = exporter . toSVG ( model ); document . write ( svg ); //fillet between line and arc (or arc and line!) import { exporter , path , paths } from 'photon/core' ; const model = { paths : { arc : new paths . Arc ([ 0 , 50 ], 50 , 270 , 0 ), line : new paths . Line ([ 50 , 50 ], [ 50 , 0 ]) } }; //create a fillet const arc2 = path . fillet ( model . paths . arc , model . paths . line , 2 ); //add the fillet to the model model . paths . arc2 = arc2 ; const svg = exporter . toSVG ( model ); document . write ( svg );","title":"Fillets"},{"location":"snippets/fillets/#traditional-fillet","text":"Rounding a corner can add strength to your part, as well as make it faster to print. Using path.fillet you can round a corner at the junction between two lines, two arcs, or a line and an arc. This function will clip the two paths that you pass it, and will return a new arc path which fits between the clipped ends. The paths must meet at one point, this is how it determines which ends of the paths to clip. You also provide a radius of the fillet. If the fillet cannot be created this function will return null. //fillet between lines import { exporter , path , paths } from 'photon/core' ; const model = { paths : { line1 : new paths . Line ([ 0 , 20 ], [ 30 , 10 ]), line2 : new paths . Line ([ 10 , 0 ], [ 30 , 10 ]) } }; //create a fillet const arc = path . fillet ( model . paths . line1 , model . paths . line2 , 2 ); //add the fillet to the model model . paths . arc = arc ; const svg = exporter . toSVG ( model ); document . write ( svg ); //fillet between arcs import { exporter , path , paths } from 'photon/core' ; const model = { paths : { arc1 : new paths . Arc ([ 0 , 50 ], 50 , 270 , 0 ), arc2 : new paths . Arc ([ 100 , 50 ], 50 , 180 , 270 ) } }; //create a fillet const arc = path . fillet ( model . paths . arc1 , model . paths . arc2 , 2 ); //add the fillet to the model model . paths . arc = arc ; const svg = exporter . toSVG ( model ); document . write ( svg ); //fillet between line and arc (or arc and line!) import { exporter , path , paths } from 'photon/core' ; const model = { paths : { arc : new paths . Arc ([ 0 , 50 ], 50 , 270 , 0 ), line : new paths . Line ([ 50 , 50 ], [ 50 , 0 ]) } }; //create a fillet const arc2 = path . fillet ( model . paths . arc , model . paths . line , 2 ); //add the fillet to the model model . paths . arc2 = arc2 ; const svg = exporter . toSVG ( model ); document . write ( svg );","title":"Traditional fillet"},{"location":"snippets/fonts-and-text/","text":"To create models based on fonts, use models.Text with the new operator. Pass a font object, your text, and a font size. Each character of your text string will become a child model containing the paths for that character. Maker.js uses Opentype.js by Frederik De Bleser to read TrueType and OpenType fonts. Please visit the Opentype.js GitHub website for details on its API. You will need to know how to load font files before you can use them in Maker.js. Loading fonts in the browser Use opentype.load(url, callback) to load a font from a URL. Since this method goes out the network, it is asynchronous. The callback gets (err, font) where font is a Font object. Check if the err is null before using the font. Previously, all of our examples ran synchronously and we could use document.write to output a result. But now we will need to wait for a font file to download. You will have to take this in consideration in your application. In the Maker.js Playground we can call playgroundRender() . Here on this page we will insert our SVG into a div in this document: import { exporter , models } from 'photon/core' ; //load a font asynchronously opentype . load ( '/fonts/stardosstencil/StardosStencil-Bold.ttf' , ( err , font ) => { if ( err ) { document . getElementById ( 'render-text' ). innerText = 'the font could not be loaded :(' ; } else { const textModel = new models . Text ( font , 'Hello' , 100 ); const svg = exporter . toSVG ( textModel ); document . getElementById ( 'render-text' ). innerHTML = svg ; } }); ...waiting for font to download... Loading fonts in Node.js Use opentype.loadSync(url) to load a font from a file and return a Font object. Throws an error if the font could not be parsed. This only works in Node.js. import { exporter , models } from 'photon/core' ; const opentype = require ( 'opentype.js' ); const font = opentype . loadSync ( './fonts/stardosstencil/StardosStencil-Regular.ttf' ); const textModel = new models . Text ( font , 'Hello' , 100 ); console . log ( exporter . toSVG ( textModel )); Finally, a phenomenon to be aware of is that fonts aren't always perfect. You may encounter cases where paths within a character are self-intersecting or otherwise not forming closed geometries. This is not common, but it is something to be aware of, especially during combine operations.","title":"Fonts and Text"},{"location":"snippets/fonts-and-text/#loading-fonts-in-the-browser","text":"Use opentype.load(url, callback) to load a font from a URL. Since this method goes out the network, it is asynchronous. The callback gets (err, font) where font is a Font object. Check if the err is null before using the font. Previously, all of our examples ran synchronously and we could use document.write to output a result. But now we will need to wait for a font file to download. You will have to take this in consideration in your application. In the Maker.js Playground we can call playgroundRender() . Here on this page we will insert our SVG into a div in this document: import { exporter , models } from 'photon/core' ; //load a font asynchronously opentype . load ( '/fonts/stardosstencil/StardosStencil-Bold.ttf' , ( err , font ) => { if ( err ) { document . getElementById ( 'render-text' ). innerText = 'the font could not be loaded :(' ; } else { const textModel = new models . Text ( font , 'Hello' , 100 ); const svg = exporter . toSVG ( textModel ); document . getElementById ( 'render-text' ). innerHTML = svg ; } }); ...waiting for font to download...","title":"Loading fonts in the browser"},{"location":"snippets/fonts-and-text/#loading-fonts-in-nodejs","text":"Use opentype.loadSync(url) to load a font from a file and return a Font object. Throws an error if the font could not be parsed. This only works in Node.js. import { exporter , models } from 'photon/core' ; const opentype = require ( 'opentype.js' ); const font = opentype . loadSync ( './fonts/stardosstencil/StardosStencil-Regular.ttf' ); const textModel = new models . Text ( font , 'Hello' , 100 ); console . log ( exporter . toSVG ( textModel )); Finally, a phenomenon to be aware of is that fonts aren't always perfect. You may encounter cases where paths within a character are self-intersecting or otherwise not forming closed geometries. This is not common, but it is something to be aware of, especially during combine operations.","title":"Loading fonts in Node.js"},{"location":"snippets/frequently-used-functions/","text":"It's good to be aware of these functions which apply to many drawing scenarios. Also, browse the APIs of each module for lesser used specialized functions. Functions for working with points in the makerjs.point module: point.add Add two points together and return the result as a new point. * point.subtract Subtract a point from another point and return the result as a new point. * point.average Get the average of two points and return the result as a new point. * point.fromPolar Get a point from its polar coordinates: angle (in radians) and radius. * point.closest Given a reference point and an array of points, find the closest point in the array to the reference point. * point.scale Proportionately scale a point and return the result as a new point. * point.distort Disproportionately scale a point and return the result as a new point. * point.rotate Rotate a point and return the result as a new point. * point.fromPathEnds Return the two end points of a given path (null if path is a circle). Functions for working with angles in the makerjs.angle module: angle.toDegrees Convert an angle from radians to degrees. * angle.toRadians Convert an angle from degrees to radians. * angle.ofLineInDegrees Given a line, returns its angle in degrees. * angle.ofPointInDegrees Given two points, returns the angle of the line through them, in degrees. * angle.ofPointInRadians Given two points, returns the angle of the line through them, in radians. * angle.noRevolutions Given a polar angle in degrees, returns the same angle cast between -360 and 360. For example, 725 degrees = 5 degrees. * angle.ofArcSpan Given an arc, returns total angle span between its start and end angles. Functions for working with measurements in the makerjs.measure module: measure.pointDistance Calculates the distance between two points using the Pythagorean theorem. * measure.pathLength Measures the length of a path. * measure.isPointEqual Given two points, determine if they are equal within a distance of accuracy. * measure.isMeasurementOverlapping Given two measurements, determine if they are overlapping. Also known as \"bounding box overlap\". * measure.isAngleEqual Given two angles, determine if they are equal within a margin of accuracy.","title":"Frequently Used Functions"},{"location":"snippets/frequently-used-functions/#functions-for-working-with-points-in-the-makerjspoint-module","text":"point.add Add two points together and return the result as a new point. * point.subtract Subtract a point from another point and return the result as a new point. * point.average Get the average of two points and return the result as a new point. * point.fromPolar Get a point from its polar coordinates: angle (in radians) and radius. * point.closest Given a reference point and an array of points, find the closest point in the array to the reference point. * point.scale Proportionately scale a point and return the result as a new point. * point.distort Disproportionately scale a point and return the result as a new point. * point.rotate Rotate a point and return the result as a new point. * point.fromPathEnds Return the two end points of a given path (null if path is a circle).","title":"Functions for working with points in the makerjs.point module:"},{"location":"snippets/frequently-used-functions/#functions-for-working-with-angles-in-the-makerjsangle-module","text":"angle.toDegrees Convert an angle from radians to degrees. * angle.toRadians Convert an angle from degrees to radians. * angle.ofLineInDegrees Given a line, returns its angle in degrees. * angle.ofPointInDegrees Given two points, returns the angle of the line through them, in degrees. * angle.ofPointInRadians Given two points, returns the angle of the line through them, in radians. * angle.noRevolutions Given a polar angle in degrees, returns the same angle cast between -360 and 360. For example, 725 degrees = 5 degrees. * angle.ofArcSpan Given an arc, returns total angle span between its start and end angles.","title":"Functions for working with angles in the makerjs.angle module:"},{"location":"snippets/frequently-used-functions/#functions-for-working-with-measurements-in-the-makerjsmeasure-module","text":"measure.pointDistance Calculates the distance between two points using the Pythagorean theorem. * measure.pathLength Measures the length of a path. * measure.isPointEqual Given two points, determine if they are equal within a distance of accuracy. * measure.isMeasurementOverlapping Given two measurements, determine if they are overlapping. Also known as \"bounding box overlap\". * measure.isAngleEqual Given two angles, determine if they are equal within a margin of accuracy.","title":"Functions for working with measurements in the makerjs.measure module:"},{"location":"snippets/getting-started-browser/","text":"Download the browser-based version of Maker.js, then upload it to your website: http:// photon/core.org/target/js/browser.photon/core Or you can link to it: To work with Bezier Curves, you will also need a copy of Bezier.js by Pomax : To work with fonts, you will need both Bezier.js (above) and a copy of Opentype.js by Frederik De Bleser Then, in your JavaScript, import the modules you need: // Import specific modules (recommended) import { models , paths , exporter } from 'photon/core' ; // Or import all (if needed) // import * as photon from 'photon/core'; Including via CDN To work with Bezier Curves, you will also need a copy of Bezier.js by Pomax : To work with fonts, you will need both Bezier.js (above) and a copy of Opentype.js by Frederik De Bleser Then, in your JavaScript, import the modules you need: // Import specific modules (recommended) import { models , paths , exporter } from 'photon/core' ; // Or import all (if needed) // import * as photon from 'photon/core';","title":"For the Browser"},{"location":"snippets/getting-started-browser/#including-via-cdn","text":"To work with Bezier Curves, you will also need a copy of Bezier.js by Pomax : To work with fonts, you will need both Bezier.js (above) and a copy of Opentype.js by Frederik De Bleser Then, in your JavaScript, import the modules you need: // Import specific modules (recommended) import { models , paths , exporter } from 'photon/core' ; // Or import all (if needed) // import * as photon from 'photon/core';","title":"Including via CDN"},{"location":"snippets/getting-started-node/","text":"To depend on Maker.js, run this from the command line: npm install makerjs --save Then, in your JavaScript, import the modules you need: // Import specific modules (recommended) import { models , paths , exporter } from 'photon/core' ; // Or import all (if needed) // import * as photon from 'photon/core';","title":"For Node.js"},{"location":"snippets/importing-svg-path-data/","text":"SVG Path data is the value of the d attribute of a path element. For example, given this SVG: The path data is: M 0 100 L 100 100 L 100 0 L 0 0 L 0 100 Z Call importer.fromSVGPathData (pathData) passing your path data string. This will return a new model. If your SVG path data contains Curve commands , these will become Bezier curves in your model. Advanced options You may override the default import behavior by calling importer.fromSVGPathData(pathData, options) and passing an options object. The options object has these properties: property type values / effects bezierAccuracy number The maximum distance between the true curve and the arc approximations. A lower number is more accurate but requires more computation. Using zero is not recommended as it may never finish computing. This number is relative to the unit system of your SVG; so if you are rendering pixels, then 0.5 is accurate to half a pixel. Example: import { importer } from 'photon/core' ; const pathData = \"M 95 35 L 59 35 L 48 0 L 36 35 L 0 35 L 29 56 L 18 90 L 48 69 L 77 90 L 66 56 Z\" ; const model = importer . fromSVGPathData ( pathData );","title":"SVG Path Data"},{"location":"snippets/importing-svg-path-data/#advanced-options","text":"You may override the default import behavior by calling importer.fromSVGPathData(pathData, options) and passing an options object. The options object has these properties: property type values / effects bezierAccuracy number The maximum distance between the true curve and the arc approximations. A lower number is more accurate but requires more computation. Using zero is not recommended as it may never finish computing. This number is relative to the unit system of your SVG; so if you are rendering pixels, then 0.5 is accurate to half a pixel. Example: import { importer } from 'photon/core' ; const pathData = \"M 95 35 L 59 35 L 48 0 L 36 35 L 0 35 L 29 56 L 18 90 L 48 69 L 77 90 L 66 56 Z\" ; const model = importer . fromSVGPathData ( pathData );","title":"Advanced options"},{"location":"snippets/importing-svg-points/","text":"You may wish to import the points from an SVG Polyline or Polygon element. It is important to note the difference of coordinates between SVG and Maker.js points : The Y component is opposite. The remedy for this is simple - use the Y-axis mirror functions of point.mirror on every point, or call model.mirror on your entire model. SVG points can be extracted from the value of the points attribute of either polyline or polygon elements: Either of these SVG elements map nicely to the models.ConnectTheDots model. ConnectTheDots accepts an isClosed parameter - set this to false for SVG polylines and true for SVG polygons. Example: import { model , models , point } from 'photon/core' ; const points = \"50 160, 55 180, 70 180, 60 190, 65 205, 50 195, 35 205, 40 190, 30 180, 45 180\" ; const closed = true ; //true for SVG polygon, false for SVG polyline const model = model . mirror ( new models . ConnectTheDots ( closed , points ), false , true );","title":"SVG Points"},{"location":"snippets/intersection/","text":"You can find the point(s) of intersection between two paths using path.intersection . If the paths do not intersect, this function will return null. Otherwise, it will return an object with a property named intersectionPoints which is an array of points. Additionally, if either path was an arc or circle, this object will contain the angles at which an intersection occurred. Intersection examples: //line-line intersection import { exporter , path , paths , point } from 'photon/core' ; const model = { paths : { line1 : new paths . Line ([ 0 , 0 ], [ 20 , 10 ]), line2 : new paths . Line ([ 2 , 10 ], [ 50 , 2 ]) } }; const int = path . intersection ( model . paths . line1 , model . paths . line2 ); if ( int ) { const p = int . intersectionPoints [ 0 ]; const id = JSON . stringify ( point . rounded ( p , 0.01 )); model . paths [ id ] = new paths . Circle ( p , 1 ); } const svg = exporter . toSVG ( model ); document . write ( svg ); //circle-circle intersection import { exporter , path , paths , point } from 'photon/core' ; const model = { paths : { circle1 : new paths . Circle ([ 0 , 10 ], 20 ), circle2 : new paths . Circle ([ 20 , 0 ], 20 ) } }; const int = path . intersection ( model . paths . circle1 , model . paths . circle2 ); if ( int ) { int . intersectionPoints . forEach ( ( p , i ) => { const id = JSON . stringify ( point . rounded ( p , 0.01 )) + ` intersects circle1 at ${ makerjs } ` . round ( int . path1Angles [ i ], .01 ) + ` circle2 at ${ makerjs } ` . round ( int . path2Angles [ i ], .01 ); model . paths [ id ] = new paths . Circle ( p , 1 ); } ); } const svg = exporter . toSVG ( model ); document . write ( svg ); //line-arc intersection import { exporter , path , paths , point } from 'photon/core' ; const model = { paths : { line1 : new paths . Line ([ 0 , 0 ], [ 20 , 10 ]), arc1 : new paths . Arc ([ 12 , 0 ], 10 , 45 , 215 ) } }; const int = path . intersection ( model . paths . line1 , model . paths . arc1 ); if ( int ) { int . intersectionPoints . forEach ( ( p , i ) => { const id = JSON . stringify ( point . rounded ( p , 0.01 )) + ` arc1 at ${ makerjs } ` . round ( int . path2Angles [ i ], .01 ); model . paths [ id ] = new paths . Circle ( p , 1 ); } ); } const svg = exporter . toSVG ( model ); document . write ( svg );","title":"Intersection"},{"location":"snippets/just-json/","text":"Remember that your models are plain old JavaScript objects. This is also true for the basic models included with Maker.js we've seen above. To illustrate this, we will export a model using JSON.stringify. Let's use the Tablet Mount again as our example: import { exporter , models , paths } from 'photon/core' ; const outer = new models . RoundRectangle ( 200 , 280 , 8 ); const inner = new models . RoundRectangle ( 160 , 230 , 8 ); inner . origin = [ 20 , 30 ]; const buttonhole = new paths . Circle ([ 100 , 15 ], 8 ); const bolts = new models . BoltRectangle ( 180 , 260 , 2 ); bolts . origin = [ 10 , 10 ]; const tabletFaceMount = { paths : { buttonhole : buttonhole }, models : { inner : inner , outer : outer , bolts : bolts } }; const svg = exporter . toSVG ( tabletFaceMount ); document . write ( svg ); Now let's pass tabletFaceMount through JSON.stringify and look at the result: import { exporter , models , paths } from 'photon/core' ; const outer = new models . RoundRectangle ( 200 , 280 , 8 ); const inner = new models . RoundRectangle ( 160 , 230 , 8 ); inner . origin = [ 20 , 30 ]; const buttonhole = new paths . Circle ([ 100 , 15 ], 8 ); const bolts = new models . BoltRectangle ( 180 , 260 , 2 ); bolts . origin = [ 10 , 10 ]; const tabletFaceMount = { paths : { buttonhole : buttonhole }, models : { inner : inner , outer : outer , bolts : bolts } }; const json = JSON . stringify ( tabletFaceMount ); document . write ( `` $ { json } ` --- ` ); We can copy and paste this same JSON and re-use it directly as a model: //render from a blob of JSON import { exporter , models , paths } from 'photon/core' ; const tabletFaceMount = { \"paths\" : { \"buttonhole\" : { \"origin\" : [ 100 , 15 ], \"radius\" : 8 , \"type\" : \"circle\" }}, \"models\" : { \"inner\" : { \"paths\" : { \"BottomLeft\" : { \"origin\" : [ 8 , 8 ], \"radius\" : 8 , \"startAngle\" : 180 , \"endAngle\" : 270 , \"type\" : \"arc\" }, \"BottomRight\" : { \"origin\" : [ 152 , 8 ], \"radius\" : 8 , \"startAngle\" : 270 , \"endAngle\" : 0 , \"type\" : \"arc\" }, \"TopRight\" : { \"origin\" : [ 152 , 222 ], \"radius\" : 8 , \"startAngle\" : 0 , \"endAngle\" : 90 , \"type\" : \"arc\" }, \"TopLeft\" : { \"origin\" : [ 8 , 222 ], \"radius\" : 8 , \"startAngle\" : 90 , \"endAngle\" : 180 , \"type\" : \"arc\" }, \"Bottom\" : { \"origin\" : [ 8 , 0 ], \"end\" : [ 152 , 0 ], \"type\" : \"line\" }, \"Top\" : { \"origin\" : [ 152 , 230 ], \"end\" : [ 8 , 230 ], \"type\" : \"line\" }, \"Right\" : { \"origin\" : [ 160 , 8 ], \"end\" : [ 160 , 222 ], \"type\" : \"line\" }, \"Left\" : { \"origin\" : [ 0 , 222 ], \"end\" : [ 0 , 8 ], \"type\" : \"line\" }}, \"origin\" : [ 20 , 30 ]}, \"outer\" : { \"paths\" : { \"BottomLeft\" : { \"origin\" : [ 8 , 8 ], \"radius\" : 8 , \"startAngle\" : 180 , \"endAngle\" : 270 , \"type\" : \"arc\" }, \"BottomRight\" : { \"origin\" : [ 192 , 8 ], \"radius\" : 8 , \"startAngle\" : 270 , \"endAngle\" : 0 , \"type\" : \"arc\" }, \"TopRight\" : { \"origin\" : [ 192 , 272 ], \"radius\" : 8 , \"startAngle\" : 0 , \"endAngle\" : 90 , \"type\" : \"arc\" }, \"TopLeft\" : { \"origin\" : [ 8 , 272 ], \"radius\" : 8 , \"startAngle\" : 90 , \"endAngle\" : 180 , \"type\" : \"arc\" }, \"Bottom\" : { \"origin\" : [ 8 , 0 ], \"end\" : [ 192 , 0 ], \"type\" : \"line\" }, \"Top\" : { \"origin\" : [ 192 , 280 ], \"end\" : [ 8 , 280 ], \"type\" : \"line\" }, \"Right\" : { \"origin\" : [ 200 , 8 ], \"end\" : [ 200 , 272 ], \"type\" : \"line\" }, \"Left\" : { \"origin\" : [ 0 , 272 ], \"end\" : [ 0 , 8 ], \"type\" : \"line\" }}}, \"bolts\" : { \"paths\" : { \"BottomLeft\\_bolt\" : { \"origin\" : [ 0 , 0 ], \"radius\" : 2 , \"type\" : \"circle\" }, \"BottomRight\\_bolt\" : { \"origin\" : [ 180 , 0 ], \"radius\" : 2 , \"type\" : \"circle\" }, \"TopRight\\_bolt\" : { \"origin\" : [ 180 , 260 ], \"radius\" : 2 , \"type\" : \"circle\" }, \"TopLeft\\_bolt\" : { \"origin\" : [ 0 , 260 ], \"radius\" : 2 , \"type\" : \"circle\" }}, \"origin\" : [ 10 , 10 ]}}}; const svg = exporter . toSVG ( tabletFaceMount ); document . write ( svg ); Note that you might obtain JSON from some other source, perhaps generated by a tool. The only requirement for it to work with Maker.js is it must have the properties as described above.","title":"It's Just JSON"},{"location":"snippets/layers/","text":"Layers are a way of logically grouping your paths or models as you see fit. Simply add a layer property to any path or model object, with the name of the layer. Every path within a model will automatically inherit its parent model's layer, unless it has its own layer property. As you can see in this example, a layer can transcend the logical grouping boundaries of models: //render a round rectangle with arcs in their own layer import { exporter , models } from 'photon/core' ; const roundRect = new models . RoundRectangle ( 100 , 50 , 10 ); roundRect . layer = \"layer1\" ; roundRect . paths . BottomLeft . layer = \"layer2\" ; roundRect . paths . BottomRight . layer = \"layer2\" ; roundRect . paths . TopRight . layer = \"layer2\" ; roundRect . paths . TopLeft . layer = \"layer2\" ; const svg = exporter . toSVG ( roundRect ); document . write ( svg ); Layers are not visible in this example but they logically exist to separate arcs from straight lines. A layer name can be any string. Furthermore, you can use a reserved color name from this list to get an automatic stroke color when your model is exported in DXF or SVG: aqua, black, blue, fuchsia, green, gray, lime, maroon, navy, olive, orange, purple, red, silver, teal, white, yellow //render a round rectangle with arcs in their own color layer import { exporter , models } from 'photon/core' ; const roundRect = new models . RoundRectangle ( 100 , 50 , 10 ); roundRect . layer = \"layer1\" ; roundRect . paths . BottomLeft . layer = \"red\" ; roundRect . paths . BottomRight . layer = \"red\" ; roundRect . paths . TopRight . layer = \"blue\" ; roundRect . paths . TopLeft . layer = \"blue\" ; const svg = exporter . toSVG ( roundRect ); document . write ( svg ); Layers will be output during the export process in these formats: DXF - paths will be assigned to a DXF layer. SVG - in continuous mode, a new element will be created for each layer.","title":"Layers"},{"location":"snippets/layout-on-chain/","text":"Similar to layout on a path , you can use a chain as a layout guide for a row of child models within a model. Call layout.childrenOnChain(parentModel: Model, onChain: chain) , the x-axis will be projected onto your onChain: //render a row of squares on a chain import { exporter , layout , model , models } from 'photon/core' ; const square = new models . Square ( 5 ); const row = layout . cloneToRow ( square , 10 , 10 ); const curve = new models . BezierCurve ([ 0 , 0 ], [ 33 , 25 ], [ 66 , - 25 ], [ 100 , 0 ]); const chain = model . findSingleChain ( curve ); layout . childrenOnChain ( row , chain , 0.5 , false , true ); const model = { models : { curve : curve , row : row } }; curve . layer = \"red\" ; const svg = exporter . toSVG ( model ); document . write ( svg ); There are additional optional parameters to this layout.childrenOnChain: baseline : number [default: 0] reversed : boolean [default: false] contain : boolean [default: false] rotate : boolean [default: true] These behave the same as when laying out on a path. See layout on a path for explanation. Laying out text Layout on a chain works well with fonts and text. See an example here .","title":"Layout on Chain"},{"location":"snippets/layout-on-chain/#laying-out-text","text":"Layout on a chain works well with fonts and text. See an example here .","title":"Laying out text"},{"location":"snippets/layout-on-path/","text":"You can use a path as a layout guide for a row of child models within a model. Call layout.childrenOnPath(parentModel: Model, onPath: Path) , the x-axis will be projected onto your onPath: //render a row of squares on a path import { exporter , layout , models , paths } from 'photon/core' ; const square = new models . Square ( 10 ); const row = layout . cloneToRow ( square , 10 , 10 ); const arc = new paths . Arc ([ 0 , 0 ], 150 , 45 , 135 ); layout . childrenOnPath ( row , arc ); const svg = exporter . toSVG ( row ); document . write ( svg ); To better see how layout is performed, let's show the arc in red and add a triangle to the first square: //render a row of squares on a path import { exporter , layout , models , paths } from 'photon/core' ; const square = new models . Square ( 10 ); const row = layout . cloneToRow ( square , 10 , 10 ); //add a triangle to the first model row . models [ 0 ]. models = { triangle : new models . ConnectTheDots ( true , [ [ 5 , 8 ], [ 2 , 2 ], [ 8 , 2 ] ]) }; const arc = new paths . Arc ([ 0 , 0 ], 150 , 45 , 135 ); layout . childrenOnPath ( row , arc ); //show the arc in red arc . layer = \"red\" ; row . paths = { arc : arc }; const svg = exporter . toSVG ( row ); document . write ( svg ); You may be surprised to see that the first model is upside down and on the right! This is because the x-axis of the row has been projected onto the arc. The arc starts at 45 degrees and ends at 135 degrees - increasing to the left. The x-axis increases to the right, therefore it appears upside down. Fortunately, there are additional optional parameters to this layout.childrenOnPath which let you control this behavior: baseline : number [default: 0] reversed : boolean [default: false] contain : boolean [default: false] rotate : boolean [default: true] baseline This is a number, ususally between 0 and 1, to determine where to place each model \"vertically\" on the layout path. This is a ratio of the parentModel's total height above the x-axis. You may also use a negative number or greater than 1 for interesting effects. Use 0.5 to place a model at the y-center: //render a row of squares on a path import { exporter , layout , models , paths } from 'photon/core' ; const square = new models . Square ( 10 ); const row = layout . cloneToRow ( square , 10 , 10 ); row . models [ 0 ]. models = { triangle : new models . ConnectTheDots ( true , [ [ 5 , 8 ], [ 2 , 2 ], [ 8 , 2 ] ]) }; const arc = new paths . Arc ([ 0 , 0 ], 150 , 45 , 135 ); //layout on the y-center layout . childrenOnPath ( row , arc , 0.5 ); arc . layer = \"red\" ; row . paths = { arc : arc }; const svg = exporter . toSVG ( row ); document . write ( svg ); reversed This option will not work for a circle. Lines and arcs each have a concept of a directional flow: line - a line flows from its origin to its end. arc - an arc flows from its startAngle to its endAngle, in the polar (counter-clockwise) direction. If you want to plot the opposite direction, set reversed to true: //render a row of squares on a path import { exporter , layout , models , paths } from 'photon/core' ; const square = new models . Square ( 10 ); const row = layout . cloneToRow ( square , 10 , 10 ); row . models [ 0 ]. models = { triangle : new models . ConnectTheDots ( true , [ [ 5 , 8 ], [ 2 , 2 ], [ 8 , 2 ] ]) }; const arc = new paths . Arc ([ 0 , 0 ], 150 , 45 , 135 ); //layout on the y-center, reversed layout . childrenOnPath ( row , arc , 0.5 , true ); arc . layer = \"red\" ; row . paths = { arc : arc }; const svg = exporter . toSVG ( row ); document . write ( svg ); contain You may notice that the red arc's endpoints are in the x-center of the first and last children. To contain the children within the span, set contain to true: //render a row of squares on a path import { exporter , layout , models , paths } from 'photon/core' ; const square = new models . Square ( 10 ); const row = layout . cloneToRow ( square , 10 , 10 ); row . models [ 0 ]. models = { triangle : new models . ConnectTheDots ( true , [ [ 5 , 8 ], [ 2 , 2 ], [ 8 , 2 ] ]) }; const arc = new paths . Arc ([ 0 , 0 ], 150 , 45 , 135 ); //layout on the y-center, reversed, contained layout . childrenOnPath ( row , arc , 0.5 , true , true ); arc . layer = \"red\" ; row . paths = { arc : arc }; const svg = exporter . toSVG ( row ); document . write ( svg ); rotate If you wish each child to be placed on the path but not rotated, set rotate to false: //render a row of squares on a path import { exporter , layout , models , paths } from 'photon/core' ; const square = new models . Square ( 10 ); const row = layout . cloneToRow ( square , 10 , 10 ); row . models [ 0 ]. models = { triangle : new models . ConnectTheDots ( true , [ [ 5 , 8 ], [ 2 , 2 ], [ 8 , 2 ] ]) }; const arc = new paths . Arc ([ 0 , 0 ], 150 , 45 , 135 ); //layout on the y-center, reversed, not contained, not rotated layout . childrenOnPath ( row , arc , 0.5 , true , false , false ); arc . layer = \"red\" ; row . paths = { arc : arc }; const svg = exporter . toSVG ( row ); document . write ( svg ); Laying out text Layout on a path works well with fonts and text. See an example here .","title":"Layout on Path"},{"location":"snippets/layout-on-path/#baseline","text":"This is a number, ususally between 0 and 1, to determine where to place each model \"vertically\" on the layout path. This is a ratio of the parentModel's total height above the x-axis. You may also use a negative number or greater than 1 for interesting effects. Use 0.5 to place a model at the y-center: //render a row of squares on a path import { exporter , layout , models , paths } from 'photon/core' ; const square = new models . Square ( 10 ); const row = layout . cloneToRow ( square , 10 , 10 ); row . models [ 0 ]. models = { triangle : new models . ConnectTheDots ( true , [ [ 5 , 8 ], [ 2 , 2 ], [ 8 , 2 ] ]) }; const arc = new paths . Arc ([ 0 , 0 ], 150 , 45 , 135 ); //layout on the y-center layout . childrenOnPath ( row , arc , 0.5 ); arc . layer = \"red\" ; row . paths = { arc : arc }; const svg = exporter . toSVG ( row ); document . write ( svg );","title":"baseline"},{"location":"snippets/layout-on-path/#reversed","text":"This option will not work for a circle. Lines and arcs each have a concept of a directional flow: line - a line flows from its origin to its end. arc - an arc flows from its startAngle to its endAngle, in the polar (counter-clockwise) direction. If you want to plot the opposite direction, set reversed to true: //render a row of squares on a path import { exporter , layout , models , paths } from 'photon/core' ; const square = new models . Square ( 10 ); const row = layout . cloneToRow ( square , 10 , 10 ); row . models [ 0 ]. models = { triangle : new models . ConnectTheDots ( true , [ [ 5 , 8 ], [ 2 , 2 ], [ 8 , 2 ] ]) }; const arc = new paths . Arc ([ 0 , 0 ], 150 , 45 , 135 ); //layout on the y-center, reversed layout . childrenOnPath ( row , arc , 0.5 , true ); arc . layer = \"red\" ; row . paths = { arc : arc }; const svg = exporter . toSVG ( row ); document . write ( svg );","title":"reversed"},{"location":"snippets/layout-on-path/#contain","text":"You may notice that the red arc's endpoints are in the x-center of the first and last children. To contain the children within the span, set contain to true: //render a row of squares on a path import { exporter , layout , models , paths } from 'photon/core' ; const square = new models . Square ( 10 ); const row = layout . cloneToRow ( square , 10 , 10 ); row . models [ 0 ]. models = { triangle : new models . ConnectTheDots ( true , [ [ 5 , 8 ], [ 2 , 2 ], [ 8 , 2 ] ]) }; const arc = new paths . Arc ([ 0 , 0 ], 150 , 45 , 135 ); //layout on the y-center, reversed, contained layout . childrenOnPath ( row , arc , 0.5 , true , true ); arc . layer = \"red\" ; row . paths = { arc : arc }; const svg = exporter . toSVG ( row ); document . write ( svg );","title":"contain"},{"location":"snippets/layout-on-path/#rotate","text":"If you wish each child to be placed on the path but not rotated, set rotate to false: //render a row of squares on a path import { exporter , layout , models , paths } from 'photon/core' ; const square = new models . Square ( 10 ); const row = layout . cloneToRow ( square , 10 , 10 ); row . models [ 0 ]. models = { triangle : new models . ConnectTheDots ( true , [ [ 5 , 8 ], [ 2 , 2 ], [ 8 , 2 ] ]) }; const arc = new paths . Arc ([ 0 , 0 ], 150 , 45 , 135 ); //layout on the y-center, reversed, not contained, not rotated layout . childrenOnPath ( row , arc , 0.5 , true , false , false ); arc . layer = \"red\" ; row . paths = { arc : arc }; const svg = exporter . toSVG ( row ); document . write ( svg );","title":"rotate"},{"location":"snippets/layout-on-path/#laying-out-text","text":"Layout on a path works well with fonts and text. See an example here .","title":"Laying out text"},{"location":"snippets/layout-repeating/","text":"Maker.js provides several functions which will clone your paths or models and repeat them in various layouts. Columns Call makerjs.layout.cloneToColumn(path or model, count, [optional] margin) to repeatedly clone and layout in a column. The interval will be the height of the path's or model's bounding box. Extra vertical margin is optional. //Grooves for a finger joint const m = require ( 'makerjs' ); const dogbone = new m . models . Dogbone ( 50 , 20 , 2 , - 1 , false ); const grooves = m . layout . cloneToColumn ( dogbone , 5 , 20 ); document . write ( m . exporter . toSVG ( grooves )); Rows Call makerjs.layout.cloneToRow(path or model, count, [optional] margin) to repeatedly clone and layout in a row. The interval will be the width of the path's or model's bounding box. Extra horizontal margin is optional. //grill of ovals const m = require ( 'makerjs' ); const oval = new m . models . Oval ( 20 , 150 ); const grill = m . layout . cloneToRow ( oval , 12 , 20 ); document . write ( m . exporter . toSVG ( grill )); Grid Call makerjs.layout.cloneToGrid(path or model, xcount, ycount, [optional] margin) to repeatedly clone and layout in a grid. The interval will be the path's or model's bounding box. Extra margin is optional. //grill of rounded squares const m = require ( 'makerjs' ); const roundSquare = new m . models . RoundRectangle ( 20 , 20 , 4 ); const grid = m . layout . cloneToGrid ( roundSquare , 11 , 5 , 5 ); document . write ( m . exporter . toSVG ( grid )); Brick Call makerjs.layout.cloneToBrick(path or model, xcount, ycount, [optional] margin) to repeatedly clone and layout in a brick wall format. The interval will be the path's or model's bounding box. Extra margin is optional. //brick wall const m = require ( 'makerjs' ); const brick = new m . models . Rectangle ( 20 , 8 ); const wall = m . layout . cloneToBrick ( brick , 8 , 7 , 2 ); document . write ( m . exporter . toSVG ( wall )); Honeycomb Call makerjs.layout.cloneToHoneycomb(path or model, xcount, ycount, [optional] margin) to repeatedly clone and layout in a honeycomb format. The interval will be the path's or model's bounding hexagon. Extra margin is optional. //Honeycomb const m = require ( 'makerjs' ); const star = m . model . rotate ( new m . models . Star ( 6 , 50 , 0 , 2 ), 30 ); const pattern = m . layout . cloneToHoneycomb ( star , 8 , 5 , 30 ); document . write ( m . exporter . toSVG ( pattern )); Radial Call makerjs.layout.cloneToRadial(path or model, count, angleInDegrees, [optional] rotationOrigin) to repeatedly clone and layout in a radial format. //spinner const m = require ( 'makerjs' ); const rect = m . model . move ( new m . models . Rectangle ( 30 , 10 ), [ 40 , - 5 ]); const spinner = m . layout . cloneToRadial ( rect , 16 , 22.5 ); document . write ( m . exporter . toSVG ( spinner ));","title":"Repeating Layouts"},{"location":"snippets/layout-repeating/#columns","text":"Call makerjs.layout.cloneToColumn(path or model, count, [optional] margin) to repeatedly clone and layout in a column. The interval will be the height of the path's or model's bounding box. Extra vertical margin is optional. //Grooves for a finger joint const m = require ( 'makerjs' ); const dogbone = new m . models . Dogbone ( 50 , 20 , 2 , - 1 , false ); const grooves = m . layout . cloneToColumn ( dogbone , 5 , 20 ); document . write ( m . exporter . toSVG ( grooves ));","title":"Columns"},{"location":"snippets/layout-repeating/#rows","text":"Call makerjs.layout.cloneToRow(path or model, count, [optional] margin) to repeatedly clone and layout in a row. The interval will be the width of the path's or model's bounding box. Extra horizontal margin is optional. //grill of ovals const m = require ( 'makerjs' ); const oval = new m . models . Oval ( 20 , 150 ); const grill = m . layout . cloneToRow ( oval , 12 , 20 ); document . write ( m . exporter . toSVG ( grill ));","title":"Rows"},{"location":"snippets/layout-repeating/#grid","text":"Call makerjs.layout.cloneToGrid(path or model, xcount, ycount, [optional] margin) to repeatedly clone and layout in a grid. The interval will be the path's or model's bounding box. Extra margin is optional. //grill of rounded squares const m = require ( 'makerjs' ); const roundSquare = new m . models . RoundRectangle ( 20 , 20 , 4 ); const grid = m . layout . cloneToGrid ( roundSquare , 11 , 5 , 5 ); document . write ( m . exporter . toSVG ( grid ));","title":"Grid"},{"location":"snippets/layout-repeating/#brick","text":"Call makerjs.layout.cloneToBrick(path or model, xcount, ycount, [optional] margin) to repeatedly clone and layout in a brick wall format. The interval will be the path's or model's bounding box. Extra margin is optional. //brick wall const m = require ( 'makerjs' ); const brick = new m . models . Rectangle ( 20 , 8 ); const wall = m . layout . cloneToBrick ( brick , 8 , 7 , 2 ); document . write ( m . exporter . toSVG ( wall ));","title":"Brick"},{"location":"snippets/layout-repeating/#honeycomb","text":"Call makerjs.layout.cloneToHoneycomb(path or model, xcount, ycount, [optional] margin) to repeatedly clone and layout in a honeycomb format. The interval will be the path's or model's bounding hexagon. Extra margin is optional. //Honeycomb const m = require ( 'makerjs' ); const star = m . model . rotate ( new m . models . Star ( 6 , 50 , 0 , 2 ), 30 ); const pattern = m . layout . cloneToHoneycomb ( star , 8 , 5 , 30 ); document . write ( m . exporter . toSVG ( pattern ));","title":"Honeycomb"},{"location":"snippets/layout-repeating/#radial","text":"Call makerjs.layout.cloneToRadial(path or model, count, angleInDegrees, [optional] rotationOrigin) to repeatedly clone and layout in a radial format. //spinner const m = require ( 'makerjs' ); const rect = m . model . move ( new m . models . Rectangle ( 30 , 10 ), [ 40 , - 5 ]); const spinner = m . layout . cloneToRadial ( rect , 16 , 22.5 ); document . write ( m . exporter . toSVG ( spinner ));","title":"Radial"},{"location":"snippets/measuring/","text":"Browse to the makerjs.measure module documentation to see all functions related to measuring. To get the bounding rectangle of a path or a model, use: measure.pathExtents(path: object) model.modelExtents(model: object) These functions return a measurement object with high and low points. Measure path example: //render an arc, and a measurement reactangle around it import { exporter , measure , model , models , paths } from 'photon/core' ; const arc = new paths . Arc ([ 0 , 0 ], 100 , 45 , 135 ); const m = measure . pathExtents ( arc ); console . log ( 'measurement:' ); console . log ( m ); const totalWidth = m . high [ 0 ] - m . low [ 0 ]; const totalHeight = m . high [ 1 ] - m . low [ 1 ]; const measureRect = new models . Rectangle ( totalWidth , totalHeight ); measureRect . origin = m . low ; const model = { paths : { arc : arc }, models : { measureRect : measureRect } }; const svg = exporter . toSVG ( model , { useSvgPathOnly : false }); document . write ( svg ); Measure model example: //render an oval, and a measurement reactangle around it import { exporter , measure , model , models , paths } from 'photon/core' ; const oval = new models . Oval ( 100 , 20 ); model . rotate ( oval , 30 ); const m = measure . modelExtents ( oval ); console . log ( 'measurement:' ); console . log ( m ); const totalWidth = m . high [ 0 ] - m . low [ 0 ]; const totalHeight = m . high [ 1 ] - m . low [ 1 ]; const measureRect = new models . Rectangle ( totalWidth , totalHeight ); measureRect . origin = m . low ; const model = { models : { measureRect : measureRect , oval : oval } }; const svg = exporter . toSVG ( model , { useSvgPathOnly : false }); document . write ( svg );","title":"Measuring"},{"location":"snippets/mirroring/","text":"Use angle.mirror to get a mirror of an angle, and point.mirror to get a mirror of a simple point. You can create a mirrored copy of paths and models with the following functions. The mirroring can occur on the x axis, the y axis, or both. path.mirror (path: object, mirrorX: boolean, mirrorY: boolean) model.mirror (model: object, mirrorX: boolean, mirrorY: boolean) Each of these functions returns a new object and does not modify the original. Mirror path example: //render a line mirrored in the x dimension import { angle , exporter , model , models , path , paths , point } from 'photon/core' ; const line1 = new paths . Line ([ 0 , 0 ], [ 100 , 100 ]); const line2 = path . mirror ( line1 , true , false ); const paths = [ line1 , line2 ]; const svg = exporter . toSVG ( paths ); document . write ( svg ); Mirror model example: //render a model mirrored in the y dimension import { angle , exporter , model , models , path , paths , point } from 'photon/core' ; const ovalArc1 = new models . OvalArc ( 45 , 135 , 50 , 10 ); const model = { models : { ovalArc1 : ovalArc1 , ovalArc2 : model . mirror ( ovalArc1 , false , true ) } }; const svg = exporter . toSVG ( model ); document . write ( svg ); Hint: When creating symmetrical models, it may be easier to create one half, and then use mirror to generate the other half.","title":"Mirroring"},{"location":"snippets/modeling/","text":"Given the fundamental models and ability to move instances of them, we can now start modeling. Here are a few examples to illustrate how you might use these: House: //render a simple house using ConnectTheDots and Square import { exporter , models , paths } from 'photon/core' ; const points = [ [ 100 , 0 ], [ 100 , 100 ], [ 0 , 175 ], [ - 100 , 100 ], [ - 100 , 0 ], [ - 20 , 0 ], [ - 20 , 80 ], [ 20 , 80 ], [ 20 , 0 ] ]; const house = new models . ConnectTheDots ( true , points ); const window1 = new models . Square ( 40 ); window1 . origin = [ 40 , 40 ]; const window2 = new models . Square ( 40 ); window2 . origin = [ - 80 , 40 ]; const houseWithWindows = { models : { \"myHouse\" : house , \"window1\" : window1 , \"window2\" : window2 } }; const svg = exporter . toSVG ( houseWithWindows ); document . write ( svg ); Tablet mount: //render a tablet frame using BoltRectangle and RoundRectangle import { exporter , models , paths } from 'photon/core' ; const outer = new models . RoundRectangle ( 200 , 280 , 8 ); const inner = new models . RoundRectangle ( 160 , 230 , 8 ); inner . origin = [ 20 , 30 ]; const buttonhole = new paths . Circle ([ 100 , 15 ], 8 ); const bolts = new models . BoltRectangle ( 180 , 260 , 2 ); bolts . origin = [ 10 , 10 ]; const tabletFaceMount = { paths : { buttonhole : buttonhole }, models : { inner : inner , outer : outer , bolts : bolts } }; const svg = exporter . toSVG ( tabletFaceMount ); document . write ( svg ); Circular adapter plate: //render an adapter using Ring and BoltCircle import { exporter , models , paths } from 'photon/core' ; const model = { models : { ring1 : new models . Ring ( 40 , 100 ), bc1 : new models . BoltCircle ( 90 , 4 , 10 ), bc2 : new models . BoltCircle ( 55 , 7 , 6 , 30 ) } }; const svg = exporter . toSVG ( model ); document . write ( svg ); Skateboard deck: //render a skateboard deck using BoltRectangle and Oval import { exporter , models , paths } from 'photon/core' ; function truckBolts () { const tx = 1 + 5 / 8 ; const ty = 1 + 1 / 8 ; const bolts = new models . BoltRectangle ( tx , ty , 7 / 32 / 2 ); bolts . origin = [ tx / - 2 , ty / - 2 ]; this . models = [ bolts ]; } function deck ( width , length , truckOffset ) { const board = new models . Oval ( length , width ); board . origin = [ 0 , width / - 2 ]; const truck1 = new truckBolts (); truck1 . origin = [ truckOffset , 0 ]; const truck2 = new truckBolts (); truck2 . origin = [ length - truckOffset , 0 ]; this . models = { board : board , truck1 : truck1 , truck2 : truck2 }; } const svg = exporter . toSVG ( new deck ( 8 , 32 , 7 )); document . write ( svg );","title":"Modeling"},{"location":"snippets/models/","text":"Models are the heart of Maker.js. A model is represented by an object with these optional properties: origin : point paths : object map of paths models : object map of models Let's look at paths first, using the example above. //render a line and circle in a model import { exporter } from 'photon/core' ; const line = { type : 'line' , origin : [ 0 , 0 ], end : [ 50 , 50 ] }; const circle = { type : 'circle' , origin : [ 0 , 0 ], radius : 50 }; const pathObject = { myLine : line , myCircle : circle }; const model = { paths : pathObject }; const svg = exporter . toSVG ( model ); document . write ( svg ); Note that we can also pass a model to exporter.toSVG . If we wrap our model code in a function we can call it multiple times. There are several ways to do this. First we will leave the code as is, and return the model variable. //render a model created by a function import { exporter } from 'photon/core' ; function myModel () { const line = { type : 'line' , origin : [ 0 , 0 ], end : [ 50 , 50 ] }; const circle = { type : 'circle' , origin : [ 0 , 0 ], radius : 50 }; const pathObject = { myLine : line , myCircle : circle }; const model = { paths : pathObject }; return model ; } const svg = exporter . toSVG ( myModel ()); document . write ( svg ); Alternatively, we can change our function to be usable with the new operator, and our model properties are set using the this keyword: //render a model created by a function, using the 'this' keyword import { exporter } from 'photon/core' ; function myModel () { const line = { type : 'line' , origin : [ 0 , 0 ], end : [ 50 , 50 ] }; const circle = { type : 'circle' , origin : [ 0 , 0 ], radius : 50 }; const pathObject = { myLine : line , myCircle : circle }; //set properties using the \"this\" keyword this . paths = pathObject ; } //note we are using the \"new\" operator const svg = exporter . toSVG ( new myModel ()); document . write ( svg ); The example output should be the same as above. While we changed the way we defined our model, we haven't yet changed the functionality: Now we are better set up to look at models and origin . We will create a new model which has 2 instances of myModel: //render 2 instances of the same model import { exporter } from 'photon/core' ; function myModel () { const line = { type : 'line' , origin : [ 0 , 0 ], end : [ 50 , 50 ] }; const circle = { type : 'circle' , origin : [ 0 , 0 ], radius : 50 }; const pathObject = { myLine : line , myCircle : circle }; //set properties using the \"this\" keyword this . paths = pathObject ; } const model1 = new myModel (); const model2 = new myModel (); //they will be on top of each other, so let's move the origin model2 . origin = [ 100 , 0 ]; const model = { models : { \"myModel1\" : model1 , \"myModel2\" : model2 } }; const svg = exporter . toSVG ( model ); document . write ( svg ); (additional optional properties covered in advanced lessons)","title":"Models"},{"location":"snippets/modifying-models/","text":"We know that models are relatively simple objects with a well known recursive structure. This allows us to modify them for different purposes. Let's modify and combine two different models in one drawing. For this example we will use ovals to make an oval L shape. We begin by creating a model function that has two ovals: //render two ovals which overlap import { exporter , model , models } from 'photon/core' ; function ovalL ( width , height , thickness ) { const ovalH = new models . Oval ( width , thickness ); const ovalV = new models . Oval ( thickness , height ); this . models = { h : ovalH , v : ovalV }; } const svg = exporter . toSVG ( new ovalL ( 100 , 100 , 37 )); document . write ( svg ); There are overlapping arcs in the lower left corner. We can remove them if we know their id and position in the heirarchy. There are several ways we can inspect this model, here are a few: Look at the code which created it. This may involve deep lookups. For example, the Oval source code references the RoundRectangle source code . Use the browser's console, or JavaScript debugger to set a breakpoint in your model. Use the browser's DOM inspector to traverse the rendered SVG. Output the raw JSON or SVG on screen. Use the Playground app and click \"show path names\". By looking at the source code we know that an Oval is a RoundRectangle and that the ids for arcs are BottomLeft , BottomRight , TopLeft and TopRight . The ids for the sides are Left , Right , Top and Bottom . Also, we need to note the orientation of these lines so we know which are origin and end points. To remove a path we use the JavaScript delete keyword: //render two ovals which overlap import { exporter , model , models } from 'photon/core' ; function ovalL ( width , height , thickness ) { const ovalH = new models . Oval ( width , thickness ); const ovalV = new models . Oval ( thickness , height ); //delete the lower arcs from the vertical oval delete ovalV . paths . BottomLeft ; delete ovalV . paths . BottomRight ; //delete the inside arc of the horizontal delete ovalH . paths . TopLeft ; this . models = { h : ovalH , v : ovalV }; } const svg = exporter . toSVG ( new ovalL ( 100 , 100 , 37 )); document . write ( svg ); The next step is to eliminate the overlap in the lines. Here are two approaches to do this: Adjust only the x or y component of the point: //render an L shape, modifying points by their x and y import { exporter , model , models } from 'photon/core' ; function ovalL ( width , height , thickness ) { const ovalH = new models . Oval ( width , thickness ); const ovalV = new models . Oval ( thickness , height ); delete ovalV . paths . BottomLeft ; delete ovalV . paths . BottomRight ; delete ovalH . paths . TopLeft ; //move the x of the horizontal's top ovalH . paths . Top . end [ 0 ] = thickness ; //move the y of the vertical's right ovalV . paths . Right . origin [ 1 ] = thickness ; this . models = { h : ovalH , v : ovalV }; } const svg = exporter . toSVG ( new ovalL ( 100 , 100 , 37 )); document . write ( svg ); Share a point on both lines: //render an L shape, sharing a point import { exporter , model , models } from 'photon/core' ; function ovalL ( width , height , thickness ) { const ovalH = new models . Oval ( width , thickness ); const ovalV = new models . Oval ( thickness , height ); delete ovalV . paths . BottomLeft ; delete ovalV . paths . BottomRight ; delete ovalH . paths . TopLeft ; //set to the same point ovalH . paths . Top . end = ovalV . paths . Right . origin = [ thickness , thickness ]; this . models = { h : ovalH , v : ovalV }; } const svg = exporter . toSVG ( new ovalL ( 100 , 100 , 37 )); document . write ( svg ); Let's progress this example further, by modifying an L shape into a C shape. Create a new model function for C, and immediately create an L within it. The C may create a new models object for itself, and nest the L inside; alternatively, C can just assume L's models object: //render an L with an oval over it import { exporter , model , models } from 'photon/core' ; function ovalL ( width , height , thickness ) { const ovalH = new models . Oval ( width , thickness ); const ovalV = new models . Oval ( thickness , height ); delete ovalV . paths . BottomLeft ; delete ovalV . paths . BottomRight ; delete ovalH . paths . TopLeft ; ovalH . paths . Top . end = ovalV . paths . Right . origin = [ thickness , thickness ]; this . models = { h : ovalH , v : ovalV }; } function ovalC ( width , height , thickness ) { //assume the same models as L this . models = new ovalL ( width , height , thickness ). models ; //add another oval this . models . h2 = new models . Oval ( width , thickness ); //move it to the top this . models . h2 . origin = [ 0 , height - thickness ]; } //using C instead of L const svg = exporter . toSVG ( new ovalC ( 100 , 100 , 37 )); document . write ( svg ); Just as before, we need to delete the overlapping paths using the delete keyword. Let us also make a short alias for this.models to save us some keystrokes: //render an L and form a C import { exporter , model , models } from 'photon/core' ; function ovalL ( width , height , thickness ) { const ovalH = new models . Oval ( width , thickness ); const ovalV = new models . Oval ( thickness , height ); delete ovalV . paths . BottomLeft ; delete ovalV . paths . BottomRight ; delete ovalH . paths . TopLeft ; ovalH . paths . Top . end = ovalV . paths . Right . origin = [ thickness , thickness ]; this . models = { h : ovalH , v : ovalV }; } function ovalC ( width , height , thickness ) { //set local var m for easy typing const m = this . models = new ovalL ( width , height , thickness ). models ; m . h2 = new models . Oval ( width , thickness ); m . h2 . origin = [ 0 , height - thickness ]; //delete overlapping arcs again delete m . h2 . paths . TopLeft ; delete m . h2 . paths . BottomLeft ; delete m . v . paths . TopRight ; } const svg = exporter . toSVG ( new ovalC ( 100 , 100 , 37 )); document . write ( svg ); Lastly, we need our overlapping lines to meet at a common point. Notice that the new oval h2 has a different origin the the previous ovals. So, we must originate for all of the ovals to share the same coordinate space. Afterwards, we can assign the common point to both lines. In the Play editor, try removing the call to originate to see the results without it. //render a C shape import { exporter , model , models } from 'photon/core' ; function ovalL ( width , height , thickness ) { const ovalH = new models . Oval ( width , thickness ); const ovalV = new models . Oval ( thickness , height ); delete ovalV . paths . BottomLeft ; delete ovalV . paths . BottomRight ; delete ovalH . paths . TopLeft ; ovalH . paths . Top . end = ovalV . paths . Right . origin = [ thickness , thickness ]; this . models = { h : ovalH , v : ovalV }; } function ovalC ( width , height , thickness ) { const m = this . models = new ovalL ( width , height , thickness ). models ; m . h2 = new models . Oval ( width , thickness ); m . h2 . origin = [ 0 , height - thickness ]; delete m . h2 . paths . TopLeft ; delete m . h2 . paths . BottomLeft ; delete m . v . paths . TopRight ; //h2 has paths relative to h2 origin, //we need to originate to share the point model . originate ( this ); //share the point m . h2 . paths . Bottom . origin = m . v . paths . Right . end = [ thickness , height - thickness ]; } const svg = exporter . toSVG ( new ovalC ( 100 , 100 , 37 )); document . write ( svg );","title":"Modifying Models"},{"location":"snippets/moving/","text":"Models and paths can be moved to an absolute location, or moved by an [x, y] amount relative to their current location. Keep in mind that since paths are contained within models, and models may be contained within models, that their coordinates will be relative to the containing model. To illustrate this, let's create a model that has a few squares: //create some squares side by side function Squares () { this . models = { s1 : new models . Square ( 100 ), //calling model.move and creating a model all on one line of code. s2 : model . move ( new models . Square ( 100 ), [ 120 , 0 ]), s3 : new models . Square ( 100 ) }; //move the third square by setting its origin property. this . models . s3 . origin = [ 240 , 0 ]; } import { exporter , model , models , path } from 'photon/core' ; const squares = new Squares (); const svg = exporter . toSVG ( squares ); document . write ( svg ); The way to move a model to an absolute position is to set its origin property. The model.move function does just that, but it also lets you do more operations on one line of code. To move a model by a relative amount, use model.moveRelative : //move some squares by a relative distance function Squares () { this . models = { s1 : new models . Square ( 100 ), s2 : model . move ( new models . Square ( 100 ), [ 120 , 0 ]), s3 : new models . Square ( 100 ) }; this . models . s3 . origin = [ 240 , 0 ]; } import { exporter , model , models , path } from 'photon/core' ; const squares = new Squares (); //move some squares by a relative distance model . moveRelative ( squares . models . s2 , [ - 10 , 10 ]); model . moveRelative ( squares . models . s3 , [ - 20 , 20 ]); const svg = exporter . toSVG ( squares ); document . write ( svg ); Likewise, paths can be moved absolutely with path.move or relatively with path.moveRelative : //move some paths within the squares function Squares () { this . models = { s1 : new models . Square ( 100 ), s2 : model . move ( new models . Square ( 100 ), [ 120 , 0 ]), s3 : new models . Square ( 100 ) }; this . models . s3 . origin = [ 240 , 0 ]; } import { exporter , model , models , path } from 'photon/core' ; const squares = new Squares (); //move a path by a relative distance path . moveRelative ( squares . models . s3 . paths . ShapeLine3 , [ 0 , 20 ]); //move a path to an absolute point path . move ( squares . models . s2 . paths . ShapeLine1 , [ 30 , 20 ]); const svg = exporter . toSVG ( squares ); document . write ( svg ); Notice that the 2nd square had an origin of [120, 0] but we moved a line within the square to an absolute point [30, 20]. Since the line is contained within the square model, its coordinates are in terms of the square, which is why it appears to be at [150, 20].","title":"Moving"},{"location":"snippets/open-vs-closed-geometry/","text":"An open geometry is when any path in a drawing is a dead end. A closed geometry is when all path ends meet and there are no dead end paths. A closed geometry forms an enclosed shape. Examples of Open Geometry: Examples of Closed Geometry: Maker.js works with both open and closed geometries. When your desire is to create a three dimensional object, you will probably be using a closed geometry.","title":"Open vs Closed Geometry"},{"location":"snippets/order-of-operations/","text":"Combining models with boolean operations is a powerful feature but it can be challenging in some scenarios. Re-modeling your drawing may be necessary to acheive certain results. We will explore the order of operations concept with a sample project. Let's first take a look at our desired end goal: We can start with all of the building blocks of our design: a star, a plus, and a frame: //the basic skeleton of our project import { exporter , model , models } from 'photon/core' ; const star = new models . Star ( 28 , 25 , 20 ); const plus = model . rotate ({ models : { v : model . center ( new models . Rectangle ( 3 , 90 )), h : model . center ( new models . Rectangle ( 110 , 3 )) } }, - 12.5 ); const frame = { models : { outer : model . center ( new models . RoundRectangle ( 100 , 80 , 4 )), inner : model . center ( new models . Rectangle ( 90 , 70 )) } }; const model = { models : { star : star , plus : plus , frame : frame } }; const svg = exporter . toSVG ( model ); document . write ( svg ); The first step is to combine the vertical and horizontal bars of the plus: //combine the plus import { exporter , model , models } from 'photon/core' ; const star = new models . Star ( 28 , 25 , 20 ); const plus = model . rotate ({ models : { v : model . center ( new models . Rectangle ( 3 , 90 )), h : model . center ( new models . Rectangle ( 110 , 3 )) } }, - 12.5 ); //make a union from the vertical and horizontal model . combineUnion ( plus . models . v , plus . models . h ); const frame = { models : { outer : model . center ( new models . RoundRectangle ( 100 , 80 , 4 )), inner : model . center ( new models . Rectangle ( 90 , 70 )) } }; const model = { models : { star : star , plus : plus , frame : frame } }; const svg = exporter . toSVG ( model ); document . write ( svg ); Next we will combine the star and the plus: //combine the star and plus import { exporter , model , models } from 'photon/core' ; const star = new models . Star ( 28 , 25 , 20 ); const plus = model . rotate ({ models : { v : model . center ( new models . Rectangle ( 3 , 90 )), h : model . center ( new models . Rectangle ( 110 , 3 )) } }, - 12.5 ); model . combineUnion ( plus . models . v , plus . models . h ); //make a union from the star and the plus: model . combineUnion ( star , plus ); const frame = { models : { outer : model . center ( new models . RoundRectangle ( 100 , 80 , 4 )), inner : model . center ( new models . Rectangle ( 90 , 70 )) } }; const model = { models : { star : star , plus : plus , frame : frame } }; const svg = exporter . toSVG ( model ); document . write ( svg ); Let's pause and consider what the plus looks like by itself, after our union operation with the star: And the star by itself: They have become open geometries. We cannot call the combine function with an open geometry. But since we combined them, they are a closed geometry when they are together. So, we should create a new model for them together: //remodel the star and plus import { exporter , model , models } from 'photon/core' ; const star = new models . Star ( 28 , 25 , 20 ); const plus = model . rotate ({ models : { v : model . center ( new models . Rectangle ( 3 , 90 )), h : model . center ( new models . Rectangle ( 110 , 3 )) } }, - 12.5 ); model . combineUnion ( plus . models . v , plus . models . h ); model . combineUnion ( star , plus ); //make a new model with the star and plus together const starplus = { models : { star : star , plus : plus } }; const frame = { models : { outer : model . center ( new models . RoundRectangle ( 100 , 80 , 4 )), inner : model . center ( new models . Rectangle ( 90 , 70 )) } }; const model = { models : { //re-modeling: reference the starplus instead of star and plus separately starplus : starplus , frame : frame } }; const svg = exporter . toSVG ( model ); document . write ( svg ); Now we can continue, with a subtraction operation. Notice that we should not subtract the starplus from the frame (try that on your own to see what happens) but only from the inner frame: //subtract the starplus import { exporter , model , models } from 'photon/core' ; const star = new models . Star ( 28 , 25 , 20 ); const plus = model . rotate ({ models : { v : model . center ( new models . Rectangle ( 3 , 90 )), h : model . center ( new models . Rectangle ( 110 , 3 )) } }, - 12.5 ); model . combineUnion ( plus . models . v , plus . models . h ); model . combineUnion ( star , plus ); const starplus = { models : { star : star , plus : plus } }; const frame = { models : { outer : model . center ( new models . RoundRectangle ( 100 , 80 , 4 )), inner : model . center ( new models . Rectangle ( 90 , 70 )) } }; //subtract from the inner frame only model . combineSubtraction ( frame . models . inner , starplus ); const model = { models : { starplus : starplus , frame : frame } }; const svg = exporter . toSVG ( model ); document . write ( svg );","title":"Order of Operations"},{"location":"snippets/originating/","text":"A path within a model is referenced relatively to its parent model. There may be times when you want all objects to be within the same coordinate space. Let's create a simple demonstration model: //render a couple boxes in their own coordinate space import { exporter , model , models , paths } from 'photon/core' ; function box ( origin ) { this . models = { outer : new models . RoundRectangle ( 100 , 100 , 1 ) }; this . paths = { inner : new paths . Circle ([ 50 , 50 ], 25 ) }; this . origin = origin ; } const box1 = new box ([ 0 , 0 ]); const box2 = new box ([ 150 , 0 ]); const model = { models : { box1 : box1 , box2 : box2 } }; const svg = exporter . toSVG ( model ); document . write ( svg ); console . log ( box1 . paths . inner . origin ); console . log ( box2 . paths . inner . origin ); In this example, both box1.paths.inner.origin and box2.paths.inner.origin have an origin of [50, 50] even though they are not in the same place, because they are located relative to the model that contains them. To make all models and paths occupy a singular coordinate space, we can use model.originate : //render a couple boxes in the same coordinate space import { exporter , model , models , paths } from 'photon/core' ; function box ( origin ) { this . models = { outer : new models . RoundRectangle ( 100 , 100 , 1 ) }; this . paths = { inner : new paths . Circle ([ 50 , 50 ], 25 ) }; this . origin = origin ; } const box1 = new box ([ 0 , 0 ]); const box2 = new box ([ 150 , 0 ]); const model = { models : { box1 : box1 , box2 : box2 } }; //move all path origins into the same space model . originate ( model ); const svg = exporter . toSVG ( model ); document . write ( svg ); console . log ( box1 . paths . inner . origin ); console . log ( box2 . paths . inner . origin ); Now box1.paths.inner.origin and box2.paths.inner.origin have the origins [50, 50] and [200, 50] .","title":"Originating"},{"location":"snippets/outlining/","text":"Expanding a model's path will surround every path, which sometimes can mean there is an inner and an outer surrounding chain. If you only want the outer surrounding chain, use makerjs.model.outline : //outline a star model const m = require ( 'makerjs' ); const star = m . model . rotate ( new m . models . Star ( 5 , 100 ), 18 ); const outline = m . model . outline ( star , 10 ); const model = { models : { star : star , outline : outline } }; const svg = m . exporter . toSVG ( model ); document . write ( svg );","title":"Outlining"},{"location":"snippets/path-constructors/","text":"In the example code above we used plain old JavaScript objects to create paths and models. Notice that we didn't need to use a special constructor provided by Maker.js to create either a path or a model. This is an intentional aspect of Maker.js, that you can decide how to create your objects. To make these plain objects work with Maker.js, they needed to use the property names specified above. We also illustrated 3 ways of defining an object: using a var, using a function that returns a var, and using a constructor function (for use by the new keyword). Let's revisit our simple line path example, and convert it to a constructor function. //render a line import { exporter , paths } from 'photon/core' ; const line = { type : 'line' , origin : [ 0 , 0 ], end : [ 50 , 50 ] }; const svg = exporter . toSVG ( line ); document . write ( svg ); //render a line created by a function import { exporter , paths } from 'photon/core' ; function line () { this . type = 'line' , this . origin = [ 0 , 0 ], this . end = [ 50 , 50 ] }; const svg = exporter . toSVG ( new line ()); document . write ( svg ); Of course this example is not very useful because it only produces a line with the same origin and end every time. Instead, these should be passed as parameters. Since this is a common scenario, Maker.js provides constructors for all primitive paths: line, circle and arc: paths.Line paths.Circle paths.Arc //render the basic paths import { exporter , paths } from 'photon/core' ; const line = new paths . Line ([ 0 , 0 ], [ 50 , 50 ]); const circle = new paths . Circle ([ 0 , 0 ], 50 ); const arc = new paths . Arc ([ 0 , 0 ], 25 , 0 , 90 ); const svg = exporter . toSVG ([ line , circle , arc ]); document . write ( svg );","title":"Path Constructors"},{"location":"snippets/path-independence/","text":"All paths in a drawing are atomic elements of either line, arc, or circle. Paths may happen to touch each other or they may not. When any two paths have the same endpoint, this is called a chain . A chain can continue with any number of paths that meet end to end. If the chain begins and ends at the same point, this is called an endless chain . Chains are an important concept that we will build upon, yet they are not a thing that you specify in your code. Rather, chains are \"found\" by Maker.js when it processes your drawing model. Paths in your drawing model are independent elements which may be added, modified or deleted by you or another developer. As you work with paths, bear in mind that you are also implicitly working with chains. //render a model that nas no chains import { exporter , paths } from 'photon/core' ; const model = { paths : { \"h1\" : new paths . Line ([ 0 , 10 ], [ 30 , 10 ]), \"h2\" : new paths . Line ([ 0 , 20 ], [ 30 , 20 ]), \"v1\" : new paths . Line ([ 10 , 0 ], [ 10 , 30 ]), \"v2\" : new paths . Line ([ 20 , 0 ], [ 20 , 30 ]) } }; const svg = exporter . toSVG ( model ); document . write ( svg ); //render a model with paths that form a chain import { exporter , paths } from 'photon/core' ; const model = { paths : { \"0\" : new paths . Line ([ 0 , 0 ], [ 100 , 0 ]), \"1\" : new paths . Line ([ 100 , 0 ], [ 100 , 100 ]), \"2\" : new paths . Line ([ 100 , 100 ], [ 200 , 100 ]) } }; const svg = exporter . toSVG ( model ); document . write ( svg ); //render a model with paths that form an endless chain import { exporter , paths } from 'photon/core' ; const model = { paths : { \"v\" : new paths . Line ([ 0 , 0 ], [ 0 , 100 ]), \"h\" : new paths . Line ([ 0 , 0 ], [ 100 , 0 ]), \"arc\" : new paths . Arc ([ 0 , 0 ], 100 , 0 , 90 ) } }; const svg = exporter . toSVG ( model ); document . write ( svg );","title":"Path Independence"},{"location":"snippets/paths/","text":"A path is represented by an object with these mandatory properties: type: string - \"line\", \"circle\", or \"arc\" origin: point Line A line is a path with the type \"line\" and this additional property: end: point const line = { type : 'line' , origin : [ 0 , 0 ], end : [ 1 , 1 ] }; Circle A circle is a path with the type \"circle\" and this additional property: radius: number const circle = { type : 'circle' , origin : [ 0 , 0 ], radius : 1 }; Arc An arc is a path with the type \"arc\" and these additional properties: radius: number startAngle: number endAngle: number Note: Property names are case-sensitive. const arc = { type : 'arc' , origin : [ 0 , 0 ], radius : 1 , startAngle : 0 , endAngle : 45 }; (additional optional properties covered in advanced lessons)","title":"Paths"},{"location":"snippets/paths/#line","text":"A line is a path with the type \"line\" and this additional property: end: point const line = { type : 'line' , origin : [ 0 , 0 ], end : [ 1 , 1 ] };","title":"Line"},{"location":"snippets/paths/#circle","text":"A circle is a path with the type \"circle\" and this additional property: radius: number const circle = { type : 'circle' , origin : [ 0 , 0 ], radius : 1 };","title":"Circle"},{"location":"snippets/paths/#arc","text":"An arc is a path with the type \"arc\" and these additional properties: radius: number startAngle: number endAngle: number Note: Property names are case-sensitive. const arc = { type : 'arc' , origin : [ 0 , 0 ], radius : 1 , startAngle : 0 , endAngle : 45 }; (additional optional properties covered in advanced lessons)","title":"Arc"},{"location":"snippets/points/","text":"A point is represented by an array with 2 elements. The first element is x, the second element is y. const p = [ 0 , 0 ]; Coordinates Maker.js uses the same coordinate system from basic mathematics and traditional drafting, where x values increase from left to right, and y values increase from bottom to top. Negative values are allowed. Note that the SVG coordinate system is slightly different (Y values increase from top to bottom, and negative values do not appear), but Maker.js will handle that for us automatically.","title":"Points"},{"location":"snippets/points/#coordinates","text":"Maker.js uses the same coordinate system from basic mathematics and traditional drafting, where x values increase from left to right, and y values increase from bottom to top. Negative values are allowed. Note that the SVG coordinate system is slightly different (Y values increase from top to bottom, and negative values do not appear), but Maker.js will handle that for us automatically.","title":"Coordinates"},{"location":"snippets/rotating/","text":"To rotate a single point, see point.fromPolar and point.rotate depending on what you are trying to achieve. You can rotate paths and models with these functions: path.rotate (path: object, angleInDegrees: number, rotationOrigin: point) model.rotate (model: object, angleInDegrees: number, rotationOrigin: point) Each of these functions return the original object, so that we can \"chain\" on the same line of code. Rotate path example: //render a rotated line import { exporter , model , models , path , paths , point } from 'photon/core' ; const line1 = new paths . Line ([ 0 , 0 ], [ 100 , 0 ]); const line2 = new paths . Line ([ 0 , 0 ], [ 100 , 0 ]); const paths = [ line1 , path . rotate ( line2 , - 30 , [ 100 , 0 ])]; const svg = exporter . toSVG ( paths ); document . write ( svg ); Rotate model example: //render a rotated rectangle import { exporter , model , models , path , paths , point } from 'photon/core' ; const rect1 = new models . Rectangle ( 40 , 80 ); model . rotate ( rect1 , 45 , [ 0 , 0 ]); const svg = exporter . toSVG ( rect1 ); document . write ( svg );","title":"Rotating"},{"location":"snippets/routes/","text":"We know that we are able to refer to deep objects by using the dot notation: const bottomRight \\ _bolt = plate . models . bolts . paths . BottomRight \\ _bolt ; The reference from plate to BottomRight_bolt is hard-coded. Suppose that we had a model plate2 which was a duplicate of plate - we would need to have to hard-code the reference to its BottomRight_bolt : const bottomRight \\ _bolt2 = plate2 . models . bolts . paths . BottomRight \\ _bolt ; Instead of hard-coded dot notation, we can have an abstract way of referencing deep objects by using a route . It is simply an array of strings that represent the segments names between the dots. We do not put the root object in a route. A route that we can apply to both plate and plate2 would be: const route = [ \"models\" , \"bolts\" , \"paths\" , \"BottomRight\\_bolt\" ]; Travel a route Use travel(rootModel, route) to get to a child object in rootModel via a route. This function will return an object with these 2 properties: result : model or path - the object referenced by the route offset : point - the offset of the result object's origin from the rootModel's origin //mounting plate import { cloneObject , createRouteKey , exporter , model , models , paths , travel } from 'photon/core' ; const plate = { models : { outer : model . center ( new models . RoundRectangle ( 120 , 100 , 10 )), bolts : model . center ( new models . BoltRectangle ( 100 , 80 , 5 )) }, paths : { hole : new paths . Circle ( 25 ) } }; const plate2 = cloneObject ( plate ); plate2 . origin = [ 130 , 0 ]; //route to the BottomRight\\_bolt circle const route = [ \"models\" , \"bolts\" , \"paths\" , \"BottomRight\\_bolt\" ]; //create a local variables for BottomRight\\_bolt holes const bottomRight \\ _bolt = travel ( plate , route ). result ; bottomRight \\ _bolt . radius = 2 ; const bottomRight \\ _bolt2 = travel ( plate2 , route ). result ; bottomRight \\ _bolt2 . radius = 3 ; const plates = { models : { plate : plate , plate2 : plate2 } }; const svg = exporter . toSVG ( plates ); document . write ( svg ); Patterns in Routes Notice that the schema for Maker.js models has a pattern of models.modelName and paths.pathName . There are always 2 segments between model and/or path objects. So, in any given route to an object, you can always get to its parent by subtracting the last 2 array elements of the route. We will use Array.slice (0, -2) to make a copy of the route array without the last 2 elements: //mounting plate import { cloneObject , createRouteKey , exporter , model , models , paths , travel } from 'photon/core' ; const plate = { models : { outer : model . center ( new models . RoundRectangle ( 120 , 100 , 10 )), bolts : model . center ( new models . BoltRectangle ( 100 , 80 , 5 )) }, paths : { hole : new paths . Circle ( 25 ) } }; const plate2 = cloneObject ( plate ); plate2 . origin = [ 130 , 0 ]; //route to the BottomRight\\_bolt circle const route = [ \"models\" , \"bolts\" , \"paths\" , \"BottomRight\\_bolt\" ]; //create a local variables for BottomRight\\_bolt holes const bottomRight \\ _bolt = travel ( plate , route ). result ; bottomRight \\ _bolt . radius = 2 ; //subtract 2 elements to get the parent const parentRoute = route . slice ( 0 , - 2 ); const bolts = travel ( plate2 , parentRoute ). result ; //modify children delete bolts . paths . TopLeft \\ _bolt ; delete bolts . paths . BottomRight \\ _bolt ; const plates = { models : { plate : plate , plate2 : plate2 } }; const svg = exporter . toSVG ( plates ); document . write ( svg ); Route Keys Additionally, we can \"flatten\" a route array into a string, known as a route key , by calling createRouteKey(route) and passing a route. Every route key is of course unique in the scope of the root object. It may used as a unique id of a child path or model.","title":"Routes"},{"location":"snippets/routes/#travel-a-route","text":"Use travel(rootModel, route) to get to a child object in rootModel via a route. This function will return an object with these 2 properties: result : model or path - the object referenced by the route offset : point - the offset of the result object's origin from the rootModel's origin //mounting plate import { cloneObject , createRouteKey , exporter , model , models , paths , travel } from 'photon/core' ; const plate = { models : { outer : model . center ( new models . RoundRectangle ( 120 , 100 , 10 )), bolts : model . center ( new models . BoltRectangle ( 100 , 80 , 5 )) }, paths : { hole : new paths . Circle ( 25 ) } }; const plate2 = cloneObject ( plate ); plate2 . origin = [ 130 , 0 ]; //route to the BottomRight\\_bolt circle const route = [ \"models\" , \"bolts\" , \"paths\" , \"BottomRight\\_bolt\" ]; //create a local variables for BottomRight\\_bolt holes const bottomRight \\ _bolt = travel ( plate , route ). result ; bottomRight \\ _bolt . radius = 2 ; const bottomRight \\ _bolt2 = travel ( plate2 , route ). result ; bottomRight \\ _bolt2 . radius = 3 ; const plates = { models : { plate : plate , plate2 : plate2 } }; const svg = exporter . toSVG ( plates ); document . write ( svg );","title":"Travel a route"},{"location":"snippets/routes/#patterns-in-routes","text":"Notice that the schema for Maker.js models has a pattern of models.modelName and paths.pathName . There are always 2 segments between model and/or path objects. So, in any given route to an object, you can always get to its parent by subtracting the last 2 array elements of the route. We will use Array.slice (0, -2) to make a copy of the route array without the last 2 elements: //mounting plate import { cloneObject , createRouteKey , exporter , model , models , paths , travel } from 'photon/core' ; const plate = { models : { outer : model . center ( new models . RoundRectangle ( 120 , 100 , 10 )), bolts : model . center ( new models . BoltRectangle ( 100 , 80 , 5 )) }, paths : { hole : new paths . Circle ( 25 ) } }; const plate2 = cloneObject ( plate ); plate2 . origin = [ 130 , 0 ]; //route to the BottomRight\\_bolt circle const route = [ \"models\" , \"bolts\" , \"paths\" , \"BottomRight\\_bolt\" ]; //create a local variables for BottomRight\\_bolt holes const bottomRight \\ _bolt = travel ( plate , route ). result ; bottomRight \\ _bolt . radius = 2 ; //subtract 2 elements to get the parent const parentRoute = route . slice ( 0 , - 2 ); const bolts = travel ( plate2 , parentRoute ). result ; //modify children delete bolts . paths . TopLeft \\ _bolt ; delete bolts . paths . BottomRight \\ _bolt ; const plates = { models : { plate : plate , plate2 : plate2 } }; const svg = exporter . toSVG ( plates ); document . write ( svg );","title":"Patterns in Routes"},{"location":"snippets/routes/#route-keys","text":"Additionally, we can \"flatten\" a route array into a string, known as a route key , by calling createRouteKey(route) and passing a route. Every route key is of course unique in the scope of the root object. It may used as a unique id of a child path or model.","title":"Route Keys"},{"location":"snippets/scaling/","text":"To proportionately scale a simple point, use point.scale . To proportionately scale paths and models, use these functions: path.scale (path: object, scaleValue: number) model.scale (model: object, scaleValue: number) Each of these functions return the original object, so that we can \"chain\" on the same line of code. Scale path example: //render a scaled arc import { exporter , model , models , path , paths , point } from 'photon/core' ; const arc1 = new paths . Arc ([ 0 , 0 ], 25 , 0 , 90 ); const arc2 = new paths . Arc ([ 0 , 0 ], 25 , 0 , 90 ); arc2 = path . scale ( arc2 , 2 ); const svg = exporter . toSVG ({ paths : { arc1 : arc1 , arc2 : arc2 }}); document . write ( svg ); Scale model example: //render a scaled polygon import { exporter , model , models , path , paths , point } from 'photon/core' ; const model = { models : { inner : new models . Polygon ( 6 , 40 ), outer : model . scale ( new models . Polygon ( 6 , 40 ), 1.7 ) } }; const svg = exporter . toSVG ( model ); document . write ( svg );","title":"Scaling"},{"location":"snippets/simplifying/","text":"If you Play the wireframe example above, and click on 'show path names' you will see that many lines have been created as a result of the expansion. This is an artefact of all of the boolean operations with combine . The outmost chain for example, should be able to represented with only four lines. To remedy this, there is makerjs.model.simplify - however there is an important caveat: your model must be originated before you can call the simplify function. This is to make sure that all of the segmented paths share the same coordinate space. //expand a truss wireframe const m = require ( 'makerjs' ); function trussWireframe ( w , h ) { this . models = { frame : new m . models . ConnectTheDots ( true , [ [ 0 , h ], [ w , 0 ], [ 0 , 0 ] ]) }; const angled = this . models . frame . paths . ShapeLine1 ; const bracepoints = [ [ 0 , 0 ], m . point . middle ( angled , 1 / 3 ), [ w / 2 , 0 ], m . point . middle ( angled , 2 / 3 ) ]; this . models . brace = new m . models . ConnectTheDots ( false , bracepoints ); } const truss = new trussWireframe ( 200 , 50 ); const expansion = m . model . expandPaths ( truss , 3 , 1 ); //call originate before calling simplify: m . model . originate ( expansion ); m . model . simplify ( expansion ); const svg = m . exporter . toSVG ( expansion ); document . write ( svg ); Be sure to play this example, and click 'show path names' for comparison.","title":"Simplifying"},{"location":"snippets/solvers/","text":"Maker.js provides a solvers module for common trigonometry equations, such as solving triangles.","title":"Solvers"},{"location":"snippets/svg-styling/","text":"It may be helpful to add visual styles to your drawing when debugging. You can do this using CSS and referencing elements in your SVG. Of course this will only add style in the browser, it will not affect SVG exported to a file for the laser cutter. The keys you use within your paths and models collections become an id attribute in the generated SVG. For Example: import { exporter , models , paths } from 'photon/core' ; const model = { paths : { circle1 : new paths . Circle ([ 0 , 0 ], 30 ) }, models : { bigOvalArc : new models . OvalArc ( 120 , 60 , 50 , 10 ) } }; const svg = exporter . toSVG ( model , { useSvgPathOnly : false }); document . write ( svg ); document . write ( ' --- `' ); document . write ( svg . replace ( / --- ' ); try it in JsFiddle \u21d7 We see that circle1 was a key within our paths collection and was translated into an id in an SVG element. We also see that the model bigOvalArc has geen translated to an SVG group with that id. We can use a CSS id selector and the stroke property to give them individual color: ```html ````","title":"SVG Styling"},{"location":"snippets/template/","text":"import { models , paths , exporter } from 'photon/core' ; // Your code here const svg = exporter . toSVG ( yourModel ); document . write ( svg ); try it in JsFiddle \u21d7","title":"Template"},{"location":"snippets/tree/","text":"A model is a tree structure which may contain paths, and it may also contain other models in a heirachy. Let's look at an example: //mounting plate import { exporter , model , models , paths } from 'photon/core' ; const plate = { models : { outer : model . center ( new models . RoundRectangle ( 120 , 100 , 10 )), bolts : model . center ( new models . BoltRectangle ( 100 , 80 , 5 )) }, paths : { hole : new paths . Circle ( 25 ) } }; const svg = exporter . toSVG ( plate ); document . write ( svg ); If we represent this drawing as a conceptual tree structure, it would look like this: plate +-models | +-outer | | +-paths | | +-TopLeft | | +-Top | | +-TopRight | | +-Left | | +-Right | | +-BottomLeft | | +-Bottom | | +-BottomRight | +-bolts | +-paths | +-TopLeft_bolt | +-TopRight_bolt | +-BottomLeft_bolt | +-BottomRight_bolt +paths +-hole (You may notice that this structure is reminiscent of a folder system on your computer.) We can easily traverse the tree when starting at the root. For example, let's change the radius of the BottomRight_bolt hole: //mounting plate import { exporter , model , models , paths } from 'photon/core' ; const plate = { models : { outer : model . center ( new models . RoundRectangle ( 120 , 100 , 10 )), bolts : model . center ( new models . BoltRectangle ( 100 , 80 , 5 )) }, paths : { hole : new paths . Circle ( 25 ) } }; //change radius of BottomRight bolt hole plate . models . bolts . paths . BottomRight \\ _bolt . radius = 2 ; const svg = exporter . toSVG ( plate ); document . write ( svg ); We can access the BottomRight_bolt circle from the plate object downward. Notice that in this tree structure, you cannot access upwardly. The plate object contains the bolt model which contains the BottomRight_bolt path, but BottomRight_bolt does not have a reference to its container. There are no properties of the bottomRight_bolt circle object which access anything up the tree. It also does not have any references to its sibling circles within bolt.paths . Downward-only access is the nature of a simple object tree structure. We can overcome this using routes .","title":"Model Tree Navigation"},{"location":"snippets/try-it-now/","text":"Visit the Maker.js Playground to edit and run JavaScript from your browser. Each of the demos will also open in the playground so that you can explore and modify their code.","title":"Try It Now"},{"location":"snippets/units/","text":"Paths and points are unitless. Models may also be unitless, or they may specify a unit system. When it comes time to make your model on a laser cutter or waterjet etc., you will probably want to specify units. You can do this two different ways: Specify units during export. [ See exporting for details per format. ] Specify units on your model. To specify units on your model, add a units property to it with a value from the makerjs.unitType object: Centimeter Foot Inch Meter Millimeter These properties are case sensitive. They contain the values \"cm\", \"foot\", \"inch\", \"m\" and \"mm\" respectively. It is your choice whether to use the named property or the string value directly. If a model that you wish to use has a different unit system than your own model, you can call model.convertUnits(modeltoScale: model, units: string) . to convert it. Let's use our skateboard example above and mix Inch and Centimeter units: //render a model using mixed units import { exporter , model , models } from 'photon/core' ; function truckBolts () { const tx = 1 + 5 / 8 ; const ty = 1 + 1 / 8 ; const bolts = new models . BoltRectangle ( tx , ty , 7 / 32 / 2 ); bolts . origin = [ tx / - 2 , ty / - 2 ]; this . units = makerjs . unitType . Inch ; this . models = [ bolts ]; } function deck ( width , length , truckOffset ) { this . units = makerjs . unitType . Centimeter ; const board = new models . Oval ( length , width ); board . origin = [ 0 , width / - 2 ]; const truck1 = model . convertUnits ( new truckBolts (), this . units ); truck1 . origin = [ truckOffset , 0 ]; const truck2 = model . convertUnits ( new truckBolts (), this . units ); truck2 . origin = [ length - truckOffset , 0 ]; this . models = { board : board , truck1 : truck1 , truck2 : truck2 }; } const svg = exporter . toSVG ( new deck ( 20 , 80 , 18 )); document . write ( svg );","title":"Units"},{"location":"snippets/walking/","text":"You can traverse a model tree by calling model.walk with your model and an object with these optional properties: property name property type description onPath function( walkPath object) called for every path (in every model) in your tree. beforeChildWalk function( walkModel ) called for every model in your tree, prior to diving deeper down the tree. Return false if you wish to not dive deeper. afterChildWalk function( walkModel ) called for every model in your tree, after returning from a deep dive down the tree. walkPath object A walkPath object has these properties: layer : the layer name (if any) containing this path. modelContext : the model containing this path. offset : the absolute coordinates from [0, 0] where this path is located. pathContext : the path itself. pathId : the id of this path in its parent model.paths container. route : array of property names to locate this path from the root of the tree. routeKey : a string representation of the route which may safely be used as a unique key identifier for this path. walkModel object A walkModel object has these properties: childId : the id of this model in its parent model.models container. childModel : the model itself layer : the layer name (if any) containing this path. offset : the absolute coordinates from [0, 0] where this model is located. parentModel : the model containing this model. route : array of property names to locate this model from the root of the tree. routeKey : a string representation of the route which may safely be used as a unique key identifier for this model. Example In this example we will create a RoundRectangle and walk its tree. We have an onPath function that will get called for every path in the model. If the path is an arc, we will invert it: //render a model using mixed units import { exporter , model , models , path , paths , point } from 'photon/core' ; function invertArc ( arc ) { const chord = new paths . Chord ( arc ); const midPoint = point . middle ( chord ); path . rotate ( arc , 180 , midPoint ); } const shape = new models . RoundRectangle ( 100 , 50 , 10 ); const walkOptions = { onPath : ( wp ) => { if ( wp . pathContext . type === 'arc' ) { invertArc ( wp . pathContext ); } } }; model . walk ( shape , walkOptions ); const svg = exporter . toSVG ( shape ); document . write ( svg );","title":"Walking a Model"},{"location":"snippets/walking/#walkpath-object","text":"A walkPath object has these properties: layer : the layer name (if any) containing this path. modelContext : the model containing this path. offset : the absolute coordinates from [0, 0] where this path is located. pathContext : the path itself. pathId : the id of this path in its parent model.paths container. route : array of property names to locate this path from the root of the tree. routeKey : a string representation of the route which may safely be used as a unique key identifier for this path.","title":"walkPath object"},{"location":"snippets/walking/#walkmodel-object","text":"A walkModel object has these properties: childId : the id of this model in its parent model.models container. childModel : the model itself layer : the layer name (if any) containing this path. offset : the absolute coordinates from [0, 0] where this model is located. parentModel : the model containing this model. route : array of property names to locate this model from the root of the tree. routeKey : a string representation of the route which may safely be used as a unique key identifier for this model.","title":"walkModel object"},{"location":"snippets/walking/#example","text":"In this example we will create a RoundRectangle and walk its tree. We have an onPath function that will get called for every path in the model. If the path is an arc, we will invert it: //render a model using mixed units import { exporter , model , models , path , paths , point } from 'photon/core' ; function invertArc ( arc ) { const chord = new paths . Chord ( arc ); const midPoint = point . middle ( chord ); path . rotate ( arc , 180 , midPoint ); } const shape = new models . RoundRectangle ( 100 , 50 , 10 ); const walkOptions = { onPath : ( wp ) => { if ( wp . pathContext . type === 'arc' ) { invertArc ( wp . pathContext ); } } }; model . walk ( shape , walkOptions ); const svg = exporter . toSVG ( shape ); document . write ( svg );","title":"Example"},{"location":"snippets/wireframe/","text":"Creating a wireframe and using expansion may save you a lot of work. We will demonstrate by creating a wireframe of a truss: //create a simple truss const m = require ( 'makerjs' ); function trussWireframe ( w , h ) { this . models = { frame : new m . models . ConnectTheDots ( true , [ [ 0 , h ], [ w , 0 ], [ 0 , 0 ] ]) }; const angled = this . models . frame . paths . ShapeLine1 ; const bracepoints = [ [ 0 , 0 ], m . point . middle ( angled , 1 / 3 ), [ w / 2 , 0 ], m . point . middle ( angled , 2 / 3 ) ]; this . models . brace = new m . models . ConnectTheDots ( false , bracepoints ); } const truss = new trussWireframe ( 200 , 50 ); const svg = m . exporter . toSVG ( truss ); document . write ( svg ); Next we will expand the paths: //expand a truss wireframe const m = require ( 'makerjs' ); function trussWireframe ( w , h ) { this . models = { frame : new m . models . ConnectTheDots ( true , [ [ 0 , h ], [ w , 0 ], [ 0 , 0 ] ]) }; const angled = this . models . frame . paths . ShapeLine1 ; const bracepoints = [ [ 0 , 0 ], m . point . middle ( angled , 1 / 3 ), [ w / 2 , 0 ], m . point . middle ( angled , 2 / 3 ) ]; this . models . brace = new m . models . ConnectTheDots ( false , bracepoints ); } const truss = new trussWireframe ( 200 , 50 ); const expansion = m . model . expandPaths ( truss , 3 , 1 ); const svg = m . exporter . toSVG ( expansion ); document . write ( svg );","title":"Wireframe"},{"location":"snippets/zeroing-and-centering/","text":"To move a model so that its bottom and/or left edges are on the x & y axes, use model.zero . This function accepts 2 boolean parameters: zeroOnXAxis, zeroOnYAxis. If you do not pass any parameters, it will zero on both axes. //zero a model import { exporter , model , models , paths } from 'photon/core' ; const model = { models : { crosshairs : { paths : { h : new paths . Line ([ - 5 , 0 ], [ 5 , 0 ]), v : new paths . Line ([ 0 , - 5 ], [ 0 , 5 ]) } }, nut : { models : { polygon : new models . Polygon ( 6 , 40 ) }, paths : { inner : new paths . Circle ( 20 ) } } } }; model . zero ( model . models . nut ); const svg = exporter . toSVG ( model ); document . write ( svg ); To move a model so that it is centered on on the x & y axes, use model.center . This function accepts 2 boolean parameters: centerOnXAxis, centerOnYAxis. If you do not pass any parameters, it will center on both axes. //center a couple of models import { exporter , model , models , paths } from 'photon/core' ; const model = { models : { crosshairs : { paths : { h : new paths . Line ([ - 5 , 0 ], [ 5 , 0 ]), v : new paths . Line ([ 0 , - 5 ], [ 0 , 5 ]) } }, box : { models : { outer : new models . Rectangle ( 60 , 30 ), inner : new models . Oval ( 45 , 15 ) } } } }; const shortcut = model . models . box . models ; model . center ( shortcut . outer ); model . center ( shortcut . inner ); const svg = exporter . toSVG ( model ); document . write ( svg );","title":"Zeroing and Centering"}]}